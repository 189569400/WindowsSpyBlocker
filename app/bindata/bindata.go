// Code generated by go-bindata.
// sources:
// app/settings.json
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x7d\x6f\xdb\xba\xf5\xfe\xbf\x9f\x82\x3f\x15\x06\xee\x0d\x7e\xa2\x6c\xa7\x71\x3b\xaf\x2f\xe8\x92\x6e\x0b\xd0\x97\x20\xee\x1a\x0c\xe3\x70\x41\x8b\xc7\x36\x6f\x24\x92\x97\x87\xb2\xec\x3b\xf4\xbb\x0f\xa4\x6c\x4b\xb2\xa5\x24\xbd\x18\xe0\xc0\xd1\x39\x0f\x9f\xf3\x9c\x17\x91\xf4\x7f\x9e\x11\x12\x15\x56\x62\x34\x25\xfe\x7f\x42\xa2\x8c\x3b\x40\xf7\x0d\x2c\x4a\xad\xa2\x29\x89\x56\xce\x19\x9c\x26\x89\xe5\x25\x5d\x4a\xb7\x2a\xe6\x05\x82\x4d\xb5\x72\xa0\x1c\x4d\x75\x9e\x94\xf2\x5e\x26\xa9\xe5\xbf\x6f\xe3\x9c\x6f\x92\x3b\xa9\x84\x2e\x71\x66\xb6\x7f\xc9\x74\x7a\x0f\x36\xa9\x38\xa3\xff\xaf\x22\xb8\x95\x05\xee\x52\xab\x4b\xd1\xe4\x2f\xcb\x92\x36\x5c\x54\xdb\x65\x82\xc0\x6d\xba\x7a\x6f\x64\xb2\x1e\x27\x03\x4c\x2c\x18\x6d\x5d\xf2\x6e\x80\x6f\x06\xb8\xe7\x2b\x57\xdc\x85\x0c\x02\x95\x67\x0a\x86\x7c\x2b\x0d\x17\xc2\x02\x62\x50\x29\x4d\xb2\x5f\x21\x14\xfe\x56\x80\xdd\x36\xc3\xef\x6d\x21\x6e\xb9\xd2\x12\x0f\x70\x69\xb8\x91\x0d\x7e\x69\x62\x6e\x64\x20\xfd\x15\xb5\x6a\xe0\xa4\x5a\xe8\x16\xd0\x1b\xa8\xd4\x5e\xbb\x87\xd6\x48\xb5\x68\x06\x97\x86\xaa\x45\x32\x40\x1a\x40\xcf\x08\xf9\xee\x81\x51\x26\xe7\x8d\xce\x94\xd2\x02\xae\xb8\xbd\x3f\x98\x42\xf3\xb2\x56\x16\x19\x9d\x4b\xe5\x2c\xdf\x06\x79\xa1\x29\x89\xd3\x3a\xc3\xe4\x6e\xbf\xfc\xa3\x74\x10\x8f\xe9\x98\x4e\xe8\xef\xd2\xec\x24\x11\x12\xa5\x2b\x48\xef\x17\x32\x03\x4f\x78\x08\xc6\x98\x0b\xdf\x14\x36\x10\x05\xe8\xf7\x5d\x12\xca\xa4\xdc\xfc\x31\x2d\x61\x69\x3c\xa4\xaf\x26\x81\xb6\x5b\xc2\xe5\x94\xb1\xdd\x2c\x31\x36\xdb\xa2\x83\xfc\x7c\xcc\xd8\x67\xbf\x96\xb1\xd2\x7f\x51\x91\x65\x6d\x51\xb8\xc5\x3c\xcc\xed\x1f\x50\x35\x0b\x6b\xe3\x73\x3a\x1a\x3e\x50\x99\x2a\x42\x50\x94\x6b\xd5\x28\xcb\xa1\x6d\x82\x3b\xfe\xd5\x64\x75\xe7\x84\xc2\xd4\x6e\x8d\x6b\xca\x5a\x01\x0f\xe3\x5f\x47\x59\xf3\xac\x08\x11\x06\xd8\xce\x49\x1b\x50\xa5\x6d\xad\x96\xcd\xc2\x37\xd8\x9e\x3f\x7f\x4e\x76\x70\x32\x40\xff\xf9\x29\x01\x97\x26\x0b\x69\xa1\xe4\x59\x46\xfd\xbb\xfb\x33\x53\x1e\xf7\x49\x5b\x20\x7e\x40\xa7\x64\x80\x4c\x31\xf5\x9c\x80\x5a\x68\x9b\x02\xb1\xba\x70\x60\xc9\xd5\xe7\x19\x53\xd2\x38\x3e\xcf\x00\x49\xec\x88\xe2\x8e\xc4\xd7\xe4\xe6\xf6\xc3\xed\x97\x7f\x7c\xbd\xfe\xfc\x37\x12\x1b\xe2\x52\x43\xe2\x58\xf8\x37\x93\x5c\x9c\x93\xf8\x57\x72\xfb\xe1\xea\xfa\xf6\xc3\xe5\x57\x12\xc7\x4e\xc7\xde\x81\xe4\xe2\xfc\x09\x54\x85\x78\x2a\x95\x57\x6b\x8b\x0c\x90\xa9\x43\x05\x9b\x35\xac\x43\x5d\x93\xbf\x7e\xb9\xbd\x7b\x7f\x7b\xe5\xe9\xae\x6e\xbf\xdc\x90\x58\x90\x7d\x89\x0f\x45\xf6\x5d\xd2\x39\x97\x0a\x7f\xac\xb0\x42\x61\xce\xf1\x37\x9a\x6a\xb5\xe8\xab\x6b\xa7\x40\x04\xbb\x06\xfb\xc6\xef\x0c\x07\x29\xad\xae\x9b\xb1\xe9\x9a\x17\x1f\xe1\x64\x87\x25\x66\x6c\x2a\x59\x8f\x49\xa8\x05\x9c\x90\x4c\x8f\xe7\xce\x58\xbd\x91\x0b\x09\xf6\x29\x93\xd7\x99\xe4\x00\xff\xfc\x83\x75\x7e\x94\xa6\xfd\xb6\xcb\xdc\x64\x61\xb0\xbb\x4a\xf5\xfa\xff\xe2\xb8\xa3\x56\x55\xfb\xe2\xf8\x2d\x53\x01\x31\xd3\x85\x4d\x61\xda\x36\x7e\xe4\xe8\xe2\x4f\x5a\xf8\xfc\x45\xed\x63\xea\xf5\xbb\x4d\x9e\x91\x75\x75\x3e\xbe\x61\xd1\x88\x0e\x59\xf4\xce\x2f\xb3\x5a\xbb\xb7\x9d\xa5\x66\xee\xb5\x74\x90\x13\xc5\x73\x78\xc3\xa2\x01\xfe\x12\x3e\x2c\x0a\x23\x1c\x2c\x2c\x22\x42\xda\x37\x2c\x1a\xb2\x88\x18\xab\x9d\x4e\x75\xb6\x7b\xac\x83\xf9\x27\x89\xbf\xcc\x7d\x26\x3e\x76\xf5\x08\xca\x8f\xba\xd8\x19\x92\xb7\xc7\xfb\xd1\x69\x1f\xa3\x42\xad\x79\x26\xc5\x47\xa9\xc0\x37\xe2\x5f\x7b\xc9\x77\x90\xa5\x3a\x07\xe2\x34\xb9\x39\xac\x3a\x24\x74\x63\xb5\xdf\x05\xc9\xa9\x05\xf9\x1a\x04\xe1\x58\x7b\x3e\xea\x25\x09\xae\x9d\xba\xda\xf3\xd5\xf2\xc5\x42\xa6\x24\xd3\xcb\x7e\x67\x58\x2a\x24\x1e\xb9\xbf\x81\x9d\x6b\x04\xa2\x0b\x67\x0a\x77\xba\xdc\x47\xbd\x92\x16\x52\xa7\xed\x96\x48\x24\x08\x8e\x38\xdd\x04\xa4\x3c\x23\x97\x9f\xbe\xcc\xc8\xa5\xaf\x62\xed\x79\x5f\x38\x9d\x73\x27\x53\xbf\xed\x91\x5c\x0b\x20\x02\x1c\xa4\x4e\xea\x46\x4f\x7f\xba\xbe\x59\x4f\x7e\xae\x9f\x31\x0c\x0f\x41\x3f\x5a\x8e\x28\xed\xc8\x42\x17\xaa\xa1\xe8\x52\x2b\x55\x91\x20\x11\x3a\x20\xb4\x95\x4b\xa9\xb8\x03\xb2\xb0\x3a\x27\x6e\x05\x84\x1b\x93\xc9\x94\x07\x58\xd5\xbe\x7f\x1f\xda\x77\x74\xa4\x45\xb0\x76\x9b\x1b\xee\x56\x27\x67\x24\x6e\x51\x71\x27\xd7\xc0\x58\x29\x15\xac\x1d\x63\x1f\xf5\x12\x19\xfb\x24\x53\xab\x51\x2f\x5c\xbc\xc3\xc6\xd5\xe1\x35\x78\xf1\xc5\x80\x0d\x51\x79\x46\x3d\x6f\x7d\xf7\x50\x29\xca\x3a\xa6\x85\x65\xf3\x0d\xbb\x87\x70\x77\x9a\xfd\x73\xf6\xf5\xc3\x27\xc6\x2e\x0b\x6b\x41\xb9\x4b\xad\x9c\xd5\xd9\x0c\x1c\x63\x33\xb0\x6b\x99\x02\x32\xf6\x39\xe3\xb3\x75\xca\xd8\x0d\xb7\x3c\x07\x07\x16\x19\xbb\x56\x0e\xac\x02\x57\x97\xa9\x84\xf9\x8d\xd5\x73\xf8\xbb\x46\x7f\xd0\x45\xef\x53\x9f\xc8\x5d\xd3\x7a\x82\xdd\x17\xa1\x8d\x0d\xd6\x13\xec\x65\x75\x5f\x3d\x85\xef\x1d\x9d\x4a\xbe\x4d\xba\xb5\x7c\x9b\x74\xab\xe9\xc2\xef\xec\x7d\x8a\xba\x96\xd4\xae\x7a\xd3\x54\xd8\x51\x9f\xab\xa6\xf5\x04\x7b\x92\xf3\xd5\x91\xa3\x93\xbd\x29\xe8\xaa\x6d\xef\x8b\xd0\xb5\xa4\x76\x1d\x9f\x29\x73\x68\xee\xfd\x51\xbe\x1f\xce\xf6\x81\x50\xc2\x3c\x44\x7d\x11\x6e\xa3\x65\x49\x73\x5c\x38\x3f\x94\xfe\xda\xd6\x3c\x25\x7c\x3d\x7d\x89\x03\x30\x00\xdc\xc6\x1d\x01\xf6\x62\x02\xe6\xf0\x36\x90\xcf\x97\xb3\xeb\x23\x64\x5d\x01\x69\xd6\x93\x47\x83\x4e\x9e\x10\x74\xf2\x70\x50\xa1\xb0\x4e\x54\x28\xec\x8d\x29\x14\xb6\xf2\x18\x9d\x8f\xe8\x68\xf8\x92\x8e\x2f\x2e\xfc\x5f\x17\xe7\xe4\x07\x38\x03\x76\x21\xce\x61\xfa\x62\x71\xc1\xa7\x17\xf3\x57\xa3\xe9\x74\x74\x7a\x7c\x97\x38\x7f\xa0\x53\xbd\xbf\x12\x7b\x5b\xf6\xd0\x0f\xc7\x9c\xa3\x03\x9b\xf8\x0b\x75\xe2\xe5\x27\x4f\xe9\xef\x09\x4d\x6f\x8b\x7f\x48\xec\xe4\x7f\x2d\x76\xf2\xa8\xd8\xd6\x68\x28\x1c\x51\x33\x9a\x50\xb1\xf5\xe7\x09\x6d\xee\x9e\x1d\xc3\x31\x1e\xbe\xa2\x2f\x5f\xd1\x97\x43\x3a\x9a\xf4\x4e\xc6\x93\x29\x27\x15\xe5\x70\x34\xbd\x18\x0e\xa7\x7f\x1a\x4e\xfd\x68\x4c\x8e\xee\x64\x87\xa3\xa3\x94\x59\xca\xad\x98\x15\xf3\xfa\xaa\x57\xdd\x30\xa2\x33\x3a\xce\x85\x6a\x44\x8a\xce\x28\x8f\x73\x04\xb1\x84\x23\xab\x50\xb0\x29\xf0\xc4\xb8\xc1\x46\x83\x82\x09\xcf\x68\x8e\x5c\x9c\x40\x83\x5d\x1d\xa1\xf3\x60\x85\xf4\x58\x83\x31\xb0\x89\xed\xa2\x63\x85\x13\xb9\x6b\x9b\x44\xda\xa9\x58\x40\x26\xd7\x60\xb7\x54\xa0\xa1\xb9\xa1\x87\x8d\xcd\xaf\xa6\x0a\xb9\x4b\x7b\x16\x1c\x83\x6b\xc8\x32\x9b\x0b\x85\xe3\x3e\x77\xa6\xab\x3b\x03\xf5\x44\x6d\xf2\x1c\x10\x41\x2d\xc1\x56\xbe\xd6\xb2\x03\x5b\x59\x4d\x5f\x61\x04\x77\xc7\xeb\x3b\x32\xec\xd8\x45\xa2\x33\x6a\xb9\xe8\x88\xe1\xad\x27\xc5\xb4\xbe\x4d\x27\x56\xdc\xdd\x15\xaa\x2e\xf8\x9f\xe7\xcb\x1e\x00\xea\x54\xf2\xac\xaf\x1a\x98\x73\xeb\x30\xb5\x00\xaa\x0f\xe2\x20\x83\x1c\x9c\xdd\x36\x63\xb5\x72\xac\x11\x8f\x52\x3c\xda\xe0\x1a\x5a\x58\xec\xe5\x93\x19\xf4\x66\xee\xaa\xeb\x70\xce\x15\xf7\xad\x6c\xb1\xef\xba\xd6\x43\xdb\xe5\xa5\xfc\x9e\xfb\xd3\xa0\x45\xb3\x96\xd6\x15\x3c\x03\x6e\xdd\xea\xc8\xa3\xab\x57\x45\x1c\x9b\xad\x83\xcd\x19\xf5\x1b\x1d\xf5\xe9\xed\xe7\xaf\xa7\x0a\x6d\x7c\xb7\xda\x0a\xf3\x20\xa4\x04\xee\x56\x60\x7b\xdd\xad\x51\x7e\xc0\xa5\xed\xf2\xd8\xd5\xe9\xe9\x6d\xd8\x66\xae\x37\xc7\xf3\xce\xad\xe5\xdb\xb3\xd8\x58\x2d\xa8\xd0\x9d\x3b\xc0\x1e\x5a\xa5\x1a\x9f\x3d\x50\xba\x67\xfe\xfa\xff\xfd\xd9\x7f\x03\x00\x00\xff\xff\xd3\xae\x49\x3d\x9e\x15\x00\x00")

func appSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_appSettingsJson,
		"app/settings.json",
	)
}

func appSettingsJson() (*asset, error) {
	bytes, err := appSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/settings.json", size: 5534, mode: os.FileMode(438), modTime: time.Unix(1508888955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x5b\x92\xe3\x30\x08\xfc\x9f\xa3\x4c\x95\xf9\x98\x1b\x31\x08\xdb\x54\x2c\xd0\x0a\x12\x27\x7b\xfa\x2d\xd9\x49\x9c\x68\x76\x3e\xd5\x4d\x83\x9a\xc7\x27\x7c\xe5\xa4\xa0\x1c\x1f\x9f\x90\xd9\x9d\x75\xe2\x0a\x8b\x5c\x18\xc8\x72\x03\x9d\xd3\xc4\x8f\x08\x1f\x43\xc9\xe5\xce\x79\xc6\x1a\x4e\x95\x59\x21\x0b\x55\x73\x1b\xe3\xce\x5d\xac\x49\x49\xd3\x5d\xba\x32\xc6\xcc\xf5\x47\xdc\xf5\xdb\xae\xcf\x72\xa8\xbe\x72\xf5\x2e\x08\x4b\x71\xf0\xd3\xad\xec\x41\x84\x9a\x6e\x54\xcf\x3e\xbb\x25\x84\x93\xe8\xb4\xe3\x49\x81\x4c\x83\x35\xa0\x54\x4b\x40\xd9\x21\xbb\x3e\x49\x53\x56\x8b\xdd\x0b\xcd\x26\xc4\x5d\xa1\xff\x81\xa0\x8e\x41\xbb\x66\x91\x96\x7b\x55\x87\x55\x34\xd9\xea\xbb\x6a\x83\xc9\x74\x94\x09\x0a\xba\x17\xab\xb1\x09\x12\x97\xc5\x6e\xe0\x81\x21\x04\x78\xc2\x8c\x12\x4c\xb3\xda\x62\x93\xf0\x2e\x4f\x39\x41\xe6\x40\xe7\x7a\x11\xe2\xde\xfc\xc8\x9c\xbe\x91\x4e\x07\x3c\xcc\x36\xe7\x77\xce\x19\x2b\xcd\xbf\x29\x5f\x3f\x3b\x1d\xb3\x95\x3c\x0d\x3e\x64\xd7\xa1\xd9\xdc\x7f\xf7\x97\xf7\x79\x89\xba\x24\xae\xa5\xb5\x7c\xb1\x73\xc2\x52\x36\x7c\x11\x62\xf5\xd6\xf1\x5c\xba\x72\xcd\x92\x1e\xd9\x33\xcc\x16\x19\x65\xd9\x5f\x9c\x04\x2b\x27\xa9\x4c\xd1\x09\xdf\x96\xca\xc6\x51\x88\xef\x9d\x7e\x8f\x33\x7d\xe0\x3e\x5e\x21\xfb\x47\xa9\x42\xbc\x88\xc7\xcb\x72\x94\x10\xf0\xb0\xda\x8f\xf6\xcf\x99\xeb\xed\x58\x8b\xda\x27\xaf\x3c\x89\x07\x57\xa0\x54\xa8\x9f\xc1\xa3\xbd\xf7\x5d\x6a\xf9\x71\xe2\xc3\xeb\x56\x70\x90\x8c\x13\x3b\xf8\xd0\x89\x1b\xd9\x6e\x68\x4c\x90\xfc\xfa\xb3\x71\x21\x99\xdf\x66\x14\xa7\x2f\x28\x4b\x3c\xeb\x9d\xe5\xc5\xe0\x9a\xa8\x4f\xd0\x20\x5c\x7a\x47\xab\xb7\x63\x80\xed\x78\x3a\x66\x5d\xb7\x4b\x26\x53\x65\x8a\x60\xdf\xf0\x7f\x01\x00\x00\xff\xff\xa6\xa7\x1e\x85\x0c\x04\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 1036, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x99\xed\x92\xab\x2e\x0f\xc0\xbf\xff\x2f\x65\x67\xca\xf0\xa2\xb6\x5e\x0e\x02\x55\x66\x15\x78\x80\xea\xf6\xee\x9f\xa1\xf6\xc5\x56\x1a\xce\xf9\x74\x36\x3f\x02\x21\x09\xc1\x92\x1f\xc4\x0f\x53\x50\xb2\x57\xc8\xa8\xf8\xdf\x0f\xe2\xd2\xfc\x05\x24\xec\x74\xfb\x7f\xf8\x41\x53\xe0\x32\x3c\xe1\x4d\x60\x1e\x7c\xba\xfd\xa9\x84\x79\xf0\x28\xa7\x78\x87\x52\xbc\x4f\xdc\x8f\x9d\x34\x81\xa2\x49\x0b\x6f\x83\x3d\x3f\xc6\x8d\x56\xf0\xa8\xad\x41\xa3\x9e\x1f\x63\xdf\x14\x3d\x97\x9b\x35\x7d\xb2\xe6\xf5\x67\x50\x7e\xd6\x42\x05\x14\xac\xd0\x7c\xdc\xcd\x1e\xd5\xa8\x26\x15\xfd\x75\x4f\x3c\x3f\x9f\xb5\x98\xb8\xe1\xbd\xf2\xf7\xb5\x66\xed\xe3\x85\x8f\x8a\xfb\x38\x3c\x44\xd6\x47\xf5\xf7\x83\x24\x8f\x1c\xa5\xa9\x1e\xa6\x0a\x3b\x21\x13\x78\x14\xd9\x81\x1f\xab\xad\x30\xc7\xde\xfc\xcf\x05\x7b\x6e\x8e\x8b\xa8\x67\x1d\xaf\x68\xd1\x46\xda\x65\x0d\x0a\x97\x46\xfd\x5d\xd6\x78\xbc\x42\xb5\xf5\x09\x97\x81\x6c\x82\x76\xff\xf3\xce\x7e\xf9\x41\x48\x73\x30\x01\x71\x19\x95\x18\x90\x54\xff\x71\xef\xf9\xf5\xe7\xe0\xbc\x95\x48\x5a\x24\x83\x43\x93\xfb\x30\xb2\xd3\xa6\xbf\x2d\xf2\x2e\x1d\x19\xc3\xe4\xc0\x11\x91\x7e\xde\x4a\xc4\x4e\xd2\x6f\x24\x86\x30\x5c\x1d\xd4\x87\xa4\x79\x9b\x67\x95\xec\xc7\xbc\xcd\x43\xbb\x83\xb0\x1e\x63\x82\xb8\xd3\xc8\xa5\xff\x64\x28\x03\x69\x95\xa7\x8b\x09\x04\x2d\x26\xbc\x39\xbf\x33\xcc\x41\x2b\xb2\x20\x06\x4c\x31\xa6\x94\xd1\xd3\x5e\x3b\xac\xd9\x6a\xfa\x43\xb8\xde\x45\xd7\x9d\x03\xaf\x3b\x07\xae\x92\x8d\x2b\xc4\x33\x9e\x82\x8b\x41\xdd\x92\x6a\xe2\x3e\xbe\xad\x26\x64\xa0\xb8\x3a\xd6\x68\x14\x57\x34\x8e\x66\xb9\x65\x83\x90\xa1\xaa\xdb\x9d\xac\x6d\x6a\x34\xa6\xbc\x7e\xca\x06\xf2\x7d\xa3\x4f\x48\xb3\xf0\x73\x03\x77\x89\xda\x49\xfa\x0f\x09\xdd\x69\xd1\x37\x2d\x3b\x39\x1e\xd5\x9f\x18\xb8\xe9\x15\x12\xa3\xbd\x48\xee\xdc\x6a\xaf\x35\x51\x9b\xcb\x65\x42\x72\x97\xa5\xc2\x7a\x87\x42\xdc\x89\x1d\xc1\x04\xce\x7a\xe1\x68\x79\x48\x55\x1c\x92\x32\xc9\x09\x34\x63\x21\xd7\x42\x29\x3b\xb6\x98\x40\x31\x49\xff\x76\x79\x22\xbb\x3a\x88\x81\x60\x42\x30\x26\x94\x16\xf8\x11\xe4\x27\x06\xcf\x7f\x62\x35\xc8\x5b\x02\xcf\xdf\x66\xf2\x7c\xc3\x93\x85\x30\x87\xf7\x47\x30\xad\x60\x0e\xef\x8f\x60\x56\xd0\xaf\x0a\xeb\x57\xb0\x3e\xa9\x40\xff\x11\x8a\x5b\x98\x53\xd8\x7e\x5a\xd8\x1f\x65\x60\x7c\x08\x83\xe3\x47\x58\xc1\xbf\x8c\xb1\x02\x87\xf5\x2b\x02\xef\xbf\xa2\x4d\x81\xc3\xf6\x57\x0c\xc3\xbc\x10\x9f\x1a\x3e\x7f\xa4\x2e\xd8\x5f\xc3\xe7\x87\xd4\x15\x3c\x7f\x53\xc1\xf6\x1f\x0b\xf6\x1d\x19\x6c\xdf\xb1\xb0\xff\x13\x81\xe3\x7b\x2a\xc4\xa7\x50\x3f\xc8\xa9\x90\x9f\xa7\xc2\xf9\x6a\x31\xac\xdf\x92\x82\x3e\xec\x1f\x8a\x09\x68\x3f\xc5\xf0\xf9\xa1\x98\x16\xf4\x19\x58\x5f\x28\x06\xcf\x57\x2a\x40\x50\x7d\x4d\x1c\xda\xdf\xad\x40\x81\x9c\xe2\x12\x87\xe2\x9f\xca\x37\xb4\xff\x54\xbe\x61\xce\x40\xff\x13\xcc\x28\xec\x1f\x56\x58\x3f\xf7\x1d\xf6\xc6\xab\xc2\xfc\x05\xfb\x2b\x0c\xeb\x57\x0c\x5e\xbf\x02\xef\x1f\x82\x6b\xf0\xfe\x24\xb8\x06\xeb\x23\xc1\x75\x21\xbf\x1a\x02\xdb\xd7\x80\xf7\x73\xe2\x70\x7e\x34\xe0\xfd\x40\xf0\x11\xc3\xfe\x3d\x82\xf7\x13\xc1\x47\xb0\x7e\x12\x7c\x22\x25\x0e\xdb\x7f\x02\xef\xe7\xc4\x61\xff\x9c\x0a\xf9\x07\xd7\x4f\x82\xdb\x42\xfe\xb7\xf4\xfb\xf9\x67\xf8\x44\x4e\xc0\xf9\x67\x69\x77\xc0\xfd\x92\x38\x03\xea\x4f\xe2\x15\x50\x1f\x12\x6f\x80\xfa\x74\xe3\x85\xf5\x8f\x05\xfd\x23\xf9\xee\xff\xc4\x4f\xa0\x7d\x2d\x6e\x61\x9e\x32\x18\xe4\x14\x5c\xbf\x25\x0d\x70\x7f\x24\x7e\x04\xea\x5f\xe2\x2d\xe8\xff\x96\x42\xf7\xc3\xca\x21\xff\xb5\x14\xfa\x3e\x65\xe9\xeb\x1d\xb2\x9f\xa4\x5f\xba\x40\xfc\x08\xc6\x0c\xf8\xbe\x48\xbc\x06\xce\xe7\xca\xe1\xf9\xc1\xfc\xb9\x7d\xff\x02\xf9\x7f\xfb\x3e\x85\xf5\x6b\xd8\x7e\x52\x5a\x1f\xaa\x6f\xac\xf0\x7d\xc7\xd2\xf5\x0b\xc7\x87\x12\x28\xff\xd2\xf5\x0b\xdc\xef\x89\x83\xe7\x33\xf1\x7c\x7c\x16\x13\x88\xcc\x80\xe6\xa6\x48\x71\xfb\xe5\x87\xeb\x8b\xd3\xec\xc5\xb9\xe5\xb9\xc4\xde\xf2\x9c\xe1\x1b\x9e\x75\xec\x8b\xb3\x6c\x60\xb6\x3c\x77\xf0\x37\xbc\x34\x7f\x36\x71\x5e\xbc\xca\x3a\x76\xcb\x61\xff\xd5\xd9\xc0\x6e\x78\x61\xfe\xba\x34\x7f\xc1\xfe\x3a\x7b\xb0\x5e\xbc\x29\xe8\x37\xd9\x1f\x56\x2f\x9e\xbf\xb8\xb7\x1c\xf6\x7f\x8b\xe1\xfd\xb5\x85\xf8\xe7\x7f\x78\x6c\x78\xc1\xbe\x16\xb6\x8f\x60\x78\x7e\x82\xe1\xfc\x4f\x9f\x76\x20\x2f\x9c\x0f\x52\xc8\x7f\xc2\x0a\xf6\xb1\xd2\xfc\x70\x7e\x90\x42\x7e\x93\x06\xae\x0f\xa4\xc9\xd9\xa7\x79\x6f\x6c\x88\x5a\x04\x14\x2e\xce\x59\x1f\x3f\x9e\xe2\xa4\x0e\xa2\xf8\xea\x97\x06\x15\xdf\xfd\xd2\xa0\xe2\xcb\xdf\x79\x54\x7f\xcf\xb7\xda\xf3\xe7\x03\x64\xff\x44\xbd\xb2\xf0\x44\xbd\xb2\xb3\xf2\xf0\x98\xe1\xf5\xcc\x3f\xd0\xe7\x7f\xf5\xa1\x1b\x1b\xe0\xd1\x5a\x1f\xba\x2b\xf4\xa8\xad\x0f\xe0\x53\xf0\x06\xe7\x1e\x83\xf5\x21\x18\x0a\x69\x3f\x71\x4e\xfb\x77\x2e\xc6\xea\x77\x2e\x46\xea\x77\x2e\xc6\x69\xec\x08\x5a\x96\x05\x4d\x01\xf1\x5f\x2e\xcd\xda\x39\x19\x03\x5d\x54\x87\xbc\x92\x93\x35\x12\xdd\x9e\x91\xdf\xf5\x26\xdb\xe9\x51\x21\xa7\x9d\x42\xdc\xeb\xcf\xce\xce\xa6\xaf\x33\x05\x13\x55\x88\xbb\x06\xc0\xda\xcc\xb1\xe7\xb3\x16\x8a\x3b\x17\x9e\x9d\xa5\x95\xf8\xcb\xa8\xf2\xd8\x1a\x15\x54\x8c\xda\xf4\xe1\xd0\x19\x0a\x34\xa6\xb6\x23\xc5\xf5\x5f\x47\xca\xae\xfe\xc7\x91\xc3\x2f\x34\xa7\xf3\x0a\x9d\xad\x8d\xce\x6b\x13\x9d\x57\x52\x8b\xd5\x39\xce\xab\x59\xab\xe5\x99\xa8\x9e\xcb\xd7\xee\xb6\x2d\xbf\xa4\xe3\xd3\x0a\xfc\xd9\xeb\x7b\x77\x73\x10\x83\x9a\xf8\x56\xba\x09\x62\x50\xe2\x92\x4c\x18\x79\x18\x22\x1f\x7f\xb5\xe9\x57\xa5\x87\xf9\x81\x1b\xd9\xd9\x6c\x67\xee\x39\x66\xd1\xe6\xe0\x9c\x2a\x8d\x81\x78\x96\x99\xcf\x56\xc9\x5d\xa2\x76\x92\x4d\xab\x24\xb8\xab\x51\xf1\xb3\x8f\xba\x4a\xf9\xf8\x59\xf1\x56\xb9\xba\x78\xeb\xd4\x17\x0f\x85\xe5\xe5\xf8\x10\xad\x57\x82\x47\x3e\xda\xde\xab\xf9\xd1\x9a\xbd\x89\xff\x77\xe1\xa3\x8e\x9f\x8d\xd4\x70\xf1\xb3\xba\xa2\x85\xc7\x60\xcd\x07\x7b\x35\x5f\xb9\x73\xea\x0f\x75\xc9\xfb\x69\xcd\x6f\x5d\xd9\x97\xfc\xe2\x3f\xc3\x1c\xc3\x59\x3d\x9a\xb6\x61\xe0\x2e\xcd\x95\x3d\xcd\xb3\xf2\x21\x19\x3d\x5c\x3b\xaf\xe5\xad\xae\x0c\xca\xaf\xfb\x5b\xdb\xb0\x87\x1f\x20\x63\xef\x43\x80\xbc\xb8\x8f\xf8\x12\xf1\xb7\x4e\x6f\x61\x95\x9c\xfe\xdd\x93\xcf\x90\x64\x3d\xbb\x68\x43\x30\xd2\x6e\x6e\x32\xe0\x98\x45\xff\x0f\x00\x00\xff\xff\xa5\x89\xaa\x3f\xea\x1f\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 8170, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x0e\x02\x21\x0c\x45\xf7\x1e\xc5\x45\xa3\xe3\x89\xb0\x74\x48\x0d\xb4\x84\x56\xb8\xbe\xc9\xb8\x98\x88\x33\x3b\xfe\xfb\xf4\xa5\xbd\x42\xb1\xd5\x05\x8d\x01\xb5\x5c\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xd5\xbf\x65\x65\x78\xb2\xa4\x2d\xa0\x2e\x07\x5f\xb0\xe5\x89\xc4\x12\xa1\x90\x07\xa3\xd6\x19\x69\x1e\x48\xbb\x31\x41\xe6\x4e\xdb\x33\x6b\x62\xd9\xe3\xcf\x8a\x6d\xb9\xd9\x78\xdd\x1f\xa5\x4d\x2a\xe7\x42\x30\x58\xa2\x0e\xdb\x40\x0f\x99\xe3\xd9\x31\x23\x62\x3d\x40\x21\xfb\x4c\x0d\x55\x1c\x42\xad\x7f\x8a\xb3\x06\x28\x26\xb2\x37\x3b\x81\x90\x7f\x02\x00\x00\xff\xff\x48\xe0\xd8\x7d\x63\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 355, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6e\x83\x30\x0c\x86\xdf\x77\x94\x4a\xb5\x4a\x48\x99\x7a\x1c\x2f\x31\x28\x5a\x62\xa3\xc4\x6b\xca\xed\xa7\xb2\x4d\xa2\xc0\x24\x1e\xf3\xf9\xfb\x6d\xc5\x3e\x01\x9e\x53\x21\x3f\x10\x30\xe9\xdb\x09\x94\x22\x25\xd2\x3c\x41\x0a\x2e\x4b\x91\x5e\xc1\x49\x7a\x56\x32\xf6\x7d\x70\x09\x19\x07\xca\xbf\xfa\x5d\xb2\xd2\x03\x3c\x2a\xae\x02\xe8\x23\xd4\xc0\x5e\x6a\x99\xdf\xce\x97\xa6\xb1\x2d\x44\x61\x88\x91\xeb\xdc\xe0\x09\x4d\x77\xdb\x40\x73\xb1\xc6\x42\x74\xd3\x9a\xb6\xd7\x3d\xda\x35\x1b\xda\xb6\xb7\x2d\xb3\xdb\x9e\xf6\xf2\x0e\x7d\xc6\x05\x9b\x0c\x14\x52\x0d\x3c\x94\x9d\x7f\x01\x7e\xa2\xe7\x32\xab\xfe\xe3\x7a\x54\x1d\x48\x0e\xab\xf5\xf1\xb2\xb8\xbf\xd8\xb9\x06\xde\x5b\x74\x19\x27\x26\x35\xbb\x94\xbe\xb2\x8c\xb4\x28\x2d\xe6\x28\x65\xf2\x02\x61\xbc\x77\xab\xec\xcf\x51\xff\x9b\x57\x51\x8b\xf0\x2b\xfc\x0e\x00\x00\xff\xff\xed\x9f\x74\xd7\x47\x02\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 583, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd1\xdd\x6e\xc3\x20\x0c\x05\xe0\xfb\x3d\x4a\xa5\x5a\xc5\x49\x13\xfa\x38\x56\x70\x22\x34\x30\x11\xb8\xcd\xf2\xf6\xd3\x7e\xa4\x2d\x85\xde\x7e\x3e\xe8\x00\x3e\x01\x9d\x63\x61\xb7\x30\x08\xeb\xdb\x09\x94\x03\x47\xd6\xbc\x43\xf4\x53\x4e\x25\xcd\x0a\x53\x8a\x5f\x93\x4c\xf3\xec\xa7\x48\x42\x0b\xe7\xdf\xf8\x7d\x75\xa4\x5c\x65\x1f\x29\x2b\x7f\x80\x23\xa5\x6a\xb6\x95\x27\x3a\xdc\x60\x72\xc5\x20\x5a\x08\x49\x20\x04\xd9\xfe\xb0\xef\x1b\x38\x5c\x1b\x38\x76\x0d\xb4\xad\xa4\x1d\x2b\xc4\x4b\x7f\xe9\x21\x4c\xfb\x51\x0d\xe2\xad\xce\x1a\xbc\x0e\x2d\x1d\xeb\x07\xa0\x41\x6b\x2a\xed\xba\x5b\xd5\x65\xcd\xd3\xe9\xc2\xaa\x5e\x96\x72\xde\xbc\xb4\xfe\xb4\xac\xbb\xb0\x62\x53\x29\x68\xd3\xf9\x9e\xd3\xfa\x7f\x71\xf4\x4e\x4e\xca\x77\xdf\xcf\xf6\x5e\xb5\x6d\x5e\x2c\xf8\xf5\x31\x1c\xfd\x33\x00\x00\xff\xff\x4c\x1b\x35\xaf\x4a\x02\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 586, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\xbd\x72\x1a\x4b\x10\x05\xe0\x7c\x9e\x62\xab\x48\xee\x0d\x38\xdb\xa7\xbb\xe7\x67\x09\x9d\x3b\x72\xe0\x18\x63\x64\x51\x46\xa0\x42\xb8\x90\xfc\xf4\xae\xde\x15\xb0\x64\xfd\xd1\x73\x86\xd9\x9e\x59\x2c\x16\xdd\xd3\xee\xb4\xbd\xac\xf7\xfb\xee\xb2\x3b\x50\xba\xed\xfb\xf9\xb4\xee\xfe\x63\xed\x29\xbd\x0a\x6b\x27\x5c\x59\xf9\x3f\xc5\xda\xaf\xc7\xd3\xb6\xdb\x1d\x9e\x8e\xab\xee\xf9\x7c\x7e\x7d\x5b\xf5\xfd\xaf\xdd\xf9\xf9\xcf\x0f\x6c\x8e\x2f\xfd\xe6\xb4\xfe\xfb\xb1\x7c\x59\xbf\xf7\xdf\x77\x87\x9f\xc7\xcb\xdb\xb7\xd7\x8f\x2f\xfb\xe3\xe6\xf7\xf6\x94\x12\x0d\x4d\x40\x45\xf6\xa8\x29\x15\x06\x6a\xbb\x42\x09\x15\x49\x6a\x18\x2a\x58\x1b\x58\x2d\xb9\xa0\x56\xa8\x3a\xda\xac\x26\x6f\xc8\x50\xbf\xb7\x0a\x64\x79\xaf\x35\xe7\xe8\x0c\x02\x5a\x81\x4a\x80\x42\x78\x89\xfd\x47\xd1\xa1\x4e\xd0\x39\xb1\x81\x62\xa8\x23\xb4\x82\xae\xa8\x25\x15\x87\x23\x3b\x64\x79\xad\x62\xeb\x92\x91\x15\x94\xc8\xcd\x30\xd8\x0d\x2d\x12\xb7\xfa\x9a\xc9\x93\xec\x13\x9a\x15\x6e\x89\xe2\x70\x81\x52\x60\x3a\xc9\xc7\x81\xd5\xbb\x1a\x62\x5c\x37\x50\xa6\x98\xd2\xa7\x4f\xe6\x27\x33\xe8\x65\x9c\x26\x8d\xd0\x6c\x30\x87\xda\x9d\x85\x90\xe5\x0c\x71\x34\x9a\x83\x55\xc0\x96\x51\x25\x31\xd7\xf1\xa8\xf1\xab\x95\x47\xb6\x07\xfa\x6c\x71\x9e\x6e\xb4\x34\x14\x03\x1b\xea\x90\x54\x1c\x75\x00\x87\x0a\x59\xce\x10\xff\x19\x64\x8c\xc7\x09\x75\x4f\x2a\x35\x6e\x27\x9a\x7a\x45\xdc\x98\x0e\x37\x65\x03\xc7\xe4\xc4\x21\x0e\x30\x97\x3e\xf4\xcc\xe6\x72\xb9\x4a\xe3\x99\x4d\xb9\xd2\xc0\x12\x8f\xc5\xff\x05\x00\x00\xff\xff\x40\x31\x27\x3e\x0d\x03\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 781, mode: os.FileMode(438), modTime: time.Unix(1508197932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x96\xbb\x72\x5c\x37\x0c\x86\xfb\x7d\x8a\x9d\x71\x93\x14\xfa\x17\x00\xc1\x9b\xcb\xf4\xa9\x52\xa4\x76\x1c\x3b\xd6\xc4\x96\x34\x92\x32\x8a\xf2\xf4\x99\x9f\xb7\xc3\x53\xac\x84\x6f\x40\x90\x20\x88\xcb\xf9\xf0\xe1\xc3\xf5\xeb\xfd\xf3\x97\xb7\x4f\xdf\xbf\x5f\xdf\xee\x1f\x54\xae\x2f\x4f\xef\xd7\x9f\xcc\x6f\xaa\x37\x13\xcd\x57\x0d\x1f\x3d\xfc\x7c\xe1\xca\x5f\x1f\x9f\xbf\x5c\xef\x1f\xbe\x3e\x7e\xbc\x7e\x7b\x7d\x7d\x7a\xf9\x78\xbb\xfd\x75\xff\xfa\xed\x9f\x3f\xf0\xf9\xf1\xc7\xed\xf3\xf3\xa7\xff\xde\xef\x7e\x7c\xfa\xf7\xf6\xfb\xfd\xc3\x9f\x8f\x6f\x2f\xbf\x3d\xbd\xff\xf2\xfd\xf1\xf3\xdf\x5f\x9e\x2f\x17\x0d\x48\x05\xc5\x50\xa6\x58\xa0\x56\x09\x39\xc1\xb4\x40\x35\x2f\xaa\xd0\xaa\x1b\x99\x4a\xa3\x02\xcd\x19\xea\x3e\xa9\x08\xea\x52\x95\x04\x8b\x53\x65\x41\xa0\xa1\x53\x85\x85\x8a\xd4\x4e\x2b\x8a\x88\x18\xa6\x58\x61\x6e\x04\x95\x8c\x88\x22\x9b\x5c\x2e\x16\x50\x33\x92\x42\x43\x1e\x60\x52\x51\x3b\x54\xa8\x40\x75\xc9\x15\xee\x1b\xa4\x05\x9a\xf8\x9b\x64\x0a\x93\xb6\x83\x8a\xc1\x61\x31\x4c\x30\x85\x4f\x59\x63\x84\xba\x74\x0c\xd0\x62\x50\x4b\x17\x17\x46\xcf\x8c\x8b\xad\x51\x85\x0b\x34\xe6\x01\xa6\x09\x39\x6c\x60\x51\x17\x15\x24\x5b\xc0\x28\x2f\x2b\x33\x3a\x4d\xca\x02\x33\x81\x79\x69\x94\xa0\xd0\x9c\xa6\x6c\xf0\x43\xd4\xbe\x5b\xce\x30\x2b\xf0\xbc\x41\xd9\xa1\xae\x65\x81\xc7\x34\x7f\x0a\xef\x54\xe1\xed\x4c\xe5\x73\xc0\x62\x9c\xa0\x82\x5c\x16\x28\x6a\x58\xe0\xd0\xb8\x8c\xcc\xc6\xb1\x6d\x07\xe7\xcb\x36\x70\xa8\xf3\x56\xd2\x31\x42\xf9\x38\x4d\x6e\x09\x04\x73\x59\x18\x15\xd6\x77\x34\x6d\x4a\x2d\x76\x89\x06\x0d\x05\xea\xed\x2e\x3b\xd5\x9d\xe8\x4b\xa4\x95\x22\x18\xa2\x36\x1d\x33\x26\xc2\x3c\x75\x6a\xa7\x21\x84\x9d\x62\x3d\x88\x09\x11\x17\xc6\xe6\x6a\xa3\xdc\xde\x65\x38\x33\x48\x3d\x1f\x18\xa0\x61\x58\x16\x98\x43\xf3\xb0\xac\x28\x19\x6e\x13\xd4\x02\xbc\x2c\x2a\x15\xa5\x7b\x93\xfb\x43\x74\x67\xb2\x33\x9e\xd3\x6d\x96\x94\xe7\x16\xa8\x89\x0c\x94\xda\x42\xfe\x8e\xb5\x95\xbe\x6d\x18\x5a\xd2\x0f\xa4\xab\xd6\x8f\xe4\x79\x7c\x9f\x3c\x90\xef\xc9\x78\xa6\x03\x23\x4c\x06\x66\x24\x61\x41\x92\x2c\xd0\x55\x96\x6c\xed\x98\xe0\xfc\x77\x50\x80\x89\x5d\x92\xc3\x91\xa0\x22\x5d\xb4\x00\xb9\x9b\x12\x93\x2c\x45\x84\xda\xde\xde\x82\x90\x68\x9f\x60\x65\xc8\x2a\x42\x8b\x25\x0f\x9b\xf1\xb4\xc9\xa7\x09\x5b\x93\xe4\x46\x11\xc6\x36\x53\x06\x70\x7b\x19\xb2\x3b\xf3\xe2\x90\xfd\x90\x55\xca\x0e\x75\x00\x43\x64\xd3\xbc\x57\xc0\x0e\xb6\x43\x98\x10\x04\x71\xd9\xe4\xc4\xc6\x38\x1c\xeb\xf7\x5f\xf2\xbc\x4d\x84\x45\x3b\x34\xbc\x10\x35\x6c\x56\xb5\x3d\xbd\x06\xbd\xe4\x0c\x66\x5a\x6d\x3d\x40\xc5\xd1\xb2\x35\xb3\xc5\x34\xa2\x07\x19\x29\x1d\xc4\xd6\xb2\xc8\xd9\x4c\xd6\x52\xf6\x82\x78\x22\x3e\xd7\xc4\x90\x99\x9d\x1d\x79\x39\x68\x8d\x93\x8c\x19\xa3\x63\x2d\x5b\x92\xa9\x4e\x08\x85\x4f\x32\x20\xb2\x8a\xbb\x99\xa9\xc0\x91\xf3\x01\xc2\x52\x9e\x64\xca\x5c\x0f\x83\x1d\x81\x15\xeb\x17\x55\x85\xb1\x47\xb3\xaf\xee\xa4\xdc\xe9\x40\xb6\xed\x13\x1e\xa6\xc9\x21\x77\x1b\x30\xac\x1a\x94\x26\x48\xcd\x85\x05\x2a\x61\x91\x36\xb3\x03\x76\x33\xf6\x0f\xda\x79\x2b\xd9\x20\x3d\x70\x1b\x32\xe6\x03\x99\xa6\xf1\x40\x95\xd4\xf6\x3d\xa8\x6f\x3c\x99\x25\x7e\x42\x2f\x27\xac\x69\xc3\x72\x5e\x5c\xce\x8b\x0b\xb2\x9d\x17\xef\xab\x55\x77\x3f\x18\x9e\xdd\x8f\x36\x72\x4e\xb8\x6f\x6d\x72\xda\xda\xe4\xe4\x56\x2e\x9c\xc9\x07\xd6\x1e\xe4\x81\xa5\xb4\x61\x36\xd9\x42\x64\xdb\x62\xda\x72\x32\x17\xed\xe7\xe6\xd1\x0f\xba\x32\x66\xd6\x44\x2b\x8f\x43\x6e\xfe\x0e\x4a\x9b\x26\xed\x1a\x8e\xfe\xa5\x22\xec\x3a\xeb\xc5\x31\x28\xc8\xb6\x32\xc8\xbe\x92\x7e\x2c\x1d\xe1\xa4\x4b\xbb\x6e\x3b\x3d\x81\x7f\xa7\xcc\x76\x1e\x65\x52\xd5\x56\x0a\x1d\x98\x05\x5a\xfc\x8c\xf1\x8c\x75\x21\xe7\xac\x1e\xb6\xa6\xd8\x94\xe6\x2d\xd8\x83\x38\x74\x79\x66\x2a\xfc\x6c\xe2\x44\x72\x9d\xa4\x4e\x57\x0f\x62\x49\x2d\xca\x86\x3c\x56\xf6\xb6\xaf\xa1\x53\x68\x1d\x38\xe9\x41\xfc\xb8\x0b\x17\xad\xda\x2e\xcf\x69\xc1\xcf\xb6\x86\xfc\x3e\x2b\xed\x3b\x69\xb1\x96\x36\x21\x3a\x57\x44\x47\xb4\x8b\xd6\xd8\x26\xb8\xc5\x16\xe6\x8d\x18\x4b\xf6\x37\x4f\xbd\xd3\xd9\x24\xa6\xcf\x54\x26\x0e\xbe\xfe\xb5\x69\xda\x67\x12\x93\x4e\xee\x76\xb2\x18\xff\x0f\x00\x00\xff\xff\x54\x04\x03\xbf\x5f\x0b\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 2911, mode: os.FileMode(438), modTime: time.Unix(1511527433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xbf\x72\xdb\x30\x0c\x06\xf0\x9d\x4f\xa1\x3b\x2f\xed\x60\x88\x1f\x00\xfe\xf3\xd8\xbd\x53\x87\xce\xae\xe3\x34\xba\x3a\x96\x4f\x51\xce\x4d\x9f\xbe\x47\xa9\x89\x88\x6e\xf8\x1d\x41\x9b\x1f\x48\xed\x76\xbb\xee\x71\x98\xce\xf7\xe3\xe5\xd2\xdd\x87\x2b\x7c\xf7\x7a\x7b\x38\xce\xe7\xee\x13\x6b\x0f\xf4\xec\x91\x3a\xc8\x41\xe5\xb3\xab\xcd\x5f\xc7\xe9\xdc\x0d\xd7\xc7\xf1\xd0\x3d\xcd\xf3\xed\xe5\xd0\xf7\x3f\x87\xf9\xe9\xf5\x07\x9d\xc6\xe7\xfe\x34\x1d\xff\xbc\xed\x9f\x8f\xbf\xfb\xef\xc3\xf5\x61\xbc\xbf\x7c\xbb\xbd\x7d\xb9\x8c\xa7\x5f\xe7\xc9\x39\x08\xc5\x4c\x39\x91\xa6\xad\x46\x0a\x15\x49\x09\xa9\x10\xb0\x2c\xc1\x27\x52\x0a\xbe\xa9\xd9\x71\xad\x85\x90\x0b\x81\xa3\x61\x48\x96\xd9\xa9\xa7\x94\x88\xb9\x90\xdf\x6f\x35\x87\xe0\x02\x2f\x25\x12\x88\x3d\xbb\x18\x28\x04\x82\x64\xf2\xfb\xad\xae\x8d\xff\x14\x65\x5b\x89\xb2\xae\x44\x02\x0a\x41\x75\xf9\x6b\xc3\x6c\x98\x8b\x61\xa9\x89\x40\x1c\x84\x44\xd6\x7c\x35\xb7\xa7\x00\x42\x4e\x96\xd9\xb0\x98\x66\xd6\x68\x99\x2c\x9b\xbd\x42\x5c\x5a\x49\xf3\x43\x35\x74\x83\x9a\xed\x9d\x40\x8d\x6c\x19\x0d\xa3\xb7\xe4\x8d\x31\x98\x33\xac\x2e\xd6\x01\xff\x59\x1c\x42\x5a\x2f\x40\x88\xbd\xbe\x93\xd5\x53\x2e\xad\x98\xfd\xca\x58\x2f\x16\x92\x8d\x4a\x2b\x35\x9d\x0a\x23\xb3\x4f\x3f\xf6\x95\x48\x41\x5b\xe4\x06\x60\x71\x28\x20\x16\xa6\x5c\x07\x6a\x94\x5b\xd5\x01\x35\xe2\x0f\x41\xea\xb3\x6c\xb5\x4c\x7e\xb1\x52\x62\x42\x16\xcb\x68\x99\x0d\x8b\x77\x5c\x3f\x92\xfa\xd0\xb4\x9e\xa1\x51\xc4\xdf\x00\x00\x00\xff\xff\xa2\x13\xac\xc0\xe2\x03\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 994, mode: os.FileMode(438), modTime: time.Unix(1511527436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbd\x4e\xc3\x30\x14\x47\xf1\xdd\x4f\x61\x29\x0b\x0c\xfc\x7d\xaf\x73\xfd\xd1\x8c\xec\x4c\x0c\xcc\x26\xb8\xd4\x22\x8d\x2b\xd7\x28\x0d\x4f\x8f\x90\x18\xba\x9d\x23\xfd\x86\x61\xd0\xc7\xd2\xf2\x96\x96\x45\x6f\x65\x0d\x3a\xdf\x7a\x4b\xfa\x81\x83\x21\x6f\x2c\x71\xd0\x96\x26\x17\x1e\xd5\x1f\x7d\xa9\x2d\xeb\xb2\x1e\xeb\xa4\x4f\xbd\x5f\xae\x93\x31\x9f\xa5\x9f\xbe\xdf\x31\xd7\xb3\x99\x5b\xfa\xd9\x9f\xce\xe9\x66\xde\xca\xfa\x51\xb7\xeb\xeb\x65\x7f\x5e\xea\xfc\x95\x9b\x52\x3c\x22\x12\xd8\xc2\x89\x12\x02\x73\x04\xd3\x88\xa0\xbc\x40\xe0\x04\xd6\x8d\x77\x2d\xca\x3b\x38\x8b\x43\x84\x1d\xf9\x7f\x98\x22\xd8\x89\xb2\x14\x20\x1e\x7c\x10\xb0\xfc\x06\x00\x00\xff\xff\x15\x4c\xc2\xac\xc3\x00\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 195, mode: os.FileMode(438), modTime: time.Unix(1497726486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x3f\x8f\xda\x40\x10\x05\xf0\x7e\x3f\x85\x25\x9a\xa4\xb8\xe7\x7d\xb3\x33\xfb\x87\x32\x7d\xaa\x14\xa9\x09\xe1\x72\x56\x38\x8c\x0c\x11\x21\x9f\x3e\xda\x05\x8c\x75\x85\xa5\xf9\xc9\x3b\x33\xda\x7d\xab\xd5\xaa\x7b\x1d\xa6\xdd\x65\xb3\xdf\x77\x97\xe1\x90\xba\xd3\xf1\xda\x7d\x12\xed\xc9\x5e\x3c\x53\xc7\xb0\xd6\xf0\xd9\xd5\x83\x5f\xc7\x69\xd7\x0d\x87\xd7\x71\xdd\xbd\x9d\xcf\xc7\xd3\xba\xef\x7f\x0d\xe7\xb7\x3f\x3f\xb0\x1d\xdf\xfb\xed\xb4\xf9\x77\x7d\x79\xdf\xfc\xed\xbf\x0f\x87\x9f\xe3\xe5\xf4\xed\x78\xfd\xb2\x1f\xb7\xbf\x77\x93\x73\x0c\x48\x19\xcc\x19\xd4\xd4\x54\x20\xa1\x20\x96\x8a\x4c\x18\x2c\x3c\xca\x02\x51\x71\xea\x91\x3c\x44\x08\xd1\xd2\x94\x20\x12\x3f\xca\x7c\x15\x99\x41\x1f\xc1\xe0\x9d\x11\x54\x22\x08\x8c\xce\x04\x0c\x75\x6b\x46\x2e\x4b\xd1\x6e\x8c\x0a\x51\x8f\xa5\x08\xf1\x36\xd3\x08\xd5\xa6\x94\x51\x9b\xef\x53\x53\xbb\x4b\x6d\x9e\x69\x84\x50\x66\xd6\x2f\xce\x2a\x01\x7c\x52\x24\x40\x42\x53\x4e\x88\x1e\xf4\xc9\x45\x85\x42\x02\xfc\xcb\xa3\x12\x33\x17\x0d\x66\x50\x05\x7d\x5e\xa2\xdc\x41\x06\x50\x96\x08\x77\x88\x09\x12\x17\x28\xcb\x3f\x2c\xde\xd1\x2b\xb4\x76\x24\xc4\xf8\x54\x81\xf0\x21\x91\xdc\xb2\x79\x4a\xbc\xcc\x0c\x09\xac\x21\x92\xb7\xa8\x4a\xdd\xbe\x90\xb4\x58\x15\x4c\x1e\xa1\xc5\xe9\xea\x32\x32\x41\x82\xd5\xf7\x61\x61\x1b\x23\x3e\x83\x12\xff\x07\x00\x00\xff\xff\x6a\xa6\x2a\x59\x92\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 658, mode: os.FileMode(438), modTime: time.Unix(1511528584, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x3f\x8f\xda\x40\x10\x05\xf0\x7e\x3f\x85\x25\x9a\xa4\xe0\x79\x67\x66\x67\xff\x50\xa6\x4f\x95\x22\xb5\x03\x26\x58\x07\x18\x19\x23\x8e\xfb\xf4\x27\x1f\x27\xf0\x50\xfe\xf4\x56\xef\x49\xab\x59\x2c\x16\xd5\xb6\x1b\xda\x6b\xb3\xdf\x57\xd7\xee\x98\xaa\xcb\x69\xd3\x8c\x6d\xf5\x83\x43\x4d\x54\xb3\xa7\x54\x91\xac\x82\xfc\x74\xd3\xdb\xdf\xfd\xd0\x56\xdd\x71\xdb\xaf\xaa\xdd\x38\x9e\xce\xab\xba\xfe\xdf\x8d\xbb\xcb\x3f\xac\xfb\x43\xbd\x1e\x9a\x8f\xdb\xf2\xd0\xbc\xd7\x7f\xbb\xe3\xa6\xbf\x9e\xff\x9c\x6e\xbf\xf6\xfd\xfa\xad\x1d\x9c\x23\x01\xf9\x84\x00\xf5\x2e\x78\xa4\x04\xe6\x02\x15\xc7\x53\x20\xa0\x5c\x40\xac\x96\xd1\x50\x93\x65\x76\x51\xa1\x0a\x92\x0c\x22\x36\x0a\x73\x71\x9c\x2b\x3f\x14\x05\xcc\x64\xc4\x2e\x46\x10\x15\x50\x08\x5f\x8b\x86\xd9\x30\x17\xc3\xe2\x1d\x49\x00\x25\x0f\xa5\x57\x72\x88\x96\xc9\x32\x3f\x29\xe0\x32\x97\xcc\x8a\x32\xfc\x72\x06\x56\x7d\x64\x44\x8a\xc8\x4f\x46\x35\xb5\x77\x17\x6b\xa5\x17\x8b\x23\x4d\xd0\x88\x12\x41\x2c\x8e\x0a\x81\x85\x91\xa7\xb9\xb9\xa2\x37\xe2\x87\x48\xca\xbd\xc7\x38\x7c\x3b\x20\x31\x28\x8b\x65\xb4\xcc\x86\xc5\x3b\x9e\x0e\x67\xfa\xe9\x00\xcd\x9f\x01\x00\x00\xff\xff\x60\xb9\xd8\x6b\xb4\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 692, mode: os.FileMode(438), modTime: time.Unix(1511528588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcb\xb1\x6e\x83\x30\x18\xc4\xf1\xdd\x4f\x61\x29\x4b\x3b\xe4\xfc\x9d\xed\xcf\x06\xc6\xee\x9d\x3a\x74\xa6\x94\x34\xa8\x04\x22\x42\x45\xd2\xa7\xaf\x98\xa0\xdb\xfd\xa4\xfb\x1f\x0e\x07\x7b\xea\xa6\x76\xa9\xfb\xde\x2e\xdd\x50\xd0\xb6\xf7\x79\xaa\xed\x13\xb3\xa3\x38\x2f\xcc\x56\x58\x85\xf4\x6c\xd6\xef\xeb\x38\xb5\xb6\x1b\x4e\x63\x65\xcf\xf3\x7c\xbd\x55\xce\x7d\x75\xf3\xf9\xe7\x03\xcd\x78\x71\xcd\x54\xff\x3e\x8e\x97\xfa\xee\xde\xbb\xe1\x73\x5c\x6e\x6f\xd7\xc7\x4b\x3f\x36\xdf\xed\x64\x0c\x03\x0a\x01\x3d\x34\x9a\x28\x20\x0b\x50\x02\xf2\x86\x04\x06\x31\x29\x22\x42\x23\xbc\xdf\xa6\x86\xdd\x8e\x26\x29\xd4\x83\x52\xc0\x97\x3b\xe8\x1e\xd4\x60\x18\xb8\xb6\x48\x84\x1c\x77\xf0\xaa\x86\x9a\xa1\x0a\x86\x08\x46\xd9\xa8\xa0\x2f\xfe\x31\x88\xf1\x12\x91\x4b\xb0\xcc\xf0\xb2\x32\x23\x26\xb0\x5c\xdb\xbf\x00\x00\x00\xff\xff\xa2\x64\xaa\x88\x43\x01\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 323, mode: os.FileMode(438), modTime: time.Unix(1508197942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\x3d\x8f\xda\x40\x10\x06\xe0\xde\xbf\xc2\x12\x4d\x52\xdc\xeb\x7d\xe7\x63\x3f\x28\xd3\xa7\x4a\x91\x9a\x10\x2e\x87\xc2\x01\x02\x22\x42\x7e\x7d\xb4\x7b\x06\x9b\xc2\xd2\x3c\x9e\xd1\xce\x78\x3d\x8b\xc5\xa2\x7f\xdd\x9e\x36\xd7\xd5\x6e\xd7\x5f\xb7\xfb\xcc\xfe\x7c\xbc\xf5\x9f\xc4\x06\x72\x90\xc0\xd4\x53\x97\xa6\x9f\xbb\x5a\xf9\xf5\x70\xda\xf4\xdb\xfd\xeb\x61\xd9\xbf\x5d\x2e\xc7\xf3\x72\x18\x7e\x6d\x2f\x6f\x7f\x7e\x60\x7d\x78\x1f\xd6\xa7\xd5\xbf\xdb\xcb\xfb\xea\xef\xf0\x7d\xbb\xff\x79\xb8\x9e\xbf\x1d\x6f\x5f\x76\x87\xf5\xef\xcd\xa9\xeb\xa8\x48\x19\xa2\x01\x54\x6b\x2a\x10\x2d\x88\xa5\x22\x13\x0e\xd7\x7b\x58\x20\x26\x9d\x28\x4a\x86\x15\xd0\x5a\x5c\x5a\x2c\xec\x2c\x20\x25\x88\x44\x88\x95\xb9\x3c\x3c\x94\x51\xa4\x73\x01\x35\x83\x96\x91\xd3\x93\xca\x5c\xf4\xd2\x39\x41\x23\x54\xe0\x6c\xb9\x68\x10\x25\xc4\x1f\xb2\x00\x2f\x93\x08\x09\x53\xd2\x09\xb3\xa6\x54\x0f\x4d\xb5\xfc\x41\x27\x84\xf2\x60\x7d\xe2\x43\x45\xc1\x89\x22\x0a\xd1\xa6\x9c\x10\x03\x18\xda\xe4\xa2\x0a\x96\xd2\xbe\x38\x1a\xea\x70\x08\x2f\xf7\x48\xdc\xc7\xb7\x09\x1e\xba\xe8\x70\x87\x19\x18\xf2\x08\xb2\xb6\x99\x43\xe6\xd0\x11\xe2\x02\x9b\xa3\xcc\xc1\x12\x66\x92\x20\x5d\xbb\x25\x6d\x57\xc0\x9c\x27\xc6\xd6\x9a\xc1\x60\xf5\xf4\x84\x18\x27\x15\x08\xef\x12\x4d\x60\x5d\x82\x91\x92\xdb\x1e\x4c\xaa\x5d\x48\x42\x84\x90\x02\xf1\xba\x3d\x06\xa6\x00\x0d\x1f\xd9\x39\xf5\x99\xcf\xc5\xb5\x6d\xed\xc7\xd8\xa6\x20\x6d\x74\x82\xa8\xd7\x9f\x42\x4f\xf0\x08\x16\x43\x92\x27\xe9\x93\xac\x63\x61\x1b\x5e\x42\x06\x25\x8e\x2e\xf0\x00\xe6\xb9\x52\x9a\x24\x60\x08\x13\x0d\x2e\xff\x03\x00\x00\xff\xff\x28\x9e\xb8\x72\x82\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 898, mode: os.FileMode(438), modTime: time.Unix(1511528470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xb1\x72\x1a\x41\x0c\x06\xe0\x7e\x9f\xe2\x66\x68\x92\x02\xdd\xfe\x92\x76\x57\x4b\x99\x3e\x55\x8a\xd4\x04\xe3\xf8\x26\x98\x63\x30\x1e\xe2\x3c\x7d\x66\x8d\x81\x95\x3b\xbe\x91\x84\x74\x3a\xdd\x62\xb1\x18\x1e\xa7\xe3\xf6\xbc\xde\xed\x86\xf3\xb4\x37\x0c\xaf\x87\x87\xf5\x69\x3b\x7c\x61\x1d\x81\x91\x23\xca\x00\x59\xa9\x7c\x0d\x2d\xf9\xfb\x7c\xdc\x0e\xd3\xfe\x71\x5e\x0d\x4f\xa7\xd3\xe1\x65\x35\x8e\xbf\xa7\xd3\xd3\xeb\x2f\xda\xcc\xcf\xe3\xe6\xb8\xfe\xf7\xb6\x7c\x5e\xff\x1d\x7f\x4e\xfb\x87\xf9\xfc\xf2\xe3\xf0\xf6\x6d\x37\x6f\xfe\x6c\x8f\x21\x40\x28\x1b\x59\x21\x94\xd4\x50\x8c\x60\x4a\xaa\x0d\x88\x85\x94\x52\x0c\x1a\xa9\x14\x62\xae\x94\x24\x70\x0b\x08\xc1\x2a\x81\x93\x67\x76\x4c\xc5\xd3\x42\x62\x82\x09\x69\xeb\x97\xaf\x02\x8c\x50\xd0\xd8\x5a\xa0\x80\x38\x72\xc8\x89\x52\x22\x88\x51\x5c\xde\x7f\x73\x4a\xd7\x48\x96\x7b\x24\x4b\x17\x61\x65\xe2\xa4\x21\x67\x02\x2a\x41\xf5\x7d\x16\x47\x73\xb4\xea\x58\x63\x80\x80\x38\x09\xa1\x25\x4b\x80\x28\xa1\x44\x4a\xa0\xb8\xec\xd0\x9a\xde\x28\xc4\xb5\x97\xc4\xbb\xac\xaf\x33\x57\x07\xb4\xa9\x3d\xb3\x63\x8e\x9e\x7c\x67\x6e\x8f\x6b\x9f\x5c\xbd\x13\x3e\x59\x02\x52\xb9\x6c\x54\x88\xa3\x5e\xc9\x1a\xc9\x6a\xaf\xf6\x4a\x3b\x32\xc7\x0b\x73\x3b\x08\x88\x39\xd5\x5e\xea\x32\x15\x4e\xae\x4e\x6f\x75\x35\x53\xd2\x1e\xd6\x01\x2c\xbd\x52\x09\xa8\x20\x16\x26\x6b\xdb\x76\xb2\x5e\x6d\x7b\x9d\xf8\x26\x48\x25\x98\x37\x77\xff\x74\xb1\x7e\x58\xa9\xbc\xdf\xab\x67\xf6\xb4\xc0\xed\xa3\x69\xb7\xa4\x6d\x8c\x4e\x19\xff\x03\x00\x00\xff\xff\xc5\xa0\x9b\xf4\xd9\x03\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 985, mode: os.FileMode(438), modTime: time.Unix(1511528475, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x3d\x73\xdc\x38\x0c\xed\xfd\x2b\x34\xe3\xe6\xae\x10\xf6\xeb\xce\xc9\xb8\x4c\x9f\x49\x91\x22\x35\x97\x84\x24\xcc\x8a\x00\x43\x60\xad\x5d\xff\xfa\x0c\xd7\x6b\x3b\xca\x8a\x13\x8f\x3a\x3e\x80\x8f\x78\x78\x80\xee\xef\xef\x9b\x41\xd4\xb4\x99\x88\x37\xeb\x06\x4f\x96\x5d\xf3\xcf\x76\xbb\xda\x6c\x56\xdb\xf5\xe6\x53\xb3\x5e\x3f\xee\x1e\xfe\xbd\x2b\x81\x5f\x25\x63\x43\xdc\xc9\x63\x33\x98\x25\x7d\x5c\xad\x7a\xb2\xe1\xb8\x07\x2f\x71\xe5\xb3\x7b\x3e\xb7\xd1\x9d\x56\x3f\x88\x83\x4c\xfa\x3d\x9d\xbf\x8c\xe2\x0f\x98\xef\xee\xd6\x70\xf9\x1a\xc7\x3a\x61\x56\x88\xe4\xb3\xa8\x74\x56\x52\xdf\xd1\x94\x14\xf4\x70\x4e\x38\x3f\xce\x0a\x1a\x5d\x36\xf5\x19\x91\x6b\xc9\xcf\xbb\x87\xcd\xe7\xcd\x03\x3c\x09\x44\x45\xcf\x01\x18\xed\x37\xf8\xff\xcd\x76\xb7\xfb\xaf\x02\xef\x47\xd9\xc3\x84\xce\x06\xcc\x15\x02\xef\x38\x9c\x7d\x3e\xea\xa0\x12\x1c\x1c\x88\xfb\x39\x1e\x18\xbc\xb0\x21\x1b\xa4\x2c\x01\x7c\x54\x88\xca\x37\x41\xc2\xc8\x62\x38\xe3\xf7\x83\x90\xc7\x1a\xf3\x02\x08\xac\xce\xfc\xfc\x8e\x91\x0a\xf7\xc4\x0a\xd3\x4b\x0b\xe6\xb7\x5c\xe0\x56\xa1\x77\x86\x93\x3b\x43\x44\x55\xe4\x1e\x33\x8c\xf4\x84\x0b\xb1\x5e\xb8\xa3\x1e\x92\x53\x4d\x92\x6d\x46\x16\x30\x8d\x72\x06\x35\x67\xe4\xc1\x1d\x5c\x74\x64\xe8\x07\x96\x51\x7a\xc2\x39\x75\xc0\xa7\x52\x80\x3b\xda\x00\xa7\xbd\x9c\x6e\xf8\x42\x0c\x10\xd1\x9c\x62\x2e\x91\x35\x83\x04\x2e\x8a\x76\xc6\x5e\x69\x06\x74\x88\x61\xef\xfc\xe1\x3d\xaf\x1d\x64\x88\xcb\x31\x8a\x2e\xfb\xa1\x42\xf1\x16\xb5\x24\x61\x7f\xab\x14\xc5\xbe\xd5\x36\x2a\xb7\xa5\x29\x2f\x3a\x3c\xe3\xdc\x5c\xc4\x4a\x01\x73\x2a\xbe\x1e\xe5\x18\x5c\x4a\x33\x7c\x24\x8f\xac\xc5\x4f\x31\x55\x9e\x55\x44\xe5\x5b\xf6\x08\x83\x58\x74\x34\xce\x4f\x31\x90\xcb\x18\x28\xa3\xb7\xca\x85\x8b\x32\x4a\xd7\x91\xc7\xab\x8f\x96\xf3\x84\x5f\x71\xed\x4e\x10\xf5\x0d\x48\x99\x3c\x8e\xa4\xb6\x30\xc1\xc9\x08\xd4\x24\xd7\x0c\xfe\xf3\x88\xf9\xfc\x3e\x34\xb9\x46\x9e\xb1\x27\x35\xcc\xe0\x43\xf2\x35\x93\x7c\xc8\xe0\xba\x86\x6d\x0c\x3c\x6b\x83\x7e\x5b\x38\xbb\x7a\xe5\x8f\x31\x56\x34\x23\xee\xb5\x55\x1d\x97\x1d\x7d\x1d\x8c\xdb\x0b\x4d\xb2\xeb\x71\xe1\x45\x45\x9f\x96\xa2\xeb\x51\x41\xdb\x4a\x6d\x25\x08\x43\x8f\x5d\x80\xa0\xa7\xba\x5f\x8c\x46\x6c\xaf\xd3\xf4\x97\xbd\x66\x14\x71\xd1\xed\x76\xd8\x42\x1a\xed\xa6\xf8\x23\x2d\xb4\xf8\xf8\xa1\x25\x3d\x05\x5f\x7b\x71\x81\xdc\x58\xeb\xfc\xe5\xf7\xd4\x5a\x71\x86\x96\xfa\x67\x9a\x4e\x5a\xf6\x2e\x5c\x7e\x1f\x95\xf4\x69\xba\x2c\x0e\x2f\xcc\xe8\xcd\x50\x97\xf1\xd7\x89\xf8\x15\x00\x00\xff\xff\xf5\x1a\xc1\xd4\x18\x07\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1816, mode: os.FileMode(438), modTime: time.Unix(1511307399, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9b\x4d\x97\xe2\x2c\x16\xc7\xf7\xfd\x29\xea\x9c\xde\xcc\x2c\xa4\x78\x49\xa2\xe9\xe5\xec\x67\x35\x8b\x59\x13\x40\xe5\x98\x90\x34\xa0\x96\xf3\xe9\xe7\xa0\x56\x97\x96\x04\xff\x3e\x4f\xf7\xa6\x4f\xee\x2f\x5c\xee\xe5\xbe\x10\xa1\x7f\xfe\xfc\xf9\xb6\x1d\x43\x0c\x6f\x47\xeb\x18\x7d\x0b\xd3\xe9\xed\x1f\x9c\xbf\x33\xf6\xce\x29\x5b\xbe\x51\xfa\x4b\x34\xff\xfc\x91\xb0\x7f\x8f\xde\xbc\x59\xb7\x1e\x7f\xbd\x6d\x63\x9c\xc2\xaf\xf7\xf7\x8d\x8d\xdb\x7d\x47\xd4\x38\xbc\x2b\x2f\xff\x77\x5a\x0c\xf2\xe3\xfd\xbf\xd6\xe9\xf1\x18\xfe\x33\x9d\xfe\xd5\x8f\x6a\x67\xfc\x8f\x1f\x94\x9c\xff\xbe\xc9\x05\xa5\x94\x11\xb9\x18\x82\xd1\x1b\x43\x9c\x89\xdf\x65\x5a\xcd\x0a\x79\xe1\x45\x51\x90\x55\x05\x59\x5d\x90\x35\x05\xd9\xb2\x20\x5b\x15\x64\xed\xbc\x8c\xd1\x82\xac\xe0\x34\x36\xeb\x97\xdc\x43\x22\x75\x60\x64\x08\x2e\xad\xda\xfd\x63\x4e\x86\x20\x75\x78\xe4\x79\x86\xf7\x52\x3f\x3e\x55\x22\xf3\x2c\xda\x83\x8d\x27\x72\xbc\x84\xc5\xbd\x50\x3b\xf3\xb1\xff\xa6\x51\xbb\x8f\xef\x54\x78\x1c\xf6\x62\xc5\xc3\x74\xb3\xc6\x59\x3d\x05\x22\xa3\x1e\xe2\xfd\xf3\x9d\x5c\x28\xed\x16\x2e\x10\xa9\xa3\x51\x5b\xa2\xcd\x97\xd0\x7b\x79\x62\x94\x2d\x26\x3f\x6a\xa2\x47\xa2\xc3\x44\x86\x89\x0c\x56\xf9\x31\x8c\xeb\x6f\x43\x5d\x68\xfe\x12\x2d\x5e\xa2\xab\x17\x68\xfe\xd2\xbc\xf9\x4b\xf3\xe6\x2f\xcd\x9b\xbf\x34\xef\xea\xa5\x79\x57\x2f\xcd\xbb\x7a\x69\xde\xd5\x8b\xf3\xae\x5f\xa2\x9b\x97\xe8\xe5\x4b\xf4\x0a\xa3\xbb\x7c\x21\xe8\xe6\x0a\x41\x97\xcd\xf8\xce\xba\xcd\x39\x3d\xf3\x3a\x7a\x21\x28\x5b\x48\xc2\xb4\x3f\xe4\x24\x6a\x56\xb2\xc9\x48\x1c\x13\xb4\x5a\x98\x19\x49\x93\xd5\x73\x91\xcc\xbf\x93\xd5\xc3\xbb\x85\x1a\xfd\xb9\x53\x4d\x96\x4c\xe9\x1f\x19\x4a\x4c\x08\xf5\x39\x96\x80\xa8\xaa\x4c\x1d\x5d\x60\xe4\xe8\x42\xb6\x98\x76\x4e\x04\xb5\xa5\x9c\x52\xce\x05\x5f\xcd\x73\xa7\xd9\x55\x39\xcd\xae\xca\x45\x92\xf3\x63\x20\xc1\xf8\x83\x75\x9b\x45\x38\xdd\x2b\x52\x99\x9a\xab\x1e\x42\x48\x95\xfa\xbe\x92\x24\x9a\xde\x0c\x26\xfa\xd3\x4c\x90\x29\xa9\xb6\x86\x68\x19\xe5\x20\x7d\xcc\x5a\xac\xb4\xcb\x4d\x45\x07\x4e\xab\x65\x4d\x7a\x75\x22\x7d\xef\x8e\xf7\x9a\x75\xe0\x0d\x91\x43\x68\xc9\x10\x8c\x72\xdf\x85\x55\xdd\xce\xbe\xd8\x36\x35\xe9\x47\x97\x91\x6d\xd9\xf3\x98\xf9\x03\xf1\x22\x34\xb7\x54\x57\x49\x66\xa9\xae\x92\x4c\xc8\x9f\x25\x7c\x76\x34\x9e\x1d\x6d\x1c\x26\x19\xcd\x87\xda\x4a\xb7\x31\x44\xf5\xe3\x5e\xcb\x69\xba\xb7\xf7\x8e\x61\x24\x7a\xb9\x5e\x5b\x35\x48\x27\x37\xc6\x7f\x43\x5d\xb4\x6e\xbf\x1f\x88\x9e\xad\x27\x6a\xf4\x13\x09\xb1\x24\x36\x1f\x91\x0c\xc1\x46\xa9\xd7\x81\x6c\xfa\x4e\xbb\x54\xcd\xf2\xf8\x04\xb7\x77\x35\xc1\x1d\x55\x4d\x70\x13\x53\x29\x99\x27\x45\x0e\x34\x05\xe8\xad\x33\x74\x27\xe4\xef\x7d\x26\x66\x75\x27\x8e\x2e\x70\xca\xd2\x9f\xd9\x0c\xd7\x5d\x1d\xd4\x96\x51\xc6\xd2\xee\x90\x83\xdc\x12\xe2\x56\x02\xd3\xbb\x12\x35\xc4\xb5\x0c\xd3\xdb\x16\x2a\xda\x0d\x97\x2c\xc1\x38\xcc\x2f\x8c\xf2\x0a\xe3\x30\xbf\x30\x2a\xc0\xf1\x2a\x70\x7e\x15\x36\x1e\xab\xa0\xf5\x60\x9c\xb6\x18\xc7\x31\x7b\x39\xe8\x17\x2e\xa0\x38\x60\x02\x8b\x17\x26\xc0\x75\x13\x42\x80\x1c\x36\x5e\xc5\x30\xff\x55\xbc\x01\x39\xcc\xde\x4a\x50\x8c\x03\xe3\xa0\xc6\xea\x0b\xab\x41\x7b\x6b\xac\x1e\xb0\xba\xc2\xf4\x36\x15\x66\xef\x12\xb4\x63\x29\x30\x3b\x96\xa0\xff\x56\x0c\x8b\xab\x15\x18\x07\x60\x3d\x65\x2b\x30\x8f\x56\x60\xdd\x68\x29\x36\x5e\xcb\xc0\xf1\x30\x3f\x73\xca\x20\x7b\x39\xc5\xea\x01\xa7\x1c\x1c\x4f\x40\x75\x97\x53\xa8\x6e\xa4\x02\x8d\xf4\xad\xc4\x21\x7e\x39\x17\x72\x88\xe3\x14\xe5\x90\xf8\x4b\xed\x12\xf1\x5f\x6a\x97\x18\x27\xa0\xf5\x65\x54\x70\xcc\xcf\x02\x9c\x5f\xe9\xcb\xe8\x8e\xab\x40\xbd\xa0\xbd\x15\xc5\xc6\xab\x04\x36\xbf\x0a\xda\x1f\x30\x5a\x43\xfb\x21\x46\x6b\xa8\xcf\x30\x5a\x83\x71\xdf\x30\xcc\x8e\x06\xda\x87\x25\x0e\x8b\xd3\x06\xea\xd3\x8c\x2e\x29\xb6\x6e\x4b\x68\x1f\xc1\xe8\x12\xea\x47\x8c\xae\x18\xca\x61\xf6\xae\xa0\x7d\x58\xe2\x30\x3f\xaf\xc0\xfc\xc0\xfa\x11\xa3\x2d\x98\xbf\x2d\x7f\x5e\xff\x04\x5d\xb1\x15\x50\xff\x44\xf2\x0a\xd0\xf7\x13\x27\x80\xfa\x9c\xb8\x0a\xa8\x93\x89\x6b\x80\x3a\x7e\xe6\xc0\xf9\x2d\xc1\xf1\x96\xec\xf9\xfa\x26\x6e\x05\xd9\xd1\xd2\x16\xe3\x52\xc6\x41\x1c\x87\xe6\xd7\xb2\x06\xe8\xe7\x89\x5b\x02\xfd\x23\x71\x2d\xb4\xbe\x2d\x47\xfa\xf4\x85\x43\xd6\xa3\xe5\xc8\x77\x94\x48\x5f\xab\x88\xbd\x8c\x52\xe4\x7b\x2b\x71\x02\xd8\x77\x26\xae\x06\xea\xd0\x85\xc3\xf4\x42\xf1\x7c\xfe\x7e\x03\xf2\xf7\xfc\x1d\x85\x8d\x57\x63\xf6\x32\x74\x7e\x48\x5f\x10\xe0\x77\x85\x48\xdb\x2b\x2c\x0e\x38\x43\xf2\x23\x6d\xaf\x80\x7d\x5d\xe2\xa0\x3a\x94\xb8\x72\x1c\x1c\x5d\x60\xba\x00\x34\xe7\x81\x38\x6d\x9f\xfc\xd0\xf4\xc5\xf1\xe2\x46\xe8\x96\x2b\x25\xe4\x2d\x57\x32\xf4\x86\x2b\x2e\xd8\x17\x27\x8a\x01\x70\xcb\x95\x0a\xdf\x0d\x87\xea\x2d\x06\xf2\x17\x57\x15\x17\xec\x96\xc3\xd6\xa3\x2e\x06\xd4\x0d\x07\xea\xad\x51\xbd\xa0\xbd\x75\xb1\x60\x7c\x71\x0d\x38\x5e\x53\xfc\xc1\xe2\x8b\x2b\x6f\xd4\x6e\x39\x6c\x7d\x5b\x8a\xf9\xa5\x05\xe3\xaf\xfc\x61\x7e\xc3\x81\x76\xb4\x98\x1d\x8c\x62\x7a\x19\xc5\xf2\x37\x7d\x52\x40\x1c\x98\xe7\x0c\xcc\x5f\x26\x40\x3b\x04\xaa\x17\x8b\x53\x06\xe6\x25\x6b\xb0\x3a\xc9\x9a\x92\x1d\xe6\x40\x0e\xd6\xc7\xbd\xec\x8d\xf4\x71\x7b\x7f\xc8\xb0\x7e\x7a\xb6\xa6\x6d\x50\xf0\x21\x49\x82\xe1\x63\x92\x04\xc3\x07\x25\xda\xca\x8d\x1b\x43\xb4\x2a\x90\xb0\x9f\xa6\xd1\xc7\x19\xd2\xe4\xce\x1c\x8d\x72\xa4\xe8\x09\xb3\x27\x87\xd1\x47\xf3\x71\x3e\x46\x9c\x19\x7a\xdd\x9b\x8f\x87\xc3\xcb\xf5\xdc\x59\xd4\xe6\x01\xdd\x98\x11\xb3\x76\x63\xc6\x83\xf1\x18\xbb\x7d\x3c\xc1\xdf\x3e\xde\xd6\xb1\x8b\xae\x6f\x80\xd3\x6a\xbb\xe8\x4e\xc8\xa9\xb6\x5d\x40\x07\x99\x37\x58\xe9\x28\xd3\x2e\x82\xe3\xc8\x68\x7f\xb0\xe2\x68\xec\x72\x1e\xad\x4c\x20\x61\x54\x56\xf6\x33\xae\x7b\x06\x12\x17\x64\x54\x77\x71\x62\xdd\xda\x78\xe3\x94\x21\xfd\xa8\x64\xb4\xa3\x23\xbd\x3d\xdc\x9f\x58\xef\x0e\x70\xc2\xec\x0e\x70\xba\xec\x0e\x70\xb2\xf4\x1d\x23\xc7\xe3\x91\x0c\x81\xc8\x9d\xd4\xee\xfe\x1a\xc7\x79\xbe\x3e\x77\xa3\xaa\x0f\xfc\x68\x3a\xe2\x8d\x1e\x46\xa7\xc9\xf9\xac\x35\xaf\x61\x20\x8f\x77\xb4\x86\xb1\xb3\xbd\x21\x93\x9d\x0c\x91\xde\xce\x25\x51\xe6\x88\x7f\x08\x2e\x9a\x10\x67\x6f\x11\x5c\x6e\x88\x8d\xeb\xb5\x55\x46\x4e\x53\xb8\xb8\xfc\x81\xf0\xfb\xde\x94\xb1\x11\xb8\x4c\x50\x60\x32\xf1\x30\x3a\x13\x4c\x8c\xd6\x6d\xc2\xa2\x73\x9c\xa4\xb7\x3e\x63\xe2\xf9\x1b\xea\xf4\xea\x1b\xba\xab\x5f\x7c\x63\xbb\x43\x74\x4c\xde\x90\xf5\x38\xc6\xc9\x5b\x17\x27\x6f\xb4\x55\xf7\x6e\x99\xbc\x39\x58\x73\x7c\x88\x19\x2f\xf5\xa3\x9f\x73\xf7\x84\xd2\x98\x3e\xcd\x44\xfe\xc9\xb9\xfc\x02\x78\x93\xaa\x7b\x20\x47\x13\x08\xd0\xa0\x82\xda\x9a\x41\xde\x0e\x96\x89\xf9\x60\xd4\xde\x9b\x4c\xd0\x5e\x05\xeb\x5e\x86\x6d\x94\xfd\xce\xba\xcd\x37\xf9\x75\xae\xe8\x6c\x3e\xdd\x1e\xa4\xd3\xdd\x58\x6c\x27\x7f\xd8\xa3\x75\x28\xb7\x98\x26\x83\xb0\x17\xa6\x7c\xfb\xe1\x9e\x9d\x61\xdc\xdc\x25\x93\xab\x24\x73\x2d\xe4\x2a\xc9\x5c\x32\x09\xd3\xc9\x99\x38\x3b\x9f\xb3\x54\xf6\x73\x9d\xfd\x22\x37\x7b\x3f\x4e\xe6\xc9\x72\xff\x1e\xa0\xc5\xfa\x3d\xfc\x1d\x26\x93\x46\x21\x1c\x1f\xb3\x21\xc4\xd1\x1b\x25\xa3\xec\xc7\x8d\x37\x87\xcf\xbe\x71\x7e\xfc\x7b\x2f\x7b\x1b\x67\x95\xef\xfd\xc1\x9c\xc8\x51\xc6\x30\xba\x19\x26\x52\x12\x42\x4f\xe4\x8e\xe8\x93\x93\x83\x55\x24\xda\x54\x07\x67\xb7\x3a\x5f\x2f\x3c\x03\x4d\x6f\xd4\x38\x0c\xd2\xe9\xa7\x6e\x02\xd8\x8c\xbb\xbe\x48\x39\x4d\xe6\x83\x74\x29\xfd\x10\xe0\x57\x55\x89\x0c\x34\x3f\xb7\x8b\x7c\xef\xe7\x8a\x4e\x0c\x6b\xf3\x79\x37\x29\x6c\xe5\x94\xf4\x14\x7b\xec\x81\xd1\xeb\x8e\xf1\x26\x7d\x9f\x96\xd9\xec\x5b\xf9\xf1\x8d\x0f\x29\x4a\xb6\xa7\xce\x5b\x7d\xde\xed\x6c\x8d\xbf\x0f\xac\x73\x41\x7e\xdc\xec\x5e\x15\x60\xed\xe8\x0a\x63\x9d\xe8\x0a\x63\x4d\xe8\x0a\x63\xfd\xe7\x0a\x03\x55\xf3\x2f\x38\x1d\x73\xf8\xcd\xf6\xbf\x5c\x37\xef\x3e\x14\x40\xed\x25\xcd\xd7\xf4\x7e\xa8\x1b\xc5\xb4\xbf\x0a\x53\x3b\x78\x16\xff\x57\xf4\xef\x61\x19\xcb\xd2\x5e\x11\xb0\x0e\x6b\x9c\xe7\xff\x7b\x42\xec\x74\x68\x0a\xc0\xf2\x09\x72\xde\xf3\x7e\x6e\x2f\xff\x1f\x00\x00\xff\xff\x6d\x91\xbc\x18\xd8\x32\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 13016, mode: os.FileMode(438), modTime: time.Unix(1511307405, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x72\xea\x30\x10\x85\x7b\x9e\x42\x33\x34\xf7\x16\xac\x25\xc1\x40\xa0\x4c\x9f\x2a\x45\x6a\xa1\x1f\xa3\x41\x96\x3c\x5e\x19\xc7\x79\xfa\x0c\x81\x10\x3c\x89\x2c\x33\x2a\xf7\xdb\xdd\xb3\xe7\x68\x3e\x9f\x93\x43\xc0\x88\xa4\xb3\x9e\x51\xd2\xd6\x4a\x44\x4d\xfe\xb1\x4d\xc1\x68\xc1\x29\xdb\x10\xca\x76\xcb\xf5\xff\xd9\x99\x7c\x09\x8d\x26\xd6\x9b\xb0\x23\x87\x18\x6b\xdc\x15\x45\x69\xe3\xa1\xdd\x83\x0c\x55\x21\x1b\xf1\xd1\x2f\x2a\xf1\x5e\xbc\x59\xaf\x42\x87\xaf\x75\xff\xec\x82\x3c\xea\x66\x36\xa3\xf0\xf5\x08\xa5\x94\x53\xbe\x60\xe0\xa0\xbb\x50\x97\x95\xe7\x09\x03\x48\x2e\x27\x40\x46\x65\x21\xb6\xda\x9a\x3c\xf4\xb4\x65\x79\xc8\xf0\xbc\x26\x4e\xd7\xf9\xeb\x38\x53\x34\x03\x89\x16\x54\xe8\xbc\x0b\x42\x8d\x53\xa7\xd5\x14\x50\x46\xa7\xc6\xd6\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x38\xe4\x1c\x28\xed\xec\x49\x37\xfd\x08\xf4\xad\x27\x53\x4e\xcb\xd1\xd5\x59\x2d\x26\x06\x18\xcd\xe1\xda\xf4\x18\x00\xe2\x28\x94\x47\xf0\x3a\xde\xb1\xcb\x9f\x93\x14\xd6\xbf\xce\x02\x8f\x22\xca\x74\x4f\xd2\x06\x53\x82\x42\xd8\xb3\x29\xf9\x98\x72\x62\x90\xb7\x55\x43\xe4\x5e\x1d\x3a\x1c\xb7\x27\x05\xfc\x65\x0f\x46\x11\xf1\x11\x3f\xaf\x0d\x2c\x1d\xdf\x6d\x64\x92\x88\xae\x85\x49\x3f\x6d\x9a\x67\xb9\xca\xb5\x10\x9a\xf2\x33\x00\x00\xff\xff\xde\x5a\x01\x20\x0f\x05\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1295, mode: os.FileMode(438), modTime: time.Unix(1508198014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x32\x31\x10\x84\x7b\x9e\xc2\x12\xcd\xff\x17\xd9\x3b\x0e\x25\x48\x94\xe9\x53\xa5\x48\x6d\xec\xe5\xd8\xc4\xf6\x5a\xde\xe5\x0c\x79\xfa\x88\xa4\x88\x4e\x60\x22\x77\xf3\x8d\x67\x47\xb3\x5c\x2e\xcd\x81\x45\xc5\x54\x4a\x1b\x83\x27\x2d\xd6\xfc\x5b\x3d\x75\xfd\xa6\x1b\xfa\xd5\xc6\xf4\xeb\xed\xe3\xf0\x7f\x71\xf1\xbd\x70\x41\x43\x69\xcf\x5b\x73\x50\xcd\xb2\xed\xba\x91\xf4\x70\xdc\x81\xe3\xd8\xb9\x62\x3f\xcf\x0f\xd1\x9e\xba\x37\x4a\x9e\xab\xbc\xe6\xf3\x73\x60\xf7\x81\x65\xb1\xe8\xe1\xfb\x19\xeb\x94\x26\xab\xc4\x09\x24\x08\x44\x72\x85\x85\xf7\x7a\x49\xf8\x35\x65\x82\x1d\xa5\x71\x26\x3a\x1e\xee\x7c\x71\x25\x34\x88\x8f\x1e\x22\xaa\x15\x2c\x13\x39\x6c\x05\xf8\x24\x10\x65\xaf\xc9\x09\xcd\xc0\x78\x5d\x65\x84\x40\x13\xce\xa4\xc0\x23\xa5\x6b\xf9\x66\x62\x19\x7a\xa9\xef\xab\x75\x2c\x8d\x2e\x4a\x11\xa1\xfe\x8c\x38\x03\x93\x0d\xe4\xff\x5a\xaf\x7a\x97\xef\x20\x1b\xb4\x45\x6b\xbd\x3d\x41\x15\xc7\x49\xc1\xe6\xdc\xbc\xd9\x72\x00\xfa\x11\xe5\x48\x8a\x90\x50\xbf\x02\x00\x00\xff\xff\x21\x60\x66\xf5\x6d\x02\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 621, mode: os.FileMode(438), modTime: time.Unix(1500169983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x3d\x93\x9b\x30\x10\x86\x7b\xff\x0a\xcd\xb8\x49\x0a\x2f\xe2\xe3\xcc\xd8\x65\xfa\x54\x29\x52\xef\x49\x0b\x68\x0e\x69\x89\xb4\x3e\x20\xbf\x3e\x43\x6e\x72\x09\x33\xe0\x9c\x87\x8e\xe7\x79\xdf\x95\x56\xc7\xe3\x51\x75\x9c\x24\xa9\xd1\x85\x5a\xa5\x61\x56\x9f\xf2\x3a\xd3\x97\xac\xd0\x79\xad\xf2\xea\x5a\x16\x9f\x0f\x8b\xf5\x95\x23\x29\x17\x1a\xbe\xaa\x4e\x64\x48\xd7\x2c\x6b\x9d\x74\xb7\x67\x30\xec\x33\x13\xf1\xe7\x7c\xf2\x38\x65\xdf\x5d\xb0\x3c\xa6\x6f\xc3\xfc\xa5\x67\xf3\x42\xf1\x70\xd0\xf0\xfb\x53\x78\xd2\x5a\x97\x80\x27\x9f\xc8\xb6\x04\x81\xe4\x2f\xb3\x3d\x8c\x6f\xd1\xa5\xf0\xfd\xbf\xb1\x29\xcf\xab\x12\x7a\x0e\xd0\xf7\x61\x5c\x85\x16\x58\x9c\x2f\xbb\xb0\xd0\x55\x51\x41\x6f\xe6\x3d\x5a\x3e\xdd\xa3\xe7\x7c\x97\x96\xe5\x65\x9f\x55\xfb\x33\x2b\x5d\x43\x13\x71\x83\xb1\x1f\x50\x68\x32\x1d\x86\x96\x72\x90\x88\x4d\xe3\x8c\xc7\x80\x2d\xc5\xb5\x3a\x17\x90\x48\xc4\x85\x36\x81\x45\x41\xf0\xce\x44\x4e\xdc\xc8\xb2\x3a\xc0\x17\xb4\x21\xad\x22\xf6\xf9\xe9\xd1\x08\xdd\xe0\x95\xa3\xd0\xb4\xe1\xbf\x4b\x2d\xf1\xa3\xbd\xed\x38\x6d\x3e\xf4\x9f\x9a\xd3\xe8\xc2\xbd\x91\x69\x98\x03\x49\x71\x97\xd2\x2d\xf2\x40\xff\x28\x1b\xe7\x48\x3f\x3c\x08\xf5\xe4\x49\xe2\xbc\xd3\xb6\x70\xc3\xde\x63\xb0\x1f\x70\x23\x59\x06\x37\xbc\x9e\x77\x8c\xb7\x75\xfe\xef\x7e\x23\x4a\xe2\xb0\x86\xbf\x02\x00\x00\xff\xff\x06\xd3\xf0\x71\xa6\x03\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 934, mode: os.FileMode(438), modTime: time.Unix(1505651580, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbb\x6e\xac\x30\x14\x85\xe1\x9e\xa7\xb0\x44\x73\x4e\x31\xbe\x05\xc2\x88\x32\x7d\xaa\x14\xa9\x8d\x2f\x60\x05\xbc\x91\x6d\xe4\x4c\x9e\x3e\x9a\x30\x22\x89\x34\xc1\x88\x8e\xf5\xf1\x6f\xca\xb2\x44\x03\x84\x18\x50\xb2\xae\x41\xcb\xac\x44\xd4\xe8\x1f\x67\x84\xd6\x84\x53\xd6\x20\x56\xb7\xf5\xe3\xff\xe2\x0a\x9f\xc1\x6b\x64\x9d\x81\x16\x0d\x31\xce\xa1\x25\xa4\xb7\x71\x58\x3a\x2c\x61\x22\xd2\x8b\x8f\xcb\x69\x12\xef\xe4\xd5\x3a\x05\x29\xbc\xcc\x97\xa7\x11\xe4\x9b\xf6\x45\x41\xf1\xd7\x83\x28\xa5\xc2\x88\x13\xc3\x23\x4e\xab\x5a\x4f\x5e\x0b\x3f\x51\xa7\x4c\x1e\x99\x8a\x66\x11\x3b\x57\x5d\xbe\xc4\x1f\xce\x79\x54\x69\x9d\x45\x9c\x8b\xe6\x00\x92\x2c\x83\xc4\x82\x15\x24\x37\x82\x50\x3b\x4a\xc6\x51\xed\x55\xb6\xc4\x64\xa5\x87\x00\x26\xde\x9f\x77\x0a\xe1\xc8\x7f\x18\xcd\xf1\xed\xf5\xfd\x4b\xa6\xc7\x2a\xe0\x8e\x1d\x89\x6d\x85\xdf\xc4\xe9\xb8\x91\xbf\x3f\x5e\x97\xdb\x00\xbe\xff\x1e\x52\xda\x39\xfe\x19\x00\x00\xff\xff\x4d\x79\xc3\xf9\x07\x03\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 775, mode: os.FileMode(438), modTime: time.Unix(1495446680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x31\xaf\x9b\x30\x10\x07\xf0\x3d\x9f\x02\x29\x4b\x3b\xc4\xd8\x86\x00\xc9\xd8\xbd\x53\x87\xce\x57\x73\x10\xeb\x61\x9b\xda\x97\x47\xe8\xa7\xaf\x68\xa5\xaa\xe8\xc5\x17\xb1\xf1\xfb\xfb\x38\xfd\x25\x7c\x3c\x1e\x8b\x5b\x48\x94\x8a\xc5\xfa\x4e\x15\x69\x5e\x8b\x4f\x5a\x97\x4a\x95\x5a\xaa\xb6\x90\xf2\x5a\x35\x9f\x0f\x5b\xec\x6b\x88\x58\x58\x3f\x84\x6b\x71\x23\x9a\xd3\xb5\x2c\x47\x4b\xb7\xfb\x0f\x61\x82\x2b\x4d\x84\x5f\xeb\xc9\xc1\xa3\xfc\x6e\x7d\x1f\x96\xf4\x6d\x5e\xbf\x4c\xc1\xbc\x61\x3c\x1c\xa4\xf8\xf3\x14\x70\x92\x52\x2a\x01\x27\x97\xb0\x1f\x51\x78\xa4\xbd\x69\xc6\x2a\xc6\x6a\xc6\xce\x8c\x35\x8c\xb5\x8c\x75\x8c\x5d\xf2\xa6\x24\x63\x4c\x2f\x2a\xdb\xcb\x93\x97\xa6\x4f\x4a\xeb\x4e\x4c\xc1\x8b\x69\xf2\xcb\x47\xac\x6b\x06\x9b\x33\x83\x6d\xc5\x60\xc7\x9d\xec\xda\x2c\x6a\x59\xcb\x5a\x4c\x66\x7d\xae\x4a\xeb\x4b\xfe\xac\xd2\xe7\x86\xd3\x36\x5f\x84\x56\xba\x53\x59\xad\xaa\x4b\x76\xa7\x4e\xe5\xa6\x06\x37\x03\xe1\xc3\xdc\xc0\x8f\xa8\x04\x45\x18\x06\x6b\x1c\x78\x18\x31\xee\xa2\x78\x17\xef\x21\x12\x3e\x44\x0f\x04\xc2\x59\x13\x43\x0a\x03\x6d\x7f\xd3\xbf\x50\x42\x22\xeb\xc7\x74\x5a\xac\x67\x73\xf3\xea\x91\x34\xab\x30\x11\xeb\x78\x8f\x61\xc6\xff\x22\xf0\x06\xbd\x4f\xbb\xa5\xd3\x4f\x27\x08\x27\x74\x48\x71\xcd\x4d\x23\xa0\x34\xa0\x16\xf7\xb9\x07\xc2\x57\xa9\x25\x65\x12\xdb\x77\xb8\x02\x37\x37\xc1\x39\xf0\xfd\xcb\x9d\xfe\x36\xfd\xaa\xc5\xed\x0a\x14\x76\x7e\x6f\xf6\xfe\x3b\x00\x00\xff\xff\x5f\xec\xf3\xd9\x24\x05\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1316, mode: os.FileMode(438), modTime: time.Unix(1511307410, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\xbf\x6f\xea\x30\x10\xc0\xf1\x9d\xbf\xc2\x12\xcb\x7b\x03\xce\x5d\xe2\x10\x60\x7c\xfb\x9b\x3a\x74\x76\xfc\x23\x44\x4d\x62\x1a\x9b\xa6\xf4\xaf\xaf\x52\x10\x12\x12\xcd\x9d\xd8\xf0\x27\xdf\x73\x62\xaf\xd7\x6b\x71\x0c\x31\x45\x31\xb5\xc3\x0e\xc5\xf9\x64\x75\x72\xe2\x0f\x56\x19\x42\x96\x03\x56\x02\xf0\x50\x6c\xff\xae\x66\xf9\x3f\x8c\x4e\xb4\x83\x0f\x07\x71\x4c\xe9\x14\x0f\x59\xd6\xb4\xe9\x78\xae\xa5\x09\x7d\x66\x46\xfd\x75\xd9\xf4\xfa\x33\x7b\x6d\x07\x1b\xa6\xf8\x72\xba\xfc\xeb\x82\x79\x73\xe3\x6a\x05\xf2\xe7\x27\x00\x00\x54\xb1\x41\xd9\xc9\xe9\xaa\xae\x23\xe7\xc2\x03\xda\x22\x03\xf9\x9c\x83\xf6\x34\x52\xda\xd2\x68\xbf\x63\x94\x6a\x07\x34\x32\x60\x48\x84\x00\x15\x8d\x10\x19\xa5\xca\x94\x34\xd2\x3b\xfa\x58\xd0\x58\xc6\x38\x0b\xf4\x77\x42\x8b\x9e\x81\x14\xa3\xe4\x80\xf1\x76\xbe\xae\x49\x94\x17\x7b\x45\xa3\xb2\x76\x04\xd2\x67\x69\xc3\x34\x74\x41\xdb\x65\xf5\xa1\x38\xb0\x6e\x66\xa8\xa5\xed\xe4\x14\x65\xdf\x9a\x31\xc4\xe0\xd3\x13\xe3\xfa\x65\x83\x9c\x10\x72\x4a\x39\xa7\x94\x73\x4a\x05\xa7\x54\x70\x4a\x8a\x53\x52\x9c\x52\xc9\x29\x95\x74\xc9\xa4\xce\x2e\x5d\x14\xc6\xe1\x7b\x97\xcb\xdb\xdf\xcf\x67\xcc\x60\x7a\x5f\x5a\xfc\x6d\x77\xbe\x61\x5e\xc0\xfb\xe3\x8f\x64\x70\xe9\x4e\x62\x17\x97\xb7\xc9\x9b\x44\xad\xdc\x16\xc2\xd8\x7c\x07\x00\x00\xff\xff\x9e\x02\x25\xa9\xb9\x06\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 1721, mode: os.FileMode(438), modTime: time.Unix(1508198023, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1495292715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xc1\x72\xdb\x3a\x0c\xbc\xe7\x2b\x3c\x93\xcb\x7b\x07\xc1\x71\xf2\x5e\xa6\x93\x99\x5e\x7a\xef\xf4\xd0\x43\xcf\x34\x09\x49\x18\x8b\x00\x43\xc0\x96\x95\xaf\xef\xd0\x71\xe3\x5a\x11\xdb\x1c\xc5\x5d\x82\xd0\x72\x17\xbc\xbd\xbd\x5d\x49\x42\x1e\xb3\xad\x46\xe2\xcd\xdd\x0a\x8f\x96\xdd\xea\x9f\x35\x9a\x5f\x07\xd6\xe8\xf4\x19\xbc\x70\xfb\xef\x4d\xe1\x7e\x95\x8c\x2b\xe2\x56\x9e\x56\xbd\x59\xd2\xa7\xf5\xba\x23\xeb\xf7\x5b\xf0\x12\xd7\x3e\xbb\x97\xa9\x89\xee\xb8\xfe\x41\x1c\x64\xd4\xef\x69\xfa\x32\x88\xdf\x61\xbe\xb9\x51\xcc\x07\xcc\x9f\xd7\x8e\x75\xc4\xac\x10\xc9\x67\x51\x69\xed\xb4\xf5\x02\xa7\xa4\xa0\xbb\x29\xe1\x6c\x3d\x2b\x68\x74\xd9\xd4\x67\x44\xae\x6e\x7f\x79\x78\xdc\x7c\xda\x3c\xc2\x41\x20\x2a\x7a\x0e\xc0\x68\xbf\xe3\xff\x6f\xee\x1f\x1e\xfe\xab\xe1\xdb\x41\xb6\x30\xa2\xb3\x1e\x73\xed\x0c\xef\x38\x4c\x3e\xef\xb5\x57\x09\x0e\x76\xc4\xdd\x8c\x10\xb8\x68\x66\xc8\x06\x29\x4b\x00\x1f\x15\xa2\xf2\x7b\x96\x30\xb2\x18\x5e\xf7\xe0\x7b\x21\x8f\xd5\xd3\x17\x50\x60\x75\xe6\x67\x55\x06\x42\xb6\x46\xa1\x73\x86\xa3\x9b\x20\xa2\x2a\x72\x87\x19\x06\x3a\xcc\xd4\x7d\x25\xc3\xc8\x0a\xe3\xeb\xd5\x2d\xe1\xc5\x07\xd4\x41\x72\xaa\x49\xb2\x5d\x9f\x17\x30\x0d\x32\x81\x9a\x33\xf2\xe0\x76\x2e\x3a\x32\xf4\x3d\xcb\x20\x1d\xe1\xac\x60\xc0\x43\xf9\x0b\xb7\xb7\x1e\x8e\x5b\x39\xbe\x6f\x29\xc4\x00\x11\xcd\x95\x6f\xf2\x58\x35\x4c\xe0\xa2\x6d\x6b\xec\x95\xae\x91\x16\x31\x6c\x9d\xdf\x5d\x76\x36\xbd\xf4\xb1\x42\x52\x74\xd9\xf7\xb5\x53\xde\x68\x8b\xf2\x74\x0b\x92\x52\xec\x1a\x6d\xa2\x72\x53\x2e\xe8\x55\x8f\x17\x9c\xd9\x8d\x58\x29\x60\x4e\xc5\xed\x83\xec\x83\x4b\xe9\x9a\x30\x90\x47\xd6\xe2\xb0\x98\x6a\xbd\x15\x7d\x79\xa1\x83\x08\xbd\x58\x74\x34\xcc\x96\x31\x90\xcb\x18\x28\xa3\xb7\x5a\xcd\x65\x45\xa5\x6d\xc9\xe3\xd9\x2c\x95\x9d\xc2\xbf\x08\xda\x1e\x21\xea\x05\x49\x99\x3c\x0e\xa4\xb6\x94\xef\x64\x04\x6a\x92\xab\xbe\x7f\xde\x63\x9e\x2e\x71\xca\xd5\x06\x32\x76\xa4\x86\x19\x7c\x48\xbe\x6a\x9b\x8f\xe5\x42\xef\xe0\x3e\x06\xbe\xbe\x13\xfd\xb6\xb4\x78\xb6\xcf\x3c\xe5\x8a\x66\xc4\x9d\x36\xaa\x43\xc5\xe9\xe7\xc8\x2c\xd4\x34\xc9\xae\xc3\xa5\xbe\x8a\x52\x0d\x45\xd7\xa1\x82\x36\xb5\x7f\x2c\x2c\x0c\x1d\xb6\x01\x82\x1e\xff\x60\x21\xa3\x01\x9b\x73\xd2\xfe\x36\xfe\x8c\x22\x2e\xc7\xc0\x76\xf7\x90\x06\x7b\x2f\xc2\x9e\x96\xae\x7c\xff\xb1\x91\x3e\x06\x5f\xed\xbb\x60\x6e\xa8\x5a\xe1\xf4\xa4\x35\x56\xbc\xa2\x45\x87\x6b\x79\x47\x2d\x43\x1a\x4e\x2f\x4e\xad\xc0\x38\x9e\x86\x8b\x17\x66\xf4\x66\xa8\x15\xc2\x5b\x56\x7e\x06\x00\x00\xff\xff\xd8\xa0\x52\x6d\x52\x07\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1874, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x52\xdb\x30\x10\x06\xe0\x7b\x9e\x42\x33\xb9\xb4\x07\xff\xd6\xae\x56\x92\xcd\xad\x6d\x68\x27\x87\x02\x63\xe8\x70\x0e\x89\x29\x69\x43\xec\xb1\x95\x09\xf4\xe9\x3b\x86\xb6\xd0\x93\x96\x73\x3e\xed\x6c\xfe\xd5\xca\xf3\xf9\xdc\x74\x7d\xbb\x3f\x0e\xc9\x1c\xb7\x7b\xb2\xa6\x7d\x48\xc3\xca\xbc\x2b\xdb\xb4\x2e\x6f\xb7\x43\x7b\x5c\xed\x76\x38\x8c\xed\xf0\x7e\x36\xe1\xaf\xdd\xd0\x9a\xed\xfe\xb6\x3b\x31\x77\x29\xf5\xe3\x49\x59\x7e\xdf\xa6\xbb\xc3\x0d\xd6\xdd\x7d\xb9\x1e\x56\xbf\x1e\x8b\xfb\xd5\x43\x79\xbd\xdd\x6f\xba\xe3\x78\xd9\x3f\x7e\xdc\x75\xeb\x9f\xed\x30\x9b\xcd\x4d\xbb\xbf\xed\x86\x75\x6b\x86\xee\x90\xda\xc1\x2c\xce\x2e\x67\xdb\x3e\xad\x6e\x76\xed\x68\x8a\x64\xf6\xab\x64\x8a\xa5\xb9\x68\x4e\x9b\xf3\x6f\x57\xcb\xb3\x2f\xa6\xe8\x4d\x5a\xf7\xa6\x28\x36\x7d\x37\x24\xe3\x9d\x29\x7e\x98\xe6\x74\xb1\x6c\x4e\x3f\x5d\x99\xa2\x48\x5d\x31\xfd\x30\x1a\xef\xf2\x95\x0e\x1b\x65\xa5\xd9\xdc\x0c\x87\x5d\x3b\xbe\x2a\xb9\x34\x9f\xcf\x9b\xeb\x0f\xcd\x62\x3a\xb6\x68\xce\x2f\x4c\xb1\x31\xe4\x50\x59\x10\xc3\x8b\x82\x92\x8d\x70\x20\xae\x94\x96\x09\x6c\x6d\x0e\xb3\x43\x1d\x41\xb1\x02\x45\x97\xc3\x62\x11\x23\x98\x05\xd9\x26\x5e\x28\x91\xd6\x7a\xb0\xa8\x0b\x07\xd8\x92\xb3\xb9\x89\x45\x6d\x41\x2e\x80\xb3\x51\x88\x05\x59\x82\x84\x29\x0e\x0d\x26\x01\x0b\x81\x44\xf3\x0f\x89\x2a\x90\x75\x88\x1a\xcb\x11\x24\x8c\x18\x72\x38\x08\x04\x5e\x54\x59\x04\x0f\xcf\x20\x6b\x15\x23\x79\xb1\x75\xf6\x56\xfc\xb5\x95\xba\x0b\xff\xa4\x59\x55\xd9\x83\x3d\x43\xb2\x96\xac\x40\x2c\x98\x2c\x1c\xab\xb0\x3c\x6d\x5f\x54\xe3\x0a\x8a\xdd\xfb\x67\xc9\xaa\x5a\x66\x92\xe7\xfb\x9c\x1d\xc9\xb3\xf6\x20\x09\x9a\xc5\x26\x47\x60\xef\xe0\x04\xec\xd4\x3a\x90\x6a\x88\xe4\x04\x14\x2d\xa8\xf2\x88\xf9\xe2\x3e\x3e\xcd\x7c\x3a\xe4\xb2\x57\xfa\x3f\x9d\x0f\xfc\x95\x16\x7d\x27\x5e\xf5\x90\x86\x0a\xc1\x81\x2a\xc4\x3a\xfb\x8e\x5a\x41\xac\x41\x75\x54\x05\x38\x71\x9a\xb6\x46\x08\x2c\x0a\x1e\xa7\x77\x29\x4e\xbb\xa0\xb4\xd3\x53\xc6\x8a\xb6\x9f\xb1\x77\x20\xef\xb5\xba\x9e\xc2\x7e\x03\xe6\xb7\x54\x76\xd9\xbd\x79\x85\xf3\x23\xff\x83\x79\xfa\xd0\xa9\x7a\x0e\x15\x28\x04\xb0\x97\xdf\x01\x00\x00\xff\xff\x6e\xee\x77\xb8\xdd\x08\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 2269, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9b\xcd\x72\x2b\xa9\x15\xc7\xf7\xf3\x14\xae\xba\x9b\x64\x21\xcc\x47\xb7\xa4\x9e\xaa\x6c\xb2\xcf\x2a\x8b\xac\x69\x40\x12\xe5\x6e\x1a\x03\x92\xac\x3c\x7d\x0a\x49\xd7\x96\x65\x1a\xfd\x95\x99\xd5\x2d\x9d\x5f\x03\xe7\x70\xbe\x30\xcc\xaf\x5f\xbf\x5e\x26\x6f\xdc\x31\xa4\x97\xa3\x75\x8c\xbe\x44\x7f\x7a\xf9\xdb\xab\x49\xea\x55\xbb\x38\xca\xf8\x4e\xd4\xe4\x36\x7f\xff\x23\x93\xff\x9a\x82\x79\xb1\x6e\x33\xfd\xf9\xb2\x4b\xc9\xc7\x3f\x5f\x5f\xb7\x36\xed\xf6\x3d\x51\xd3\xf8\xaa\x82\xfc\xef\x69\x31\xca\x8f\xd7\xff\x58\xa7\xa7\x63\xfc\xb7\x3f\xfd\x73\x98\xd4\x9b\x09\x7f\xfc\x11\x4d\x38\x98\xf0\x8f\x57\xb9\xa0\x94\x32\x22\x17\x63\x34\x7a\x6b\x88\x33\xe9\xf5\x5e\xa8\xd5\xbc\x94\xd7\x3e\x15\x35\x61\x53\x13\xb6\x35\xe1\xb2\x26\x5c\xd5\x84\xeb\x9a\xb0\xab\x08\x19\xad\x09\x6b\xf6\x63\xf3\x16\x2a\xfe\x4a\xa4\x8e\x8c\x8c\xd1\x9d\xf7\xf0\xfb\xef\x9c\x8c\x51\xea\x58\xf8\x82\x97\xbe\x08\x52\x17\x7e\x56\xa2\xf4\x63\xb2\x07\x9b\x4e\xe4\x78\xf1\x94\x3b\xa9\x76\xe6\x63\x7f\x3f\xad\x76\x1f\x3f\xb8\x58\x18\xfa\xa2\xce\xcf\x65\x97\xd5\xb4\xda\x47\x22\x93\x1e\xd3\x9d\xe0\x4d\x2e\x94\x76\x0b\x17\x89\xd4\xc9\xa8\x1d\xd1\xe6\x46\x1a\x82\x3c\x31\xca\x16\x3e\x4c\x9a\xe8\x89\xe8\xe8\xc9\xe8\xc9\x68\x55\x98\xe2\xb4\xb9\x1f\xec\x82\xf3\xe7\x70\xf1\x1c\xde\x3c\x83\xf3\xe7\xd6\xce\x9f\x5b\x3b\x7f\x6e\xed\xfc\xb9\xb5\x37\xcf\xad\xbd\x79\x6e\xed\xcd\x73\x6b\x6f\x9e\x5d\x7b\xfb\x1c\xbe\x7c\x0e\x5f\x3d\x87\xaf\x41\xbc\x9f\xc9\x12\xfd\x6c\x96\xe8\xcb\xd9\xa0\xb7\x6e\x7b\x0e\xdb\x99\x79\x06\x21\x28\x5b\x48\xc2\x74\x38\x14\x45\x6a\x5e\xb4\x2d\x89\x1c\x13\xb4\x59\x98\x39\xd1\xb2\x3c\xd7\x45\x54\xf9\xaa\x3c\x17\xef\x17\x6a\x0a\xe7\xfa\xe6\x2d\xf1\xf9\x1f\x35\x4c\x60\x58\xf3\x00\x3b\xba\xc8\xc8\xd1\xc5\x72\x32\xed\x9d\xf0\xd0\xaa\x44\x54\x3b\xca\x29\xe5\x5c\xf0\x75\x65\xbc\x48\xf2\x3f\xad\xdb\x2e\xe2\xe9\x5e\x76\x9a\xdf\xbe\xd3\xfc\xf6\x5d\x44\x25\x6b\xab\x6a\x43\xa0\x4a\x89\x5b\xfd\x74\x3a\x25\x49\x32\x83\x19\x4d\x0a\xa7\x39\xcf\x53\x52\xed\x0c\xd1\x32\xc9\x51\x86\x54\x56\x5d\x69\x57\x9c\x51\x47\x4e\x9b\x55\x4b\x06\x75\x22\xc3\xe0\x8e\x77\xab\xd4\x91\x2f\x89\x1c\x63\x47\xc6\x68\x94\xfb\x21\x6d\xda\x6e\xfe\xd3\x6e\xd9\x92\x61\x72\x25\xe1\x8e\x01\xfb\xfa\x49\xf1\x3a\x35\xbb\x3b\x57\x51\x71\x77\x76\xb3\x71\x77\x16\xf1\xf9\x01\x79\x79\xc0\x69\xf4\x32\x99\x0f\xb5\x93\x6e\x6b\x88\x1a\xa6\xbd\x96\xde\xdf\xe9\xfd\x0d\x62\x24\x05\xb9\xd9\x58\x35\x4a\x27\xb7\x26\xdc\xb3\x2e\x59\xb7\xdf\x8f\x44\xcf\x27\x1d\x35\x05\x4f\x62\xaa\xca\xcd\x47\x22\x63\xb4\x49\xea\x4d\x24\xdb\xa1\xd7\x2e\xa7\xbd\x19\xde\xe3\x9d\x81\xf2\x78\x25\x56\x1e\xaf\x7c\x2a\xa7\x04\xaf\xc8\x81\x66\xa7\xfd\x66\x13\xdd\x0b\xf9\xbe\x2f\x39\xb2\xee\xc5\xd1\x45\x4e\x59\xfe\x6f\x3e\x03\xe8\xbe\x8d\x6a\xc7\x28\x63\xb9\xdb\xe4\x28\xb8\xc2\xc0\xb5\x00\xa7\x5e\x8b\x16\x03\x3b\x06\x4e\xdd\xd5\xf2\xde\x0d\x98\xd5\x01\x41\xd0\x3c\x8c\xf2\x06\x04\x41\xf3\x30\x2a\xd0\x11\x1b\x74\x8d\x0d\x38\x22\x6b\xb0\x9d\x61\x9c\x76\x20\xc8\x41\xad\x39\x6a\x1e\x2e\x30\xa7\x60\x02\xf4\x1e\x26\xd0\x2d\x14\x42\xa0\x20\x38\x62\xc3\x40\x3b\x36\x7c\x89\x82\xa0\xd6\x8d\xa0\x20\x88\x3a\x45\x0b\xe6\x1e\xd6\xa2\x5a\xb7\x60\xa6\x60\x6d\x03\x4e\xbd\x6c\x40\xad\x57\xa8\x32\x2b\x01\x2a\xb3\x42\xed\xb8\x66\xa0\x9b\xad\x51\xa7\x40\x33\x2e\x5b\xa3\xc1\xb5\x46\x53\x4a\x47\xc1\x11\x3b\x86\x8e\x08\x1a\x9c\x53\x86\x69\xcd\x29\x98\x29\x38\xe5\xe8\x88\x02\x4b\xcd\x9c\x62\x29\x25\x27\x71\xa8\xc4\x65\x10\x32\xcf\x39\xdb\x63\x20\xa7\x30\x08\xf9\x63\x2e\xae\x90\x1d\x73\x71\x05\x41\x81\xed\x35\xa3\x82\x83\x06\x17\xe8\x1a\xab\x87\xae\x6f\x60\x83\x4e\x8d\x6a\xdd\x50\x70\xc4\x46\x80\x6b\x6c\xb0\x9e\x82\xd1\x16\xeb\xa4\x18\x6d\xb1\x82\xc4\x68\x8b\x86\xc2\x92\x81\xca\x2c\xb1\x26\x2e\x83\xa0\xe3\x2e\xb1\xc2\xce\xe8\x8a\x82\x5b\xb8\xc2\x9a\x0f\x46\x57\x58\xe5\x62\x74\xcd\x60\x10\xd4\x7a\x8d\x35\x71\x19\x04\x0d\xbe\x46\x63\x06\xac\x5c\x8c\x76\x68\x5c\x77\x1c\xc8\x8f\x82\xae\xd9\x1a\xc9\x8f\x22\x1b\x07\x69\x15\x32\x28\x90\x1c\x9e\xc1\x06\x49\xa4\x19\x5c\x22\xc9\xfe\x0c\xa2\x6b\x5c\xa1\x23\xae\x18\xb0\xd7\x19\x5c\x63\xca\x74\xb4\x03\xc1\x1c\x87\x18\xc8\xb1\x35\x76\x6c\x89\x74\x00\x19\x5c\x21\x75\x26\x83\x1d\xb6\xd7\x1d\x87\x0a\xfb\x05\x84\x76\xa6\xe3\xd0\xe1\x4c\xe4\xb3\x30\xa4\x35\xa3\x14\x3a\xc5\x65\x50\x20\xad\x6b\x06\x5b\x24\x49\x5d\x40\x70\x6a\xcc\xc3\xcf\xe7\x42\x24\xae\xcf\x87\x33\x70\xc4\x16\xd4\x9a\xc1\x6b\x84\xca\x87\x40\x8f\x29\x22\xb7\x66\xa0\x53\x70\x06\xc5\x4c\x6e\xcd\x90\xb6\x30\x83\x58\x92\xca\xe0\x03\xa7\x38\xba\xc8\x74\x8d\x58\x9e\x87\xe2\xb4\x7b\xf4\xe7\xad\x2f\x90\xd7\x5b\xa8\x5b\xb0\x1a\xa7\xb7\x60\x55\xdd\x1b\xb0\xbe\x77\x5f\xa0\xa8\x7b\xc3\x2d\x58\x4d\x8c\x37\x20\x3c\x75\xdd\xb5\xbf\xc0\xa6\xbe\x77\xb7\x20\xb8\x33\x6d\xdd\xbf\x6e\x40\x74\xea\x16\x9e\x1a\xd5\xba\xad\xe7\x92\x2f\x70\x89\x8e\xb8\xac\xff\x6d\xe4\x0b\x7c\xd0\xe6\xdd\x82\xe0\x5e\x77\x14\x34\x4f\x87\xfa\xe3\x83\xc3\xff\x0d\x88\x2a\xd3\x81\xca\x30\x0a\x4e\xcd\x28\x18\xd7\xf9\x84\x82\x81\x68\x02\x60\x68\x5c\x33\x81\x2a\x23\xe0\xa9\x41\xc7\x65\x68\xb8\xb2\x25\x98\x48\xd9\xb2\xaa\x8c\x39\x90\x83\x0d\x69\x2f\x07\x23\x43\xda\xdd\xdd\x80\x6c\x1e\xdf\x07\x6a\x2b\xb7\x6e\x8a\xc9\xaa\x48\xe2\xde\xfb\x29\xa4\x79\x34\x2a\xfc\xc6\x27\xd3\xf8\x9d\x4f\xa6\xf1\x5b\x1f\x53\xbc\x11\x35\xca\x91\xba\x41\xcc\x9e\x1c\xa6\x90\xcc\xc7\xf9\x02\x74\x6e\xf4\xcd\x60\x3e\x7e\x5e\xae\x6e\x66\xef\xcd\xb6\x3f\xe1\xad\x99\x40\x55\xb6\x66\x3a\x98\x00\xc2\xbb\xc2\xd3\x84\x5d\xe1\x89\x92\x5d\xf4\xc3\x12\xb9\x0d\xb7\x8b\xfe\x04\x5d\x9b\xdb\x05\x76\x0d\x7b\xc3\x55\x2f\x62\xed\x22\x3a\x0e\x8d\xf7\xc9\xd5\xc7\x63\x97\xdb\x7a\x65\x22\x89\x93\xb2\x72\x98\xb3\xe1\x23\x92\xb8\x28\x93\xfa\xee\x37\xd6\x6d\x4c\x30\x4e\x19\x32\x4c\x4a\x26\x3b\x39\x32\xd8\xc3\xdd\x2d\xfd\xdb\x01\x0f\x8e\xb7\x03\x1e\x1a\x6f\x07\x3c\x30\x86\x9e\x91\xe3\xf1\x48\xc6\x48\xe4\x9b\xd4\xee\xee\xb1\xca\x79\xd1\xa1\xf8\x9c\x6c\x88\xfc\x68\x7a\x12\x8c\x1e\x27\xa7\xc9\xf9\xae\x78\x66\x92\x91\x14\xde\xa8\x8d\x53\x6f\x07\x43\xbc\xf5\x86\xc8\x60\x67\x83\xab\xf4\xbe\x61\x8c\x2e\x99\x98\xe6\xdf\x5b\x5c\x9e\xc9\x4d\x9b\x8d\x55\x46\x7a\x1f\x2f\xd6\xff\x89\x84\xfd\x60\x1e\x70\x13\xf2\x48\xa2\x02\x95\xdc\x63\x72\x26\x9a\x94\xac\xdb\xc6\x45\xef\x38\xc9\x9f\xfd\x76\x11\xe0\x13\x75\x7a\xfa\x13\xdd\xb7\xcf\x7e\xb2\x7b\x83\x66\xf1\xc1\x90\xcd\x34\x25\x1f\xac\x4b\x3e\x18\x6d\xd5\x9d\x71\x7c\x30\x07\x6b\x8e\x3f\x5d\x28\x48\x5d\x30\x78\xf1\x79\x54\x1e\x37\xe4\xe5\xc8\xcf\x58\x9c\xd9\x8a\x60\x72\x49\x8a\xe4\x68\x22\x41\xea\x59\x54\x3b\x33\xca\xdb\xe1\x4a\x81\x10\x8d\xda\x07\x53\xf2\xe3\xab\x64\x33\xc8\xb8\x4b\x72\x78\xb3\x6e\x7b\x0f\x5c\x17\x0c\xaf\xe8\xf7\x0e\x44\xe9\x74\x3f\xd5\x6b\xcf\x27\x7c\xb4\x6e\xe1\xbd\x81\x61\x08\xbc\x40\x0f\x9e\x75\x7c\x87\xe7\x20\x37\xfb\x90\xe6\x2a\x2a\xbd\x7b\xb9\x8a\x4a\x0f\x69\xa2\x3f\x39\x93\xe6\x17\x75\x16\xcb\x61\xb6\x39\xb9\x00\x66\x1f\x26\x6f\x1e\x6d\xfe\xfb\x88\x6d\xdc\xfb\xf8\x97\xa0\x52\x78\xc5\x78\x2c\xc4\x48\x4c\x53\x30\x4a\x26\x39\x4c\xdb\x60\x0e\xbf\x6b\xcc\xf9\xe7\xf7\xbd\x1c\x6c\x9a\x9f\x7f\x1f\x0e\xe6\x44\x8e\x32\xc5\xc9\xcd\x41\x89\x92\x18\x07\x22\xdf\x88\x3e\x39\x39\x5a\x45\x92\xcd\x99\x72\xbe\x53\xfa\xfa\xe2\x21\x69\x06\xa3\xa6\x71\x94\x4e\x3f\xb6\x16\x00\x97\xac\xf6\x85\x4a\xef\xcd\x07\xe9\x73\x54\xce\x10\x95\x99\x2f\xc0\x3e\xcc\x26\x9b\x14\x37\xe6\xf7\x3b\xab\xb8\x93\x3e\x4f\x53\x2f\xb8\x07\x46\xaf\x2d\xe5\x4d\x10\x3e\xce\xb2\xc5\xcf\x66\x66\x30\x21\x66\x67\xd8\x9d\xfa\x60\xf5\xb9\x07\xda\x99\x70\xe7\x40\xe7\x84\x5c\x68\x89\xaf\x73\x80\x45\xe9\x4a\x83\xf5\xe8\x4a\x83\xa5\xe8\x4a\x83\x55\xe8\x4a\x23\x19\xf3\xff\xb1\x3e\x68\xf9\x9b\xa3\xc2\x83\x9c\xf9\xed\x54\x81\x2e\xa0\x3a\xf9\x35\xa0\x7f\xe6\x8a\x7a\xa4\x5f\xa5\xb9\x72\x3c\x0c\x89\x2b\xfb\x17\xb9\x92\x7e\xb9\x93\x44\x74\x04\x2b\xe8\xf9\x7f\xd8\x21\xd6\x1f\x96\x35\x62\xf5\x88\x39\xf7\xc5\x9f\xdd\xe7\xff\x02\x00\x00\xff\xff\x81\xbd\x36\x37\x12\x34\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 13330, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x99\x4d\x73\x13\x47\x10\x86\xef\xfe\x15\x53\xe5\x4b\x72\x50\x6b\xba\xe7\x9b\x5b\x12\x93\x94\x0f\x01\x4a\x90\xe2\x6c\x6c\x11\x9c\x18\x4b\x25\xad\xcb\x21\xbf\x3e\xd5\xb3\xbb\x96\xb8\xa4\xdf\x3d\x08\x0e\x3c\x4c\xbd\xd3\xdf\x3d\x7b\x79\x79\xe9\x76\xfb\xed\xe3\xf3\x61\x70\xcf\xf7\x8f\xec\xdd\x71\xff\xcd\xfd\xb0\xde\x0e\xb7\xeb\xcf\xf7\x87\xed\xf3\xcd\xc3\x03\x3d\x1d\xb7\x87\x1f\x2f\x14\xfd\x7d\x77\xd8\xba\xfb\xc7\xcf\xbb\x57\xee\xcb\x30\xec\x8f\xaf\xd6\xeb\x3f\xef\x87\x2f\x4f\x9f\xe8\x76\xf7\x75\x7d\x7b\xb8\xf9\xf7\xdb\xea\xeb\xcd\x3f\xeb\x8f\xf7\x8f\x77\xbb\xe7\xe3\xfb\xfd\xb7\x9f\x1f\x76\xb7\x7f\x6f\x0f\x17\x17\x97\x6e\xfb\xf8\x79\x77\xb8\xdd\xba\xc3\xee\x69\xd8\x1e\xdc\xd5\x9b\xf7\x17\xf7\xfb\xe1\xe6\xd3\xc3\xf6\xe8\x56\x83\x7b\xbc\x19\xdc\xea\xda\xbd\xdb\xbc\xde\xbc\xfd\xe3\xc3\xf5\x9b\xdf\xdc\x6a\xef\x86\xdb\xbd\x5b\xad\xee\xf6\xbb\xc3\xe0\x52\x70\xab\xbf\xdc\xe6\xf5\xd5\xf5\xe6\xf5\x2f\x1f\xdc\x6a\x35\xec\x56\xfa\x0f\x47\x97\x82\x7d\xd2\xd3\x1d\x78\xd2\xc5\xa5\x3b\x3c\x3d\x6c\x8f\x67\x47\x5e\xbb\x5f\xdf\x6e\x3e\xfe\xb4\xb9\xd2\xff\x76\xb5\x79\xfb\xce\xad\xee\x1c\x07\xca\x95\xaa\x50\x05\xc9\x4a\x2c\x0d\x60\x4b\x26\xe1\x4a\xcc\x05\x85\x1b\x71\x63\x1c\x16\xf6\x08\x5c\x89\x4b\x21\x8e\x11\x84\xab\xa7\x86\x1e\x5c\x33\x49\x02\x0f\x96\xe0\x89\x03\x04\x37\x92\xd0\x28\x23\x56\xae\x4c\x89\xbe\x0b\x9c\xff\x23\x1b\x49\x14\x80\x65\x5f\x28\x51\x45\xcc\x30\xa1\x66\xf4\x48\xa0\x56\x28\x33\x71\x30\x03\x62\x64\xc5\x37\x6a\x10\xdb\x88\x3d\xb1\x19\x3a\x33\xda\xc8\x0e\x86\x13\x9b\x51\x96\xb3\xfe\x40\x58\x98\xc4\x23\x97\x63\x2f\x14\x49\x6c\x17\x4f\xac\x30\x21\x82\x15\xe5\x94\x88\xa3\xe9\xe4\x4e\x07\xe2\x2a\xc4\x62\xde\x2f\x7a\xad\x12\x22\xaa\xc4\x0c\x35\x85\x1b\x45\x4f\x9c\x4c\x5b\x8c\xac\x70\xa6\x62\xda\xe2\xc4\x4a\x32\xc3\x62\x86\x2b\x65\x50\xf0\x58\xaa\x50\xc5\x22\x1a\x47\x00\x5c\x3c\x89\x78\x92\x68\x26\x93\xc2\x99\x98\xb8\x20\xfe\x50\x54\xec\xa8\x78\x21\x19\xb2\x43\x29\x24\x52\x29\x22\x66\x98\xd8\xba\x80\x6d\xa8\x86\xa0\xe6\x45\x9c\x5c\x35\x86\x1b\x45\xc4\x15\xac\x05\x93\x24\x25\x90\x65\x4f\x05\xf1\x5a\x67\x99\x1a\x12\xc1\x9d\x8d\xc4\x09\x15\x2c\x82\x79\xa3\x5f\x2e\x02\x5d\xa3\xb3\x91\x38\x6a\x14\x9b\x75\xa2\xd3\x89\x18\xa8\xae\x1d\xed\x4d\x99\xc4\x2e\x40\x33\x9d\x98\xec\xc9\x43\x61\xe1\x7e\x34\x57\x33\x86\x92\x92\x4c\x41\xc8\xae\x13\x49\x88\x43\x25\x8e\x48\x20\x9f\xc3\xa6\xe6\x33\x18\xf0\xb6\xd2\xda\x47\x13\x49\x34\xd3\xbf\xc3\xdd\xca\x14\x4c\x7f\x9f\xc1\xa0\x0c\x85\xb5\x93\x99\x79\x32\xd3\x09\x09\x8f\x0e\x97\x5e\x39\x01\x17\x9e\x60\xb6\xc3\xff\x85\x0e\xc4\x01\x53\x5d\x49\x22\x71\xc1\x54\x37\xaa\x85\xec\x19\x6b\x62\x59\x02\xd9\xd5\x7e\x86\x6b\xa3\x0a\xf9\xb0\x8c\xc5\x0e\x72\x61\x89\x5a\x37\xc0\x48\xd2\x99\x37\x16\x24\x67\x67\x5a\x73\xd6\x9e\x03\x66\x5a\x7f\xb0\x90\xa6\x0e\xc7\xe9\x80\x4c\x67\x13\xad\xe1\x21\x90\xa9\xd5\xce\x5a\x22\xed\x99\xa4\xd3\x5a\xce\x35\xd9\x21\x21\x9d\x4e\x24\x1e\xa3\x0b\x65\xaf\xe3\x38\x00\x4b\xd0\xf0\xd0\x6d\x00\x89\x11\x09\x99\xa2\xfe\x05\xc3\x81\xc4\x9b\x4e\xcf\x91\x22\x65\x62\x6f\x06\x53\x27\x25\x90\x5f\x8b\x99\x85\x39\x51\x68\xbd\x5f\x48\xb0\x0f\x4e\xa4\x92\x33\x89\x99\x84\x23\xca\xde\xa3\x2a\xa6\x32\x6d\xaf\x0f\x93\x08\xdd\x68\x6d\xe7\x29\x9c\x48\x74\x43\x84\x24\x8f\xd6\x80\x0c\x91\x28\x46\xa0\x0d\x9e\x50\xe8\x66\x1d\x65\x0f\x8a\xed\xac\x19\x66\x23\xab\xa9\x67\x4f\x25\x23\x3b\xce\x5d\x0b\x58\x3b\x7a\x4f\xac\x99\xfa\x13\x1b\x3c\x25\x54\x6f\xc9\xc0\x2b\xc4\x14\x0c\x78\x66\x28\x9d\x04\xa3\x75\x9b\x6d\xbd\xdc\x73\x30\x2d\x57\x0a\x69\x57\x6d\xc8\x46\xc2\x3e\x52\x1f\x1a\x0a\xb0\xc9\x75\x58\x6d\x5c\x28\x63\x27\x2b\xac\x2b\x1a\x0a\x47\xdd\xba\x50\x1d\xba\x99\x00\xaf\x2d\x27\x18\xa8\x83\x33\x1d\x8a\xb6\x79\x88\xd6\xc0\x23\x6e\xe6\xfc\x32\xc1\xa2\x1d\xca\x0e\xe9\x4e\xeb\x5a\x29\x76\xaa\x4c\x6c\xa8\x40\x81\x9b\xd8\xa4\x93\x39\x24\x59\xd8\x53\xa4\x62\x3f\x1c\xce\xac\x07\x26\xf2\x19\x16\xd6\x71\x07\xf2\xa1\xda\x2d\xe8\x98\x6d\x5f\x91\x99\x44\x74\x3f\x21\x7b\x36\x3a\x83\x19\xb8\xe4\x89\x06\x5e\x81\xbe\xa3\x61\xd9\x39\x42\x35\x81\x03\xab\x06\xca\x88\xb9\x5f\x58\xf6\xc0\xf3\xe4\x08\xf3\x32\x1d\xba\xd4\x00\x42\x62\x9f\x88\x83\x87\x92\xf1\x8c\x06\x6a\xc8\x44\x6b\xaf\xb7\x3b\xe7\x4c\xb3\xcf\xe0\x35\x67\x5e\x47\xee\x25\xb4\xbd\x53\x9c\xd3\xcd\x2e\xac\x2f\x74\x5d\xa4\xa4\x2e\x52\x52\xa9\xc0\xfe\xe9\x4a\x16\x48\x61\x5e\x66\xf2\xfe\x0e\xb7\x84\x5e\x70\x51\xf1\x4b\x2e\x2a\x7e\x89\x83\x4a\x05\xde\xcc\x4f\x74\x83\x32\x79\xa2\x6b\x45\xde\x26\x67\x5c\x42\x02\x96\x39\x6d\xec\xcc\x99\x2a\x43\xf6\x2e\xd3\x64\x0f\x1d\x9d\x8a\x0e\x3c\xe0\xbc\x33\xd3\x60\x6a\x8e\x34\xfb\xb6\x08\x17\x68\x30\x99\xe0\x80\xad\x1a\x13\xae\x36\x59\x84\x2f\xb8\x68\x26\xfd\x13\x44\x4b\x24\xb1\xc7\xdc\x09\x6e\x8c\xb4\xf9\x91\xd5\xb2\xc9\x15\x55\x3c\xd2\xa8\xe8\x91\xb6\x87\xaf\x89\xe6\x40\x02\x7c\xd7\x9c\x68\x61\xe0\x0d\xf0\x05\x8e\x48\x4a\x4e\x70\x6c\x90\xad\x73\xa5\xcc\xfd\x15\x2b\xda\xd1\x37\xc2\x1c\x33\x01\xc3\xda\x0c\xeb\x24\x83\xc2\x45\xa8\x60\x32\xc6\x57\x0d\x7b\xbf\xea\x70\xe8\xcb\x79\xc6\x4e\x0e\x63\x03\xb1\x9f\x44\xb9\x71\xcf\x15\x4e\xd0\xf7\xd0\x4e\x17\x12\x5f\x91\x6f\x65\x2f\x38\x57\xe4\x75\x65\xc4\x1b\xa5\x48\xc9\xee\x1f\x2d\xf5\x47\x65\x49\x58\x5d\xd0\x75\x2c\xe6\x71\x31\x33\x0f\x9f\x60\x2d\xf5\xc0\x37\x12\xa5\x73\x25\xce\xd0\xd7\x72\xe1\xf1\x6d\x4a\x9b\x93\x0a\xff\x2f\x00\x00\xff\xff\xce\x23\xa8\x39\xdc\x21\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 8668, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x14\xc6\x11\x66\xbc\x78\xf7\xe4\xc1\x73\xc8\x4b\xc9\x90\x26\x31\xbb\xa5\xd6\x4f\xef\x20\x08\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\xdb\x44\x45\x6b\x3d\x9f\x17\x4d\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x05\xbe\x82\x0c\xde\xfc\x9f\x1c\xf0\x53\x48\xba\xb0\xde\x84\x75\xb1\x25\x8a\xb8\x66\xac\xb2\xb4\x6d\x36\x20\x43\xcd\x64\x12\xef\xdd\xac\x16\x6f\xec\xc5\x7a\x15\x5a\x7c\x8e\xdd\xa3\x0b\x72\xa7\xd3\x64\x82\x3a\xed\x75\x7a\x60\x7c\xb9\x32\x33\x0e\x0e\xda\xa3\x39\x4e\xfc\xec\xbf\x98\xfb\x15\xcf\x1a\x53\x2e\x72\xa6\x9c\x97\x79\x72\x97\x37\x5c\xcd\xb3\x46\xe6\xb7\x31\x2a\x47\x44\x03\x2a\xb4\xde\x05\xa1\x32\x6c\xbf\x1c\x25\x25\x39\x35\x38\x51\x59\x8c\x4e\x74\x52\x90\x70\xa1\x82\x3a\x42\x6d\x65\x0a\x18\x0c\xfd\x80\x0e\x94\x76\x76\xaf\x53\x37\xa4\xbe\x76\xca\xd5\x07\x56\xd2\xf5\x61\x65\xec\xfb\x84\xd1\x25\x9c\xda\x6e\x14\x20\x76\x42\x79\x04\xaf\xe9\x3b\x5e\x5c\x1e\xa6\x30\xfe\x7a\x1c\x78\x14\x24\x07\x9a\xfa\xd3\x30\x15\x28\x84\x0d\x1f\x75\x2a\x53\x8d\x3d\xea\x79\xda\xb5\xb9\xda\x10\x1d\x66\x52\xea\x13\x7f\xa6\x84\x24\x08\x8d\xe6\x03\x77\x39\x91\x1b\xa2\x3f\x77\xf4\x7f\x94\x5c\x03\xe3\xfe\xbc\x91\xd9\x65\x4b\xa7\x4a\x48\x15\xfb\x08\x00\x00\xff\xff\x7c\xbe\x53\x60\x1f\x05\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1311, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\x4d\x73\x9b\x3c\x10\x07\xf0\xbb\x3f\xc5\xce\xf8\xf2\x3c\x07\x16\x56\x2f\xbc\xe4\xd6\xd6\x69\xc7\x87\xc6\x19\x92\x4e\xce\x04\xcb\x0d\xad\x03\x0c\x88\x71\xd3\x4f\xdf\x91\x71\x53\xf9\xa4\xe5\xec\x9f\x35\xab\xbf\x76\x25\xd6\xeb\x35\x74\xbd\x69\x4f\x83\x85\x53\xd3\x52\x02\x53\xbf\xaf\xac\x81\xff\x62\x63\xeb\xf8\xd0\x0c\xe6\x54\x1d\x8f\x38\x8d\x66\xf8\x7f\xe5\xf4\xd7\x6e\x30\xd0\xb4\x87\xee\x06\x5e\xac\xed\xc7\x9b\x38\xfe\xde\xd8\x97\xe9\x19\xeb\xee\x35\xae\x87\xea\xf7\x5b\xf4\x5a\xfd\x8a\x9f\x9a\x76\xdf\x9d\xc6\x87\xfe\xed\xe3\xb1\xab\x7f\x9a\x61\xb5\x5a\x83\x69\x0f\xdd\x50\x1b\x18\xba\xc9\x9a\x01\x36\x77\x0f\xab\xa6\xb7\xd5\xf3\xd1\x8c\x10\x59\x68\x2b\x0b\xd1\x16\xee\xcb\xdb\x72\xf7\xed\x71\x7b\xf7\x05\xa2\x1e\x6c\xdd\x43\x14\xed\xfb\x6e\xb0\xa0\x25\x44\x3f\xa0\xbc\xdd\x6c\xcb\xdb\x4f\x8f\x10\x45\xb6\x8b\xdc\x0f\x23\x68\x19\x5e\x69\xda\x33\x57\x5a\xad\x61\x98\x8e\x66\xf4\x96\xdc\xc2\xe7\x5d\xf9\xf4\xa1\xdc\xb8\xbf\x6d\xca\xdd\x3d\x44\x7b\x20\x89\x69\x8e\x79\x86\x2a\x63\x53\xca\x34\xc3\x66\x0a\x29\x2b\x90\x88\xb3\x30\x25\x19\x2a\xd4\x09\x9f\x8a\x10\x15\x8e\x4a\xa4\xbc\x40\x12\xe9\x12\xad\x83\x15\x5f\xe9\x3c\xa4\x55\x82\x59\x86\x42\x14\x98\xc4\x42\x85\xb4\x16\x67\x4a\x19\xa1\x48\x82\xbb\x4c\x35\x6a\x8d\x24\x73\xd6\xda\x17\x9d\x4a\x9e\x4e\x91\xa8\x40\x52\x8a\x93\xc9\x95\x0e\x66\xe2\xeb\xbc\x58\xa2\x0b\x46\x93\x10\x0a\x2d\x51\x4a\x56\x47\xb9\x3e\x4d\x50\x13\x52\xce\x68\x55\x4f\x07\x37\xe9\x6b\x4e\xd9\xef\x5a\xa8\x60\xc3\x5e\xe9\x25\x75\x0b\xc5\xaf\x5b\xa2\x08\x9e\x8d\x87\x25\x7f\x8f\xbc\x7e\xfd\xcb\x89\x5c\xe3\x2e\xd2\xec\x00\x9d\x4e\xd9\x85\x9f\x75\x70\x2a\xdf\x75\xaa\x97\xe4\x3d\x73\x76\xe2\x67\xae\x69\x19\x97\x41\xae\xb3\xf9\x4a\x91\x28\x92\xf0\x09\xcd\x5a\xa8\x04\xc3\x63\xec\x61\x21\xc2\x91\x3b\x9d\xba\xab\x93\x64\x38\x42\x0f\xf3\xea\x98\xb1\x5a\x52\x86\x0a\x67\xed\xe1\x25\x35\x33\x0e\x7d\xc6\x45\x8a\x9a\x77\x28\xb3\xe5\x16\x51\xa4\x48\x22\xdc\x1b\x05\xa1\x90\x02\x73\x37\xee\x4b\x70\xb8\x8c\x7f\x98\x31\x8c\x1e\x0e\xcf\xe2\x05\x93\xe4\xbd\xbf\xb3\x57\x98\x09\xa4\x9c\xb9\xc9\x8b\x0e\xdf\x39\xbe\x66\x66\x32\xeb\xf0\xf3\x21\xdc\x77\x91\x7b\x27\x15\x23\x6e\x0f\xa7\xf4\x27\x00\x00\xff\xff\xde\xcd\x2b\xf8\x42\x0b\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 2882, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfe\x8a\x93\xba\xc0\x40\x02\x65\x40\xaa\xc4\xc2\xce\xc4\xc0\x9c\x3a\xbe\xab\x21\xb1\x43\xec\x5e\x5a\x7e\x3d\x2a\x0c\x70\xd2\x5d\x19\xfd\xbe\xe7\xa7\xa7\xb7\x5e\xaf\x3b\x29\xc8\xad\x5a\xd7\x88\x1f\x3a\x3c\x5a\x0d\xdd\x95\x47\x03\x1f\x59\x73\xd0\x0f\x07\xc2\xfd\xf5\xea\x6c\x7d\x96\x8a\x1d\x71\x2f\xdb\x6e\x6f\x56\x74\xeb\xfd\x40\xb6\x3f\xec\x1c\x48\xf6\x50\xc3\xe7\xe9\x26\x87\xa3\x7f\x25\x8e\xd2\xf4\xa5\x9c\x9e\x92\xc0\x3b\xd6\xd5\x4a\xb1\x8e\x58\x1f\x7d\x00\xa3\x31\x18\x09\x3b\x4d\xea\x32\x41\x15\x95\xde\xbe\x13\x7e\x5d\x85\xdc\x8e\x78\x98\xaa\x20\x9b\x4b\x4f\x50\xd3\x12\x8a\x39\xba\x8c\x16\xce\x37\x01\x2e\x46\x44\x56\x97\xb5\x37\x06\xa5\x29\x19\x66\xfa\x0c\x2e\xd1\x88\x53\x2d\xc9\x40\x3c\xa3\xcf\xa7\xd6\xcd\xad\xb6\xb7\xbb\xfb\x5c\x97\x1a\x19\x65\x74\xed\x67\xcf\x29\x19\x43\xa2\xf8\xef\x92\x2d\x42\xb9\xc4\x42\xb2\x45\xac\x20\x6c\x2e\x94\xb2\x9c\xbe\x64\x71\x18\x07\xd4\x03\x19\x3a\x46\xfb\xf3\xd0\xda\x74\xe0\xaf\x00\x00\x00\xff\xff\xfe\xad\xae\xa8\x82\x02\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 642, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x72\x82\x40\x10\xc6\xf1\x9e\xa7\xf8\x66\x68\x92\xe2\x16\x0e\x0e\x45\xbb\x24\x98\x0c\x45\xd4\x39\xcd\x58\x23\x9c\x91\x04\xb9\x9b\xe3\x18\x34\x4f\x9f\xa1\x4b\x2a\xac\xf7\xb7\xff\xd9\xf5\x7d\x1f\xda\xa8\x76\xb0\x0e\x43\xdd\xce\xa1\xae\xce\x16\x78\x08\x94\x2b\x83\x53\x6d\xd5\x50\x34\x0d\xf5\x9d\xb2\x8f\xde\x68\xdf\xb5\x55\xa8\xdb\x93\x5e\xe2\xec\x9c\xe9\x96\x41\xf0\x59\xbb\x73\x7f\xa4\x52\x5f\x82\xd2\x16\x3f\x37\x76\x29\xae\xc1\xa1\x6e\x2b\x3d\x74\x3b\x73\x7b\x6e\x74\xf9\xad\xac\xe7\xf9\x50\xed\x49\xdb\x52\xc1\xea\xde\x29\x8b\x6c\xbd\xf3\x6a\xe3\x8a\x63\xa3\x3a\x30\x87\xb6\x70\x60\x39\xb6\x72\x25\x37\x1f\xfb\x7c\xfd\x06\x66\xe0\x4a\x03\xc6\x2a\xa3\xad\x43\x12\x83\x7d\x41\xae\xb2\x5c\xae\x5e\xf6\x60\xcc\x69\x36\x0e\x3a\x24\xf1\x74\xa9\xaf\xee\x2c\x79\x3e\x6c\xdf\xa8\xee\x4f\x32\xc7\xeb\x46\x1e\x9e\x64\x36\xae\x65\x72\xb3\x05\xab\xc0\x63\x4a\x43\xe2\x11\x25\x62\x8a\x8a\x90\x38\x4f\x89\x87\x31\xcd\xa7\xec\x4c\x90\xa0\x44\x50\xf4\xef\xa9\x09\x3a\x79\xc1\x2c\xa1\x24\xa2\x45\x4a\x51\xcc\xef\xb3\x3c\x4c\x89\x4f\x87\xa3\x70\x4e\x62\x46\x7c\x21\x88\x8b\xdf\x00\x00\x00\xff\xff\xb2\xac\x49\x2b\x4f\x02\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 591, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x72\xdb\x30\x0c\x86\x77\x3f\x85\xee\xbc\xb4\x83\x41\x59\x52\x9c\x4b\xee\xba\x74\xef\xd4\xa1\x33\x42\x42\x32\x2f\x22\xc0\x90\xb0\x69\xf5\xe9\x7b\x6e\xae\x4d\x93\x93\xd4\x64\xfe\xbe\xff\x07\x09\x6c\xb7\xdb\x4a\x22\x71\x49\x5a\x15\xcf\xb7\x55\x8e\x53\xf5\xc9\x90\x5a\xe3\x38\x07\xcc\x4f\x60\x85\xfb\xcf\x9b\xab\xf8\x4d\x12\x55\x9e\x7b\xb9\xaf\x8e\xaa\x31\xdf\x1b\x33\x78\x3d\x9e\x1e\xc0\x4a\x30\x36\xe1\xcf\x69\x17\xf0\x62\x7e\x78\x76\x52\xf2\xf7\x38\x7d\x1d\xc5\x3e\x52\xda\x6c\x32\xa5\x33\xa5\x2f\x06\x77\x75\x5d\xb7\x80\xbb\x90\xc9\x0d\x04\x4c\x6a\x5e\xa0\x1b\xa1\x3c\x67\x7f\x37\xfe\x05\xd6\xe5\xfd\xbe\x6b\x61\x14\x86\x71\xe4\xf2\x3a\x76\xa5\xcd\xe1\x6e\x99\x36\x75\xd7\x74\x30\xda\x69\x11\xb7\x37\xab\xf8\xb0\x5f\xc6\x6d\x7b\xb7\x02\xbb\x95\xb9\x5d\x7d\x0b\x7d\xc2\x39\x28\x21\xa2\xd2\xc5\x1e\x91\x07\xda\x83\x26\xec\x7b\x6f\x03\x32\x0e\x94\xde\xb8\x53\x03\x99\x54\x3d\x0f\x19\x1c\x2a\x42\xf0\x36\x49\x96\x5e\xaf\x4b\x04\x7c\x44\xc7\xf9\x75\xc6\x3d\xdc\x7c\x38\x43\x27\x38\x4b\x52\xba\xcc\x04\x5e\xac\x81\xe4\xc3\xcd\x43\xb9\xcc\x9f\xfd\x4f\xd1\xae\x78\x5e\x9d\x9a\xe3\xc4\xa4\xcd\x3a\xa6\x53\x92\x48\xff\x38\x73\x6f\xc9\x4f\x01\x94\x46\x0a\xa4\x69\x5a\xea\xbb\x0a\x56\x42\x40\x76\xef\x91\x13\x39\x01\x1f\xcf\x87\x25\xe5\x79\xaf\xff\xfd\x65\x41\xcd\xc2\x6f\xe8\xaf\x00\x00\x00\xff\xff\x1c\x24\xda\xa2\xc1\x03\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 961, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x31\x6f\xdb\x3c\x10\x06\xe0\xdd\xbf\xe2\x00\x2f\xdf\x37\xe8\x15\xef\x48\x8a\x54\xb6\xb6\x4e\x0b\x0f\x4d\x02\x25\x45\x66\x47\x56\x1a\xb5\x8e\x24\x48\x34\xdc\xf4\xd7\x17\x4a\x9a\xc6\x5d\x4a\x7a\xf0\xe4\x47\x87\x97\xc7\xe3\x2d\x97\x4b\xea\x87\xa6\x3b\x8c\x81\x0e\x6d\xe7\x68\x1a\x9e\xe8\xbf\xbc\x09\x75\x7e\xdf\x8e\xcd\x61\xb3\xdb\x61\x3f\x35\xe3\xff\x8b\x59\x7e\xee\xc7\x86\xda\xee\xbe\x3f\xa3\x87\x10\x86\xe9\x2c\xcf\xbf\xb6\xe1\x61\x7f\x87\xba\x7f\xcc\xeb\x71\xf3\xf3\x29\x7b\xdc\xfc\xc8\x6f\xdb\x6e\xdb\x1f\xa6\xeb\xe1\xe9\xfd\xae\xaf\xbf\x37\xe3\x62\xb1\xa4\xa6\xbb\xef\xc7\xba\xa1\xb1\xdf\x87\x66\xa4\xd5\xc5\xf5\xa2\x1d\xc2\xe6\x6e\xd7\x4c\x94\x05\xea\x36\x81\xb2\x35\x5d\x55\xe7\xd5\xe5\x97\x9b\xf5\xc5\x27\xca\x06\x0a\xf5\x40\x59\xb6\x1d\xfa\x31\x90\xd5\x94\x7d\xa3\xea\x7c\xb5\xae\xce\x3f\xdc\x50\x96\x85\x3e\x9b\xff\x98\xc8\xea\x78\xa5\xfd\x36\xb1\xd2\x62\x49\xe3\x7e\xd7\x4c\x47\x25\xd7\xf4\xf1\xb2\xba\x7d\x57\xad\xe6\xcf\x56\xd5\xe5\x15\x65\x5b\x62\x0d\xe7\xc1\xde\x83\x8d\x4b\xc1\x25\x44\x97\x28\xca\x04\xeb\x19\x16\x7f\x9d\xea\x5f\xb2\x84\x18\x89\x59\xa3\xe0\x14\x44\x18\x62\xa2\x11\x66\xec\x20\x52\x9c\x88\xad\x4a\xc0\xcc\x1e\xac\x0a\xb0\x8e\x6a\xcb\x60\xc3\xd0\x02\xcb\x51\x2b\x60\x3d\x5f\x86\x87\x8f\x66\x3e\xc2\x6c\x93\x74\x61\x20\x46\xe1\x04\xcc\x10\x65\x53\xb5\x65\x18\x93\x82\x9d\xc7\x1c\x3c\xad\x1f\xee\x79\x38\xe7\xe0\xa9\xda\x32\x84\xa3\xc3\xf4\xaa\xe7\x5f\x91\x8a\x4b\x0d\x4e\xd6\x22\x1a\x12\x7d\x00\x33\xf6\x0e\x85\x02\xab\xe8\x1b\x2c\x0c\x0c\x44\x43\xe5\x12\xed\x74\x61\x61\x2d\x8c\x01\x2b\x7f\x82\x8d\x0e\xc7\x8b\x65\xd6\x88\x37\xf9\xc8\x46\x1b\xf1\x62\xc5\x0a\x5c\x74\x30\xde\x6c\x79\x42\x5d\x2e\xa3\x33\xc4\xca\xc0\xcc\x69\x1d\x8a\xe8\x3d\xff\xc1\x25\x24\x1a\xf9\x37\x16\xf1\x29\x5b\xf1\x0d\x8b\x8a\x76\xf9\x55\x6b\x07\x4e\xd8\xcd\xcc\x2f\x3b\xb4\x4c\xb8\x94\x23\x2c\x29\xcb\xdc\x80\x9d\x82\x7e\xde\xd2\x71\xed\xc0\xec\x20\xda\x26\x3c\x41\x2e\xf9\xf9\x84\xa2\x3c\x58\x8a\x5f\x01\x00\x00\xff\xff\x22\x54\x4f\x57\xf5\x07\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2037, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4f\xc3\x30\x10\x05\xe0\x3d\xbf\xc2\x52\x16\x18\x6a\x93\x10\xa9\x55\x25\x16\x76\x26\x06\x66\xc7\x3e\xa7\x16\x89\xcf\xd8\x17\x4c\xf9\xf5\x08\x52\x05\x18\x6a\x67\xf5\xfb\x7c\xef\xd5\x75\xcd\xd0\x83\x4b\x81\x58\xb2\x6e\xcf\x66\xaf\x25\x01\xbb\x11\x40\x4a\x68\x17\x27\x19\xdf\xb8\x42\x67\x6e\xab\x6f\xfb\x84\x01\x98\x75\x06\x8f\xec\x44\xe4\xe3\x51\x88\xc1\xd2\x69\xee\xb9\xc2\x49\xa8\x20\x3f\xcf\xbb\x49\x7e\x88\x17\xeb\x34\xa6\xf8\xec\xcf\x8f\x23\xaa\x57\x08\x55\x15\x21\xbc\x43\x78\x10\xcd\xa1\xeb\x77\x0d\x1f\x79\x5a\xcc\xd2\xf8\xf3\x7f\x35\x6d\x2b\xf7\x65\xa3\x9a\xa2\xb9\x3f\x94\x48\x07\x50\x22\xd2\xc8\x22\x99\xb9\xc6\xe4\x46\x94\x3a\xc7\x7a\x6d\x4a\x97\x14\x8d\x3a\x0b\xd6\x9e\xc9\xaa\x80\x11\x0d\x5d\xc9\x73\x37\xe2\xa6\xb9\xa6\xbb\x2b\xcd\x35\xd0\xf2\xcb\xfb\x95\x3d\x66\xe0\x3a\xf2\xbe\xd9\xd4\xb8\xde\xf8\x6f\x1c\xd0\xaf\xc9\x7c\x5f\xa2\x4b\x82\x61\xf8\x93\xa4\x94\x1b\xf0\x15\x00\x00\xff\xff\x91\xff\x09\xc0\x08\x03\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 776, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x4d\x6f\x9b\x4c\x10\x07\xf0\xbb\x3f\xc5\x48\xbe\x3c\xcf\x61\x07\xcf\x2e\xcb\x4b\x6e\x6d\xed\x56\x3e\x34\x8e\x48\xaa\x9c\x09\xac\x1b\x5a\xc2\xa2\x65\x91\x9b\x7e\xfa\x8a\x24\x8d\x40\xaa\x34\xec\x99\x1f\x23\xcd\x7f\x66\x60\xbb\xdd\x82\xed\x4d\x77\x71\x1e\x2e\x4d\x97\xc2\xd8\xd7\xa5\x37\xf0\x5f\x64\x7c\x15\x9d\x1b\x67\x2e\x65\xdb\xe2\x38\x18\xf7\xff\x66\xc2\x5f\xad\x33\xd0\x74\x67\x7b\x05\x8f\xde\xf7\xc3\x55\x14\x7d\x6f\xfc\xe3\xf8\x80\x95\x7d\x8a\x2a\x57\xfe\x7e\x16\x4f\xe5\xaf\xe8\xbe\xe9\x6a\x7b\x19\x6e\xfb\xe7\x8f\xad\xad\x7e\x1a\xb7\xd9\x6c\xc1\x74\x67\xeb\x2a\x03\xce\x8e\xde\x38\xd8\x5f\xdf\x6e\x9a\xde\x97\x0f\xad\x19\x40\x78\xe8\x4a\x0f\xe2\x08\x37\xc5\xa1\x38\x7d\xbb\x3b\x5e\x7f\x01\xd1\x83\xaf\x7a\x10\xa2\xee\xad\xf3\xa0\x15\x88\x1f\x50\x1c\xf6\xc7\xe2\xf0\xe9\x0e\x84\xf0\x56\x4c\x0f\x06\xd0\x8a\xaf\x34\xd6\x2b\x2b\x6d\xb6\xe0\xc6\xd6\x0c\xb3\x92\x47\xf8\x7c\x2a\xee\x3f\x14\xfb\xe9\xb5\x7d\x71\xba\x01\x51\x03\x29\xa4\x5d\x8a\x31\xea\x1d\x47\xe5\x44\x15\x52\x96\x23\x49\x1d\xa4\x93\x10\xad\xd3\x20\x9d\x71\x3a\xde\x61\x9a\xa2\x94\x39\x2e\x12\xfe\xa7\x4d\x34\x6a\x8d\xa4\x32\x24\x92\x21\x38\x0e\xc0\x7c\x1c\x33\x9c\xad\xc5\x89\x42\x29\x29\x04\xf3\x0d\x26\x48\x94\x23\xc5\xf1\x9a\xa9\x2c\x34\x3b\x95\xb9\xce\xf2\x10\x9d\xb3\x9b\x4a\x2a\x46\x4a\x77\xa8\x29\x50\xcb\x98\x4d\x7b\xa1\xd9\x4c\x16\x9a\xcd\xe4\x5d\x2b\x94\x6c\x24\x33\xac\xd6\xf7\x98\xe1\x2e\x92\xec\xb2\xfe\xe5\x44\x1a\x13\x76\x4d\xde\x75\xa2\x43\xba\x7c\xe5\xab\xfb\x7c\xe1\x9a\x5d\xf0\x25\x67\x0f\x9e\x74\x8a\x3a\xc1\x3c\x41\x92\x3c\xce\x09\xa5\x92\x98\x4d\x41\x06\xe0\x84\x9f\xcf\x0c\xf3\x79\xbf\x61\x52\xf9\xaa\x16\x17\x9c\x9f\xfd\x0b\x8f\x31\x95\x48\xd9\xca\xe2\x6f\x9a\x3f\x9e\xb9\x5e\x99\xe0\xab\xe6\xcf\x58\x4e\xbf\xb1\xe9\x33\x11\xa3\xce\xfe\x04\x00\x00\xff\xff\xa2\x67\x2e\x8f\x14\x08\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 2068, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd1\xcf\x8e\x9b\x30\x10\x06\xf0\x3b\x4f\x31\x12\x97\xf6\xe0\xc1\x63\x6c\xfe\xec\xad\x2d\x69\xc5\xa1\x9b\x15\x49\x95\x33\x01\xa7\xa1\x25\x18\x19\x23\x92\x3e\x7d\xc5\xa5\xea\x9e\x4c\xce\xfe\xf9\xd3\x37\x33\x61\x18\x82\x19\xf5\xb0\x58\x07\x4b\x37\x64\x04\xfa\xee\x6c\x0d\x1f\x22\xed\x9a\xe8\xd2\x59\xbd\xd4\x7d\x8f\xf3\xa4\xed\xc7\x60\xc5\xdf\x8d\xd5\xd0\x0d\x17\xf3\x02\x57\xe7\xc6\xe9\x25\x8a\x7e\x76\xee\x3a\x9f\xb1\x31\xb7\xa8\xb1\xf5\x9f\x07\xbb\xd5\xf7\xe8\xd4\x0d\xad\x59\xa6\xc3\xf8\xf8\xdc\x9b\xe6\xb7\xb6\x41\x10\x82\x1e\x2e\xc6\x36\x1a\xac\x99\x9d\xb6\x50\xbc\x1e\x82\x6e\x74\xf5\xb9\xd7\x13\x30\x07\x43\xed\x80\x95\xf0\x56\xed\xaa\xfd\x8f\x63\xf9\xfa\x0d\xd8\x08\xae\x19\x81\xb1\x76\x34\xd6\x81\x8a\x81\xfd\x82\x6a\x57\x94\xd5\xee\xcb\x11\x18\x73\x86\xad\x0f\x13\xa8\xd8\x9f\x34\xb7\x1b\x93\x82\x10\xec\xdc\xeb\xe9\xbf\xc8\x12\xbe\xee\xab\xd3\xa7\xaa\x58\xbf\x15\xd5\xfe\x0d\x58\x0b\x14\x63\xc6\x91\x04\x2a\xe9\xa3\x92\x23\x51\x86\xc4\x63\x4c\x37\xdb\x04\x29\xe6\x3e\x9d\x48\x94\xa8\x24\x0a\xb1\x59\xbe\x5b\x96\x87\x7a\x27\x4b\x14\x2a\x81\xc4\x33\x14\xf9\x76\xab\x9e\xb0\xe4\xef\x4b\x31\xad\x63\x61\x42\xc8\x23\xe1\xed\x4c\x2a\x45\xa5\x90\x62\x89\x24\xbd\x1b\xfe\xa7\x15\x92\xc8\x9e\xd1\xfe\xeb\x09\x2e\x31\xcd\x91\xf2\x14\x05\xdf\xa0\x53\x94\x09\x52\xbe\xf6\xfe\x1b\x00\x00\xff\xff\x41\x26\x9f\xdc\xbb\x03\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 955, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x31\xaf\x9b\x30\x10\xc0\xf1\x3d\x9f\x02\x29\x4b\x3b\xc4\x60\x87\x24\xe4\x49\x5d\xba\x77\xea\xd0\xf9\x6a\x0e\x62\x3d\x7c\xf6\xb3\x2f\x21\xf4\xd3\x57\xb4\x52\xd5\x3c\x3d\x5f\x56\x7e\x7f\x9b\xd3\x49\xb0\xdd\x6e\xab\x10\x91\xe6\xc4\xd5\xec\xa8\xd3\x55\x8e\x4b\xf5\xa9\x46\xb6\x75\x4f\xd9\x43\x7e\x53\x36\xd0\xf0\x79\xb3\x96\xdf\x42\xc2\xca\xd1\x10\x5e\xaa\x0b\x73\xcc\x2f\x75\x3d\x3a\xbe\x5c\x7f\x2a\x1b\x7c\x6d\x13\xfc\x5a\x76\x1e\xee\xf5\x0f\x47\x7d\x98\xf3\xf7\xb8\x7c\x9d\x82\x7d\xc5\xb4\xd9\x64\x4c\x37\x4c\x5f\x6a\xd8\x35\x4d\xa3\x15\xec\x7c\xc6\x7e\x44\x45\xc8\xf5\x23\x1a\x09\xf7\x12\xb6\x12\x1e\x24\x3c\x4a\x78\x92\xb0\x93\xf0\x2c\xa0\x6e\x24\x94\x36\xa4\xcb\x1b\xfa\xe8\xa9\xed\xb3\x36\xa6\x53\x53\x20\x35\x4d\x34\x7f\xa0\x6d\x2b\xe9\xf1\x20\xe9\x69\x2f\x69\x27\x9e\xed\x4e\x65\x35\x4d\xdb\xb4\x6a\xb2\x4b\x81\xb5\x31\x67\xe1\xb4\x36\x87\xa3\xc8\x27\x61\x23\x46\x9b\x4e\x97\x79\xbf\x3f\x97\x07\xeb\x74\xf1\xe2\xe0\x23\x30\xde\xed\x05\x68\x44\xad\x38\xc1\x30\x38\xeb\x81\x60\xc4\xf4\xd8\xe2\x55\xdd\x42\x62\xbc\xab\x1e\x18\x94\x77\x36\x85\x1c\x06\xfe\xf3\xa1\xfd\xab\x32\x32\x3b\x1a\xf3\x6e\x76\x24\x87\x71\x21\x64\x23\x33\x4c\x2c\x07\x78\x4d\x21\xe2\x7f\x0d\xbc\x42\x4f\xf9\x71\xf2\xfc\xe6\x15\xe3\x84\x1e\x39\x2d\xc5\xfb\x18\x38\x0f\x68\xd4\x35\xf6\xc0\xf8\x34\x9b\x73\x29\x59\x5f\x25\x6e\x72\x0d\x6c\xf0\x1e\xa8\x7f\x3e\xd7\xdf\x9d\x3f\x5d\xe7\xfa\xa7\x54\x2e\xde\x8e\xef\x82\xdf\x01\x00\x00\xff\xff\xea\x0b\xcf\x5a\x4e\x05\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1358, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xb1\x6e\xdb\x30\x10\x06\xe0\xdd\x4f\x41\xc0\x4b\x3b\xe8\x17\xef\x48\x8a\x62\xb6\xb6\x4e\x0b\x0f\x4d\x02\x25\x45\x66\xc7\x56\x1a\xb7\x8e\x25\x48\x32\xdc\xf4\xe9\x0b\x2a\x81\xab\x2e\x3d\x7a\xf0\xe4\x4f\xc4\x1d\xef\x78\x37\x9f\xcf\x55\xd3\xd6\xfb\x63\x37\xa8\xe3\x76\x5f\x92\xea\xdb\x17\xf5\x2e\xaf\x87\x75\xfe\xb8\xed\xea\xe3\x6a\xb7\xc3\xa1\xaf\xbb\xf7\xb3\x48\xbf\x36\x5d\xad\xb6\xfb\xc7\xe6\x42\x3d\x0d\x43\xdb\x5f\xe4\xf9\xf7\xed\xf0\x74\x78\xc0\xba\x79\xce\xd7\xdd\xea\xf7\x4b\xf6\xbc\xfa\x95\xdf\x6f\xf7\x9b\xe6\xd8\xdf\xb6\x2f\x1f\x77\xcd\xfa\x67\xdd\xcd\x66\x73\x55\xef\x1f\x9b\x6e\x5d\xab\xae\x39\x0c\x75\xa7\x16\x57\xb7\xb3\x6d\x3b\xac\x1e\x76\x75\xaf\xb2\x41\xed\x57\x83\xca\x96\xea\xa6\xba\xac\xae\xbf\xdd\x2d\xaf\xbe\xa8\xac\x55\xc3\xba\x55\x59\xb6\x69\x9b\x6e\x50\xce\xa8\xec\x87\xaa\x2e\x17\xcb\xea\xf2\xd3\x9d\xca\xb2\xa1\xc9\xe2\x1f\xbd\x72\x46\x3e\xe9\xb0\x49\x3c\x69\x36\x57\xdd\x61\x57\xf7\x93\x23\x97\xea\xf3\x75\x75\xff\xa1\x5a\xc4\xcf\x16\xd5\xf5\x8d\xca\x36\x8a\x0c\x7c\x09\x36\x1a\x64\x6c\x0a\x0e\x60\x13\x50\x84\x04\x5b\x12\x1c\xfe\xc9\xea\x7f\x32\x80\x2d\x4b\x96\x0d\x42\x09\x1b\x40\x62\xb0\x91\x86\x91\x32\x49\xd6\x6a\x78\x0f\xe6\x02\x6c\xc5\xcc\x26\xd8\xe9\x54\x5c\x22\x88\xc9\x39\x02\x59\x82\x61\x38\x31\x62\xc7\x20\x53\x82\x6c\x89\xd2\x9f\x83\xc5\xf4\x26\x98\x5c\x92\x2e\x2c\xd8\x10\xd8\xa5\x62\xab\x91\x7e\xb2\x25\xb0\x4e\x3e\xda\x11\xac\xd8\x1a\x11\xfb\x98\xa2\x8f\xb1\xa4\x6a\x47\x60\x92\x8b\xf8\xa6\xe3\xaf\x48\xc5\xc1\x80\x92\x35\xb3\x01\x8b\xaf\x2a\xe2\xd2\xa3\xd0\x20\x9d\xd2\x20\x6c\x0c\x28\x84\x94\x07\x50\x58\xc4\x8a\x43\xe7\x2c\x5e\xf5\xab\xf5\x90\x5f\xca\xd8\x45\x66\xac\x22\x95\x65\xb2\x2e\x40\x5a\xd6\x0e\xce\xc1\xda\x74\x4b\x14\x4b\x72\x86\x15\x1b\x63\x62\xc5\xe2\xbd\x5a\x76\x0c\x7b\x86\x0d\x67\x58\x0a\x72\x41\x4e\x98\xb5\x98\x1d\x69\x0b\x1b\x53\xf3\x28\xc4\x46\x3e\xe1\x00\x79\x36\xbf\xe1\x38\x42\x13\x76\xc9\x5f\x9c\x1e\x34\x1b\x0f\x4a\xd8\x68\x44\x60\x26\x70\x00\xbb\x84\x5d\x69\x41\x5e\xc3\xe8\xa4\x48\xa6\x3a\x61\x63\x4e\xf4\x59\x91\x24\x5c\x77\xbc\x0c\x2a\xc6\xe2\x90\xbc\x65\x5f\xb9\x07\x1b\x97\x30\xef\xc8\x79\xb8\x02\x14\x2c\xbc\x7c\x27\x13\x2c\x5f\xc9\x04\xcb\x41\x07\x1a\x8b\xce\xba\x04\xb1\x1c\xf5\xc8\x03\x9c\x06\x89\xe3\x63\x82\xbd\x38\x77\x4f\x98\x41\x5a\x7c\x90\x27\x6d\xe1\xf8\x4f\x00\x00\x00\xff\xff\x4a\x15\xb9\x67\xf4\x0a\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2804, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xbd\x6e\xc3\x20\x10\xc0\xf1\x3d\x4f\x61\x29\x4b\x3b\x04\x8c\x8d\x9b\x0f\xa9\x4b\xf7\x4e\x1d\x3a\x63\x38\x1c\xab\x36\x38\x40\x42\xd3\xa7\xaf\xd2\x44\x8d\x2a\x35\xb9\x5b\xc3\x2f\xff\x33\x08\xe6\xf3\x79\xe1\x27\x70\x39\xa4\x22\xf7\x6e\x25\x8a\xfd\x64\x54\x82\xe2\x81\x43\xd2\xdc\xb8\x38\xaa\xb8\x63\xda\x3b\xfb\x38\x3b\xe1\x57\x1f\xa0\xe8\x9d\xf5\x9b\x62\x9b\xd2\x14\x37\x9c\x77\x7d\xda\xee\x5b\xa6\xfd\xc8\x75\x50\x5f\xc7\xc5\xa8\x3e\xf9\x7b\xef\x8c\xcf\xf1\x6d\x3a\xbe\x0c\x5e\x7f\x40\x98\xcd\x22\x84\x03\x84\x67\x2e\xca\x72\xb9\x10\x6c\x60\xf9\x6c\xce\x13\x7f\xfe\x7f\x35\x42\x68\xd4\x2c\x75\x83\x1a\xb5\xaa\x51\xa3\x0d\x3e\xcb\x94\x6b\xdc\x08\x8b\x1b\x89\x77\xa0\xc4\xf7\x65\xdb\x16\x33\x55\xbd\x96\xa8\x69\x5a\xc0\x8c\x44\x4f\x50\x2a\x83\x91\x27\x81\x89\xf5\x0a\x3d\x19\xb5\x67\xc6\x67\x37\x78\x65\x10\x76\x90\x24\xd9\x42\x89\xcd\x6c\xbb\x53\x4c\x31\x33\xb0\x1c\xd9\xd8\xeb\xe0\xa3\xb7\xe9\x3f\x04\x23\x82\x04\x29\x25\x48\xad\x8a\xd4\xaa\x48\xad\x9a\xd4\xaa\x49\x2d\x49\x6a\x49\x52\xab\x21\xb5\x1a\x42\x4b\x97\xe8\x13\xd7\x69\x30\x77\x01\xe5\x42\xd9\x0a\x1b\x63\xd1\x5b\x6e\xa1\x62\x97\xdf\x6f\xec\xe6\x24\xf2\xee\xee\xea\xcd\x93\xb0\x1d\xf5\x71\xfc\x06\xfe\x1a\x07\xe9\x6a\xe2\x10\x91\x6f\x25\x0e\x43\x97\x2e\x2b\x3e\x74\xfc\x3b\x00\x00\xff\xff\x27\xf7\xc6\xea\xb5\x06\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 1717, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xcf\x6e\xd3\x40\x10\x06\xf0\x7b\x9e\x62\xa4\x5c\xe0\xe0\xb1\x67\xff\x78\xd7\xbd\x01\x29\x28\x07\xda\xca\x2d\xea\x39\x4d\x36\x34\x90\xc6\x96\xbd\x56\x28\x4f\x8f\x36\x09\x65\x2d\x21\xcd\xfa\xdc\x5f\xad\x4f\xfb\xcd\xec\x66\x3e\x9f\x43\xd3\xba\xc3\xb1\xf3\x70\xdc\x1d\x2c\xc1\xd0\x6e\x56\xde\xc1\xbb\xdc\xf9\x75\xbe\xdd\x75\xee\xb8\xda\xef\x71\xe8\x5d\xf7\x7e\x16\xf4\xd7\xa6\x73\xb0\x3b\x6c\x9b\x2b\x78\xf6\xbe\xed\xaf\xf2\xfc\xfb\xce\x3f\x0f\x4f\xb8\x6e\x5e\xf2\x75\xb7\xfa\xfd\x9a\xbd\xac\x7e\xe5\x8f\xbb\xc3\xa6\x39\xf6\xf7\xed\xeb\xc7\x7d\xb3\xfe\xe9\xba\xd9\x6c\x0e\xee\xb0\x6d\xba\xb5\x83\xae\x19\xbc\xeb\x60\x71\x73\x3f\xdb\xb5\x7e\xf5\xb4\x77\x3d\x64\x1e\x0e\x2b\x0f\xd9\x12\xee\xea\xeb\xfa\xf6\xdb\xc3\xf2\xe6\x0b\x64\x2d\xf8\x75\x0b\x59\xb6\x69\x9b\xce\x83\x96\x90\xfd\x80\xfa\x7a\xb1\xac\xaf\x3f\x3d\x40\x96\xf9\x26\x0b\x7f\xe8\x41\x4b\xfe\x4b\xc3\x26\xf1\x4b\xb3\x39\x74\xc3\xde\xf5\xd1\x27\x97\xf0\xf9\xb6\x7e\xfc\x50\x2f\xc2\xbf\x2d\xea\xdb\x3b\xc8\x36\x40\x12\x4b\x8b\xd6\x20\x19\x9d\x60\x8d\x45\xb2\x0a\x95\x4a\xb0\x54\x18\x54\xa8\x0b\x8e\x8a\x40\x25\x92\xad\x90\x04\x1b\x62\xa4\xcb\x29\x5a\x9b\x49\xda\x72\x5a\x15\x68\x0c\x0a\x51\xe1\xa8\xb9\xff\x5a\x2d\x90\xac\x44\x15\xce\x99\x0d\x7d\xc1\x44\x16\xc9\x50\x82\x0e\x19\xc8\x10\x8a\x42\x70\xba\xd4\xa8\x35\x92\xb4\x58\xe4\x82\x6d\xf1\xa2\x4b\x39\x41\x0b\x25\x50\x68\x1e\x97\x48\x54\x21\x29\x95\xd2\xcc\x48\xb3\xcd\xc4\xda\x56\x53\x74\xc5\x4e\x2b\x49\x42\xa1\x25\x52\x48\xc2\xf6\x4e\x52\x21\x99\x02\x35\x25\x9d\xe0\x1b\x97\x28\xd8\xdc\x11\x96\x09\xb1\x2f\x38\xad\xf8\xbf\x9c\x28\x74\x3a\x49\xb3\xe3\x1d\xeb\x32\x39\xf8\x49\xb3\xe3\xfd\xa6\xcb\x30\x88\xec\xa0\x8c\x79\xf2\x89\x9f\xb8\x66\x37\x73\xcc\xf9\x59\xd1\xe6\xbc\x9b\x12\x45\xc1\x37\x74\xd6\x42\x15\xc8\x8f\x78\x84\x13\x2e\xcd\x48\x0b\xc1\x17\x14\x74\x19\xae\x42\x92\xfc\x81\x47\x38\x2d\xf5\x19\xab\x29\x31\x14\xdf\x4c\x84\xa7\x64\x4e\x18\x91\x33\xae\x4a\xe4\xaf\xc0\xc8\xa6\x86\xa8\x4a\x24\x91\x36\x49\x67\xcc\x5f\xad\x54\x11\x0a\x29\xd0\x16\x09\xef\x58\x8c\xf9\xcc\xff\x70\xc2\x9e\x47\x98\x5f\xf3\x0b\x26\x59\x21\xd9\x49\x3c\x65\x11\x47\x9c\xaf\xf1\xc4\x15\x9a\xd3\xb3\x3d\x49\xf3\xab\x18\x6b\xf6\xc0\x45\xf8\xc5\x15\x5e\x33\x95\xd0\x4e\x84\x4b\xfa\x13\x00\x00\xff\xff\x6d\x26\xa6\xfa\x45\x0b\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 2885, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xcf\x72\xd3\x30\x10\xc7\xf1\x7b\x9f\xc2\x33\x39\xef\x2f\xda\xd5\xea\x8f\x73\xe4\xce\x89\x03\xe7\x10\x02\xcd\x40\xe3\x4c\x1a\xa6\x2d\x4f\xcf\xc8\x26\x89\x44\x25\x71\xd3\xb7\xfd\x54\xb5\x65\x4b\x5e\xad\x56\xc3\xe7\xc3\xf1\xeb\xf4\xf2\xfc\xe9\xf4\xf6\xe1\xe7\xb4\xfb\xb1\x3f\x0f\x27\x39\x0d\x2f\x87\x23\x9b\x61\xff\x7a\x39\x6f\x1f\x92\xfa\x38\x9d\xf7\xc3\xe1\xf8\x6d\xda\x0c\x8f\x97\xcb\xe9\x79\xb3\x5e\x7f\x3f\x5c\x1e\x7f\x7d\xc1\x6e\x7a\x5a\xef\xce\xdb\xdf\x6f\xf4\xb4\x7d\x5d\xbf\x9b\xed\xe1\xe1\xdd\x8f\x36\x6c\x11\x0d\x58\xe0\x94\xb2\x71\x5d\xb2\x09\xb0\x60\x89\x94\x47\xdb\x0a\x43\x8c\xa1\xa2\x2a\x5a\x2c\xc6\x00\x0e\x11\x1c\x2c\x15\x55\xd1\x6a\x10\x02\x44\x14\x91\xb2\x71\x57\x32\x53\x1e\x1d\xeb\x20\x7a\x9f\x77\xae\x8e\xf6\x30\x74\x1f\x8b\x73\x75\x3b\x1a\xb0\xf5\x90\x19\xdf\xa2\x6e\xd9\x30\xd4\xa7\xfb\xa7\xa2\x1a\x9a\x15\xa2\x0c\xd6\xf9\x0e\xb3\x6c\xf9\x08\x36\x16\x81\xf2\x68\x58\x09\x60\x15\x04\x4f\x45\x55\xb4\x57\x28\x9c\xc2\xd0\x75\x54\x5f\x0b\xef\xe0\x04\x6c\xd2\xff\xa6\x3c\xba\x76\xb4\x94\x47\xc7\xc6\x74\x05\xb7\x71\xfb\x1a\xdc\xf2\xfb\x65\xde\x6b\x34\xad\x38\x81\x5e\xed\x12\xb5\x77\xde\x28\xd4\x40\xd8\xc0\x0a\x15\xd5\xd2\x3a\xef\xb7\xf0\x57\x5f\xab\xa3\x23\xd2\xde\xcb\xa2\x6b\xd9\x58\x2a\xaa\xa1\x85\x75\x79\x85\x99\xca\x6c\x7a\x07\x56\xbf\xec\xed\xb2\xab\x67\x01\x43\x9c\x85\x55\x88\x4d\x87\x41\x9e\x1d\xef\x19\x77\xed\xb9\xf1\x34\xd9\x2a\x38\x18\x70\x74\x08\xc9\xe7\x59\xf3\x2e\xcc\x4f\x3c\x39\xeb\xa9\xcc\xff\xf9\x58\xfa\xea\xea\x67\x40\x0d\x95\xd9\xf3\x6e\x39\x57\x8b\xac\x79\x1f\xe1\x2d\x38\x22\x8c\x94\x47\xed\x5c\x35\x8a\x30\x82\xc7\x00\x43\x59\xd4\x57\x32\x01\x4e\x3b\x47\x19\xa2\x4a\xff\x74\xf5\x2f\x42\x3a\x9c\xd2\x84\x42\x79\xb4\x6d\x3a\xcf\x64\xa4\xa2\x3a\xda\x59\xb0\x73\x54\x66\xc7\x8f\x69\x99\xa9\xa8\xbe\x16\x47\x45\xf5\xb5\xb5\x54\x54\x5f\xab\xa1\xa2\xda\x5a\xd2\x37\xef\x76\xdd\x4b\x35\xb4\x8f\x60\x9f\x3e\x35\x0b\xbf\xe7\x9f\x00\x00\x00\xff\xff\x01\x40\x3f\x69\x40\x08\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 2112, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x99\xcd\x92\x14\x39\x0e\x80\xef\x3c\x45\x47\x70\x96\xda\x92\xff\x39\xee\x7d\x4f\x7b\xd8\x33\xcb\xb2\x4b\xc7\x0c\x74\x07\x30\xc1\x30\x4f\x3f\x21\x3b\x2b\xd3\x6a\x2c\xd5\xa1\xc0\x1f\xf9\x55\xa2\xb4\x65\xd9\xce\x7a\xfb\xf6\xed\xc3\xbf\x9f\xbe\xfc\xf7\xf9\xc7\xb7\x7f\xbd\xfc\xfc\xc7\xef\xcf\x1f\x7e\xfb\xf8\xf5\xe1\x85\x5f\x1e\x7e\x3c\x7d\xa1\xf0\xf0\xed\xe5\xe7\x1b\x71\xfe\xf9\xfc\xf5\xe3\xc3\xd3\x97\xff\x3d\xbf\x7b\xf8\xf4\xfd\xfb\xcb\xb7\x77\x8f\x8f\xff\x7f\xfa\xfe\xe9\x8f\xff\xe0\x87\xe7\xcf\x8f\x1f\xbe\xbe\xff\xeb\x27\x7c\x7e\xff\xe7\xe3\x2f\xf7\x7a\xf3\xe6\x97\x7f\x7a\x47\x11\x4b\xc3\xc6\xd8\xe0\x6a\xda\x5e\x43\xe2\x0e\x2b\xec\xdd\x5a\x90\xa9\x21\x51\x05\x45\x8e\xdd\x91\x3a\x81\x22\xd7\x66\x0a\xa0\xc8\xb0\x1b\x52\xad\x48\x29\x81\x22\xdb\x6e\x01\x7b\x80\x15\x1c\xb7\x20\xe7\xf3\xce\x93\x4c\x9b\x63\x40\x8a\x37\xfb\x20\xc3\xee\xc8\xb1\x63\x19\x7d\x7d\xc2\xde\x6d\x84\x19\x73\x84\xab\x69\x7b\x1d\x39\x31\xac\xb0\x77\x29\x54\xcc\xd8\x46\x37\xdc\xda\xae\xd9\x16\x73\x97\x3f\x1c\xb1\x57\x2c\x84\x14\x2b\xac\x60\xba\x1c\x3a\xf6\x9b\x3b\xc1\x70\x3b\x52\x40\x22\x58\xda\x8e\xd9\x31\x25\x58\xc1\x75\xcb\xea\x16\xc7\xa5\x22\x1f\x50\x64\xdb\x4c\xc8\xa1\x82\xa2\xbd\x4d\x81\x31\x21\xe7\x08\x2b\xd8\x2e\x13\x26\x58\xda\xb6\x49\x39\x23\xa5\x00\x1a\x2d\x3f\x22\x35\x46\xe2\x02\x1a\x37\x7e\x0a\x52\x1e\x98\x25\x00\x06\x45\x86\xdd\x31\x05\xa4\x5c\x61\x05\xd3\x65\x2a\x58\x23\xac\xe0\xba\x9c\x09\x14\x39\x76\xc3\xc2\xb0\x82\xe3\x4a\x8d\xaa\xa0\xc8\xb6\x99\x25\x85\x40\xd1\xde\xae\x01\x99\x03\x72\x6a\xa0\xc8\xb0\x0b\x12\x52\x2d\xb0\xb4\x6d\x93\x31\xc1\xd5\xf4\x3c\x9a\xfd\x70\x82\xe1\x56\x64\x6e\x98\x46\x37\x9c\xe0\xba\x6d\x75\x9b\xef\x76\x86\x15\x6c\x37\x4a\x7f\x12\x28\xda\xdb\x4d\x32\xb7\x63\x1a\x43\x71\xc2\xde\x25\x29\x94\xc8\x39\xc3\x0a\xb6\x4b\x01\x6b\x83\x15\x1c\x97\xb0\x47\x58\xc1\x71\x13\x52\xee\xa0\xc8\xb6\x99\x8f\xf1\x38\xc1\x79\xba\x24\x2b\xc7\x0a\x96\x9b\x90\x92\x24\x6e\x00\x8d\x96\x9f\x91\xa4\xd0\x2e\x6d\xcb\x1c\xcb\x31\x72\x3a\xee\x7c\xa2\xe3\x67\x42\xee\xa0\xc8\xb0\x99\xc6\xed\xa8\x8d\x4c\x5a\x70\xe3\x67\xb9\x48\x18\x19\x33\xc1\x0a\x3b\x97\x91\x62\x43\x4a\x23\xa1\x15\xdd\xb1\xbb\xb2\x77\x71\x2f\xd7\x65\xd8\x35\x1a\xbe\x2c\xa6\x19\x39\x15\x50\x64\xd9\xa3\x83\x31\x46\x50\xe4\xdb\x47\x28\x27\x79\xb6\x2c\x68\x19\x34\x3a\x7e\x1e\xb9\xa2\xc8\xb2\xeb\x28\x9e\x8d\x41\x91\x6f\x53\xaa\xa0\xd1\xf3\x23\x52\xcc\xa0\xd1\xf2\x1b\x72\x42\xaa\x47\xec\x37\xb2\xec\x8e\xad\x62\x3a\x42\x3f\xc0\x76\x89\x23\xa6\x06\x8a\x1c\xbb\x75\x6c\x11\x14\x19\x76\x9d\x85\x6f\x0e\xe7\x0d\x2c\x37\x49\x09\xb9\xe5\xd5\x49\x96\x2d\x69\x5a\xc7\x5c\xd6\xe8\xf8\x32\x7b\x89\x41\xa3\xe3\xcb\xa7\x80\x22\xc7\xee\x32\xdc\x97\x3e\xd1\xf3\xe3\xd8\xc6\x69\xb4\x7d\x49\x0f\x8e\xa0\xc8\xb0\xa5\x97\xa5\x6c\xd6\xa9\x5f\x68\xf9\x52\xe6\x65\xea\xcf\x68\x2e\xf4\xfc\x8c\x1c\x16\x7f\xa0\xe5\x57\x2c\x41\xb6\xec\xa0\x68\x6f\x73\x94\x1c\x91\x03\xc3\xc8\x9a\x05\x2d\xbf\x60\x92\xbf\x0e\xfd\x46\x8e\x1d\x91\x03\x83\xa2\x8d\x5d\x12\x26\x2c\x48\x21\xc0\xd5\xb4\x3c\x8e\x78\x68\x32\x30\xdb\x95\xbb\x64\x8c\x7d\x2c\x23\x1c\x03\x28\xda\xdb\x12\x60\x41\x6e\xb0\xb4\x4d\x93\x42\xc0\x00\x57\xdb\x8c\xe1\x28\xda\x25\xc1\x0a\x76\x04\x72\xe2\x0d\x15\x14\x19\x76\x46\x96\xf3\xe3\x0c\xf8\x06\xa6\x2b\x8f\x1f\x60\x69\x9b\x66\x4a\xb2\x4c\x2e\x6d\xd7\x4c\x8b\x69\x3d\xd7\xb8\x4a\xa1\xc1\x0a\xbe\xdb\x57\x77\x97\x5d\xf3\xb2\x4c\x36\xbe\x3d\xd6\x04\xd3\x9d\xfb\x31\x58\xc1\x77\x79\x75\xb7\x39\x7b\x5d\x8e\xab\xbb\x9b\xf9\xc7\xe5\x18\x30\xdf\xe2\x9d\x60\xbb\xb5\x60\x3f\xdd\x01\x76\x26\xcc\x19\x71\xb6\xed\x7c\xcc\xc8\x99\x2f\x57\xb2\x6c\xef\xca\x41\xb7\x8f\x32\x4f\x91\x40\xe3\xc6\xaf\x15\x65\x55\xed\xe3\xc8\xb2\xc2\xee\xed\x42\x48\x38\xb6\x0e\x55\x8e\x7b\x8a\x2c\x5b\x7a\xb5\x62\x29\xa0\xc8\xb3\xe5\xe8\x06\x8a\x1c\x3b\xc9\x61\x2c\x82\x46\xdb\x97\x53\x4b\x3e\xf5\x49\xbe\x2d\x25\x50\xa3\xe3\xc7\x2a\x6b\x3d\x68\xb4\x7c\xc9\x39\xa4\x9e\x41\x91\x6d\xb3\x2c\x4e\xc4\xa0\xd1\xf2\xe5\xe0\xc9\x74\x74\xe4\x01\xb6\x1b\x9b\x54\xba\x15\x6c\x37\xcb\xae\x3d\x83\x22\xc3\x66\x0a\x98\xb0\x56\x58\xc1\x73\x83\xec\xdd\x15\x39\x36\x93\xec\x7c\x22\xbc\x62\xf3\x1b\x09\xa3\x6c\xc1\x13\x68\xdc\xf9\x44\xc8\x2c\x87\x18\x4c\x01\x14\xf9\x36\xc9\xb3\x2a\xf4\x7d\x96\x64\x54\x78\xcf\x4f\xda\xf7\xa2\x2f\x09\xaf\xe0\xc7\x36\x7e\x3b\x4e\x91\xe4\xff\xc5\x32\xba\x7e\x01\xd7\xa5\x10\x41\x91\x63\xd3\x88\xe3\x02\x3f\x0e\x39\xf7\x5c\x81\x0c\xda\xda\x69\xec\x94\x63\x98\x33\x54\xe1\x1d\x5f\xca\x8b\x42\xc7\x97\x95\x3f\x5f\xfe\x44\xc7\xa7\x50\xc6\xc3\x5e\x64\x3d\xed\xcd\x90\xdd\x38\x68\xbc\xe3\xa7\x06\x1a\xef\xf8\xbd\x80\x46\xd7\x6f\x3a\x9e\x76\x2f\x9e\xa6\xe3\x69\xf7\xe2\x69\x58\x19\x34\xde\x8b\xe7\x75\x40\x7e\x44\x44\xeb\x08\x48\xfa\xfb\x23\x30\xde\xe5\x81\xc6\x3b\xfe\xfa\xc4\x03\xef\xf8\xeb\x13\x0f\xbc\xe3\xaf\x23\x36\xd0\xf3\x6b\xc3\x5e\x41\xa3\xeb\xf7\x39\xd3\x57\xf4\xfc\xd6\xc6\x9b\xcf\x57\xec\x7c\x83\x63\x96\x03\xa1\xc6\xad\x5f\xc7\x7b\xf9\x46\x73\x00\x16\x32\xed\x7a\xdd\x7d\xc5\x9d\x9f\xab\x6c\x94\xc6\x9e\xe9\x6a\x1b\xb9\x70\x5c\x2f\x8b\x6b\xce\xdc\x79\x9d\x42\xbf\x64\x01\xdf\xe6\xb9\xab\x59\xc9\xb1\x63\x58\xee\x1d\xad\x53\xca\x21\x48\x0f\x9c\xb6\xc0\x1d\xbb\xac\xb6\xfb\x94\x05\xe5\x4f\x58\xda\xb6\x59\xa5\xae\x07\x50\x64\xdb\x9d\xc6\xae\x60\x01\xdb\x95\x22\x4a\x2d\x81\xc6\x7b\x7e\xd6\xbe\x13\xf9\x14\xba\xf6\xb7\xbb\xb6\x43\xa0\x88\x4c\x67\xf4\x07\x3a\x3e\x13\x2e\xb7\x1f\xe4\xd9\x69\x4c\xcf\x95\x1c\x3b\xf5\xb5\xdb\x0f\xdc\xf9\xa5\x61\xa1\xf1\x36\x2c\x11\x28\xb2\x6d\x4a\x92\x1e\xa0\xc8\xb3\x65\xc3\x03\x8a\x1c\xbb\x32\xd6\x33\x92\x49\x96\x3d\xdf\x86\x50\x04\x45\x96\x1d\xc7\xc1\xbe\x1c\xf7\xbe\x91\x67\x37\xe4\x18\x41\xe3\xce\xef\x34\x66\x0c\xe5\xf9\x43\xac\x42\xd3\xaf\xc8\xa1\x8d\x9f\xe9\x5e\xb1\xf7\x0d\x6a\xe3\x4d\xcd\x2b\x36\xbf\xd1\x31\x27\xcc\x0c\x8a\xb6\x76\x1e\x6f\xae\x39\x8f\x92\xb1\xd0\xbe\x0a\xc8\xd1\x2e\x95\x79\xc8\x63\x50\x64\xdb\x52\xf7\x39\x67\xd0\x68\xf8\xa5\x21\x95\xf9\x93\xbd\xc6\x9d\x4f\xf3\x1d\x97\x2c\x59\x01\x56\xe2\x9c\xff\x0e\x00\x00\xff\xff\x5f\x99\x7a\x34\xac\x21\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 8620, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x96\x3d\x93\x1a\x3d\x0c\x80\x7b\x7e\xc5\xce\x50\x4b\x58\xf2\x37\xe5\xdb\xbf\x55\x8a\xd4\x84\x23\x39\x26\x39\x60\x38\x6e\x2e\x97\x5f\x9f\x31\x0b\x59\x8b\xd3\xda\x9d\x9f\xd5\x63\x8f\x56\x23\x6b\x77\xb9\x5c\x0e\x5f\xf7\x87\xa7\xe3\xfb\xeb\x97\xd3\xc7\x7f\xbf\x8e\xdb\x9f\xbb\xf3\x70\xe2\xd3\xf0\xbe\x3f\x90\x19\xde\x4e\x4f\x9b\xcb\x6e\x51\xb4\xff\x8f\xe7\xdd\xb0\x3f\x7c\x3f\xae\x87\xe7\xcb\xe5\xf4\xba\x5e\xad\x7e\xec\x2f\xcf\x6f\xdf\x70\x7b\x7c\x59\x6d\xcf\x9b\x3f\x1f\xf0\xb2\xf9\xbd\xfa\x74\xdc\x62\xf1\xe9\xd1\x9a\x2c\x86\x84\x29\xa2\x8b\x50\xad\x5b\x26\x45\x0f\x35\xe8\x6e\x74\x48\x31\x23\xd1\xf5\xdc\x89\x74\x9b\x4c\x44\x87\xde\x40\xb5\x6e\x9a\x5c\x99\xac\x98\x5c\xa2\x16\x29\x65\x24\x0e\x20\xb1\xe3\xfb\x08\x12\x7b\x7e\x92\x7e\x52\x7c\x67\x30\x46\x64\xce\x68\x60\x5a\xb3\xd7\xaa\xe7\xf9\x1a\xa4\x48\xc8\x86\x41\xa2\xe2\x07\x8f\xde\x23\xd9\x84\x06\xa6\xb5\x7e\xf6\x2d\x1e\xec\xe4\x06\x3b\xe7\x06\x24\xca\x48\xce\x5d\x6b\x22\xb1\xe7\x27\xe9\x6b\x35\xa9\x85\x94\x41\x62\xc7\xcf\x06\x24\xaa\xdd\x42\xc8\xde\xa2\xb5\x63\x67\x55\xa4\xda\xa5\x47\x0d\x7a\x42\x4a\xa5\x69\x6b\xec\xf9\x49\xfa\xda\xdb\xd6\x42\x36\x20\xb1\xed\xb3\x0b\x20\xb1\xe7\x47\xe9\x77\xf2\x67\x97\xa4\xdf\xcc\xdf\x22\x67\x10\xd4\xb6\xad\x01\x41\x2d\xbb\xb4\x70\x05\x7a\x5f\xde\x05\xa2\xd2\xc0\x20\xb1\xe7\x07\xe9\xb7\x2a\x59\x84\x60\x40\x62\xcf\x67\xe9\x6b\xf7\xf5\x9f\x10\xbc\x28\xfd\x8d\xbb\x3b\xf2\xc3\x8e\x56\xfd\xaf\x86\x27\x78\xe0\xee\x0e\xfb\xb0\xc3\x6a\x3b\x7c\x1c\x87\x8d\x45\x36\x0e\x24\xce\xfb\xec\x0c\xa6\x0c\x82\xda\x36\xb3\x01\x89\x73\x7e\x28\x93\x95\x6c\x02\x41\x1d\x3b\x0b\x7b\x36\x97\x31\xee\x0c\x08\xea\xd8\x24\x6c\xb5\xee\x55\x5c\xe4\xad\x77\x42\x15\x17\x79\xeb\x5d\x30\xc6\x73\x40\xef\xa0\x86\xb6\x9b\x6a\xb7\x91\x45\x0e\x48\x6c\x41\x90\x66\x67\x42\xb6\x8c\xa9\x0c\x00\x10\xd4\xb1\x93\xb0\xd5\x4c\xa6\x78\xb9\xaa\x35\x75\x6c\x16\xb6\x7a\x4f\x6f\x71\xb2\xe5\xab\x5d\xd3\xcc\x5c\xba\x1a\x0e\x23\x23\xa5\xfb\x8b\xde\xb1\xe7\x07\xe9\xab\x73\xa9\x16\x92\xf4\xe7\x6b\x33\x0a\xd9\x80\x44\xed\x9f\xa6\xfc\x4e\x95\x8f\xaa\x2b\x95\x17\xd4\xb6\x03\x81\xa0\xbf\x01\x00\x00\xff\xff\x15\xda\x1f\x13\xcd\x0a\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 2765, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x6e\xc3\x20\x14\x85\xe1\xdd\x4f\x81\xe4\x99\x03\x17\x2e\x36\xf1\xd8\xbd\x53\x87\xce\xae\xeb\x36\xa8\x8d\x41\x84\x2a\x49\x9f\xbe\xca\x46\x65\xda\xed\xfe\xe8\xd3\xa1\xef\x7b\xf1\x1c\xb6\xd7\x78\x39\x3f\xa5\xdb\xc3\x67\x5c\x3e\xd6\x2c\x92\x49\xe2\x12\xb6\x51\xac\xd7\x92\xe7\xee\x8e\x1e\x63\x5e\x45\xd8\xde\xe2\x24\x8e\xa5\xa4\xf3\xa4\xd4\x7b\x28\xc7\xaf\x17\x2c\xf1\xa4\x96\x3c\x7f\xdf\xe4\x69\xbe\xaa\xdd\x58\xd7\xed\x9e\x26\xb2\xf0\x1a\x64\xe0\x58\x56\x77\x43\xb2\x06\x91\x07\x69\x8b\x51\xd6\xd1\xb0\x03\x83\xe1\x18\xc6\x59\x59\xdd\xff\x4a\xae\x64\xeb\xff\xc1\xc1\x19\x1c\x3c\x8c\x25\x59\xc7\x9f\x96\xb4\x07\xdd\x77\xeb\x6a\x68\xa3\x47\xf0\x00\x3a\x30\x88\xe5\xaf\xfa\x09\x00\x00\xff\xff\xd9\x22\x69\x75\x95\x01\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 405, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd4\xcf\x8e\x52\x31\x14\xc7\xf1\x3d\x4f\x71\x13\xd6\xe7\x47\xcf\xe9\x7f\x96\xee\x5d\xb9\x70\x3d\xe2\xe8\x10\x1d\xee\x0d\x60\x46\x7c\x7a\x53\x50\xec\x91\xb6\x0b\x92\xfb\xa5\x9f\x90\xd2\xc2\x59\xaf\xd7\xd3\xc7\xfd\xe1\xf3\xfc\x76\xfa\xb0\x5c\xde\x7d\x9f\x77\xdf\x9e\x8f\xd3\x22\xcb\xf4\xb6\x3f\xc4\xe9\xb4\x5c\x56\x85\xbc\x9f\x8f\xcf\xd3\xfe\xf0\x65\xde\x4e\x2f\xe7\xf3\x72\xda\x6e\x36\x5f\xf7\xe7\x97\x1f\x9f\xb0\x9b\x5f\x37\xbb\xe3\xd3\xaf\x0b\xbd\x3e\xfd\xdc\x3c\x7c\xd4\x6a\xf5\xf0\xd6\x96\x2d\x62\x02\xa7\x04\x76\x91\x54\x75\x74\x86\xd8\x8c\x90\xa9\x8e\xb6\x4d\x0c\x0f\x6f\xe9\xdf\x63\xdf\x65\x88\x13\xaa\xa3\x61\x9d\x41\x34\x10\x61\x88\xcb\xa4\xaa\xa3\x23\x44\xc2\x5d\xdf\x6b\xac\xbd\x21\x55\x6d\xcd\x9c\xc0\x26\x80\xed\x95\x57\xd9\xf0\x9e\xc1\x8e\x61\x05\x9e\xa9\x8e\x96\x15\xb0\x2d\x57\x90\x90\x32\xa9\x1a\x6b\xf6\x8a\xb3\xef\xf9\xe0\x20\xce\xe0\x0f\xbf\xd7\x48\x33\xc4\x78\xd2\x39\xf0\x9e\xe1\x1c\xa9\xea\xe8\x98\x50\xf6\x5b\x8e\xa5\xae\xbe\x66\x17\xcb\x7e\x49\xe7\xc0\x7b\x86\xb0\x90\xce\x81\x2f\xaf\x40\xaa\x06\x3a\x5b\x70\xc5\x6f\xd9\xf7\x22\x16\x62\x49\x55\x47\xa7\x88\x60\xc0\x26\x92\xaa\x86\x0e\x0e\x0e\x62\x61\xe8\xef\x93\xf8\xd6\xed\x04\x0f\xef\xe1\x1c\xd8\x24\xaa\x63\x6c\x73\x6d\x5b\xbf\x92\xdb\x32\xb3\x05\x0b\xd5\x31\xb6\xb6\xb6\xad\x53\xb8\x2d\x8b\x17\x44\xa6\x3a\x86\x36\x5b\xaa\x63\x68\x39\x1b\x52\xd5\x9a\x50\xc6\xc1\x95\x1d\x46\x84\x40\xaa\x46\x3a\x43\x98\x54\xf5\xb5\x48\xba\x0e\xca\xba\xc6\x5a\x8c\x90\xce\x81\xb7\x11\x5c\x26\xb6\xca\x96\x67\xbe\xcd\xd3\x5c\x2e\x47\xd5\x58\x8b\x57\x5c\x3a\x93\xde\x81\xa3\x81\xbd\x0e\x6d\xd2\xd9\xf4\x11\xcc\x11\x62\x7d\xf9\x43\xea\x6c\xf9\xcc\xd7\xef\x26\x26\x81\x25\xd0\x7f\xfd\x3b\x00\x00\xff\xff\x80\x3f\x8c\xbe\x5f\x07\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 1887, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x6e\xdb\x30\x10\xc7\xf1\xdd\x4f\x21\xc0\xf3\x9d\x79\xc7\xff\x1e\xbb\x77\xea\xd0\xd9\x75\xdc\x46\x68\x63\x09\x8e\x82\x34\x7d\xfa\x42\x76\x5c\xe8\xa7\xb0\xe4\x96\x6f\xf4\x39\x1b\xa4\x2c\x6a\xbb\xdd\x76\x5f\xfb\xf3\xc3\xf0\xfa\xfc\x65\x7c\xfb\xf4\x6b\x38\xfe\x3c\x5d\xba\x51\xc7\xee\xb5\x3f\xc7\xee\x65\x7c\x38\x4c\xa7\xcd\xac\x3e\x0f\x97\x53\xd7\x9f\xbf\x0f\xfb\xee\x71\x9a\xc6\xe7\xfd\x6e\xf7\xa3\x9f\x1e\x5f\xbe\xf1\x71\x78\xda\x1d\x2f\x87\x3f\x6f\xf4\x74\xf8\xbd\xfb\xf0\x69\x9b\xcd\x87\x7f\xed\xc5\xb2\x98\xc8\x8e\xbd\xa1\xc5\xdf\x05\xa9\xf3\x55\xcb\x92\x32\x8b\x7a\xc2\x6c\xf9\x80\x3e\x34\xbc\x8f\x84\xd9\xf2\x09\x7d\x2a\x78\x67\x38\x46\x56\xcd\xec\x2d\x2d\xa3\x60\x83\x67\xef\x59\x6c\x62\x11\x25\xa8\x86\x76\xa0\x5d\x5d\x6b\x20\xa8\xba\x4e\xa0\x53\x45\x07\xcb\xaa\x42\x50\x0d\xad\xa0\x8b\xab\x0c\x2c\x92\x59\x9c\xbb\xde\x1f\xcc\x96\x4f\xe8\x4b\xf7\x67\x09\x52\x26\xcc\x86\xcf\x86\x30\x8b\xbf\x74\xc7\x12\x0d\x7b\xb9\x7a\xcc\xba\x57\x17\x08\xb3\xe5\x23\xfa\xd2\xfe\x00\x48\xe8\x4b\xfb\xf3\x0f\x58\xd6\x4c\x50\x75\x6d\x0d\x41\xd5\x74\xe2\x05\x4e\xac\xbe\xf4\x64\xdf\x81\x88\xe7\xa0\x84\x59\xf3\xc1\xc3\x52\xdf\xbb\x39\x91\x57\x13\xb5\xf5\x5e\x85\x17\x5a\x75\x73\xc2\xae\x26\x4a\xa7\x82\xf8\xc8\x3e\x70\x0e\x2c\x6a\x09\xaa\xa4\xb3\xb0\x5a\xe5\x34\xef\x24\x41\xd5\x75\x30\x04\xd5\xd0\x0a\xba\xb8\xff\xef\xd7\xc5\xe6\xdb\x4a\xb1\x9b\x13\x6e\x35\x51\x3a\xd5\x6e\xc2\x71\x54\x96\x74\xff\x8a\x7b\xb6\x7c\x40\x5f\x7c\xba\x96\x20\xa1\xff\xff\x7e\xde\x40\x36\x84\x59\x7a\x9b\xcc\x2f\xbe\xf9\x08\x71\xf3\xdd\x82\xfa\x1b\x00\x00\xff\xff\x7b\x64\xbe\xb5\x9a\x07\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 1946, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd1\xbd\x6e\xeb\x30\x0c\x86\xe1\x3d\x57\x21\x20\x33\x3f\x93\x92\xe8\xbf\xf1\xec\x67\xea\xd0\xd9\x75\xdd\xc6\x68\x63\x1b\x8e\x8b\x24\xbd\xfa\xc2\x53\x25\x44\x50\x37\xbe\xc6\x03\x83\x84\x8e\xc7\xa3\x79\x1e\xa7\xd7\xf9\x7a\x79\x5a\xee\xff\x3e\xe7\xfe\x63\x58\xcd\x62\x17\x73\x1d\xa7\x5a\xcc\x70\xdb\xd6\xee\xb0\xab\xff\xf3\x3a\x98\x71\x7a\x9b\x5b\x73\xda\xb6\xe5\xd2\x16\xc5\xfb\xb8\x9d\xbe\x5e\xd0\xcf\xe7\xa2\x5f\xbb\xef\x3b\x9d\xbb\x5b\xf1\xf0\xb7\xc3\xe1\xe1\x53\x2b\x0e\x35\x43\x2c\xd4\x53\x30\x27\xa4\x67\x88\xd4\x10\x76\xa8\x28\x8c\x9c\x2d\x21\x8e\x29\xce\x84\x2f\x3d\x3c\xd4\xc3\x5a\xfa\x1d\x73\x4e\x1d\x05\x73\x56\xfa\x40\xa6\xee\x2a\x15\x6a\x21\x5c\xc3\x36\x14\x46\xd6\x6a\x68\x35\x6f\x65\xdf\x36\xac\xe4\x3b\xc8\x7e\x09\x4a\x01\x53\x10\x56\x35\xa5\xb5\x82\x2a\xc4\x79\x88\x67\x8a\x33\xe7\x15\x62\x6b\x8a\xf3\x0f\xef\x98\xe2\x4c\x78\xcb\x1e\x55\x03\x69\x2a\x58\x66\x8a\x33\xe9\x2b\xf8\x12\xd2\xec\x0b\x53\x54\x3f\x01\x00\x00\xff\xff\x51\x09\xb5\x1f\x08\x03\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 776, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x72\x13\x31\x10\xc7\xf1\x3e\x4f\x71\x33\xa9\xf7\x67\xed\x6a\xf5\x2f\x25\x3d\x15\x05\x75\x08\x81\x78\x20\xb1\x27\x36\x13\xcc\xd3\x33\xba\xc3\x89\x96\xe8\xe4\x22\x33\xf7\x8d\x3e\x3e\xeb\x2c\x5b\xba\xbe\xbe\x9e\x3e\x6f\x9f\xbe\xee\x5e\x0e\x9f\xf6\xa7\x0f\x3f\x77\x77\x3f\xee\x9f\xa7\xbd\xec\xa7\x97\xed\x53\xe6\xe9\xb0\x3f\x5d\x55\xf3\x71\xf7\x7c\x3f\x6d\x9f\xbe\xed\x6e\xa6\x87\xe3\x71\x7f\xb8\xd9\x6c\xbe\x6f\x8f\x0f\xbf\xbe\xe0\x6e\xf7\xb8\xb9\x7b\xbe\xfd\x73\xa2\xc7\xdb\xdf\x9b\x77\xf7\xba\xba\x7a\xf7\xaf\x1b\xf6\x48\x19\xe2\x1d\xd8\x2b\x99\x5a\xd1\x05\xe2\x0b\x62\xa1\x36\xfa\x36\x33\x02\x82\xa7\xb7\xcb\x75\x57\x20\x2a\xd4\x46\xc7\x8a\x47\xc9\xd0\x02\x56\x6a\xae\x57\x64\x99\x47\x85\xa9\x8d\x8e\x55\x87\x94\x20\x12\x21\x5a\xc8\xd4\x58\x07\x47\xa6\x06\x3a\xa3\x08\xb5\xd1\xb1\x81\xc1\xca\xf0\x82\xc0\xd4\x46\xcf\x0a\xd8\x67\xb0\x66\xe4\x44\xa6\x2e\xe8\x62\x74\xef\x09\x9b\x71\x0e\x86\x73\x58\xf3\x51\x21\x9e\x21\x81\x4c\x0d\xb4\x3a\xfc\xbb\xf9\x6b\x8d\x34\x43\xdc\xdb\xcd\x97\x1c\xf8\xc0\x50\x25\x53\x2b\x3a\xd5\x47\x4b\x75\x06\x64\x73\xe0\x03\x43\x58\xc8\xe6\xc0\xd7\xbf\x48\xa6\x06\xba\x78\x70\xc3\x97\x5c\xf7\x22\x1e\xe2\xc9\xd4\x8a\xce\x09\xd1\x81\xdd\xf2\x8d\x79\xad\xbe\x16\xef\xc1\xa5\xcc\x3f\x0a\x9b\x1d\x1f\x15\x75\xcd\xe1\xe8\x7c\x25\xa1\xb7\x3e\xcb\x68\x42\x38\xc3\x7a\xd9\x77\xf3\x1b\x46\x05\xe7\x4c\x36\x47\x3e\x82\x5d\xe3\xe7\xec\xf9\x80\x10\xa0\xba\xe8\x26\x56\x2d\x73\x5d\x07\x6a\x63\x6c\xa5\xb5\xbd\x6f\x47\x33\xec\x5b\xdb\x5b\xbd\x65\x58\x82\x40\xcf\x76\x89\xa1\x2d\xad\x2d\x63\xcb\xc5\x91\xa9\xa1\x16\x27\x64\xaa\xb7\xb3\x3b\x85\xd6\xe7\x49\x88\x91\x4c\x8d\x74\x81\x30\x99\x5a\xd7\x75\x2f\xad\x07\x4c\x5b\x63\x5d\x27\x6e\x73\xe0\x7d\x02\xd7\x93\xce\x64\xcf\x33\x43\x84\x21\x05\x12\x94\x6c\x76\xcf\x3c\x05\x27\x07\xef\x96\xf9\x98\xbc\xe4\xbd\xf5\xfd\x33\xb5\x01\x6a\xfd\xa5\xf9\xd4\x0f\xdf\x64\xd7\xa7\xba\x27\xcd\xcb\xc3\x5c\xdf\xc0\xf4\xea\x2b\x12\xc4\x87\xba\x15\xda\xec\xf9\x90\x10\x22\xb8\x28\x92\x90\xa9\x0b\xda\x1b\xdd\xfd\x74\x9a\x71\x35\xba\x3b\xf3\xc2\xf3\xca\x8b\xcb\x60\x89\xf4\x5f\xaf\xbe\xa2\x20\x38\x70\x26\x53\x63\x9d\x12\x99\x1a\x69\x01\x3b\x47\x36\x47\x5e\x11\x84\x4c\xfd\x0d\x00\x00\xff\xff\xd8\x0d\xd4\x3f\x70\x0a\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2672, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x96\x3d\x73\x1a\x4d\x0c\x80\x7b\x7e\xc5\xcd\x50\x4b\xac\xb4\x5f\x5a\xca\xb7\x7f\xab\x14\xa9\x09\x26\x31\x93\x18\x18\x8c\xc7\x71\x7e\x7d\x66\x81\xc0\x0a\xeb\x6e\xbb\x7b\xac\x47\x46\xac\xb4\x3a\xe6\xf3\xf9\xf0\x75\xbb\x7b\xda\xbf\xbf\x7e\x39\x7c\xfc\xf7\x6b\xbf\xfe\xb9\x39\x0e\x07\x3e\x0c\xef\xdb\x9d\xd0\xf0\x76\x78\x5a\x9d\x36\xb3\xaa\xfd\xbf\x3f\x6e\x86\xed\xee\xfb\x7e\x39\x3c\x9f\x4e\x87\xd7\xe5\x62\xf1\x63\x7b\x7a\x7e\xfb\x86\xeb\xfd\xcb\x62\x7d\x5c\xfd\xf9\x80\x97\xd5\xef\xc5\xa7\x7f\x37\x9b\x7d\xfa\xd3\x92\x3c\x26\x41\xc9\x48\x39\x42\x0b\xb6\x9b\x05\x49\x02\x86\x00\x2d\xd8\x2e\xb9\x8c\x01\xa3\x83\xe6\xd9\x30\xb9\x46\x3d\x92\x14\x24\x8e\xa0\xb1\xe7\x27\xed\xa7\x8e\x1f\x33\x68\xec\xf9\xa2\x7d\x31\xfc\xe0\x30\x67\x64\x2e\x18\x3d\xb4\x60\xb8\x91\x91\xc4\x63\xa8\x27\x9c\x40\xd1\xb8\x4d\x24\x48\x99\x40\xa3\xed\xd7\x4f\xa6\x4c\xc8\x8e\x41\xa3\xe1\xa7\x88\x31\x22\x79\x41\x07\xf7\x67\x8e\xd6\xa9\x5f\xe3\xc9\xdf\xdd\xe4\x27\x5d\x0e\x8c\x1c\x03\x28\xb2\xec\x84\x44\x05\x29\x84\x73\x7f\x34\xf6\x7c\xd1\xbe\xd5\x9f\x56\x90\x02\x1a\x3b\x7e\x71\xa0\xd1\x9c\x74\x42\x8e\x1e\xa9\x16\xe0\x41\xa3\xe9\x07\xa4\xec\x30\x12\xd6\xab\x71\x03\xfb\x2c\x6f\x82\x47\x2e\xa0\x68\xda\xf6\x0e\x14\x4d\xd9\xd2\x56\x32\x36\x01\xff\x04\xa2\xda\x50\xd0\xd8\xf3\x93\xf6\xad\x69\x6f\x85\xe4\x40\x63\xcf\x67\xed\x5b\xd3\x7e\x13\x52\x9d\x46\x81\x07\xee\x66\x94\x87\x8c\xa9\xf3\x3f\x1b\x91\xe0\x81\xbb\x19\xfe\x21\xc3\x9c\x9f\x98\x2f\x57\xd5\x23\xbb\x00\x1a\xc7\x7d\x0e\x0e\xa5\x80\xa2\x69\xbb\x6e\x57\x8d\xd3\x3e\xb3\x03\x8d\x63\x7e\xaa\x4b\x92\xbc\x80\xa2\x8e\x5d\x94\x3d\x5a\xfb\x25\x1e\x1c\x28\xea\xd8\xa4\x6c\xb3\x4f\x4d\x5c\xd5\x6d\x4f\x4e\x13\x57\x75\xdb\x53\x73\x89\x97\x84\x31\x40\x0b\xd3\xae\xb4\xee\x44\x15\x25\x21\xb1\x07\x45\xd3\x76\xcc\xa0\xc8\xb2\x0b\x21\x7b\x46\xa9\xeb\x05\x14\x75\x6c\x51\xb6\x59\xf7\x3d\x5e\x17\x41\x4b\x1d\x9b\x95\x6d\x6e\x81\x6b\x9c\x7c\x41\x92\xbb\x7f\xe5\x4e\x06\x37\xdf\xf5\xca\xdd\x8c\xf0\x90\x61\x76\xf5\x6c\x04\xcc\xe7\x57\x3c\x68\xec\xf9\x49\xfb\xe6\x2d\x6d\x05\xd1\xbe\xd5\x01\xae\x3f\xd7\xea\x8b\x2f\xd4\x7e\x29\x9a\xb6\x13\x81\xa2\xbf\x01\x00\x00\xff\xff\x5c\x4c\x0e\x83\xd7\x0a\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 2775, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x41\x92\xeb\x3a\x08\xdc\xcf\x51\xa6\xca\x2c\x66\x3b\xa7\x61\x10\xb6\xa9\x48\xa0\x2f\x48\x9c\xfc\xd3\xbf\x52\x62\xbf\x24\xf6\xbc\xa5\x69\x5a\xed\xa6\xe1\x13\xbe\x4a\x52\x50\x8e\xef\x8f\x4f\x28\xec\xce\x3a\x71\x83\x2c\x17\x06\xb2\x72\xaf\x3a\xa7\x89\xff\xf6\xf8\x18\x4a\x2e\x1b\xea\x05\x5b\x38\x35\x66\x85\x22\xd4\xcc\x6d\x8c\x0d\xbc\x58\x67\x93\xa6\x8d\xbd\x30\xc6\xcc\xed\xd8\x79\xfd\xb1\xeb\x53\x14\xd5\x17\x6e\xbe\x6f\xc3\x5a\x1d\xfc\x74\xab\x6b\x1b\xa1\xa6\x1b\xb5\xb3\xcf\x6e\x09\xe1\x24\x3a\xad\x40\x52\x20\xd3\x60\x0d\xa8\xcd\x12\x50\x71\x28\xae\x4f\xd4\x94\xd5\x62\x75\x45\xb3\x09\xf1\x5e\xed\xb7\x2a\xa8\x63\xd0\xca\xca\xd2\xdf\x5f\xd4\x61\x11\x4d\xb6\xf8\xca\xbb\xd7\xc9\x74\x94\x09\x2a\xba\x57\x6b\xf1\xa0\x24\xae\xd9\x6e\xe0\x81\x21\x04\x78\xc2\x82\x12\x4c\xb3\x5a\xb6\x49\x78\x7d\x20\x95\x04\x85\x03\x9d\xdb\x45\x88\x0f\x63\x18\x99\xd3\x0f\xd2\xe9\x59\x1f\x66\x9b\xcb\x0e\x74\xc6\x46\xf3\x3f\xb9\x6f\xbf\x3c\xbd\x04\x2e\x65\x1a\x7c\x28\xae\x43\xf7\xfb\xf8\xc7\xff\x79\x4d\x50\xd4\x25\x71\xab\x3d\x81\x6c\xe7\x84\xb5\x3e\x80\x2c\xc4\xea\x3d\x80\x52\xf7\x9a\xdd\x9b\xbe\x28\x14\x98\x2d\x0a\x4a\x5e\x3f\x39\x09\x36\x4e\xd2\x98\x62\xcf\x7d\x5f\x37\x1b\x47\x21\x5e\x07\xbf\xeb\x34\xdd\x00\x1f\xaf\x50\xfc\xfb\xa3\x36\x21\xce\xe2\xf1\xba\x33\x35\x04\x3c\xac\x1d\xe2\xfe\xef\xcc\xed\xf6\xdc\x96\x76\x10\x68\x3c\x89\x07\x37\xa0\x54\xe9\x10\xca\x36\xee\x6d\xc9\xba\x06\x4e\xfc\x62\xfb\xae\x3a\x48\xc1\x89\x1d\x7c\xd8\xf3\x3b\xda\x0f\x6d\x4c\x90\xfc\xfa\xcb\x18\x43\x0a\xbf\xc7\x16\xa7\x2f\xa8\x39\x9e\xa2\x67\x79\xb5\xba\x24\x3a\x3c\xd2\x6b\x98\x0f\xde\x16\xef\xe7\x02\xf7\x03\xdb\x43\xcb\x72\x3f\x7a\x32\x55\xa6\x08\xf6\x07\xf0\x27\x00\x00\xff\xff\xa3\xa9\x61\x8d\x3b\x04\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 1083, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x4b\xae\xc6\x20\x08\x05\xe0\x79\xf7\xd2\x13\x0e\x0f\xd1\x74\xff\xfb\xba\x41\xfb\xb7\xf6\xce\xfc\x44\x02\x01\x69\xe8\x02\x2a\xc2\xaf\x83\x06\x4a\xc2\x40\xed\x8f\x94\x50\x91\xeb\x50\xc3\x48\x30\x3b\x98\x76\x1d\x2e\xc8\x84\xaa\xa3\xef\x20\x5f\x05\xd4\xb7\x60\x83\x9c\xef\x59\x23\x66\x68\x08\x68\x0d\x2a\x53\x14\xc2\x5b\x55\x59\xa4\x43\x9d\xa0\xf3\x76\x07\xc5\x90\x4b\x9a\xa0\x2b\xb2\x5d\x47\x73\x38\xc2\x21\xe7\xef\x34\x0b\xb4\x40\x28\x28\x32\x1b\x7b\x35\xec\x55\xaf\xa4\xe7\xfc\xa4\xc5\xa2\xfd\xa4\xa1\x70\xbb\x0e\x8a\xc3\x05\x4a\x81\xe9\x4d\x9f\x43\xcc\x8d\x1d\x73\x84\x8f\x28\x77\xaa\xd2\xd7\x08\xf8\x73\x80\xde\xd6\x8c\x69\x84\x86\xc1\x1c\x6a\x9b\x1b\x21\xe7\x86\xd9\x24\xcd\xc1\x14\xb0\x07\xb2\x1e\x47\xce\xae\xeb\xda\xda\x3f\xf7\xaf\x7d\x7f\x1f\xf7\xbe\x5b\x47\x33\xb0\x23\xc7\x75\xa8\x38\x72\x80\x23\x21\xe7\x86\x59\xba\xcc\x1a\x98\x13\xea\x5e\x17\x59\x7b\xab\xb0\x3e\xaa\x65\xea\x78\x19\x06\xae\xec\xe5\x51\x8d\x7c\xa8\xdf\xa8\xd9\x87\xd5\xf4\x4d\xad\xdf\x78\xe7\xb6\x0e\xb6\xfa\x50\x7e\xfd\x05\x00\x00\xff\xff\x15\x62\x73\xcb\xce\x02\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 718, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x59\x5b\x92\xab\x2c\x10\x7e\x3f\x4b\x99\xaa\x50\x5c\xd4\xc4\x3a\xab\x41\x20\x91\x1a\x05\x7e\x20\x3a\xd9\xfd\x5f\x24\x4e\x34\x91\xd0\x67\x9e\x26\xdd\x1f\x7d\xa7\x41\xfa\x0b\xf1\xc3\x18\x94\xbc\x28\x64\x54\xfc\xfb\xe7\x0b\x71\x69\x7e\x02\x12\x76\x7c\xfc\x08\x5f\x68\x0c\x5c\x86\x95\x7d\xa7\x98\x27\x62\xbc\xff\x56\xc2\x3c\x11\x51\x8e\xf1\x97\x2d\xc5\x9b\xf8\xcb\xd0\x49\x13\x28\x1a\xb5\xf0\x36\xd8\xf3\x13\x39\x58\xc1\xa3\xb6\x06\x0d\x7a\x7a\xa2\x5f\xd7\x7a\x2e\xb7\xaa\x7d\x32\x6b\xf3\x3b\x28\x3f\x69\xa1\x02\x0a\x56\x68\x3e\xec\x55\x44\x35\xa8\x51\x45\x7f\xcb\xb0\x3c\x3f\x9f\xb5\x18\xb9\xe1\x17\xe5\x7f\x15\x4e\xda\xc7\x2b\x1f\x14\xf7\xb1\x7f\xd2\xac\x8f\xea\xe7\x0b\x49\x1e\x39\x4a\xd2\x7e\x4d\x16\x76\x44\x26\xf0\x28\xf2\xc8\x77\x8d\x0f\x6e\x96\xf9\x9a\x12\x2e\xd8\xea\x25\x17\x51\x4f\x3a\xde\xd0\xac\x8d\xb4\xf3\x92\x28\x2e\x8d\xfa\xb9\x2e\x39\xda\x24\xf0\x25\x40\x5c\x06\xb2\xcd\xe5\xf2\xfb\x97\xfb\xcd\x0f\x42\x9a\x83\x09\x88\xcb\xa8\x44\x8f\xa4\xfa\xfb\x87\x7b\xcf\x6f\x5f\x07\xe7\xad\x44\xd2\x22\x19\x1c\x1a\xdd\xbb\xb9\x9d\x36\x97\xbb\xa6\x37\xf2\xc0\x18\x26\x07\x8e\x88\xf4\xd3\x0b\x49\xec\x49\x97\x2d\xc9\x10\x86\xab\x83\x7a\x27\x35\xaf\xb2\x1e\xa4\x0c\xea\x55\x16\xed\x0e\xc2\x7a\x8c\x09\xe2\x4e\x23\x97\xfe\xc9\xb1\x59\x99\x5d\x7d\x60\xcf\x26\x10\x34\x9b\xf0\x9a\x8f\xce\x30\x57\xd4\xca\x82\xe8\x31\xc5\x98\x52\x46\x4f\x99\xf5\xe1\x51\xcc\xe6\x72\x08\xb7\x5f\xda\x6d\x1f\xce\xdb\x3e\x9c\x0f\xd2\x36\x2a\x62\x4d\xb2\xe0\xa2\x57\xf7\x92\x1b\xb9\x8f\xaf\x3a\x85\x0c\x14\x57\xc7\x1a\x0d\xe2\x86\x86\xc1\xcc\x8f\x2a\x11\x32\x54\x75\xbb\x27\xb6\x4d\x8d\x86\x54\xfa\x2b\xb1\x27\x05\x9f\x9f\x5c\x9a\xe7\xee\x3c\x59\x48\x6a\x4f\xba\xbc\x93\xe8\x7e\x21\x7d\x5d\x68\x47\xc7\xa3\xfa\x11\x3d\x37\x17\x85\xc4\x60\xaf\x92\x3b\xb7\xd8\x6d\x4d\xd4\xe6\x7a\x1d\x91\xdc\x17\xb1\xb0\xde\xa1\x10\xf7\x74\x47\x30\x01\xf6\x85\x70\xf4\x1f\x30\x15\x8c\x49\x25\xe6\x04\x9a\xb0\x90\x4b\x97\x95\x1d\x9b\x4d\xa0\x98\xa4\xbf\x7d\xfd\xc8\xae\x0e\xa2\x27\x98\x10\x8c\x09\xa5\x10\xe0\x58\x06\x9c\x18\xa0\xe2\xc4\xea\x32\xa0\x25\x80\x8a\x36\xb7\x0b\x36\x80\x64\x26\x00\x00\xdc\x24\x98\x56\x00\x00\x70\x93\x60\x06\x49\xa8\x20\x1b\x2a\x40\x02\xa9\xca\x91\x24\x14\xb7\x00\x80\x02\x5e\x50\xc8\x4d\xca\xca\xc9\x22\x0c\xc8\x26\x61\x50\xa8\x19\x63\x10\x00\x90\x50\x11\x20\x0e\x15\x6d\x20\x00\xe0\x45\xc5\x30\x00\x80\x92\x55\x03\x7b\x93\xd4\x90\x17\x35\xb0\xb3\x48\x5d\x01\x2a\x9a\x0a\xf0\xe2\x08\x19\x79\x64\x80\x91\x47\x28\x0e\x27\x02\xa4\xfb\x04\x25\x0b\xea\x30\xe4\x04\x15\xed\x09\xda\x7a\x2d\x06\x24\xb4\x04\x92\x00\x04\x8a\x62\x52\xf6\x82\x62\x60\x67\x51\x4c\x21\x09\xac\xdc\x82\x28\x2e\x6f\xbd\xd4\xa4\x8a\xad\x38\x01\x8a\x6e\xde\xbb\x58\x19\x40\x31\x08\x28\xd6\x43\x6a\xf6\xc5\x38\xa4\x66\x0f\x00\x58\x39\x17\x04\x33\x0a\x04\x8a\x41\x36\x64\xaf\x76\x2f\x80\x0a\x52\x01\x79\x51\x61\x40\x42\xc5\x00\x1b\xaa\xf2\x99\x45\x70\x5d\x3e\x79\x09\xae\xcb\x8d\x94\xe0\x1a\x2a\xb9\x86\x00\x46\x36\xe5\xc3\x3d\x01\x80\x82\x69\xca\x07\x0a\xc1\x47\x0c\x84\xfa\x58\x3e\xd4\x08\x3e\x96\x3b\x2d\xc1\x27\x02\x02\x00\x2f\x4e\xe5\xc3\x3d\x01\x80\x40\x9d\xa0\x9a\x04\x3a\x2d\xc1\x2d\xb4\x2f\x5a\x5a\xe8\x0f\x0c\x9f\xc8\xa9\xd4\x1f\x58\x72\xb2\x74\x24\x25\x00\x2b\xf5\xa8\x04\xa8\x4a\x0d\x24\x01\x9a\x52\x13\xbb\x03\x20\x1b\x8e\x90\x84\x23\x29\xe4\x22\x01\x4e\x65\x23\x5b\xdc\x02\x80\x54\xd7\x65\x00\x2d\xdb\xd0\x92\xa6\x74\xe2\x24\xc0\xb1\xd4\x27\x13\xa0\x2d\xe7\xa2\xa5\xc5\x03\xe5\x01\x28\x46\xb2\xa5\xc5\x4b\x2f\x4b\xdf\x06\x45\x2f\x48\xfa\xce\x2e\x65\x93\x60\xcc\x4a\x57\x94\x04\xa8\x4b\x9b\xf7\x01\x00\x54\x94\x2b\xea\x7e\xaf\x2e\xed\x8b\xfb\xa5\x17\x90\x50\x03\x5e\x10\xd0\x86\x62\x1b\x64\xd0\x75\x91\xa5\xa3\x1b\x48\x16\x25\xc5\x9a\x4c\x47\x77\xe9\x7a\x90\x00\xe5\xcd\x9b\x00\x1f\x92\x35\x9b\x40\x64\x8e\xd3\xdc\x97\x52\xdc\x7e\xfa\x5c\x5e\x01\x34\x7f\xe4\x6e\x01\xd9\x7a\xdf\x02\xb2\xe6\x6f\x00\xf9\x18\xaf\x00\x96\xcf\xd2\x16\x90\x6d\x0c\x1b\x00\xa8\x22\x5f\x4a\x2b\xa0\xca\xc7\x78\x0b\x00\x22\x59\xe7\xf3\xbc\x01\x40\x2a\x6a\x50\x05\xe4\x45\x9d\xdf\x73\x2b\xa0\x81\x24\x34\xf9\x6f\xb8\x15\xf0\xe1\xd8\xdf\x02\x80\x5c\xb4\x18\x70\xb3\x85\xea\xe1\xc3\xc7\xcd\x06\x00\x19\xd9\x02\x46\x12\x0c\xa8\x20\x18\xd8\x17\xe9\xa6\x58\x06\x40\x1b\x87\x40\xfb\x82\x30\xc8\x48\x06\xaa\x00\x0a\x86\x40\x65\x4f\x1a\xa0\x81\x90\x26\x6b\xa4\xe6\x17\x63\x43\xd4\x22\xa0\x70\x75\xce\xfa\xf8\xfe\x4e\x28\x75\x10\xf0\xab\x64\x42\xc1\xef\x92\x09\x05\xbf\x4c\x9e\x07\xf5\xb3\xbe\x2e\x9f\x77\xaf\xa4\x97\x95\x79\x51\x16\x10\x76\x51\x76\x52\x1e\x00\xf5\x9b\x91\x45\x4f\xd7\xff\xf5\xa1\x1b\x9a\xd2\x9b\xbb\x3e\x74\xb7\xe2\xa3\xbc\x3e\x94\x1f\xb0\x37\xfc\xec\x13\xb6\x3e\x04\x43\x8b\xeb\x9f\xfc\xec\xfa\xef\x09\xce\xdd\xf7\x04\x67\xee\x7b\x82\xf3\x36\x74\x04\xcd\xf3\x8c\xc6\x80\xf8\x37\x97\x66\x99\x08\x0d\x81\xce\xaa\x43\x5e\xc9\xd1\x1a\x89\xee\x6f\xdf\x6f\x2b\x47\xdb\xe9\x41\x21\xa7\x9d\x42\xdc\xeb\xdd\xe8\x6a\x3b\xb8\x1a\x83\x89\x2a\xc4\xfd\x28\xe3\x31\xac\xb2\xe7\xb3\x16\x8a\x3b\x17\x9e\xf3\xb3\x85\xe5\xaf\x83\xfa\xc0\xb7\x46\x05\x15\xa3\x36\x97\x70\xe8\x0c\x2d\x0d\xe0\xb6\x50\x71\xfb\x67\xa8\xec\xea\x7f\x85\xf6\xdf\x45\xa9\xce\x2b\x74\xb6\x36\x3a\xaf\x4d\x74\x5e\x49\x2d\x96\x28\x39\xaf\x26\xad\xe6\xb5\x7c\x3d\x97\x1b\x27\x5f\xe6\x9c\x69\x9d\x4f\x6a\xf8\x73\xbe\xf9\x16\xf3\x20\x7a\x35\xf2\x2d\x79\x9b\xd4\xa0\xc4\x35\x19\x32\xf0\xd0\x47\x3e\x7c\x6b\x73\x59\x96\xfd\xba\x11\xb8\x91\x9d\xcd\x8f\x22\x9f\xa0\x59\x9b\x83\x73\x0a\x04\x15\x01\x79\xa6\xd9\xcd\x7e\x16\x92\xda\x93\xb6\xb3\x9f\xe0\x6e\x46\xc5\xdd\x28\xf9\x41\xe6\xc3\xae\x3f\x3e\x18\xea\xea\xad\x53\x9f\x82\x15\xe6\x4d\x1e\x42\xb4\x5e\x09\x1e\xf9\x60\x2f\x5e\x4d\xbf\x03\xea\x3b\xf9\xbf\x2b\x1f\x74\xdc\x4d\x92\xc3\xd5\x4f\xea\x86\x66\x1e\x83\x35\xef\xcc\x75\xfe\xcc\x9d\x53\x3f\xa8\x4b\xb9\xb8\xeb\xfd\x38\x99\x5e\x19\x57\xbf\x4b\x7c\x0c\x67\xf5\x3b\xb9\x0e\x3d\x77\x49\x5c\x7e\xc3\x4f\xca\x87\x64\x7a\x7f\xeb\xbc\x96\xf7\xf6\xd3\x2b\xbf\xb8\xf9\x98\x44\x1f\xbe\x4a\xb5\xbc\x60\x4a\xa5\xb2\x40\x3e\xd5\xc0\xcb\xbc\x1b\x52\x94\x95\xb0\x04\x75\xcd\x4f\x3e\xca\xb3\x36\x04\x23\xed\xa6\x26\xc7\x39\xe6\x79\xff\x07\x00\x00\xff\xff\xd3\xde\x3b\x33\x08\x21\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 8456, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x96\x49\x72\x84\x21\x08\x85\xf7\x7d\x97\xbc\x02\xc4\xa9\xfa\xfe\xf7\x4a\x3d\x9c\x7b\xd1\x89\xdf\x8f\x28\x32\xa9\x26\x94\x86\x66\x68\xdf\xcf\x1c\x37\xa8\xf5\xa0\x5a\x60\xda\xa0\x5a\x0f\x76\x68\xd7\x1b\x4d\x65\x60\x83\xd6\x0a\x75\xdf\xd8\x04\xfd\x08\x5b\x81\xe5\x2d\xb4\x24\xd0\x34\xb1\xc3\x52\x47\x19\xbb\x36\x45\x46\x4e\x7b\xdc\x61\x6e\x41\x2a\x15\x19\x4d\x6e\x68\xdf\x8f\x25\xf4\x8a\xa2\xd0\x54\x17\x99\x74\xf4\x49\x1d\x2a\x50\x3d\xd0\x41\x23\x0f\x95\x43\x5a\xf8\xdb\x68\x0a\x93\xb1\x8c\x8a\xc1\x61\x34\x6c\x92\x29\x7c\x83\xe6\x0c\x75\x99\x9c\xa0\xcd\xa0\x56\xbe\x1f\x17\x7a\xd5\x8c\xf3\x6d\x60\x87\x0b\x34\xd7\x45\xa6\x05\x35\xdd\x64\x59\x0f\x36\x14\x3b\xc4\x00\x1c\x4d\x33\x9e\x20\xb0\x0a\xcc\x04\xe6\x6d\x60\x81\x42\x6b\xd9\x60\xb4\x76\x8f\x75\xae\x59\x2b\xcc\x1a\xbc\xde\xd4\x1e\xea\x67\x66\xe2\x76\xc3\xb4\xc6\x33\x76\xf8\xd8\x5c\x19\x2c\x58\xce\x9b\x54\x50\xdb\x21\x45\x4f\x87\x1c\x9a\x8f\xa2\xd9\xda\x3f\x96\xf1\x88\x7e\x90\x43\x9d\xa7\x94\xc9\x19\x1a\xb1\x0b\x88\x64\x83\xb9\x1c\xce\x0a\x9b\xeb\x9a\x86\x58\x9b\x7d\x3f\x99\x63\x45\x32\xd0\xaf\xd9\xa0\xa9\x41\x7d\x1c\xf4\xc6\xfe\x60\xd8\x48\x66\x6e\x65\x98\x97\x89\xb1\x2b\x52\x7a\x70\x4f\x26\x32\x6f\xf2\xe1\x3c\xcc\x0e\xac\x11\xb5\x30\xeb\xa0\x7a\xbd\x38\x41\xd3\xd2\x6e\x30\x87\xd6\xa5\xdd\xd1\x2a\xdc\x36\xa9\x25\x30\xe2\x0b\x5b\x47\x9b\x76\xd5\x11\xa4\x69\x56\x75\xfa\x79\x9f\x81\x15\xe9\x75\x78\x6f\x31\xbd\xa7\x76\x98\xbf\x6b\x7a\xa7\x99\x37\xa7\x51\x2b\x93\x69\xb6\xcd\xad\xb9\x2f\x83\x57\x17\x33\xe0\x74\x6c\xb9\x38\xc3\x64\x71\x45\x11\x96\x74\xa0\x25\x9a\xcd\xba\xef\x93\x0b\x9c\xff\x2e\x4c\x30\xb1\xef\xa7\x38\x1c\x05\x2a\x32\xc7\x96\x20\x7f\x6b\x14\xf9\x58\x32\x52\x8f\xf4\xb0\x24\x81\x5c\xa3\xc0\xda\x02\x15\xa1\xd2\x1e\x2f\xb5\x19\x7a\xb6\x87\xa9\xc5\x7e\x47\x23\x89\x19\xc6\xbe\xd5\x16\x71\x13\x59\xe0\x1e\xa9\x76\xc0\x2f\x50\x69\x0f\xf5\x45\x74\x9b\xed\x35\x46\xdd\x3c\x64\x0f\xa5\x4d\x49\x90\x8f\x5e\x2d\xd1\x77\xa7\x91\xc3\x23\x7b\xbc\x0f\x97\x61\xd9\x8e\x88\xc7\x0b\x11\x3b\x60\x8f\xe4\xd0\xa4\xdf\x4f\xad\x60\x4e\xf6\xd1\x4b\x54\x1c\x91\xdc\x35\x3a\x56\x20\x2d\xa9\x28\xe5\x42\x36\xaa\x83\xce\xce\x74\x66\xb3\xa7\xe4\x17\x23\x96\x8b\x53\x65\x2a\x4f\xe6\x51\xa1\x3d\x6f\x34\xe6\x95\xae\xe9\x6c\x72\xa6\xba\x29\xb5\x08\xd7\xa4\xcc\x3e\x30\x55\x4d\x05\x8e\x5a\x2f\x92\xa8\xff\x85\xa6\x2c\x8f\xb4\x3e\x38\x12\x4b\x9e\x8b\xa9\xc2\x78\x13\xb0\x6f\x3f\xa8\xb1\xdc\xe1\xb8\x1d\x1e\xbe\xd4\x8b\x43\xfe\x2e\x08\x6f\x6b\x52\x6a\xa1\x0c\x53\x36\xa9\xa4\x83\x1a\x9a\x07\x1e\x4d\x36\xa2\x50\xf5\xa8\xf8\x24\xd3\x99\x17\x47\x2c\x26\x33\xa7\xf3\xc5\x2a\x25\x16\x3f\x34\x57\x5f\x1f\xd8\x23\x5e\xf6\xf6\x72\x2f\x37\xb7\x9f\xf9\xed\x67\x7e\x43\xb5\x9f\xf9\x8f\x82\xea\x6d\x0f\xdd\xf5\xd8\x13\x37\xdc\xcb\xcf\xfa\x26\xef\xfa\x26\xaf\x7d\xb5\xc5\xbb\xe0\x70\x9f\x9e\x9f\xdc\xda\xb8\x41\xd7\x07\x4b\x39\x9a\x20\x53\x9c\xaf\x83\xa6\x73\xff\x3a\x5b\xca\x14\xe7\xca\x2a\x8a\x82\x3a\xe3\x61\xfa\xc4\x72\x89\xca\x23\xe2\x1b\x64\xcb\x08\x8f\xd0\x66\x31\x4d\x4c\x72\xcd\x4d\xf2\xcc\xa5\x35\x5b\x48\x78\x85\xe5\x16\xde\x26\x14\xf0\xef\x06\x5e\x15\x6c\x27\x13\xbb\x8e\xb2\x19\xc4\x14\xd1\xe6\x3f\x9c\x7f\xb8\x1f\xe6\x05\xaf\x97\xbe\x29\x6e\xb1\xf9\x08\xc0\x44\x5e\xf7\xb1\x77\x69\x7c\xd2\xf1\xee\x73\xdd\xa8\x4e\xb3\x2f\x64\x0d\x1e\xac\x86\xba\x26\x8f\x5b\x85\x3d\x32\x30\x45\x67\x2f\x7a\x21\x1f\xa1\x14\x77\x0d\x77\xf0\x42\x8a\xb7\x65\x30\x9f\x90\x6d\xbc\xe0\xf6\x07\x6d\xe3\x0e\x1a\x1f\x3a\xb2\x23\x33\xd7\x7a\x8e\x27\x83\xe5\xf0\xfe\x45\xe1\x61\xf6\x4a\x2f\xa3\x6b\xda\x46\xe6\xd7\x16\x17\x5e\xb4\xf3\x79\x6c\x3a\x2e\x3f\x66\xa6\xfc\xdd\xc4\xe9\xff\x01\x00\x00\xff\xff\xc0\x30\xfc\xb5\xb0\x0b\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 2992, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1511528662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x4b\xae\xe5\x20\x0c\x04\xd0\x79\xf6\xf2\x4a\x94\x3f\xd8\x28\xfb\xdf\x57\x0b\x92\xbe\xc1\xcc\x38\x06\x22\x53\x10\x2a\x7a\x22\x03\x16\xf7\xf5\x03\xc3\x97\xc2\xc0\x18\x20\x9f\x49\xb6\x80\xc1\xdb\x0e\xb9\x2f\x99\x50\x30\x07\x28\xbd\xda\xe3\x70\xde\x97\x35\x44\x40\x64\xa0\xfd\x7d\x63\x71\xbf\x2f\x97\x35\x66\x10\xd2\xe4\xbe\xba\xc3\x1d\xd4\x44\xfb\xfb\xc6\x6b\xe9\xcb\xae\xdf\x54\xd7\x77\xaa\x83\x1c\xa0\xd9\xd3\x40\x71\x56\xe7\xa8\x1e\xeb\x74\x84\xb8\x42\xf5\x3d\xec\x8c\xa1\xc1\x09\x66\x1c\xce\xea\x51\xd7\x8b\xf5\xc3\x71\x78\xdf\xaf\x90\x51\xa8\xfb\xd7\x66\x06\x1b\xd6\x49\xff\x9b\x9c\x09\x1c\xee\xd5\xbd\x1d\x96\xcd\xdd\x6b\x2f\x4f\x61\x1c\x05\xe7\x59\xd0\xfb\xa2\xc7\x73\x31\x0a\x69\xf6\xb3\x58\xc3\x0c\x77\xa3\x48\x7b\xdd\xe7\xad\x53\xb3\x72\x14\x5a\x5d\x6c\xac\xac\x7b\xed\xdb\x3b\x3a\xdc\x8a\x72\x17\x65\xf6\x3c\x08\x51\x41\xce\x98\x2b\xb3\x70\x85\xb6\x51\x3e\x52\xe7\x03\xde\xf5\x5c\xc9\x2a\x18\x42\xc0\xd4\xc3\xfd\x70\x56\xcf\xd7\x23\xf3\xbf\x9a\x0f\xd2\x56\x2f\x1b\x3b\xef\x7f\x01\x00\x00\xff\xff\x82\x31\xb3\x06\xaf\x03\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 943, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3b\xb2\xc3\x20\x0c\x45\xfb\xb7\x94\x57\x68\x12\xa7\xf4\x6a\x88\x90\x19\x65\x40\x62\x90\x02\xdb\x4f\xe1\x14\x8e\x3f\x1d\xf7\x5c\x74\x46\xfa\x87\x62\x8b\x0b\x1a\x03\x6a\x99\xff\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xc5\xbf\x6d\x65\x78\xb2\xa4\x35\xa1\x4e\x67\x9f\xb0\xe5\x3d\x8a\x25\x42\x21\x0f\x46\xad\x33\xd2\x61\x24\x6d\xac\x09\x32\x77\x5a\xdf\x59\x13\xcb\x26\xff\xee\xda\xa6\x9b\x8d\xd7\xfd\x51\xda\xde\xe7\x5c\x08\x06\x4b\xd4\x61\x2b\xe9\x21\x73\xbc\xbc\x6b\x44\xac\x67\x2c\x64\x3f\x60\x43\x15\x87\x50\xeb\xd1\x72\x55\x01\xc5\x44\xf6\x66\x27\x10\xf2\xf9\x13\x00\x00\xff\xff\x0f\x64\x5d\xd5\x74\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 372, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc9\x41\x0a\x03\x41\x08\x44\xd1\x7d\x1f\xe6\x63\x69\xd9\xe3\xe0\xfd\xef\x15\xb2\x08\x64\xf9\x78\x2a\x26\x50\xd2\xde\xe3\x40\x1a\x14\xc5\xb3\xe7\x1a\xd3\x26\xbb\xfe\xe1\x3d\xb7\xe9\xe4\x1d\xb2\xf4\x93\x62\xd0\x37\x33\x1e\x7c\xd1\x6b\xe4\xfd\x04\x00\x00\xff\xff\xff\x0f\x28\x2b\x60\x00\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 96, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xd1\x6a\xeb\x30\x0c\x06\xe0\xfb\xf3\x28\x85\x8a\xc6\x71\x73\x28\x7b\x1a\xcd\x56\x82\x99\x2d\x05\x5b\xab\x9b\xb7\x1f\x5b\x28\x64\x89\x07\xbd\xfd\xa4\x5f\xc2\xf2\x09\xf0\x9c\x0a\xf9\x89\x80\x49\xdf\xfe\x9d\x40\x29\x52\x22\xcd\x0b\xa4\xe0\xb2\x14\x19\x15\x9c\xa4\x9f\x52\xc6\x71\x0c\x2e\x21\xe3\x44\xf9\x19\xb8\x4b\x56\x7a\x80\x47\xc5\x7d\x04\x7d\x84\x1a\xd8\x4b\x2d\x2b\x38\x5f\xba\xce\xf6\x10\x85\x21\x46\xae\xeb\x8c\x6f\x35\xc3\xed\xa8\xe6\x62\x8d\x85\xe8\x96\x03\xf7\xd7\x26\x0f\xdd\x91\xfb\xfe\xd6\x40\xdb\x98\x6b\x2f\xff\x61\xcc\xb8\xc5\xc5\x40\x21\xd5\xc0\x53\x69\xbc\x10\xf0\x03\x3d\x97\xb5\xd7\xbf\x5f\x5f\xee\x9d\x48\x5e\xef\xad\x8f\xdf\x47\x7c\x06\xcf\x35\x70\xf3\xec\x65\x5e\x98\xd4\xb4\x99\x3e\xb3\xcc\xb4\xa9\x6d\x77\x29\x65\xf2\x02\x61\xbe\x0f\xfb\xf4\xfa\xcd\x7f\xee\xac\xa8\x45\x78\xa7\x5f\x01\x00\x00\xff\xff\x04\xe2\xdb\x08\x5e\x02\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 606, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\x51\x0e\xa6\x20\x0c\x04\xe0\x77\xee\xb2\x93\xce\xb4\xa5\x10\xee\x7f\xaf\x0d\xb8\xfe\x6a\xf6\xc1\xa4\x5f\x8c\x53\x61\xe8\xa8\x01\x8e\x01\x46\xad\xb6\x39\x21\x9f\xe8\xf3\x68\x10\x89\xf4\xdf\x3c\xa1\xd0\x6a\x61\x28\x83\x44\x28\xe6\xc5\x82\xd4\xff\x63\xda\x21\x39\x40\xeb\xa0\xdb\x6a\x49\x30\x08\x17\x92\xab\xa5\x40\xdf\xeb\x07\xc6\xfc\x90\xf9\xcf\x3d\xa0\x30\x7c\x48\xc8\xf2\x71\x12\x11\x17\x6b\x60\x07\xdc\xd9\x75\x8e\xb6\x03\x1e\x27\x21\xea\xf1\x7e\xfa\xc3\xe9\xe0\xcb\x92\x43\x7e\x71\x14\xba\x81\x56\xab\xf5\x40\x40\x0e\xfb\x73\x4f\xca\x5c\xad\x27\x32\x11\x01\xda\xf8\x68\xde\x22\x1d\x7b\xfb\x4b\x7e\x4b\x29\x14\xdf\x9a\x9f\x77\x9c\xb6\x1a\x2d\x10\xfb\xab\x42\xef\x2f\x4e\x88\x3f\x4a\xe3\x2a\xee\xa1\x4c\x8f\xbd\xc0\x53\x32\x79\x15\x39\xcf\x6f\xbc\xa8\xab\xf7\x00\xcb\xe0\xa7\xee\xed\x02\x59\x90\xe7\xb9\x33\x4e\x9e\x2c\xd9\x00\xd5\xd7\xdf\x00\x00\x00\xff\xff\xfa\xf1\x3b\x42\x51\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 593, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x5d\x6a\x45\x21\x0c\x04\xe0\xf7\xb3\x97\x0e\x4e\xfe\x4c\x70\xff\xfb\x2a\x72\x5b\x8e\xf1\x3e\x7e\x23\x8c\x41\x43\x05\xc7\x84\xc1\xc7\x7a\x64\x43\xc1\x2c\x50\xfc\x72\x74\xfb\xbc\x9c\xeb\xb1\x81\x39\x21\x52\x70\x5d\x4f\x38\xdc\x41\x4d\x90\xd2\x69\x8d\xbb\xfa\x60\xbe\x0c\x85\x08\x3b\x77\x55\x80\x2c\xd0\xec\x33\x47\x73\x76\x67\x75\xd7\x58\x0f\xd5\xc0\x39\xe0\xfc\xb2\x58\x5c\x9e\x97\xf3\xb0\x42\xaa\x51\xcf\xb6\xc4\xf8\x39\x20\xee\xef\x21\xe9\x08\x39\x1c\xde\xbb\x3f\x41\x5d\x81\xf3\x0e\x74\x3d\xf4\x09\x0f\x54\x80\xb2\x59\x84\xa8\x20\xf7\xad\x8d\x31\x3a\xe5\x25\xb5\xfe\xca\x5a\x60\xff\x81\x61\x0a\x98\x7a\x39\x2e\x67\xf7\x7e\x5c\xd9\xeb\xb5\x3f\xc0\xf6\x38\xbf\x01\x00\x00\xff\xff\xe4\x8b\xba\xa8\x70\x02\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 624, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3b\x8e\x45\x21\x0c\x04\xd1\x9c\xbd\x4c\xc9\x6d\xdc\x7c\xc4\xfe\xf7\x35\xe2\x45\xdc\xcc\x27\x28\xab\xd5\x59\x81\x12\xd7\x69\x15\x48\x0b\x45\x67\x3e\x1a\xa8\xc7\x69\xa3\x28\x5c\x64\x3e\xb7\xfb\x8b\x3a\x6d\x18\x27\x8a\x45\xee\x57\xfe\x48\xb7\x53\xd7\x7d\xc0\x10\xf1\xf7\x20\xed\xd3\xe4\x89\x8d\x7a\xa1\x8a\xc7\x46\xb9\xbe\xbe\xeb\x32\x8a\xb9\xd1\x9e\x64\xfc\x3c\xa9\x81\xf6\xed\xcf\x7f\x00\x00\x00\xff\xff\x35\x58\x4b\x85\xe7\x00\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 231, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd1\x51\x6e\xc3\x20\x0c\x06\xe0\xf7\x1d\xa5\x52\xad\x42\xd2\x84\x6a\xa7\xb1\x82\x13\xa1\x81\x89\xc0\x6d\x96\xdb\x4f\x5a\x35\xa9\x0b\xee\xeb\xf7\x3b\xf9\x01\x9f\x00\xcf\xa9\x92\x5f\x08\x98\xe4\xf3\xe3\x04\x42\x91\x12\x49\xd9\x21\x85\xa9\xe4\x9a\x67\x81\x29\xa7\xdf\xa8\xe0\x3c\x87\x29\x21\xe3\x42\xe5\xef\x83\xfb\xea\x51\xa8\x9d\x7e\xe4\x22\xf4\x0d\x1e\x05\xdb\x70\xab\x47\xfb\x7f\x8e\xc9\x57\x63\xad\x83\x98\x19\x62\xe4\xed\x45\xfb\x5e\xd3\xe1\xaa\xe9\xd8\x69\xea\xd4\x59\x37\xb6\x6a\x2f\xfd\xa5\x87\x38\xed\x07\x36\xd6\xde\x94\x69\x63\xaf\x83\xca\xa3\x72\x13\x6b\xac\x33\x2d\x77\xdd\xad\x2d\x74\xe6\xf8\x83\x4a\x22\x81\x97\x7a\xde\x02\xab\x6f\x5c\xd7\x9d\x49\xac\xce\x18\x45\x0f\xe8\x5e\xf2\xfa\xba\x4c\xfc\x42\xcf\xf5\xd9\xf9\xdc\xe8\xdb\xc6\x2d\xb0\x83\xb0\x3e\x86\x43\xf0\x13\x00\x00\xff\xff\x41\xa9\x79\xe8\x64\x02\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 612, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x5d\xce\xf4\x2a\x0c\x03\xe0\xfb\xee\xe5\x58\xb1\x93\x00\x51\xf7\xbf\xaf\x23\xe8\xf4\x2b\xbc\x17\x23\xf1\xf0\x37\x2e\x09\x1d\x7d\x40\x6e\xa0\xc7\x7d\x4d\x16\xe4\x85\x56\x4b\x83\x48\xa4\xff\x1b\x17\x14\xba\x2f\x39\x6a\x20\x0a\x8c\x07\xb5\x20\xde\x57\x18\x7a\x87\xd4\xa0\xa8\x83\x69\x1f\x07\x4a\xf7\x95\x04\x83\x70\x21\x79\x5f\x29\xd0\x07\x18\x03\xa3\x9f\xac\x83\xcc\x9f\x5b\x40\x4e\x28\x3f\x86\x61\x5f\x0d\x42\xb6\x2d\x27\x11\xf1\xb0\xcf\xcb\xfa\x3c\xf1\x39\x09\x51\x9f\xe7\xaf\x7d\x2c\x07\x37\x4b\x0e\xf9\xc3\xd1\xd1\x0c\xb4\x27\xb8\xdc\xc1\xaa\xe7\x09\x5a\x60\xe6\x84\xfd\xf7\x8e\x94\xf9\x4e\x77\xcc\x67\x59\x1f\xe2\x2b\x22\xc7\xd8\xdc\x40\x9b\x4e\x64\x22\x62\x17\x39\xd3\x1c\xd2\x21\x7f\xa5\x14\xe2\x50\x1d\x62\xd9\x4e\x99\xee\x8b\x16\x88\x79\x49\x47\x6b\x1b\x0b\xb3\xc8\x3f\xce\x3a\xae\xe6\xf8\xb8\x1f\x96\x77\x70\x35\x12\x09\x89\x50\x41\xb9\xda\x2c\xc0\x6e\x70\xfb\xed\xdf\xed\x7f\xfc\x67\xff\xfa\xfb\x79\x31\xdb\x8a\x43\xc6\x3b\xd1\x21\xcf\x55\x30\x66\x47\x36\xb0\x02\x5d\x27\xfd\xe4\x3c\x5c\x5c\x51\x65\x03\x54\x7b\x27\x0a\x69\xe0\x38\xd8\xfb\x46\x81\x66\x9b\x03\xa9\xfb\xff\x00\x00\x00\xff\xff\x62\x4e\x38\x70\x51\x03\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 849, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xcb\xd1\x23\x21\x0c\x04\xe0\xfb\xe4\xe2\x2e\x5a\x2f\x44\x91\x7f\x5e\x5b\xe0\xfd\x3d\x88\x9b\xbf\x06\x19\x10\x0c\x15\x91\xc8\x0e\x76\x9f\x0f\x15\x3d\xc1\x34\x98\x6d\xb1\x75\x18\xbc\xcd\x47\x16\x14\xcc\x01\x8a\x5f\x8e\x6a\xef\x97\x73\x3e\xd6\xd0\x3b\x44\x06\x5c\xe7\xe3\x02\xa6\xc2\xd6\xba\xf1\x23\x99\x60\xe7\xf6\x9a\xc9\x4e\x48\x93\xf9\x84\xc3\x1d\xd4\x44\xfb\xbc\xbf\xc5\xfd\x37\x14\xfa\x0e\x85\x9e\x43\x62\x02\x71\x9b\x4f\x04\xc8\x01\x9a\x7d\x77\x58\x9c\xd5\x39\xaa\x47\x5b\xed\x20\xc4\x15\x5c\xf3\x75\xd9\xc0\xde\xe0\x44\xfb\x1c\xd8\x6b\xff\xac\x90\x51\xa8\xed\x60\x9e\xa5\x59\x4b\xc9\xb5\xff\xcb\x51\x1d\xed\xb2\x1c\x8e\x75\xf8\xbc\x83\x71\x05\xce\x3b\x58\x67\xf3\xfe\xed\xb2\x42\x9a\xfd\x2c\xd6\xb0\x5a\x73\x70\x5f\xfe\x61\x91\xf6\xdf\xb1\x2e\x9c\x9a\x95\xa3\xd0\xea\x64\x63\x65\xad\xb5\xb7\x76\x04\xdc\x8a\xf2\x14\x45\x0b\xd7\x75\x73\x10\xa2\x82\x6c\xfb\x05\x9e\xcc\xc2\xdd\xd3\x83\xf2\x92\x3a\xc0\xbc\x02\x39\xff\xee\x1b\xd8\x5f\x60\xe8\xfb\x69\x5f\x8e\xcb\x39\x1f\x59\x5f\xda\x7a\x71\xb6\xf7\x73\x30\x38\xff\x05\x00\x00\xff\xff\x9b\xa2\xc3\x40\xa6\x03\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 934, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x98\x4f\x73\xda\x3c\x10\x87\xcf\x2f\x9f\x42\xaf\xaf\xad\x97\xdd\xd5\x3f\x9b\x81\x64\xa6\xe7\x76\x7a\x48\x67\x7a\xcc\x10\x70\x1b\x4f\x01\x67\x8c\x69\x92\x7e\xfa\x8e\x9d\x60\x24\x43\x72\xe9\xac\x6f\xd6\x83\xcc\xf3\x93\x2c\x8b\x15\xf3\xff\xd3\x54\x7d\x2f\x77\xeb\xea\x71\x7f\xf3\xf0\xfc\x69\x53\xad\x7e\x15\xb5\x7a\x2c\x77\x84\xaa\x78\x6a\xea\xa5\x4a\xd3\xab\x49\xd7\xed\xa6\x3a\xd4\xab\x62\xa6\xee\x9b\xe6\x61\x3f\x9b\x4e\x7f\x96\xcd\xfd\xe1\x0e\x56\xd5\x76\xba\xaa\x97\x7f\x9e\xd3\xed\xf2\x69\x7a\xfe\x5d\xfd\xfd\x9f\x97\xfb\x26\xfd\x52\xad\xcb\x1f\x65\xb1\x9e\xa9\x6f\x87\xe2\xa3\x22\xaf\xbe\xae\x1a\xc5\x48\x5e\x21\xcd\xac\x9b\x91\x56\x1f\x90\x11\xbb\xfb\x26\xf3\xeb\xa7\xed\x46\xfd\x2e\xea\x7d\x59\xed\x16\x09\x01\x26\xd7\x57\x93\x79\x5d\x55\xcd\xd5\xe4\xbf\x79\xd9\x14\x5b\xb5\x5b\x6e\x8b\x45\xd2\x45\xbe\xed\x22\xdf\x92\x86\x0c\x81\x18\xac\x49\x54\x7d\xd8\x14\x8b\x24\x42\xeb\xb2\x5e\x24\x98\xa8\x87\xba\x6a\xaa\x55\xb5\xe9\x1a\xbd\x04\x13\x55\xee\x6f\xef\xda\xf8\x8b\x84\xba\x46\xb1\x5b\xde\x6d\x8a\x75\xd7\x9c\xbe\x2f\x26\xf4\xa0\x81\x38\x0b\xcc\x01\x93\x56\x33\x01\x23\x0e\xdc\x47\x28\x26\x67\x0d\xb9\x07\xf2\x19\x90\xd7\x47\xf9\x00\x8a\xc9\x0d\x82\xf7\xc0\x6c\xa0\x9f\xf3\x08\x8d\x20\x26\x3a\x37\xb7\x4c\x5c\x6d\x81\xcd\xd9\xa8\x5f\xa1\xb8\xdc\x01\xa6\xa7\x6b\xb6\x76\x18\xe4\x42\x07\xc9\x50\x39\x02\x69\x07\x8c\x41\x8e\x80\x49\xaa\x09\x09\x8c\x6b\x17\x7b\xe0\x0e\xa1\xa8\x9c\x0c\xb0\x21\x20\x13\x2e\xc3\x88\xca\xea\x33\x20\xd4\xe0\x23\x79\xcf\x44\xd5\xec\x81\x0c\x83\x77\xa1\x3b\x80\x62\x72\x67\xc0\x80\x35\x80\xe9\xf1\x2a\x58\xff\x6f\x7c\x28\x17\xc6\x82\x65\x20\xc4\x60\x23\x8a\xd9\x08\xea\x5c\x9f\xab\x73\xc9\x7d\xff\xa8\xc9\xda\x79\xee\xaf\xc3\xc7\xf0\x76\x07\xd1\x50\xf6\xc5\x13\xcd\xc7\x89\x09\xab\xd9\x32\x98\x81\xfa\xc8\xe4\x8a\x0f\x34\x60\x10\x98\x10\x34\xf7\xc5\x47\x0c\x65\xe5\xa6\x2b\xef\x7c\x2c\x3f\x41\x71\x79\x06\x41\xc5\x17\xb1\x11\xd4\x84\xfa\xdc\xdd\x41\x51\x39\x93\x79\xf9\x6d\xa7\xd0\x1e\x52\x61\xbd\x05\x32\x2e\xaa\x77\x87\x58\xb0\xdc\x26\x60\xab\x41\x1b\x60\x1d\xd4\xdb\x31\x15\xd7\x3b\x02\x4c\x83\x46\xb0\xfb\xbd\xdb\x45\x30\x98\x01\xf2\x08\x94\x59\xf0\xc1\xbc\xc4\x54\x4e\x6f\x7d\xb7\xd7\xb6\x3e\xdd\x17\x05\x43\x3a\x8e\x3e\xbb\xa8\x17\xdd\x11\x02\x91\xc1\x4b\x7a\x33\xca\xe4\xdb\xe8\xfc\x3b\xa0\x72\x7a\x97\x81\xd3\x40\x19\xf8\xbc\x97\x47\x4c\xee\xfc\x8b\x06\x7c\x0e\x94\x7b\xc0\x34\x68\x04\xaf\xe3\xbb\x5d\x44\x83\x51\x5b\xf8\x18\x02\x36\x26\x0c\x13\x61\xc1\x00\xbe\x3d\x03\xb5\xe3\xe4\x93\x3d\x64\xd2\xea\xf6\x14\xc6\xf9\xc0\x7d\x84\xe2\x72\xab\x81\xc2\x45\x10\x53\x71\x7d\xde\xbe\xf3\x43\xfb\x2b\x1c\x43\xce\x67\x43\x7f\x85\x63\xc8\xb5\xbe\x20\xd7\x92\x55\x51\xe0\x39\xed\xbf\x03\x28\x2d\x67\xd6\x90\x0f\x9f\xf9\x11\x8a\xca\x5d\x06\xe4\x1c\xb0\x8d\xec\x21\xfd\x57\xfd\x7c\xda\xfd\xf3\xfb\x37\x00\x00\xff\xff\xb4\xe3\xd0\x82\xb6\x16\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 5814, mode: os.FileMode(438), modTime: time.Unix(1511528829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9c\x4b\x53\x1b\xcd\x15\x86\xd7\xe1\x57\x4c\xb4\x4d\x74\xe8\x73\xfa\x4e\x81\xbf\xaa\x2c\xb2\x4a\xb2\xf1\x22\x4b\x17\x06\x25\x56\x05\x10\x25\xf0\x85\xfc\xfa\x54\x8f\xe6\x72\xba\x67\x20\x8b\xaf\x5e\x2d\xb0\x35\x8f\x1b\x3f\x67\xfa\xde\x33\xdd\xba\xfe\xe3\x76\xdb\xfd\x73\xff\x74\x7f\xf8\xf9\xf2\xf9\xf9\xed\x2f\x0f\x87\xbb\xff\xec\x8e\xdd\xcf\xfd\x13\x9b\xee\xe5\xf9\xad\xdb\x6e\x3f\x5d\xf4\x89\x3e\x1f\xbe\x1f\xef\x76\x57\xdd\xb7\xd7\xd7\xe7\x97\xab\xcb\xcb\x7f\xef\x5f\xbf\x7d\xff\x4a\x77\x87\xc7\xcb\xbb\xe3\xed\x7f\xdf\xb6\x8f\xb7\xbf\x2e\x97\xff\xd3\xf4\xfb\x7f\xbb\x7d\x79\xdd\xfe\xfd\x70\xbf\xff\xd7\x7e\x77\x7f\xd5\xfd\xf5\xb8\xff\x73\x27\xae\xfb\xc7\xe1\x47\x27\x86\x63\xc7\xee\xca\xb8\x2b\xe6\xee\x4f\x86\x8d\xe9\x7f\xef\xe2\xfa\xb7\x5f\x8f\x0f\xdd\x8f\xdd\xf1\x65\x7f\x78\xba\xd9\x30\x99\xcd\x6f\x9f\x2e\xae\x8f\x87\xc3\xeb\xa7\x8b\x3f\x5c\xef\x5f\x77\x8f\xdd\xd3\xed\xe3\xee\x66\xd3\x07\xfc\xe5\xe5\xf9\xed\x0b\x5b\x0a\x89\x92\x50\xda\x74\xc7\xef\x0f\xbb\x9b\x8d\x26\xf7\xfb\xe3\xcd\xc6\x6c\xba\xe7\xe3\xe1\xf5\x70\x77\x78\xe8\x2f\x26\x81\xd9\x74\xfb\x97\x2f\x5f\x4b\xe8\x37\x1b\xee\x2f\x76\x4f\xb7\x5f\x1f\x76\xf7\xfd\xe5\xe5\xff\x93\x26\x62\xc9\x8d\x76\x60\x38\x71\x0c\x24\x9c\x88\x39\x2a\xb3\x86\x60\x75\x26\xce\xdc\xaa\x07\x08\x57\x0b\x9b\xa5\xba\x87\x40\x75\x22\x8e\x91\xd8\x39\xad\x56\x10\xab\x4e\x86\xb2\x69\xcc\x03\x03\x8b\x03\x89\x6f\xef\x79\x84\x50\xb5\x58\x43\x6c\x1b\xf5\x04\x81\xea\x4c\x62\x33\x05\xdd\xa6\x15\xc3\x89\x13\x93\x27\x6f\x95\x76\x22\x58\x69\x26\x71\xd2\x68\x07\x86\x13\xb3\x89\xe4\x29\xe9\x4a\x3d\x23\xb8\x36\x2d\xb5\xb8\x81\x42\x2c\xe5\x48\x81\x89\xed\xd4\x5d\xd7\x0c\x2a\x16\x93\x29\x37\xe2\x91\x01\xc5\x99\xd8\x10\xb3\xf6\x4e\x08\xac\xcd\x34\x77\xd3\x35\x83\x8b\xc3\x8a\x38\xc0\xc5\x1c\xca\x4f\x63\x1e\x21\x56\x2d\x4c\x62\x62\xa3\x1e\x21\x4e\xcd\x46\xc8\x91\xcc\xdd\x65\xcd\xb0\x62\x61\x72\x8d\xf7\x84\xb0\x5a\xf6\x9e\xd8\x99\xc6\x3c\x51\xa4\xdc\x12\x27\x21\x96\x50\xc9\x15\x05\xc9\x9d\x29\xf3\x69\x91\x92\xc1\xd3\x10\xd5\x40\xa0\x3a\x93\x33\xc4\x3e\x6a\xf3\xcc\xa0\x62\xe1\x40\xd1\xd6\xe2\x91\xc1\xc5\xe2\x79\x69\xee\x21\x58\x9d\x28\x48\x6b\x3e\x31\xb0\xb8\xac\x5d\x62\x6b\x1e\x20\x56\x2d\x52\x06\x89\x46\x3d\x42\x9c\x3a\x1a\x12\x31\x24\x2e\x29\xb5\x86\x40\x75\x20\x26\x8e\x41\x8b\x27\x84\xd5\xca\xdc\x71\x6b\x82\x96\x72\x55\xab\x15\x03\x8a\x23\x89\x24\x72\xba\x52\x2b\x06\x17\xa7\x15\x71\x3a\x87\x38\xcb\x52\x9c\xe1\x59\x6d\x4b\x83\xe5\xc6\x3c\x42\x9c\x3a\x95\x21\x38\x93\xd3\xfd\x87\x62\x38\x31\x97\x75\x22\x89\xf7\x4a\xac\x18\x56\xcc\x86\x62\x6a\xc4\x03\x03\x8b\x99\xb2\x6d\xc5\x27\x06\x16\x3b\x62\x9f\x5b\xf3\x00\xb1\x6a\x91\xba\x13\x51\x0c\x5c\xbd\x9c\x7a\x1a\x52\x33\xa4\xd8\x11\xbb\x32\x02\x9b\x4a\xad\x28\x52\xee\x89\xd5\xda\xb5\x42\x48\x6d\xff\x0c\x93\xc4\xd5\xf7\xac\x28\x58\xee\x99\x24\xb7\xee\x01\x02\xd5\xc2\xfd\x1d\x72\xd2\x43\x46\x45\x41\x72\x5f\x14\x4c\x56\x68\x9e\x68\xd7\x0c\x25\x16\x62\x9b\x88\x9d\x1e\xa0\x1b\x78\x06\x75\x5e\x53\xe3\xca\x5a\x59\x54\x2f\xda\x52\xa0\x3c\x30\xb1\x27\x71\x41\xbb\x15\x44\xaa\xfb\x16\x4c\xd6\x56\xea\x19\xe2\xd5\x75\x8e\x2b\x88\x56\x33\x89\xf1\x0b\xf7\x40\xc1\x72\xaf\xfb\xf1\x06\x22\xd5\xb1\x5f\x3b\xce\x1d\x5a\x03\xf1\x6a\x76\x71\xc5\xcd\xc0\xe9\xc2\xa4\xb1\xc4\xd6\x2f\xe4\x03\x45\xca\x13\x89\x23\x8e\x75\x79\xcf\x10\xa9\xce\x94\x22\xb9\xba\xb8\x27\x86\x15\xb3\x58\x9a\x9f\x1e\x34\x10\xac\x4e\x99\x92\x6d\xd5\x03\x04\xaa\xe3\x69\x75\x55\x75\x68\x33\x43\x8a\x5d\x99\x73\x37\x03\x88\x82\x48\x75\x19\x22\xa3\x9e\x1c\xb6\x14\x2c\x2f\xf3\x40\x96\x56\x3e\x52\xb0\xbc\xfc\x84\xd6\x3d\x40\xb0\x3a\x97\x6e\x73\xe1\x1e\x29\x5a\x6e\xf5\x1b\xa5\x96\x62\xe5\xa5\xcf\x16\xdb\xb8\x47\x08\x54\x97\x66\x5c\x16\x7a\xb1\x72\x6b\x8a\x94\x97\xc5\x7c\x99\x91\x56\x99\xae\x29\x5a\xee\x49\xcc\x52\x3e\x50\xa4\x3c\x52\x30\xc4\xa6\x9a\x37\x28\x88\x53\x8b\x2d\x1d\x77\x26\x71\xba\x47\xaf\x28\x52\x1e\xc8\x95\xbf\x6a\xf7\x0c\xc1\x6a\x4b\x62\xa4\x55\x0f\x10\xa4\x0e\x8e\x1c\x05\x62\x33\x0d\x25\x9a\x20\xa5\x62\xc9\x6c\xc7\x4f\xea\xa9\xe5\x3b\xff\x88\x0a\xc5\x93\xcd\xfd\xc3\x0d\xb1\x73\x16\xd4\x10\xa7\x2e\x65\x1c\x48\x92\x12\xcf\x08\xaa\x65\x63\x4a\x0e\x4f\x9f\x75\x01\xbc\x9f\x00\x1b\x52\x60\xb5\x57\xa3\x66\xd8\x22\xe0\xac\x37\x4c\x34\x10\xa8\xf6\x24\x99\xc4\x56\xc5\x3f\x33\xa8\xb8\xd4\x6f\x53\x7b\x07\x04\xd5\x3a\xa7\x1e\xaf\x55\x08\xae\x75\x4b\x2d\xb6\x62\xf5\x0e\x36\x69\xe1\xed\x19\x5e\x9c\x57\xc4\xb8\x31\xec\x24\x29\x33\x33\x69\xea\xd5\xc8\xa0\xe2\xd3\x6b\x9f\x5a\x3c\x32\xbc\x58\x56\xc4\xc0\x31\x7b\x96\xd8\x15\x31\x6e\x52\x3c\x48\xac\x21\xdf\x94\xf1\xc8\xb0\xe2\x18\xd4\x96\xeb\x9a\x61\x7b\xe9\xd3\x74\x64\xfa\xdc\x0c\x96\xef\x24\xc0\x86\xe4\x65\x36\x96\xe1\x6a\x11\xd2\x5a\x02\x54\x48\x81\x98\x73\xff\xf4\x81\xed\xdc\x08\x1b\x0a\x92\xc7\x48\x21\x96\x41\x53\x6d\x5f\xa9\x19\x6a\xeb\xb2\x71\xd4\x3f\xba\x8e\x6a\x57\x58\x03\x91\xea\xd2\xd4\x23\x85\x50\xa9\x67\x88\x56\x67\x12\x5e\xa8\x4f\x10\xac\x76\xa6\x34\xb2\xd6\x3d\x52\xac\x5c\x24\xe9\x03\x01\x35\xc4\xab\xd5\xfa\xb0\xa5\x60\xb9\x8d\xc4\xea\x00\x46\x43\x91\xf2\x32\xac\x11\x67\x5f\xb9\x67\x88\x55\x0b\x3b\x62\x96\xc6\x3d\x51\xa4\x3c\x10\x93\x70\xdd\xc6\x26\x86\x15\xdb\xa4\x56\x62\x35\xc3\x8a\xbd\x21\x16\xdf\x98\x47\x08\x54\x0b\x1b\x72\x14\xa3\x36\xcf\x0c\x2d\x36\xea\xcd\x7f\x03\xc1\x6a\x61\x21\x71\xb6\x95\x4f\x18\xaa\x77\x64\x3d\x89\x73\xb5\x7d\xa6\x28\x39\x33\x89\x70\x99\x1e\xcc\x2f\x50\x1a\x88\x57\xb3\xaa\x6c\x0d\xc5\xcb\xd5\x21\x8d\x96\x9e\x43\xee\x56\xe5\xf8\x12\x0f\x8e\xcc\x56\x5d\xa8\x49\xf3\x87\x49\x60\x67\xdf\xb8\xe4\x39\x05\xdd\xfc\x2b\x06\x17\xb3\xb1\x4b\x73\x0f\xc1\x6a\xee\xf3\x79\xbe\xd0\x45\xf1\x51\x12\x70\x58\xce\x90\x5d\x94\xc5\x00\x61\x6a\xd7\xbf\xb1\xb6\xa6\x9a\xdd\x35\xf4\x0c\x72\x35\x9d\x6f\x28\x58\xee\x85\xd8\x2f\xe4\x23\x05\xcb\xd9\x84\xbe\x9a\xcd\x57\x55\x55\xfc\x30\x11\x3c\xb4\x48\xe2\x96\xb1\x9c\xe8\x19\xe4\x2e\xad\xc9\x81\x7b\x49\xb4\x26\x87\x35\x79\x06\xae\x6c\x27\x4d\x5a\xcd\xf6\x74\x9e\x6c\x4f\xab\xd9\x9e\xce\x93\xed\x89\xe2\xa2\x0b\x1a\xe9\x39\xb2\xfd\x9d\x7c\x3f\x47\xc6\x33\xeb\x26\x5e\x66\x00\x2b\xfd\xc0\x7a\x22\x74\x68\xfd\xf9\xaf\x45\x2c\x03\x3d\x83\x7c\xa5\x42\x0e\xf4\x0c\xf2\x95\x0a\x39\xd0\x33\xc8\x57\x3a\xa1\x81\xa2\xe5\x31\xa9\x6f\x08\x68\x29\x5c\x9e\xab\x29\x69\x4d\xd1\xf2\x94\xf4\x11\xc8\x05\x06\xeb\xc5\x7a\xb5\xbd\xac\xa5\x30\x79\xec\xbf\x1c\x20\x71\xd5\xd0\x2b\x08\x55\xc7\xc5\x7d\xd7\x14\x25\xf7\x91\x7c\xff\xba\xdd\x6c\xe7\xcf\xba\xe3\x7d\x3f\x01\x38\xa4\xa0\x8c\x61\x2d\xa4\x95\x04\xd8\x90\xd8\xe4\x59\x59\x2e\x96\x41\xad\x27\x01\x87\x25\xd5\x9b\x80\x1a\x82\xd5\xd6\xa8\xdb\xb5\x66\x2d\x47\x56\x93\x60\xc3\x2a\x8d\x66\x72\x96\x8b\x65\x58\xeb\x49\xd0\x61\x05\xed\x5c\xab\xd4\xeb\x49\x90\x61\x05\x2a\x7f\x56\x61\x8c\x08\xab\x8d\x8e\x64\x7e\x8b\xdd\x40\xac\x3a\xb3\x7e\xd2\x5c\x31\xac\xb8\x2c\x5c\x39\xb9\x46\x3d\xd1\x73\xc8\xdb\xa2\x9e\xe8\x39\xe4\x79\x55\x0e\x7c\x7d\x35\x68\xd8\x92\x70\x5b\xe2\x13\x05\xcb\x85\x69\x79\xe3\x03\x44\xab\x9d\x9e\x46\xd6\x10\xac\x76\x79\xa5\x79\x4f\x14\x25\x0f\x89\x02\xf7\x87\x8c\xdc\x3c\x22\xd6\x10\xab\x66\x57\xfa\xec\x46\x3d\x42\xb4\x3a\x93\xaa\xe4\x35\x04\xab\xa3\x50\x6c\x33\x7c\x84\x48\xf5\x69\x57\xfc\xbc\x0b\xab\x81\x48\xb5\xed\x77\xe5\x86\xfa\xae\x67\x88\x56\x27\x12\x6b\x17\xee\x81\xa2\xe4\x99\xfb\x49\x09\xfb\xea\x5b\x0a\x1b\x0a\x95\x47\x12\x93\xf4\x97\x6e\x2d\x30\x5a\xcf\x49\x9f\x4f\x58\x60\xa8\x3e\x93\x77\xe4\xa5\x96\x4f\x10\xa6\xf6\xfd\xa1\x70\xf1\xfd\x94\x59\x5d\xe9\xf9\xeb\xc7\x89\x40\xa1\x89\x89\xe4\xc2\x69\xbf\xd7\x94\x2b\x0d\xc4\xaa\xd9\x56\xaf\xce\x5a\x0a\x94\x87\x44\x1c\xaa\x6f\xa2\x6d\x29\x4a\xce\xa7\xb3\x40\x1c\xcb\x5a\x57\x5f\xe9\x8c\xf8\x38\xd1\xef\x0d\xed\xfa\xb2\xff\xee\xeb\xff\x05\x00\x00\xff\xff\x3a\x63\x0a\xa7\xb6\x5b\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 23478, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x4b\x6f\xdb\x38\x10\x07\xf0\xf3\xfa\x53\x70\x75\xdd\xd5\x98\xc3\x97\x48\xc3\x4e\x80\x3d\xec\xa9\xed\x25\x87\x1e\x03\xc7\x56\x1b\xa1\xb6\x65\xc8\x72\x1e\xfd\xf4\x85\xe4\x58\xa2\x24\xc2\xe8\xa1\xc3\x9b\xf5\x07\x9d\xdf\x44\x7c\x27\xcb\xbf\xd3\x94\x7d\x2d\x0e\xdb\xf2\xf5\xf4\x70\x7c\xff\x6f\x57\x6e\x7e\xe4\x15\x7b\x2d\x0e\xc8\xd9\xf9\xb8\x5d\xd7\x39\x4b\xd3\xbb\x59\xdb\xee\xa1\x3c\x57\x9b\x7c\xc1\x9e\xeb\xfa\x78\x5a\xcc\xe7\xdf\x8b\xfa\xf9\xfc\x04\x9b\x72\x3f\xdf\x54\xeb\x9f\xef\xe9\x7e\xfd\x36\x9f\xfe\xb0\xee\xfb\x9f\xd6\xa7\x3a\xfd\x5c\x6e\x8b\x6f\x45\xbe\x5d\xb0\xff\xab\xe2\x5f\x26\x14\xfb\x52\xbe\x30\xc1\x31\x63\xa8\x16\x5c\x2d\x10\xd9\x3f\x1c\x39\x6f\xbf\x37\x5b\xde\xbf\xed\x77\xec\x25\xaf\x4e\x45\x79\x58\x25\x08\x3c\xb9\xbf\x9b\x2d\xab\xb2\xac\xef\x66\x7f\x2d\x8b\x3a\xdf\xb3\xc3\x7a\x9f\xaf\x92\xb6\xe6\xc7\x4b\xcd\x8f\x28\xc1\x58\xb0\x19\xa8\x2c\x61\xd5\x79\x97\xaf\x92\x41\xb4\x2d\xaa\x55\xc2\x13\x76\xac\xca\xba\xdc\x94\xbb\xf6\xa1\x53\x78\xc2\x8a\xd3\xe3\x53\x53\xff\x2a\xc1\xf6\x21\x3f\xac\x9f\x76\xf9\xb6\x7d\x9c\xff\x96\x8c\x99\x9e\xd0\x6d\x46\x6a\x67\x0a\x30\x73\x80\xe8\xff\xde\x7e\x48\xaa\x23\xcf\x40\x81\xe6\x9e\xdd\x47\x31\x64\x31\x95\x05\xa5\x2c\x1a\x46\x02\x5a\x07\x28\xcc\x15\x1f\xa7\x71\x7c\x9d\x85\x7c\x4d\xda\xe7\x03\xc9\x06\x7d\x4b\xe9\x2b\x0e\x59\x06\x42\x38\xe0\x69\xff\x59\xe8\x6e\xea\xdd\x68\x40\x57\x95\x16\xad\x82\x19\x82\xe0\xdd\x90\x1c\xa7\x74\xbe\xd1\xa0\x35\xa0\xb4\xc0\xd3\xfe\xb3\xf7\x56\x6e\x34\x20\xaf\xca\xc8\x1e\x35\x32\x50\x55\xa8\x01\x61\x55\x06\x10\x1d\xa0\x52\xfe\x0c\x1a\xa7\x91\x7c\x1b\xf4\x49\x67\x90\x2f\x59\x17\xf2\x9b\x34\x8e\xef\x78\xc8\x77\xc4\x7b\x07\x82\xd0\x12\xa4\x1c\xec\x5b\x83\x90\x52\x6f\xb6\x66\x0e\x1a\x01\xad\xb7\x65\x0f\xd3\x48\xbe\x0d\xfa\xa4\xa3\xcf\x97\x1c\x0f\xf9\xd4\xbd\xdf\x49\x42\x99\x80\xdf\xa6\x91\xfc\x50\xff\x0b\xea\xd3\xaa\x27\x85\xfa\xbf\x4d\x23\xf8\x12\x84\x9b\xf0\x97\x30\x8a\x2e\xa7\x83\xef\x12\x46\xd0\x9b\x5d\xd8\x7b\xf0\x76\xc4\x9b\x4d\xe8\x2b\x43\x6c\x76\xe1\x71\x31\xd7\x34\x92\x3f\x99\x95\xd7\x34\x8e\x6f\x26\x03\xe3\x9a\x46\xf2\x45\xd0\x27\x3d\x3f\x76\x92\xd1\xa1\x65\xa1\x8b\x63\x55\x30\x59\x19\xba\x38\x52\x05\x1a\x83\x15\x34\x71\xac\x0a\x64\xb8\x02\x49\x5a\x81\xce\x2e\x77\x03\x09\x82\xab\xae\x80\x51\x4a\xee\x0b\xc5\xa1\x3f\x9a\x8e\xc2\x28\xba\x10\x3c\xc0\xb7\x29\xb1\x6f\x9a\x2b\x2b\x4a\x3b\xe0\xfb\x30\x8e\xee\x42\x3a\xfd\xbb\xbf\x40\x8a\x07\x74\x15\xeb\xcd\x2b\x0c\xe9\xb4\xf3\xde\x83\x42\xfd\x4e\xbc\xf2\x7a\x50\xa8\xdf\x89\x57\xdd\x0b\xe4\x0c\x68\x35\xc2\x3f\xb2\x28\xf6\xf8\xb5\x7f\x64\x31\x6c\x14\x72\x8a\xb7\x21\xa1\xee\x10\x84\x14\x60\x9b\x53\x6f\xa7\x0f\xc3\x38\xba\x0d\xe9\xb4\x6f\xbe\x87\xbc\xa3\xde\x30\x8c\xa3\x8b\x90\x4e\x7b\xce\xfb\x80\x50\xba\xe6\x7e\xe1\x3d\xf9\x77\x90\xdb\x8d\xa8\xab\x53\x90\x09\x40\x3b\x1a\x96\x7d\x1a\xc9\x37\x41\x9f\xf6\x16\xe2\x4b\x36\xe8\x47\x98\x19\x17\xc9\xf1\x90\x4f\xfb\xb7\x19\xc1\x33\x50\x06\x10\x95\xb7\x2e\x8c\xc2\x28\xba\xc1\x80\x6e\xfe\xc0\x19\x60\x39\x6f\xff\x8f\xf9\x2b\x00\x00\xff\xff\x7a\x4d\xda\x33\x85\x1d\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 7557, mode: os.FileMode(438), modTime: time.Unix(1511528661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd3\xcf\x6e\xa3\x30\x10\x06\xf0\xf3\xf2\x14\xb3\xbe\xee\x32\x78\x8c\xf9\x13\x04\x89\xb4\xc7\x55\x7b\xca\xa1\xc7\x88\x80\xdb\x58\x05\x1c\x19\xd3\x24\x7d\xfa\x2a\x48\x41\xa5\x51\x4f\x15\xc7\xf9\xc4\xf0\xfb\x6c\xc9\xf9\x6f\xdf\x87\x27\xdd\xd5\xe6\xd4\x6f\x8f\x97\x7f\x8d\xa9\x5e\x95\x85\x93\xee\x12\x50\x67\x67\x4b\xf0\xfd\xb5\x37\x7e\xb5\x35\x83\xad\x54\x06\x07\xe7\x8e\x7d\x16\x04\x2f\xda\x1d\x86\x3d\x56\xa6\x0d\x2a\x5b\xbe\x5f\xfc\xb6\x3c\x07\xf7\xbf\x9a\xf6\x1f\xca\xde\xf9\x8f\xa6\xd6\xcf\x5a\xd5\x19\x6c\x87\xee\x2f\x50\x0c\xff\x87\x06\x04\xa7\x04\x28\xce\xb8\xc8\x78\x0c\x7f\xb8\xe0\x7c\xdc\xf3\xf2\xcd\xb9\x6d\xe0\x4d\xd9\x5e\x9b\xae\x60\x84\x9c\x6d\xd6\x5e\x6e\x8d\x71\x6b\xef\x57\xae\x9d\x6a\xa1\x2b\x5b\x55\xb0\x6b\xe3\xdd\xd8\x78\x47\x21\xa6\x1c\x49\x60\x24\x19\xd8\xa1\x51\x05\x9b\x45\xb5\xb6\x05\xe3\x0c\x8e\xd6\x38\x53\x99\x66\x1c\x26\x83\x33\xd0\xfd\x6e\x7f\x6d\x5f\x30\x1a\x07\xd5\x95\xfb\x46\xd5\xe3\x18\x7c\xef\x4a\x8e\x44\x29\x12\x0f\x31\xb9\xc1\xf3\x6c\x29\x39\x96\x28\x31\x92\x28\xa2\xf0\x06\xcf\xa2\xe5\x5d\x79\xef\x2e\x78\xd3\x71\x84\x91\xc0\x55\x8a\x22\xa4\x09\x9e\x65\xcb\xca\xc4\x53\xa4\x4f\x67\x9e\x87\x4b\xd9\x82\x27\x28\x63\xa4\x95\x44\x9a\xec\x2f\xe1\x4f\xed\x3c\x18\xdf\xd6\x47\x00\x00\x00\xff\xff\x43\x6c\xd6\x37\x17\x04\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 1047, mode: os.FileMode(438), modTime: time.Unix(1511528829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xc1\x8e\xda\x3c\x10\xc0\xf1\xf3\xc7\x53\xf8\xcb\xb5\xcd\xe0\x19\xdb\x71\x8c\x60\x57\xea\xa1\xa7\xb6\x97\x3d\xf4\xb8\x62\x21\xed\x46\x05\x8c\x92\xb0\xbb\xf4\xe9\xab\x04\x08\x8e\x49\x7b\xa9\xa6\x07\x24\xf2\x87\xf0\x33\x38\x58\x98\xf9\xff\x69\x2a\xbe\x96\xbb\xb5\x7f\xad\x1f\xf6\xc7\x0f\x1b\xbf\xfa\x51\x54\xe2\xb5\xdc\x59\x51\xef\x8f\x22\x4d\xef\x26\xdd\x73\x1e\xfc\xa1\x5a\x15\x33\xf1\xdc\x34\xfb\x7a\x36\x9d\x7e\x2f\x9b\xe7\xc3\x13\xac\xfc\x76\xba\xaa\x96\x3f\x8f\xe9\x76\xf9\x36\xbd\x7d\xa1\xfe\xfc\x4f\xcb\xba\x49\x3f\xfb\x75\xf9\xad\x2c\xd6\x33\xf1\xb1\x2a\xdf\x0b\xd2\xe2\x8b\x7f\x11\x24\xd1\x0a\xd4\x33\xa9\x67\x88\xe2\x9d\x44\x29\xbb\xf3\x26\xf3\xfb\xb7\xed\x46\xbc\x14\x55\x5d\xfa\xdd\x22\x41\x90\xc9\xfd\xdd\x64\x5e\x79\xdf\xdc\x4d\xfe\x9b\x97\x4d\xb1\x15\xbb\xe5\xb6\x58\x24\xed\x78\x1f\xeb\xfd\xf1\x11\x15\xd8\x1c\x30\xcf\x01\xb5\x4d\x44\x75\xd8\x14\x8b\x24\x8a\xeb\xb2\x5a\x24\x32\x11\xfb\xca\x37\x7e\xe5\x37\xdd\x41\xaf\xc8\x44\x94\xf5\xe3\x53\x3b\xfe\x45\x82\xdd\x41\xb1\x5b\x3e\x6d\x8a\x75\x77\x38\xfd\x93\xec\x80\x94\x83\xcc\x85\xf0\xb5\xb1\xb9\x39\x82\x01\xa3\x02\xb5\x2f\xac\xa6\x03\xd2\x14\xa9\xe7\xc6\xe3\x6a\x09\x56\x02\x11\x02\xe9\xfe\x43\x8e\x22\x9f\x6c\x81\x28\x8b\xe5\x20\xb2\xcb\x46\x8e\xc8\x6d\x64\x93\x11\x73\x40\x99\x01\xaa\x90\x1e\x54\x1e\xdb\x20\xa0\x46\x50\x04\x06\x2f\xf2\xb0\x31\xb9\x04\xa8\xda\x75\x22\x87\xbc\x9f\xe7\x28\xb2\xcb\x68\xc6\xe8\xae\xf2\xd9\x99\x06\xd2\x12\x86\x74\x10\x99\x65\x04\x92\xe6\x86\x3e\x57\x5e\xdb\x20\x68\x1d\xd3\xe7\xc8\x27\xdb\x1c\xda\x89\x0d\x2e\xef\x61\x64\x95\x51\xdb\x76\x62\x23\xba\xaf\xbc\xb6\x41\x20\xa4\xd8\xbe\x54\x5e\xbb\xbd\x65\x31\x7d\x8e\xbc\xb2\x53\x80\xb7\xf4\xa5\xb2\xda\x44\x0a\x48\x45\xf4\x25\xf2\xc9\xb9\x85\x4c\x02\x4a\x1b\xca\x41\xe4\x91\x33\x0d\x1a\x48\x81\x4c\x2f\xf7\xc8\xf4\x0b\xcb\x6f\x1e\x64\x1a\x89\x01\x63\x40\x6b\x40\x99\xf7\x03\x18\x34\x76\xd7\x8d\xb8\x6c\x6b\xf9\xc9\x40\x54\x70\xfd\x76\x0f\x1b\xbb\xab\x46\x5c\xb6\x6b\xfc\x64\x90\x21\xb0\x38\x74\x2f\x8d\xdb\x75\xea\xd6\x75\xff\xe0\xfd\xa2\x93\xb7\x70\x17\x99\xf6\x1b\x52\x83\x6e\xa7\xd2\x42\xd6\x2f\xa1\x51\x64\x96\x1d\x10\xde\xc8\xa7\xc8\x2a\x13\xe5\xe1\xd6\x6e\x18\xd9\x65\x92\x34\x42\x77\x95\xd7\x56\x16\x30\xd8\x47\x47\x95\xc9\x46\x3c\x6d\x23\x5d\xb0\x90\x44\x91\x5d\x26\x33\x46\x13\xe7\x5e\x5e\x03\x5a\x09\xaa\xdb\x43\x5f\x77\xf3\xc3\xca\x65\x5b\x40\xb4\x40\xca\x04\x3f\xcb\xe2\xca\x64\x3b\xec\x2e\x28\x92\x39\x20\x5d\xf1\x38\xff\xad\x3e\x9f\x76\xff\x57\xfd\x0a\x00\x00\xff\xff\x49\x03\xfa\xd1\x69\x13\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 4969, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xcb\x8e\xd3\x30\x14\x06\xe0\x35\x7d\x0a\x93\x2d\xe4\xc4\xc7\xf1\xb5\x6a\x67\x24\x16\xac\x80\xcd\x2c\x58\x8e\xd2\x26\x30\x11\x6d\x5d\xa5\xe9\x5c\x78\x7a\x94\x94\xa4\x89\x6b\xb1\x41\xf6\xd2\xbf\x92\xf9\x7e\x8d\x8e\x5d\xb7\xab\xf7\x69\x4a\xbe\xd7\x87\xd2\xbe\x9c\x1e\x8e\x6f\x9f\x76\x76\xfb\xab\x6a\xc8\x4b\x7d\x50\xe4\x7c\x2c\x8b\xb6\x22\x69\x7a\xb7\xe8\x1f\x7b\xb0\xe7\x66\x5b\x2d\xc9\x53\xdb\x1e\x4f\xcb\x2c\xfb\x59\xb7\x4f\xe7\x0d\x6c\xed\x3e\xdb\x36\xc5\xef\xb7\x74\x5f\xbc\x66\xb7\x7f\x6b\x7c\xff\x4b\x71\x6a\xd3\xaf\xb6\xac\x7f\xd4\x55\xb9\x24\x9f\x9b\xfa\x23\x61\x9c\x7c\xb3\xcf\x84\x51\x54\x04\xf9\x92\xf2\x25\x22\xf9\x40\x91\xd2\xfe\xbd\xc5\xea\xfe\x75\xbf\x23\xcf\x55\x73\xaa\xed\x61\x9d\x20\xd0\xe4\xfe\x6e\xb1\x6a\xac\x6d\xef\x16\xef\x56\x75\x5b\xed\xc9\xa1\xd8\x57\xeb\xa4\xab\xfc\x78\xa9\xfc\x88\x39\x20\x55\xc0\x41\xd0\x84\x34\xe7\x5d\xb5\x4e\x66\x51\x59\x37\xeb\x84\x26\xe4\xd8\xd8\xd6\x6e\xed\xae\x5f\x8c\x08\x4d\x48\x7d\x7a\xdc\x74\xf5\xd7\x09\xf6\x8b\xea\x50\x6c\x76\x55\xd9\x2f\xb3\x7f\xc0\xac\x53\x72\x40\x6d\x00\x99\x18\x6c\x37\x8d\xc3\x4b\x2f\x2f\x23\xf1\x42\xf9\xf8\x2e\x8d\xc3\x6b\x2f\xaf\x03\xf2\x9c\x82\x52\xc0\x98\x01\x91\x0f\xf8\x3c\x0b\x46\x4b\x01\x42\x00\xe6\x1a\x10\xd9\x60\x3b\x61\x14\x9c\xfb\x70\x1e\x07\xbf\x0e\xbc\x13\xc6\xc0\xb5\x0f\xd7\x11\x70\x99\x03\x63\xe8\xe0\x43\x18\x05\x77\x07\x6e\x08\xc3\xe1\x12\x10\x0d\x20\xe7\xd3\x63\xc6\x4d\xe3\xf0\xda\xcb\x87\x3c\x66\xa6\x90\x36\x3e\xbe\x4b\xa3\xf0\x86\xfa\x78\x13\xf2\x03\x16\x73\x0e\xa8\x28\x08\x9c\xf2\x6e\x1a\x83\x67\x5c\x7a\xf8\x3e\x8d\xc3\x2b\x2f\x1f\x72\xf2\x67\x90\xf6\xf2\x21\x27\x7f\x84\x72\x60\xe6\x46\xbf\x84\x31\xf0\xfc\x76\xee\x2e\x61\x78\x5c\x03\x4d\x27\x0b\x26\xc4\x4d\x15\xdf\x23\xc1\x8b\x21\x0a\x90\xcc\xed\x32\xa4\xe1\x79\x29\x7c\x13\x39\xc6\x91\x0a\xdc\x0c\xe5\x18\xc7\x29\x20\xd0\x5b\x40\x84\xbc\x09\xcc\xa5\xdc\x5f\x20\xe4\xdd\x17\x85\x02\x21\xc1\x48\x40\x76\xe5\xe7\x61\x38\xdc\x20\xb0\x9c\x81\xee\xf6\xda\x88\xcf\xc3\x18\xb8\xa4\x1e\x5c\x06\x3d\x92\x26\x0e\xf3\xe1\x41\xf7\xfd\x5f\x07\x73\x33\x1b\x3a\x37\x8e\x54\x80\xfb\x0b\x84\xfc\xde\x73\x91\x38\x28\x06\xa8\x9d\x7f\xc0\x35\x8d\xc3\x4b\x2f\x1f\xf4\x1e\x34\x85\xb4\x97\x0f\xbf\xf1\x2e\x90\xa1\x3e\x3e\xe8\x25\x94\x51\x05\xbc\xbb\x70\xf3\xc9\xa1\xe3\x84\xff\x8b\xaf\xb2\xfe\x27\xb6\x3f\x01\x00\x00\xff\xff\xc9\x3f\x0d\xb6\x1f\x14\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 5151, mode: os.FileMode(438), modTime: time.Unix(1511528659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd5\x41\x6f\x9b\x30\x14\x07\xf0\xf3\xf2\x29\x3c\x5f\x37\x1e\x7e\xc6\x06\x82\x20\x95\x76\xde\xb4\x43\x27\xed\x18\x11\xf0\x56\x6b\x80\x23\xe3\xac\xe9\x3e\xfd\x14\xab\xa5\xa1\x4c\xb9\x4c\xe6\xf8\xfe\xb2\xf9\x3d\x64\xf3\x28\xdf\x47\x11\xf9\xae\x87\xd6\x3c\x8e\xf7\xc7\xa7\x4f\x9d\x69\x7e\x29\x4b\x1e\xf5\x90\x23\x51\x67\x67\x6b\x12\x45\xbb\x8d\x5f\x76\x6f\x4e\xb6\x51\x05\x79\x70\xee\x38\x16\x71\xfc\x53\xbb\x87\xd3\x01\x1a\xd3\xc7\x8d\xad\xff\x3c\x45\x7d\x7d\x8e\x97\xcf\x9a\xf6\x7f\xae\x47\x17\x7d\x31\xad\xfe\xa1\x55\x5b\x90\x6f\x27\xf5\x91\x60\x46\xbe\x36\x8e\x70\x86\x19\x61\x58\xc8\xb4\xc0\x84\x7c\x60\x9c\x31\xbf\x6f\x53\xde\x9d\xfb\x8e\xfc\x56\x76\xd4\x66\xa8\x28\x02\xa3\x77\xbb\x4d\x69\x8d\x71\xbb\xcd\xbb\x52\x3b\xd5\x93\xa1\xee\x55\x45\x7d\xcb\x7b\xdf\xf2\x1e\x13\xc8\x19\x20\x07\x29\x28\xb1\xa7\x4e\x55\x74\x16\xb5\xda\x56\x94\x51\x72\xb4\xc6\x99\xc6\x74\xbe\x98\x10\x46\x89\x1e\xf7\x87\x4b\xfb\x15\x45\x5f\xa8\xa1\x3e\x74\xaa\xf5\x65\x7c\x03\x16\x0c\x10\x73\x40\x96\x40\xf6\x22\xcf\xb3\xf0\x74\x0a\x98\xb0\x05\xfe\x9c\x06\xe3\x53\x01\x02\xa4\x00\xce\x5f\xe8\xeb\x24\x3c\x2b\x93\x85\x7b\x89\x56\x80\xc5\x12\x0e\x79\xc5\x52\x09\x92\x03\xb2\x1c\xf8\x76\x92\x67\xd9\x0a\xb4\xfc\x07\x2d\xd7\xa1\xf1\xea\xa4\xe7\x61\x30\x1c\x13\xbc\xdc\x26\x48\x11\x58\x74\x55\x70\x29\x5f\xc7\xcb\x8d\x25\xe1\x1a\x93\x19\x48\x09\x98\x08\x40\x31\x7d\xf3\x6f\xd3\xf0\xbc\x04\xe4\xf9\x82\x7f\x4e\x57\xe1\x93\xe5\xdb\xcb\xc0\x13\x8f\x33\x01\xd9\x16\x70\x9b\x01\x67\x13\xff\x36\x0d\xc8\x67\x20\x52\xc0\xed\xe5\x94\x5f\xf5\x59\xf8\xbf\x78\x19\xfb\x1f\xed\xdf\x00\x00\x00\xff\xff\x21\xa0\x48\xf7\x25\x08\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 2085, mode: os.FileMode(438), modTime: time.Unix(1511528829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xc1\x73\xe2\x36\x14\xc7\xf1\x73\xf3\x57\xa8\xbe\xb6\xfc\xd0\x7b\x92\x2c\x8b\x81\xec\x4c\x0f\x3d\xb5\xbd\xec\xa1\xc7\x0c\x01\xb7\xeb\x29\x60\xc6\x90\xdd\xd0\xbf\xbe\x63\x07\x8c\x2c\xbb\xbd\x74\x1e\x87\xcc\x84\x6f\x42\x3e\xd8\x52\x14\xa4\x2c\xbf\x9f\xcd\xd4\xef\xd5\x61\x5b\x7f\x3b\x7d\x3e\x5e\x7e\xda\xd5\x9b\xbf\xca\x46\x7d\xab\x0e\x05\xa9\xd3\xf1\xa2\x66\xb3\xe7\xa7\xee\x9b\x3e\xd7\x6f\xcd\xa6\x5c\xa8\x2f\xe7\xf3\xf1\xb4\x98\xcf\xff\xac\xce\x5f\xde\x5e\xb1\xa9\xf7\xf3\x4d\xb3\xfe\xfb\x32\xdb\xaf\xdf\xe7\xe3\x9f\xd4\x3f\xff\x97\xf5\xe9\x3c\xfb\xb5\xde\x56\x7f\x54\xe5\x76\xa1\x7e\x6e\xaa\x1f\x15\x5b\xf5\x5b\xfd\x55\xb1\x26\xaf\xc8\x2e\xb4\x5d\x10\xa9\x1f\x34\x69\xdd\x3d\xef\x69\xf9\xe9\x7d\xbf\x53\x5f\xcb\xe6\x54\xd5\x87\x55\x46\xd0\xd9\xa7\xe7\xa7\x65\x53\xd7\xe7\xe7\xa7\xef\x96\xd5\xb9\xdc\xab\xc3\x7a\x5f\xae\xb2\xee\x05\xbf\x9c\x8e\x97\x17\x32\xf0\x05\xd8\x68\x90\xb1\x99\x6a\xde\x76\xe5\x2a\x4b\xe2\xb6\x6a\x56\x99\xce\xd4\xb1\xa9\xcf\xf5\xa6\xde\x75\x0f\x7a\x46\x67\xaa\x3a\xbd\xbc\xb6\x17\xb0\xca\xa8\x7b\x50\x1e\xd6\xaf\xbb\x72\xdb\x3d\x9c\xff\x27\x1d\xc0\x26\x20\x0f\xb1\x7c\x6f\x72\x70\x41\x70\x70\x26\x62\xfb\x22\x8b\x06\xb0\xe5\x84\xbd\x36\x21\x98\x0d\x42\x01\x1b\x40\xfd\xf8\x0e\x92\x20\x1b\x3a\x83\x29\x76\xef\x4d\x08\xb6\x1a\xde\x83\x39\x07\xdb\x7e\x5e\x25\x51\x9e\x76\x7a\x82\x6e\xa3\x30\x5d\x20\x70\x2a\x7f\x34\x21\xd8\x11\xc8\x12\x0c\xc3\xf5\xe3\x3c\x6c\x52\x30\x83\x4c\x01\xb2\x05\x0a\xdf\xcb\xc3\xf8\x00\x3a\x4c\xd1\x72\x53\x2c\x52\xc8\x4d\xd9\x5d\x15\xc4\x73\x0b\x36\x04\x76\xb1\x1d\x45\x61\xda\x6a\x0c\x2f\x3b\x8a\xd2\x34\x81\xf5\xe8\xb2\x6f\x55\x18\x77\x04\x6b\x53\xfb\x1a\x05\x69\xdf\x4e\x2a\xdf\xde\xe1\xd8\x8e\xab\x30\xee\x08\x4c\x9c\xe2\xb7\x2a\x8c\xb7\x1f\x79\x6a\x5f\xa3\x30\x1d\x0c\x68\x6c\xdf\xaa\x2c\xce\x6c\xc0\x26\xb1\x6f\x51\x90\x2e\x3c\x72\x0d\xd2\x83\xd5\x3c\x8a\x72\x34\x1b\x03\x0a\x21\x7e\xc7\x90\x56\x21\x3c\xb7\x68\xd7\x4e\xe8\xd9\xed\x33\x76\xfd\x1a\xf3\x2f\x5f\x14\x7d\x29\x1e\xf7\xb7\x2e\x71\x91\x43\xbb\xdb\x9c\x5b\x50\x51\x44\xf0\xa0\x4a\xe3\x39\x48\x8f\xf1\x6b\x95\xc2\x1d\x9c\x83\xb5\x03\x7a\xd0\x44\x61\xa2\x76\x2d\x19\xc2\xb7\x26\x0f\xf3\x04\x2c\xb7\x9e\x47\x88\x99\x80\xe5\x56\xb5\x0f\x84\x1d\xc3\x26\xf0\xad\x89\xc3\x61\x02\x0e\x8f\x80\x29\xe8\xb1\xdc\x45\x71\x9a\x35\x8f\xe9\x2e\x4a\x6d\xee\xb5\x85\x6d\x67\x92\x47\xde\xff\xd1\x4e\xa2\x34\x1d\x70\xdf\x68\x27\x51\x96\x6e\x37\x98\xd1\x51\xca\x30\xca\xd3\xd1\x60\xa7\x55\x18\x37\x1e\x14\x1d\x5d\x25\x55\x0a\x27\x02\x33\x81\x03\xd8\xdd\x4f\xec\x92\x2a\x76\x88\x65\x41\x5e\xc3\xe8\xc1\x6d\x4f\xea\x23\x70\x33\x89\x4b\x1e\xdf\x45\x8c\x9d\xc4\x1f\x73\xdb\xa3\x5f\xf2\xa4\x8a\xe1\xbe\xdd\x74\x74\x8b\x09\x51\x74\xe9\x49\x16\xe5\x3d\xd8\xb8\x68\x33\x96\x56\x29\xdc\x79\xb8\x1c\x14\x2c\xfc\x7d\xba\x0f\xe3\x03\x68\x33\x45\x0b\xce\xf5\x48\xb1\x53\xb4\xe0\x68\x07\xea\x56\x50\xd6\x05\x88\xef\xc3\x9d\x66\x51\x3e\xc0\x69\x50\x31\xc4\xfb\x28\x4f\x7b\x3f\x41\x7b\xb9\x0d\x70\xaf\x30\x48\xeb\x91\x7d\xad\xd2\xb8\x85\xe3\x91\xfd\x11\xff\x2f\xbd\x9c\x77\xff\x03\xfb\x27\x00\x00\xff\xff\x20\xb2\xdc\xec\xbe\x1b\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 7102, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xcd\x72\xda\x48\x10\x07\xf0\xf3\xf2\x14\xb3\xba\xee\xaa\x99\x9e\x6f\x51\x60\x57\xed\x61\x4f\x49\x2e\x3e\xe4\xe8\xc2\xa0\xc4\xaa\x00\xa2\x84\xf0\x47\x9e\x3e\x25\x01\xd2\x48\x9a\x72\x2e\xe9\xb9\x59\xff\x1a\xfc\x6b\xcf\x40\xab\x85\x97\x7f\xa7\x29\xfb\x5a\x1c\xb6\xe5\xeb\xe9\xe1\xf8\xfe\xdf\xae\xdc\xfc\xc8\x2b\xf6\x5a\x1c\x1c\xb2\xf3\x71\xbb\xae\x73\x96\xa6\x77\xb3\x76\xdd\x43\x79\xae\x36\xf9\x82\x3d\xd7\xf5\xf1\xb4\x98\xcf\xbf\x17\xf5\xf3\xf9\x09\x36\xe5\x7e\xbe\xa9\xd6\x3f\xdf\xd3\xfd\xfa\x6d\x3e\xfd\x65\xdd\xeb\x3f\xad\x4f\x75\xfa\xb9\xdc\x16\xdf\x8a\x7c\xbb\x60\xff\x57\xc5\xbf\x4c\x28\xf6\xa5\x7c\x61\x82\xa3\x65\xa8\x16\x5c\x2d\x10\xd9\x3f\x1c\x39\x6f\x5f\x37\x5b\xde\xbf\xed\x77\xec\x25\xaf\x4e\x45\x79\x58\x25\x08\x3c\xb9\xbf\x9b\x2d\xab\xb2\xac\xef\x66\x7f\x2d\x8b\x3a\xdf\xb3\xc3\x7a\x9f\xaf\x92\xb6\xe6\xc7\x4b\xcd\x8f\x28\xc1\x38\x70\x16\xd0\xea\x84\x55\xe7\x5d\xbe\x4a\x86\xd9\xb6\xa8\x56\x09\x4f\xd8\xb1\x2a\xeb\x72\x53\xee\xda\x8b\xce\xe1\x09\x2b\x4e\x8f\x4f\xcd\x5f\xb0\x4a\xb0\xbd\xc8\x0f\xeb\xa7\x5d\xbe\x6d\x2f\xe7\xbf\xb1\xad\x03\x74\x0a\x94\xf2\x6c\x2f\x23\xb5\x91\x5b\x50\xa0\xb9\x47\xf7\x11\x9d\x2c\x1a\x46\x02\xba\x0c\x50\x74\x7b\x3e\x4e\x23\xf9\x26\xe8\x9b\x58\xbe\xb6\x21\xbf\x49\x23\xf9\x2e\xe8\x3b\x4a\x5f\x71\xb0\x16\x84\xc8\x40\xcb\x9b\x3e\xcc\xe8\x6c\x2d\x00\x9d\x04\xd5\x7c\xb4\xbb\xa3\x1f\x85\xe4\x3a\xa2\x03\xb4\x38\xe2\xbb\x94\xd4\x6f\xb6\x18\x2d\x82\xe0\xc2\xf3\x07\x29\x9d\x6f\x34\x68\x0d\x28\x1d\xf0\xb4\xff\x59\xe8\xae\x09\x7c\xb0\x80\xbc\x2a\x23\x7b\xd4\xc8\x40\x55\xa1\x05\xd4\x55\x09\x25\x40\x68\x35\xac\xa4\x0b\x09\x75\x03\x88\x19\xa0\x52\x7e\x8f\x1a\xa7\x91\x7c\x17\xf4\x49\x7b\x94\x2f\xb9\x2c\xe4\x37\x69\x1c\x3f\xe3\x21\x3f\x23\xbd\x47\xa3\x44\x10\x5a\x02\x36\x3b\x2d\xfb\x01\x61\x98\x52\xfa\x0a\xd0\x72\xd0\x08\x3c\xf5\x2e\xbc\x4f\xe5\x87\x4b\x22\x54\x26\x41\x64\x93\x5a\x2e\x61\x14\x5d\xf2\x80\x2e\x89\xdf\x15\x57\xc8\xf9\x5b\xee\x82\xa7\x12\x5a\x42\x5f\x19\x62\xd3\x21\xc7\xc5\xdc\xd2\x48\xbe\x09\xfa\xa4\x93\x85\x2f\x99\xc9\x1b\xe3\x96\x46\xf2\x45\xd0\x27\x9d\x2c\x3a\xc9\x34\xb7\x47\x37\x29\xe0\x16\xc7\xaa\x60\xd2\x19\xba\x38\x52\x05\x1a\x83\x15\x68\xd2\xf9\x72\x48\xc9\x70\x05\xb4\xf7\x0d\x6d\x2f\x53\xa3\x04\xc1\xfb\x67\xea\x51\x4a\xee\x0b\xc5\xa1\x1f\x1b\x46\x61\x14\xdd\x7b\xb2\x1d\xa7\x51\x7c\x21\x78\xc0\x6f\x53\x62\xdf\x34\x4f\x92\x28\xdd\x80\xef\xc3\x38\x7a\x16\xd2\xe9\xcf\xfe\x02\x29\x1e\xd0\x55\xac\x9d\x57\x18\xd2\x69\xfb\x8e\x07\x85\xce\x9d\xb8\xf3\x7b\x50\xe8\xdc\x89\xbb\xfe\x05\xca\x0c\x68\x35\xc2\xaf\x59\x14\x7b\xbc\xed\xd7\x2c\x86\x8d\x42\x4e\xf1\x36\x8c\xa2\xf7\x8f\xc7\xa3\x90\x50\xcf\x10\x84\x14\xe0\xb8\xf7\x15\xda\x28\x8c\xa3\xbb\x90\x4e\x7b\xee\x3d\xe4\x0d\xba\xc3\x30\x8e\x2e\x42\x3a\xed\x94\x7b\x85\x50\x66\x80\x6e\xe2\x77\x71\x9c\x0a\xc4\xf4\xbd\xd7\xc5\xb1\x2a\x50\xe1\x0a\x68\xbb\x5e\x4b\x29\xb0\xed\xf7\xb6\xc3\x02\xfa\x34\x92\x6f\x82\x3e\xed\x94\xe7\x4b\x2e\xe8\x93\x76\x00\xc1\x2d\x28\x03\x88\xca\xeb\x3f\xa3\x30\x8a\x6e\x30\xa0\x9b\x3f\x30\xe9\x2c\xe7\xed\x7f\x2d\x7f\x05\x00\x00\xff\xff\xe8\x86\x60\x56\x73\x1d\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 7539, mode: os.FileMode(438), modTime: time.Unix(1511528660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\x6a\x37\xee\x76\x7d\x6d\x2f\x85\xed\x36\x10\x96\x1c\x4a\x0f\x8a\x2c\x3b\xa2\xb6\x46\x48\x72\x1e\x2c\xf9\xee\x8b\x94\xf8\x05\x39\x14\x61\x98\xf9\x69\xe6\x3f\x0f\xf9\xdf\x0c\x80\xec\xa5\x75\x0a\x35\xc9\x81\x2c\x69\x72\x4f\x13\x72\x17\x70\x21\xb7\x6d\x45\x72\x28\x79\xed\x64\x24\xc6\xe2\x51\x95\x4a\x5a\x92\x43\xc8\x04\x20\x35\x56\x2b\xee\x77\x21\xf7\x39\x67\x7f\x9d\xb4\x8e\x7d\xb4\x4e\x5a\xcd\x1b\xf9\xc9\x5e\x50\xb4\x8d\xd4\xde\xb1\x55\x97\xcb\x7e\x63\x45\xfd\xd1\x93\x19\xc0\x39\xca\xba\x93\x6b\x62\xf9\xab\xa6\xdc\xfb\xe3\x48\x74\xf3\xfa\xe7\xe5\x7d\xb3\x66\xee\xe4\xbc\x6c\x1e\x52\x76\x50\x5a\xee\x7d\xd0\x71\xec\x4d\x09\x8b\x0e\x4b\xbf\xd8\x28\x5d\xe0\xc1\x2d\xd6\x51\xed\xc7\xf2\xdd\x48\xcb\xbd\x42\xcd\x6b\x1a\x14\x87\x7a\x07\x65\xa5\xdb\x71\xfb\x35\x94\x34\x82\x1b\xfd\xcd\x49\x36\x5d\x3a\x13\xdc\xd0\x4b\x66\xdc\x18\x00\x11\xdc\xf8\xd6\xca\x5e\x18\x80\x28\xed\xa5\x2d\xb9\x08\x30\xb9\xeb\x68\xa9\x6a\x1f\xf7\x48\x34\x7a\xe0\xd6\x00\xd7\x05\x18\xb4\x1e\x02\xc8\x1e\xa2\x1f\x4c\x25\x1a\x33\x71\x1e\x7b\x6f\x6b\x91\x17\x82\xbb\xb8\x4b\x80\x73\x3f\xa1\x3c\x8a\xba\x2d\x86\x36\x88\x32\x8e\xe4\xf0\xd1\x55\xbf\xa7\xf1\x90\xbe\x9d\x24\xfd\x19\x51\x32\x42\xbf\x52\x9a\x3c\x3e\x05\xbc\x18\xec\x34\xcb\x86\x90\x27\x1a\xcf\x14\x2c\xe9\x72\x00\x69\x96\xd1\xd1\x77\xe9\xf3\xf3\xba\xac\x1d\x3a\x3f\x69\xeb\xed\xf4\x8c\x8d\x69\xc3\x62\x7a\x85\x1a\x05\xaf\x43\xe4\x0d\x44\xa3\x55\x60\xc3\x95\x1e\xae\xe7\x17\x3c\x80\x13\xb6\xf6\x75\xbd\xa2\x02\x9b\x71\xd4\x4d\xdc\xff\x1b\x14\x6d\x35\x8e\x9e\x5e\x4c\xe6\x40\x5b\x4d\xc6\x98\x87\xd7\xde\x22\x7e\xcd\xaf\x71\xe1\x5d\x66\xe7\xd9\xff\x00\x00\x00\xff\xff\x3a\xca\x08\xb5\x6d\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 877, mode: os.FileMode(438), modTime: time.Unix(1511527381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/settings.json": appSettingsJson,
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"settings.json": &bintree{appSettingsJson, map[string]*bintree{}},
	}},
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

