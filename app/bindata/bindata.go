// Code generated by go-bindata.
// sources:
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x5b\x92\xdc\x30\x08\xfc\xdf\xa3\x6c\x95\xf9\xd8\x1b\x69\x11\xb6\x29\x0b\x50\x04\x33\x9a\xc9\xe9\x53\x7e\xec\x3c\x9c\xe4\x53\x0d\xdd\x40\x83\x3e\xe1\x4b\xb2\x82\x52\x7c\x7c\x82\x90\x3b\xe9\x44\x0d\x0a\x5f\x09\xd0\x64\x05\x7d\x0c\x45\xe7\xe3\x79\x35\x10\x27\xd4\x7c\x70\x3a\xa5\x98\xa9\x81\x30\x36\x73\x1b\xe3\xc8\xbb\x7d\xdb\xed\xa1\x92\xd4\x3b\x35\x3f\x25\xa5\x5a\x1d\x7c\xb9\xd7\x3d\x09\x93\xe6\x3b\xb6\x8b\xcf\x6e\x39\xc1\xc2\x3a\xed\x78\x56\x40\xd3\x20\x0d\xa8\xcd\x32\xa0\x38\x88\xeb\x23\x68\x4a\x6a\x41\x5b\x43\x38\x1b\x23\x9d\x0a\xfd\x0b\x04\xf5\x14\xb8\x73\x0a\xaf\xda\x5d\x1d\x3a\x6b\xb6\xee\x3b\x6b\x83\xd1\x74\xe4\x09\x6a\x72\xaf\xd6\x62\x23\x64\xaa\xc5\xee\xe0\x91\x82\x11\xd2\x92\x24\x71\x10\xce\x6a\xc5\x26\xa6\x9d\x9e\x25\x83\x50\x24\xa7\x76\x65\xa4\xf3\xf0\x23\x51\xfe\x4e\xb8\x3c\xe1\x61\xb6\x59\xde\x63\x4e\xa9\xe1\xfc\x3f\xe6\x6b\xb3\xd3\x73\x65\x2c\xd3\xe0\x83\xb8\x0e\xeb\x98\x7b\x77\xbf\x69\xdf\x17\xab\x73\xa6\x56\x57\xcb\x8b\x5d\x72\xaa\x75\xc3\x0b\x23\xa9\xaf\x8e\x4b\x3d\x95\x5b\x47\xd2\xa7\xba\xc0\x6c\x21\x89\xcb\xfe\x7a\x3d\x0e\x1b\x47\x46\x3a\xdc\x7c\x17\x31\xfd\xc1\x7d\xbc\x81\xf8\x47\x6d\x8c\x54\xd8\xe3\xe5\x00\x7e\x5d\xa8\xdd\x9f\x2b\x6e\x67\x91\x1f\x37\x8e\xd5\x7b\x58\xa3\x81\x25\x4d\xe4\xe0\xc3\x29\x77\x0d\x52\x9e\x68\xcc\x90\xfd\xf6\xf7\x58\xc1\x42\x6f\x0e\xc6\xf2\x05\xb5\xc4\x43\xfe\xc2\x2f\xad\xf5\x8c\x67\x81\xee\xeb\x51\xc2\x76\xc4\xa7\x48\xef\xdb\xaf\x41\x53\x25\x8c\x20\xdf\xf0\x3f\x01\x00\x00\xff\xff\x94\x16\xce\xa0\x6b\x03\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 875, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x97\x71\x8f\xbb\x2c\x0c\xc7\xff\xff\xbd\x94\x25\x23\xa0\xbb\xdd\xf6\x72\x2a\x74\x4a\x4e\x81\x87\x32\xdd\xde\xfd\x13\x74\x73\xea\x18\x77\x97\x5c\xe2\xbe\x9f\x42\x4b\x8b\x52\x76\x0c\xf6\x1d\xa1\xaa\x91\x19\x0c\xff\x76\x0c\x94\xb9\x11\x93\xb6\x1b\x9f\x69\xc7\x3a\x02\x45\x33\x1c\x05\xf3\xe4\xdd\xf8\x13\xa5\x79\xf2\xa0\xba\xf0\x80\x4a\xae\x27\xae\xdb\x4a\x19\x2a\x58\xa7\xa5\xb7\x64\x2f\x4f\xbb\xd6\x4a\x08\xda\x1a\xd6\xea\xfe\x69\xbb\x1a\xe8\x41\x2d\x7c\xfa\x18\xcd\xeb\x27\xa1\xef\xb5\x44\x62\x64\xa5\x86\xf6\x6d\xf6\x80\x2d\x76\x18\xfc\xfd\x9d\x78\xb8\x5c\xb4\xec\xc0\x40\x8d\xfe\xe1\xab\xd7\x3e\x5c\xa1\x45\xf0\xa1\x79\x4a\xd6\x07\xbc\xed\x98\x82\x00\x2c\x4e\xf5\x0c\x55\xda\x8e\x19\x82\x20\x93\x86\x1b\x6f\x13\x4c\xb1\x55\xfe\x41\x96\xf3\xe2\x40\x06\xdd\xeb\x70\x67\x83\x36\xca\x0e\x53\x51\x40\x19\xbc\x5d\xa7\x7a\xbc\x4a\xb5\xcc\x09\x28\x12\x8b\xa2\x3d\x7e\x3e\xd8\x0f\xec\xa5\x32\x7b\x43\x0c\x54\x40\xd9\x30\x85\xff\xc0\x7b\xb8\xef\xf6\xce\x5b\xc5\x94\x65\x8a\x1c\xeb\xdc\x26\xc8\x4a\x9b\x7a\x74\xb2\x56\xdb\xb2\xe4\x62\x0f\x4c\x28\xdf\x2f\x15\xf9\xa6\xd4\x0b\xc5\x88\x92\x1f\xf6\xb8\x51\x8e\xab\x79\x26\xe5\xdd\x66\x35\x4f\x51\xed\xa5\xf5\x9c\x0b\x06\x4e\x33\x17\x1f\x12\xb4\x4c\xd2\xd2\x65\xc6\xd2\xb4\xaf\x4c\xbd\xa7\xfb\x94\xe1\xea\xfe\xb6\xd4\xfb\xdb\x52\x27\x65\x11\xb4\x9c\x33\x2f\x41\x36\x38\x96\xbf\x03\x1f\x56\x25\x95\x8a\x0e\x5f\x67\xd6\xca\x3b\x6b\x5b\x33\x8c\x55\x93\x8a\xce\xc7\x2f\xd6\xc6\xbd\x36\x6b\x8d\xf8\x1c\xf2\x0c\x8b\x24\xdc\x86\xfa\x50\xf0\x4d\xa9\x37\x4a\xf1\x36\xaa\x58\x8d\xb2\x9d\x83\x80\x37\xd9\x80\xa9\x91\xc9\xd6\x5e\x15\x38\x37\xc5\x6b\xbd\x63\x14\xb6\x9b\x46\x3a\xc1\x45\x7e\xb7\x49\x12\x6c\x70\x92\xf5\x5c\xaa\xe9\xd3\xa2\xaa\x72\x30\x54\x70\x11\xff\xd8\x60\x68\x95\x41\x55\x7d\xa5\x34\x92\x8d\xe0\x42\x70\x7e\x2a\xf3\xfc\x2c\xbe\x73\x5c\x14\x65\xd2\xe7\xcc\xcb\xf2\x90\xe5\x5f\xe9\x98\x67\xfe\x5d\x9e\xb3\xfc\x24\xca\x3c\xcf\xaf\x4f\x9c\x45\x3e\xbe\x73\xd6\x7f\xfc\xcf\x8d\x17\xbc\xe0\xc7\x2c\x2f\x8b\x5c\x7c\x91\x9f\xb2\xfc\xc0\x73\xeb\x17\xfc\x58\xe4\xfd\x1f\xb3\xf5\x11\xfc\xfb\xc0\xb3\xfc\x24\x7e\xe3\x79\xff\xa7\x22\x57\xff\xc8\x8b\x5f\xf8\xe7\xfc\x94\x71\xf6\xcc\xfe\x8a\xfc\x90\xa9\x4f\xe4\xdf\xe2\xb3\xff\x92\x9f\xc5\x31\xf3\x7e\x44\xfe\x2d\x3e\xd7\xb7\xe4\xe7\xa2\xe0\x9f\xf7\x57\x29\xb8\x38\xe4\xe2\x17\xbc\x10\xb9\xf8\x04\x2f\x8e\xe9\xf9\x07\x43\x42\x25\xc0\x71\x1c\x58\xf0\x33\xff\x4a\x16\xf6\xc5\x4f\xc9\xc0\x66\x1e\x3f\x2d\x59\x2e\x78\x2a\x31\x2f\x7e\x48\x2e\xec\xc5\x8f\xa9\x8d\xaf\xa1\x36\x96\x82\x96\xc4\xe8\xea\x9c\xf5\x61\xf3\xf9\xbc\xb4\x78\x9b\x0f\x9e\xfa\xf5\x84\x36\xff\xd9\xad\xd1\xf6\xe8\xf3\x36\xcd\xab\x99\x68\x8a\xf9\x51\xef\xc9\x14\x9f\x0f\xa7\x05\x4e\x1d\x4f\x3f\xfd\xaf\x27\x42\x5b\x09\x36\x0c\x03\xeb\x88\xc1\x0f\x28\x33\xf5\x36\x2d\x15\x03\x56\xcc\xa3\xea\xac\x51\x6c\x3c\x70\xd6\xe3\x3a\x5b\xe9\x16\x99\xd3\x0e\x19\x78\xbd\xed\xbd\x16\x9d\x57\x47\x26\x20\x85\xb7\x83\x7f\x6a\xb7\x6c\x6c\x15\x11\x9c\xa3\xb9\xf7\x9b\x88\xbf\xb6\x98\xc6\xd6\x20\x61\x08\xda\xd4\xb4\xaf\x4c\x91\x69\x1d\x97\x96\xf2\xfe\x57\xcb\x78\xe8\xfd\xcd\xb2\xf9\xc9\xcd\xe9\x3c\xb2\x8b\xb5\xc1\x79\x6d\x82\xf3\xa8\xb4\x9c\x92\xe3\x3c\xf6\x1a\x87\xb9\xc8\xb1\x0f\x9f\x57\xb7\x6c\xca\xe3\x18\x1f\x3d\xc0\xdc\x8d\xaf\xd3\x4c\xb2\xc1\x0e\x96\xea\xa2\x88\x84\xf2\x1a\x43\x68\x81\x9a\x00\xed\x8f\x36\xf5\x34\xe8\x19\x3e\x81\x51\x95\x4d\xf6\xce\xb3\xcd\xa0\x4d\x8e\x27\x99\xd9\x36\x45\x0f\x05\xdf\x94\x45\x53\x44\xee\x6e\x30\x6c\x6f\x31\x93\x0a\xed\xf6\x4d\x9c\x74\xbc\x7a\xeb\xf0\xc3\xea\x69\x78\x25\x95\x82\xf5\x28\x21\x40\x6b\x6b\x8f\xfd\xf3\x62\x34\xca\xff\x5d\xa1\x8d\x97\x81\x8d\x83\xab\xef\xf1\xce\x06\x08\x64\xcd\x86\xbd\xae\x3e\xe0\x1c\xde\x58\xec\xe1\x47\x9f\x9f\xee\x44\x2f\xfd\xea\xb7\x25\x0c\x74\xc1\xe7\x95\x89\x1a\x70\x71\xae\xe4\x9b\xda\xa3\xa7\x18\x74\x73\xaf\xbc\x56\xe3\xdb\xde\xa0\x9f\xd6\x37\x5d\x82\xf6\xbb\xcc\x6e\x7c\x98\x64\x6a\xfe\xb0\xf8\x50\xf1\xd5\x3d\xeb\x17\x2f\xa9\xf1\x8f\x4c\xce\x25\x49\x66\x76\xd0\x46\x70\xa6\x5d\x7f\x5c\x83\xff\x03\x00\x00\xff\xff\xad\x52\xd7\xb8\x4d\x0f\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 3917, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1495898227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x16\xde\xa8\xa6\x99\xf2\xa1\x49\x86\x49\x6c\xaf\x2f\x14\x41\x1c\x14\xdc\xfd\xbc\x47\xe0\x5d\x49\x63\x4b\xe3\x00\xb1\xeb\xa5\x70\x62\x94\x84\x1b\x45\x0f\x52\xf0\xe1\xe1\x5b\x2e\xc9\x7e\xfb\x46\x8f\x7e\x22\x55\x2b\xa9\x64\x09\x39\x06\x58\xce\x0f\x8d\xee\xb0\xf6\x9a\x1d\x43\xd6\xec\xde\x60\xef\xf3\xa3\x2a\xa1\x42\x13\x56\x7d\xc6\x02\xa3\x74\xd4\x5f\x99\x33\xd8\x2d\xa9\xec\xfb\xdf\x86\xa4\x36\x89\x07\x52\xc8\x24\x9f\x01\x00\x00\xff\xff\x6f\x6c\x78\x57\x14\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 276, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xe1\x6a\x84\x30\x0c\x07\xf0\xef\xf7\x28\xc2\xc2\x59\x7b\x8e\x7b\x9c\xac\x8d\x52\x56\x13\x49\xb3\x73\xbe\xfd\xd8\x8d\x81\xd3\x0e\xfc\xfa\xeb\xff\x9f\xd2\xa6\x01\xa3\x4c\x13\x99\xae\x30\xa5\xa0\x52\x64\x30\x08\x32\x5d\x1a\x30\xc5\x61\x48\x61\x42\xc6\x91\x14\x98\xec\xd2\xc0\x43\xd4\xe8\x13\x22\x1a\xee\x0a\x21\x96\xb6\xf5\x1d\x64\x61\xc8\x99\x97\x67\xe1\x1b\x5d\x7f\x3f\xa0\xbb\x7a\xe7\x21\x87\x75\xaf\xdd\xad\xa6\x7d\x7b\xd0\xae\xbb\x1f\xcd\x1f\x67\xfa\xeb\x2b\x0c\x8a\x1b\x5b\x1d\x14\x32\x4b\x3c\x96\xca\x3b\x00\xdf\x31\x72\x79\x46\xe3\xdb\xed\x6c\x74\x24\x39\x1b\xfd\x8d\xbd\x2c\x89\x6b\x1f\x59\xe6\x95\xc9\x5c\x55\xe9\x43\x65\xa6\xcd\xd1\x66\xae\x91\x52\x14\x48\xf3\xa3\xdf\x75\x7f\x96\xf6\xdf\x7d\x0b\x5a\x11\xfe\x8b\x5f\x01\x00\x00\xff\xff\xb0\x35\x63\x6b\x18\x02\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 536, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x51\x6e\x02\x31\x0c\x44\xff\x7b\x14\xa4\xb5\x54\x6e\x14\x92\xd9\x60\x29\x4e\xb6\xb6\xd9\xc0\xed\x2b\x28\x94\x12\xa0\x7f\x89\xdf\xd3\x78\xe4\x0d\x85\x65\xc1\x71\xd2\x99\xc4\x2a\xc5\x26\x1f\x1b\x12\x9b\xbd\x46\xe3\xeb\xd7\xa0\x2b\x47\xd8\x8f\x4a\x3b\xae\xf9\x46\x24\xa8\x5b\x54\xa0\x92\x70\xd4\x66\x6d\xf6\x2b\x73\x14\x08\x5c\x4f\xcf\x84\x0b\x9e\xb3\x3a\x82\xef\xa1\x83\x1d\xa2\xf3\x1a\x9c\x5b\x9d\xd6\x2d\x59\xb1\x91\x8f\xed\x93\x24\x12\x78\xf8\x2d\xfd\xe8\xe7\xfb\xca\x4c\x85\x57\x5c\x9e\x2c\x99\xcc\x77\x64\xd3\x2d\xa6\xb4\xcc\xf5\x2e\x3c\x5c\xa4\xe2\xe8\xd3\xdf\xa3\x8c\x4b\xbe\x0e\xd0\x13\x2d\xda\x12\x45\x31\x52\x1f\xb8\x79\x53\x20\x65\xcc\x89\x92\x1d\x49\x96\x41\x70\x16\x50\xe7\x9a\x5a\xb7\xcb\x60\x0d\x85\xd3\x3f\x67\xe8\x29\x8e\x19\xdd\x62\xab\xfe\xaa\xde\x5b\x42\xe7\x4e\x76\x60\x07\x55\xf8\xd5\xfb\x7c\x1f\xb1\x7d\x89\x7a\xbf\x55\x37\x04\x8d\xfb\xf3\xf4\x3b\x00\x00\xff\xff\x15\xb4\x85\x0c\x67\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 615, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xdd\x6a\x87\x30\x0c\x05\xf0\xfb\x3d\x8a\x60\xc0\xea\xc4\x3d\x4e\x68\xa3\x94\xb5\x69\x69\xa2\x9d\x6f\x3f\xf6\xc5\xe6\xec\xff\xf6\x97\xc0\x39\xa7\x03\xec\xa3\x90\xdb\x08\x98\xf4\xa9\x03\xa5\x40\x91\xb4\x9c\x10\xbd\x2d\x49\xd2\xaa\x60\x53\xfc\xb8\x14\x5c\x57\x6f\x23\x32\x6e\x54\xbe\xdf\xf7\xec\x50\xe9\xf6\x7b\xa4\xa2\xf4\x06\x0e\x15\x6f\xb7\x2a\xff\xe8\xd2\xc0\x3a\x19\xcc\x34\x41\x48\x0c\x21\x70\xfd\x41\x33\x98\xe7\xb9\xa5\xcb\x70\xd3\x71\x7c\x81\x60\xcf\x5f\x13\x52\xf5\xbc\x49\x5f\x3d\xb7\x4a\x49\x3e\x99\xd4\x34\x15\x83\x36\x9d\xf6\x92\xf2\xdf\xe5\xf8\x8a\x8e\xe5\x33\xef\x6b\xfe\xa3\xb4\xea\x79\x01\x9f\x8f\xf9\xea\xef\x01\x00\x00\xff\xff\xa3\x50\xcb\xf7\x8b\x01\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 395, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd0\xbd\x6e\xe2\x40\x14\x05\xe0\x7e\x9e\xc2\x12\xcd\x6e\xe1\xe3\xfb\x37\x7f\x94\xdb\x6f\xb5\xc5\xd6\x0e\x31\xc1\x0a\x60\x64\x1c\x01\x79\xfa\x68\x20\x80\xd3\x9d\x4f\xf7\xde\x63\x6b\x16\x8b\x45\xb5\xee\xc7\xee\xd4\x6e\xb7\xd5\xa9\xdf\x33\x55\xdd\x79\x1a\xdb\xea\x97\xc4\x86\x7c\x23\xc4\xb1\xe2\xb8\xe4\xf4\xdb\x95\xdd\xbf\xc3\xd8\x55\xfd\x7e\x3d\x2c\xab\xcd\x34\x1d\x8e\xcb\xa6\x79\xeb\xa7\xcd\xc7\x0b\x56\xc3\xae\x59\x8d\xed\xe7\xa5\xde\xb5\xe7\xe6\x7f\xbf\x7f\x1d\x4e\xc7\x7f\x87\xcb\x9f\xed\xb0\x7a\xef\x46\xe7\x58\x91\x08\x2c\xf0\x56\x32\x53\x84\x82\x25\xdd\x21\x0c\x21\x72\x46\x88\x11\x22\x86\xf4\xc8\x01\x54\x3f\xb3\x78\x5f\x26\xcc\x09\x4c\x8a\xe8\x82\xc1\xe0\x0d\x22\x8f\xa8\xe2\x82\x87\x17\x30\x95\xcd\x19\xb2\x3e\x90\x40\xf5\x33\x97\xda\x22\x7f\x93\x7e\x43\xbc\xc0\xd4\x31\x19\xcc\x90\xae\xdf\xbc\x4a\xd8\x83\x2d\x5c\x7f\x9a\x95\x21\x5e\x11\x18\x54\xcf\x50\x3a\x59\x0d\x1c\x09\x9c\x3c\x22\x39\x0e\x09\x41\xc1\x09\x31\x3b\xce\x0c\x51\x01\x6b\x2e\x87\x33\x95\x4b\x21\x43\xcc\xe0\x1c\x41\xf5\x0c\xb7\x59\x84\x05\x94\xf2\x39\xb3\x81\x6d\x2e\xf9\x31\x53\xbd\x4b\x44\x91\x6f\x9b\x21\x81\x43\x79\x56\xfb\x0a\x00\x00\xff\xff\x98\x1d\x21\x25\x0e\x02\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 526, mode: os.FileMode(438), modTime: time.Unix(1495898292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x96\xbb\x52\x2c\x47\x0c\x86\xf3\x79\x8a\xad\x22\xb1\x83\xd5\xea\x57\xdf\x09\x9d\x3b\x72\xe0\x18\x63\x8e\xcf\x96\x39\x2c\x05\xb8\x30\x7e\x7a\xd7\xdf\x97\xe9\x9e\x00\x4a\x5f\xa9\x5b\xea\xd1\x75\xef\xee\xee\x4e\xdf\xae\x6f\x4f\x9f\x0f\xcf\xcf\xa7\xcf\xeb\x0b\xf4\xf4\xfe\xfa\x75\xfa\xc9\xd2\x45\xc3\xc5\x14\xe9\x84\x74\x8f\xfc\xf3\xc6\x93\xbf\xde\xde\x9e\x4e\xd7\x97\x6f\xb7\xfb\xd3\xf7\x8f\x8f\xd7\xf7\xfb\xcb\xe5\xaf\xeb\xc7\xf7\x7f\xfe\x90\xc7\xdb\x8f\xcb\xe3\xdb\xc3\x7f\x5f\xe7\x1f\x0f\xff\x5e\x7e\xbf\xbe\xfc\x79\xfb\x7c\xff\xed\xf5\xeb\x97\xe7\xdb\xe3\xdf\x4f\x6f\xdb\x06\x27\x29\x8a\x21\x0b\x90\x76\x2a\x82\x82\x85\x0c\x4a\x82\x26\x09\x92\xf3\x66\x4e\x4a\x92\x08\x81\x4b\x1d\x90\xb2\x20\xb9\x4e\xa6\x45\x4a\x53\x15\x81\x0a\xb0\xcb\x45\xbc\x5f\x20\xee\x80\xc8\xbf\x41\x06\x31\xad\x16\xa0\x26\x5e\x2c\xb8\x01\x06\xf1\x43\x46\x08\x02\xaf\x0d\x9d\x20\x9b\xc0\xe2\xe6\x55\x62\x11\xaf\x82\x90\x08\x29\x0a\x04\x29\x0e\xd9\xc4\x4f\x11\xd1\x2a\x24\x31\x2b\xa2\xe7\x29\x5b\x08\xd4\x64\x1a\x2e\xe2\x0b\x01\x70\x92\x87\x06\x35\x2a\x92\xf2\x0e\x5e\x10\xf6\x73\x66\xe2\x53\x03\x2f\xf0\x45\xcc\x74\xa0\x79\x08\x3c\x1a\x06\x01\xc3\x52\xe5\x24\xf0\x54\xeb\x8e\x01\x62\xcd\xa6\xa1\x2a\x91\x6d\x0b\xf5\xba\x38\x93\x80\x2d\xf0\x2b\xea\x25\x71\x6e\xa5\x50\x26\x31\xa2\xa1\x22\x73\xe5\x53\xf5\x31\x90\x3e\x60\x3b\xf2\x2f\xee\x54\x5c\x4d\x4d\x47\x33\x27\xd6\xbc\xe4\x24\x51\x59\x17\x5b\xf4\xe2\x25\x0a\x54\x9b\x68\x4e\xf4\x3c\x24\x46\xab\xca\xa1\x25\x72\xca\x7e\x8b\x41\x5c\xa9\xdf\x69\x4e\x49\xc1\xc4\xa2\x58\xee\x32\x54\x69\x69\x97\xab\xad\x46\x11\x2c\x9f\x7e\x85\x65\xca\x77\x04\x09\x41\x98\x3b\x97\x3b\xd0\xbc\x76\xd9\x7b\x86\x6b\xca\x7e\xca\xd0\xbc\x42\xe9\xc0\xe4\xdb\xb8\x5e\x53\x8c\x15\x6c\x05\x37\xc0\xa9\x84\xfd\x4e\x8a\x52\x06\x58\x8b\xcb\x2e\x8f\xaf\x09\x62\xc1\xa6\x86\x1f\x44\x0d\x5b\xa2\xb4\x94\x87\x74\xc4\x7c\xc0\x5c\x0e\x48\x7f\x03\x93\xc0\x61\x4b\x49\x62\x62\x5c\xd8\x05\x50\x2f\xb5\x1c\x92\x24\xd7\x88\xaf\x4f\x12\xe3\x24\xb6\xfd\x4e\x5e\xf9\xdc\x81\x66\x59\xc2\x81\x4c\x6d\x47\x97\x04\xb1\x34\x64\x60\x04\x25\x0c\x32\x36\x02\xfa\x59\x36\xa5\x01\x03\x5c\x66\x3a\x3b\x04\x56\x7b\xbb\x66\x50\xf1\x92\xd2\x04\x95\x3c\xc9\x60\x62\xde\x75\xf6\xe2\x82\x98\xf7\x1b\x00\x31\x4e\x11\xce\x81\x95\x40\x4b\x13\x59\x8f\x07\x9c\x57\xa3\x17\x3d\x2f\xc0\x94\xc0\x81\x57\xd8\xe8\x7a\x5e\x60\xd5\xb1\x0b\x39\x4c\xbd\x20\xa9\x38\x6d\xd1\x59\x90\x81\xed\xc8\x3a\x0e\x13\xa1\xb1\xda\x9d\xd4\x0c\x0f\x66\xd3\x1e\xd0\xe7\x03\x96\xb8\x60\x3e\x1e\xce\xc7\xc3\x59\x92\x1d\x0f\xaf\xa7\x81\xf5\x1d\x8c\xc1\xfa\x0e\x04\x09\x8b\x27\xd3\x83\x27\xd3\x83\x27\xd3\x83\x27\xd3\xc3\x2b\x53\xe6\xa6\x98\x58\x6a\x6e\x07\x66\x7e\xc3\xb4\x65\x2e\x70\x2e\xb1\x54\xb9\x2f\x32\x9a\xdf\xd4\xe7\x47\x53\x86\xc4\x1e\xaa\xed\x34\xe5\xfa\xfc\x4e\x71\xd1\xc4\x55\xc3\x85\xb4\xab\x08\xab\xce\x5a\x43\x74\x72\xba\x9c\x74\xba\x9e\xe4\x3b\x76\x1d\xe1\xa0\x8b\xab\x6e\xf1\x1e\x85\xff\x87\x9c\x58\x51\x3a\xa8\xa0\x96\x7f\x03\x16\x05\xb2\x3f\x62\x38\x62\xd9\x91\x5b\x08\xf3\xae\x41\x16\xa5\xf9\x1a\xec\x4e\xdc\x4f\xf4\x19\x33\x57\xbb\xf9\xba\x9e\x3a\xc1\xf3\xa9\x93\xd8\x46\x3b\x25\x93\xd4\x4f\xb6\x9d\x00\xd7\xc8\xd5\x89\x1d\x31\x29\x8b\x39\xb7\xa1\x40\xcc\x59\x1d\x32\x7a\x5e\xa9\x86\xa3\x72\xac\xbb\x3d\x6b\x47\xfe\xa6\xc8\x75\xb7\xef\x0c\x1a\x2b\x9d\x0b\xf7\x49\xb0\x0d\x85\xf9\xa8\x0b\xba\x9a\x9e\x44\xd3\x9c\x78\x3e\x4a\xe2\x84\x1d\x00\xad\xeb\x75\x10\xdb\x79\x9e\x44\xf1\x1c\x1f\xa4\xc8\x95\x18\xeb\x80\x30\x0e\x7b\xfe\x4a\x49\x7c\xff\x4a\x16\xc2\xff\x01\x00\x00\xff\xff\x68\x14\x5a\x69\xbc\x09\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 2492, mode: os.FileMode(438), modTime: time.Unix(1495898287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\xbf\x6f\xea\x40\x0c\x07\xf0\xfd\xfe\x8a\x93\x58\xde\x1b\x70\xce\xf6\xf9\x7e\x30\xbe\xfd\x4d\x1d\x3a\xa7\x10\x4a\x54\x20\x28\x04\x51\xfa\xd7\x57\xd7\x94\x72\xee\xe6\x8f\x6c\xc7\xa7\xaf\xb2\x58\x2c\xec\xb6\x1f\xbb\x6b\xbb\xdf\xdb\x6b\x7f\x44\x67\x2f\xa7\x4d\x3b\x75\xf6\x0f\x61\xe3\xa4\x21\x87\xd1\xa2\xac\x24\xfe\x35\x65\xf8\xff\x30\x76\xb6\x3f\x6e\x87\x95\xdd\x4d\xd3\xe9\xbc\x6a\x9a\xd7\x7e\xda\x5d\x5e\x60\x3d\x1c\x9a\xf5\xd8\x7e\xdc\x96\x87\xf6\xbd\x79\xee\x8f\x9b\xe1\x7a\x7e\x3a\xdd\xfe\xed\x87\xf5\x5b\x37\x1a\x83\x0c\xe8\x22\x78\x10\x57\xd5\x64\xa8\xd4\x0c\x98\x32\x20\x05\x45\x89\x9a\xc9\x04\x01\x11\x40\x4e\xe0\x96\x8f\x9a\x44\xee\x9d\xc0\x8f\x4e\xe0\xaf\x0e\x32\x02\x09\x03\xf3\x7c\xda\x03\x46\x07\x82\x80\x29\x6a\x26\xc5\xac\x86\xc9\x07\xcd\xa8\x59\xed\x32\x50\xae\xc5\xd5\x87\xca\xc3\x2b\xcc\xef\x9b\x89\x28\x10\x9c\x26\x3d\x18\x44\x5d\x99\x9d\xb5\x05\x7f\x99\x0d\x4a\x9c\x63\x62\x20\xe7\xef\x24\xef\x20\xe5\x5a\x44\x6e\x66\x80\x18\x4b\xaa\x4a\xb9\x96\x57\x93\x1e\x95\xd4\x9e\xff\xd9\xcb\x01\xc4\xd7\x48\x15\x90\xd8\x60\x46\x20\x26\x48\x25\x32\xa5\x54\xab\x04\x54\x89\xbe\xe5\x21\x12\x60\x62\xcd\xa0\x99\x14\xb3\x33\x54\xfe\xc1\x00\x88\xbe\x5c\xa9\x14\xf0\x33\x00\x00\xff\xff\x8e\xc8\xf7\xc2\x1a\x03\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 794, mode: os.FileMode(438), modTime: time.Unix(1495446512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xbd\x0e\x82\x30\x10\x00\xe0\xbd\x4f\xd1\x84\x45\x07\xaf\x77\xfd\x81\xc2\xe8\xee\xe4\xe0\x5c\xb1\x48\x23\x50\x52\x6a\x00\x9f\xde\x98\x38\x7e\xc9\x57\x14\x05\xef\x42\xf2\xab\x1b\x06\xbe\x86\xa9\xe2\x7e\xcb\xc9\xf1\x03\x4a\x81\x56\x48\xa4\x92\x4b\xd5\x68\x3a\xb2\x5f\xbd\xc4\xe4\x79\x98\xba\xd8\xf0\x3e\xe7\x79\x69\x84\x78\x86\xdc\xbf\xef\xd0\xc6\x51\xb4\xc9\x7d\xf6\xd3\xe8\x36\x71\x0b\xd3\x23\xae\xcb\x75\xde\xcf\x43\x6c\x5f\x3e\x31\x46\x0a\x2c\x02\x49\x30\x9a\x69\x04\x22\x0b\x84\x0a\x2a\x56\x1a\x30\x12\x6a\x0b\x52\xd1\x1f\x84\x16\xc8\x68\x26\xb1\x02\x5d\x02\xd5\x1a\x48\x7f\x03\x00\x00\xff\xff\xf5\x60\xc1\x5e\xab\x00\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 171, mode: os.FileMode(438), modTime: time.Unix(1495446262, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\x31\x8f\x13\x31\x10\x05\xe0\xde\xbf\x62\xa5\x34\x50\xf0\x76\xde\xd8\xe3\xb1\x53\xd2\x53\x51\x50\x87\x90\xe3\x56\xe4\xb2\x51\x12\x14\xc2\xaf\x47\x0e\xb9\xcd\x6e\x61\xc9\x9f\x3d\xf2\x3c\x8d\x57\xab\x55\xf7\x32\x9c\x76\xd7\xcd\x7e\xdf\x5d\x87\x83\x77\xe7\xe3\xad\xfb\xa0\xec\xc5\x7a\x15\x7a\x47\x5b\x5b\xfe\x18\x5a\xe1\x97\xf1\xb4\xeb\x86\xc3\xcb\xb8\xee\x5e\x2f\x97\xe3\x79\xdd\xf7\x3f\x87\xcb\xeb\xef\xef\xd8\x8e\x6f\xfd\xf6\xb4\xf9\x7b\xfb\xf4\xb6\xf9\xd3\x7f\x1b\x0e\x3f\xc6\xeb\xf9\xeb\xf1\xf6\x79\x3f\x6e\x7f\xed\x4e\x21\x30\xc2\x2b\x34\x56\xe4\x1a\x92\xc0\x1d\xaa\x19\x9a\x16\x32\x69\x22\x0b\x28\x19\x8c\x12\x8c\x60\x22\xa2\xc2\x18\x4c\xc1\x9c\xa0\x49\x60\xf5\x29\x42\xc5\xee\xf4\x02\x26\x6f\x05\x13\x8d\x50\xea\xc4\xb6\xf2\xa4\x1a\xc1\x27\x55\x23\x34\xde\x55\x1c\x59\x40\xf1\x90\x13\x12\x2c\x41\x2d\xce\xf6\x29\x64\x83\x19\x52\x02\xa5\xcc\x51\x1f\x20\x23\xa8\x73\xc4\x07\xd4\x14\xce\x19\xea\xfc\x86\x55\x42\xce\x20\x2b\xd8\x1e\x34\x5f\xb2\x2c\x58\xea\x82\x55\x02\x25\x21\xb5\x6e\x8e\x9c\x9f\xaa\x50\xbe\x4b\xb5\xc0\xe2\x5c\x2a\x3a\x31\x3a\x98\x6b\x20\x09\x55\x42\x6b\x4b\x3e\x53\x1b\x04\x63\x02\x5d\x10\xa5\x9d\x4e\x6c\xb3\x4e\x79\x49\x5f\xb2\x3c\x19\xa1\x35\xb4\x9c\xa4\x43\xa3\xb5\x8f\x61\x25\x34\xea\xff\xc0\xad\xd1\xc2\xe9\x61\x87\x4a\x01\x35\xff\x0b\x00\x00\xff\xff\xca\x37\x5c\xb9\xbe\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 702, mode: os.FileMode(438), modTime: time.Unix(1495446394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x31\x6f\xfa\x40\x0c\x05\xf0\xfd\x3e\xc5\x49\x2c\xff\xff\xc0\xcb\x3d\x5f\xec\x5c\x18\xbb\x77\xea\xd0\x39\x85\x50\xa2\x02\x41\x21\x88\xd2\x4f\x5f\x45\xaa\x20\xc7\xe6\x9f\x6c\xd9\x92\xdf\x62\xb1\xf0\xdb\x6e\x68\xaf\xcd\x7e\xef\xaf\xdd\xb1\xf2\x97\xd3\xa6\x19\x5b\xff\x2f\x58\x41\x16\x12\x68\x5e\x64\xc5\xf0\xdf\x4d\xb3\xaf\xfd\xd0\xfa\xee\xb8\xed\x57\x7e\x37\x8e\xa7\xf3\xaa\x28\x3e\xbb\x71\x77\xf9\xc0\xba\x3f\x14\xeb\xa1\xf9\xb9\x2d\x0f\xcd\x77\xf1\xde\x1d\x37\xfd\xf5\xfc\x76\xba\xbd\xec\xfb\xf5\x57\x3b\x38\xc7\x08\x86\x0a\x25\x34\x38\x99\xea\x08\xa6\x1a\x14\xcd\x69\x19\xb5\xca\x99\x9c\x29\x54\xc1\x98\x40\x4a\xa6\x72\x2e\xb1\xb9\xd2\x5d\x16\x21\xc2\x4c\xe2\x18\x4b\xb0\x0a\x50\x82\x75\x78\x30\x22\xce\x94\x10\x96\x33\x88\xea\xbd\x47\x2a\xec\xb1\x87\xa6\x90\x32\x3d\xb9\xce\xad\x7c\x72\x74\xd4\x0a\x6a\xa8\x0d\x94\xe8\x58\x13\x12\x05\x69\x3a\x37\x97\x85\x4c\xf2\xa7\x12\x95\x80\x29\xe6\xb4\x9c\x29\x63\x1d\x9c\x4c\xa1\xd8\xf4\x3e\x68\xfa\x0d\x00\x00\xff\xff\x19\x31\x9f\x6d\x10\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 528, mode: os.FileMode(438), modTime: time.Unix(1495446429, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xb1\x4e\xc3\x30\x10\x06\xe0\xdd\x4f\x61\x29\x0b\x0c\xfd\x7d\x77\xf6\xd9\x49\x46\x76\x26\x06\xe6\x10\x52\x6a\x91\xc6\x95\x1b\x94\x96\xa7\x47\x4c\xcd\xf8\x49\x5f\xd3\x34\xf6\x98\xeb\xb4\x0d\xf3\x6c\xb7\xbc\xb4\x6c\xa7\xdb\x5a\x07\xfb\xc4\xec\x48\x9d\x10\x27\x2b\xd4\xfb\xf8\x6c\xfe\xef\x6b\xa9\x93\xcd\xcb\xb1\xf4\xf6\xb4\xae\x97\x6b\xef\xdc\x57\x5e\x4f\x3f\x1f\x18\xcb\xd9\x8d\x75\xf8\xbd\x1f\xce\xc3\xcd\xbd\xe7\xe5\xb3\x6c\xd7\xb7\xcb\xfd\x65\x2e\xe3\xf7\x54\x8d\x61\x8f\x96\xc0\x02\x0d\x26\x10\x98\x5b\x30\x79\xa4\x07\x22\xd8\x93\x89\x01\x01\x1a\x20\x62\xa2\x42\x05\x4c\x2d\xa4\xdb\x41\xf7\x60\xf5\x86\x3d\x43\xd4\x23\x32\xe8\xb0\x83\xa8\x1a\xa1\x80\xd4\x81\xbb\x04\x21\x32\x42\x09\x21\x82\xbb\x00\x0e\x7f\x01\x00\x00\xff\xff\xca\x7a\x2b\x87\xfe\x00\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 254, mode: os.FileMode(438), modTime: time.Unix(1495446564, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xbd\xae\xda\x40\x10\x05\xe0\x7e\x9f\xc2\x12\x4d\x52\xe4\x78\xcf\xfc\xec\x0f\x65\xfa\x54\x29\x52\x13\xc2\xcd\x45\xe1\x02\x02\x22\x42\x9e\x3e\x5a\xc3\xc5\xb6\x52\x58\x3a\x9f\x34\xde\x19\xcd\x2c\x16\x8b\xee\x65\x7b\xda\x5c\x57\xbb\x5d\x77\xdd\xee\x0b\xbb\xf3\xf1\xd6\x7d\x10\xf6\xd1\x7b\x89\xcc\x1d\x7d\xe9\xe9\x63\x68\x95\x5f\x0e\xa7\x4d\xb7\xdd\xbf\x1c\x96\xdd\xeb\xe5\x72\x3c\x2f\xfb\xfe\xe7\xf6\xf2\xfa\xfb\x3b\xd6\x87\xb7\x7e\x7d\x5a\xfd\xbd\x7d\x7a\x5b\xfd\xe9\xbf\x6d\xf7\x3f\x0e\xd7\xf3\xd7\xe3\xed\xf3\xee\xb0\xfe\xb5\x39\x85\x40\x45\xae\x10\xad\x48\xb5\xa1\x10\x5e\x21\x26\x41\x14\xb5\xc0\x2a\x68\x43\xae\x43\x16\x06\x8b\xc8\x19\x22\x09\x62\x75\x2a\x8f\xc1\x09\x1a\xa1\x02\x67\x70\x01\x93\x41\x2c\xc2\xeb\x28\x42\xa2\x0f\xcc\x05\xb4\xdc\x0a\x9e\x74\x42\x28\x4f\xb6\x2f\x3d\x55\x15\x1c\x29\xa2\x10\x1d\x54\x32\x52\x04\x63\x0e\xc9\x60\x90\x0c\x8f\xf7\xe8\x06\x71\x9d\x64\x0b\xc9\xe1\x0e\xb2\x3d\x36\x85\x4c\xa1\x0f\x88\x0b\x6c\x8a\x3a\x05\x6b\x9c\x48\xa2\x84\x94\x40\xb6\x9d\x19\xe8\x79\xce\x32\x63\xa9\x33\xd6\x61\x60\x51\x1d\xb6\xc4\x52\x46\x26\x30\x96\xc0\x68\xb0\x36\x59\x46\x4a\xa3\x2a\x84\xef\x12\xcd\x60\xbb\xe3\x83\x52\xe0\x3a\x55\x9b\x90\x6a\x60\x8e\xd0\xf8\x3f\x75\x4e\x9b\xb1\xf5\x69\x0d\x98\x86\xb6\xa4\x3d\x9c\x21\xea\xed\x4e\xf4\x3c\x2c\x50\xf5\xfe\x73\x63\x02\xab\x21\xcb\x4c\x3a\x93\x05\x56\x42\x54\xee\xef\x16\x99\xb9\x9d\x6f\xee\xf7\xfa\x0c\x89\x05\x94\xf4\x70\x85\x47\xb0\x4c\x95\xf3\x28\x01\x63\x1c\x69\x70\xf9\x17\x00\x00\xff\xff\xe6\xd8\xc7\x5f\x67\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 871, mode: os.FileMode(438), modTime: time.Unix(1495446586, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x31\x6f\xe2\x40\x10\x05\xe0\x7e\x7f\x85\x25\x9a\xbb\x82\xf1\xbe\x99\x9d\xdd\x35\xe5\xf5\x57\xa5\x48\xed\x80\x09\x56\x00\x23\x63\x44\xc8\xaf\x8f\x56\x24\x78\x97\x6e\x3e\xcd\x3c\xd9\x7e\xf2\x62\xb1\xa8\xb6\xfd\xd8\x5d\xdb\xfd\xbe\xba\xf6\xc7\x88\xea\x72\xda\xb4\x53\x57\xfd\x61\xd4\x56\x6b\xb6\x08\x15\x74\xa5\xfe\xaf\x49\xc7\xff\x87\xb1\xab\xfa\xe3\x76\x58\x55\xbb\x69\x3a\x9d\x57\x75\xfd\xde\x4f\xbb\xcb\x1b\xad\x87\x43\xbd\x1e\xdb\xaf\xdb\xf2\xd0\x7e\xd6\xaf\xfd\x71\x33\x5c\xcf\x2f\xa7\xdb\xbf\xfd\xb0\xfe\xe8\x46\x63\x20\x04\x1b\xc8\x91\x5a\xc3\x69\x16\x42\x6c\x08\xac\x25\x7d\x41\x0d\x25\xa3\xf1\x4a\xaa\x04\x89\x64\x97\xf3\xcc\xaa\xbf\x1b\x2f\xf3\xc6\x4b\xb6\x61\xc7\xc4\xea\x0c\x04\xc4\x2a\x04\x47\x50\x31\x10\x47\x08\x96\x14\x64\x97\x19\x52\xf0\x41\x21\x6e\x72\x89\x9d\x15\xf3\x5c\x2c\x72\x80\x92\xfa\x82\xde\x96\xe4\x99\x3e\xbd\x63\x7c\x72\x53\x5a\xf1\x64\x31\xd0\x70\xff\x3c\x4b\xb1\xc9\x95\xca\xcc\xc8\x6c\xef\xf4\x14\x42\x6a\xad\x50\x93\xcb\x15\x97\x0e\x85\x8a\x9c\x7b\xe4\x1a\x4f\xa9\xdc\x19\x31\x03\x58\x72\x69\x30\x68\x40\x2c\x4c\x31\xf5\x99\x2b\x15\x94\x89\x7f\xe4\x28\x30\x21\x4a\xc9\x68\x38\xfd\x54\x9e\x00\x97\x9e\x98\xc9\xe3\x3b\x00\x00\xff\xff\xdf\x55\x29\xd6\xdf\x02\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 735, mode: os.FileMode(438), modTime: time.Unix(1495446598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xb1\x72\xe3\x38\x0c\xed\xf3\x15\x9a\x49\x73\x57\x08\xb6\x9c\x73\x72\x93\xf2\xfa\x9b\x2d\xb6\xd8\x9a\x26\x21\x09\x63\x12\xe0\x12\x70\x64\xe5\xeb\x77\xe4\x38\xc9\x6a\x2d\xcd\xee\xa8\xe3\x7b\xc2\x23\x1f\x1e\x70\x7f\x7f\x5f\xf5\xa2\xa6\xd5\x40\xdc\x6c\x2b\x3c\x5b\x71\xd5\x5f\xbb\x66\xb3\xdd\x6f\x76\xdb\xe6\xa9\x6a\xf6\xcf\xfb\xa7\xbf\xef\x26\xe2\xff\x52\xb0\x22\x6e\xe5\xb9\xea\xcd\xb2\x3e\x6f\x36\x1d\x59\x7f\x3a\x80\x97\xb4\xf1\xc5\xbd\x8e\x75\x72\xe7\xcd\x37\xe2\x20\x83\x7e\xcd\xe3\x7f\x51\xfc\x11\xcb\xdd\xdd\x16\x2e\x5f\xe5\x58\x07\x2c\x0a\x89\x7c\x11\x95\xd6\xa6\x5f\x3f\xd1\x9c\x15\xf4\x38\x66\x9c\x1f\xbf\x3e\x3c\x36\xff\x36\x8f\xf0\x22\x90\x14\x3d\x07\x60\xb4\x9f\xe0\x7d\xb3\x7b\x78\xf8\x67\x05\x3e\x44\x39\xc0\x80\xce\x7a\x2c\x2b\xba\xde\x71\x18\x7d\x39\x69\xaf\x12\x1c\x1c\x89\xbb\x39\x1e\x18\xbc\xb0\x21\x1b\xe4\x22\x01\x7c\x52\x48\xca\x37\x24\x61\x64\x31\x9c\xe9\xfb\x5e\xc8\xe3\x9a\xf2\x02\x08\xac\xce\xfc\xbc\x46\xa4\x49\x7b\x60\x85\xe1\xcd\xdc\x79\x95\x0b\x5c\x2b\x74\xce\x70\x70\x23\x24\x54\x45\xee\xb0\x40\xa4\x17\x5c\xe0\x7a\xe1\x96\x3a\xc8\x4e\x35\x4b\xb1\x99\x58\xc0\x1c\x65\x04\x35\x67\xe4\xc1\x1d\x5d\x72\x64\xe8\x7b\x96\x28\x1d\xe1\x5c\x3a\xe0\xcb\xf4\x00\x77\xb2\x1e\xce\x07\x39\xdf\xe8\x85\x14\x20\xa1\x39\xc5\x32\x31\xd7\x5a\x1f\x78\x72\xb4\x35\xf6\x4a\x33\xa0\x45\x0c\x07\xe7\x8f\x9f\xff\xd5\xbd\xf4\x69\x99\xa3\xe8\x8a\xef\x57\x24\x3e\x58\x4b\x16\x76\xb7\x4e\x51\xea\x6a\xad\x93\x72\x3d\x35\xe5\xcd\x87\x57\x9c\x87\x8b\x58\x29\x60\xc9\x53\x62\xa3\x9c\x82\xcb\x79\x86\x47\xf2\xc8\x3a\xe5\x29\xe5\x95\x6b\x4d\xa6\xf2\xad\x7a\x82\x5e\x2c\x39\x8a\xf3\xd3\x25\x8b\xa4\x6d\xc9\xe3\x35\x23\xcb\x22\xc2\xef\xb8\xb6\x67\x48\xfa\x01\xe4\x42\x1e\x23\xa9\x2d\xcc\xdd\xf7\x13\x96\xf1\x33\xf0\x65\xad\xf8\x1f\xe5\x4e\xb7\xb0\x4b\x81\x67\xee\xe8\x97\x85\xb3\x6b\x0b\x7f\x99\x2e\x45\x33\xe2\x4e\x6b\xd5\xb8\x1c\xb4\x6b\x5e\x6f\x0b\x9a\x14\xac\x29\xb9\x0e\x15\xb4\x5e\x79\xc2\x44\xc2\xd0\x61\x1b\x20\xe8\x79\xbd\x5b\x46\x11\xeb\x6b\x96\x7f\xb3\x55\x8c\x12\x2e\x66\xcd\x8e\x3b\xc8\xd1\x6e\xde\x78\xa2\x85\x26\x0c\xc1\xaf\xdd\x65\xd0\x69\x29\xc1\x65\x6b\xae\x30\x86\xe1\x32\x55\x5e\x98\xd1\x9b\xa1\x2e\xe3\xef\x91\xfa\x11\x00\x00\xff\xff\x68\x0e\x5c\x34\x0f\x06\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1551, mode: os.FileMode(438), modTime: time.Unix(1495446700, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x99\x4d\x93\xe3\x2c\x0e\xc7\xef\xf3\x29\x52\x35\x97\xdd\x43\xd4\x60\xe7\x75\x8e\x7b\xdf\xd3\x1e\xf6\x8c\x41\x89\xa9\xb6\x81\x46\x24\x8e\xf7\xd3\x6f\x39\x71\xbf\xb8\x8d\x09\xfd\x3c\x33\x35\x55\x53\xfe\xff\x00\x21\x09\x21\xba\x7f\xff\xfe\xbd\xaa\x2d\x05\x5a\x75\xda\x70\xb6\x22\xd7\xaf\xfe\x51\xf0\x17\xb6\x7d\x29\x18\xdf\xaf\xf8\xf6\xcf\x76\xff\xcf\x5f\x03\xf6\x6f\xeb\x71\xa5\xcd\xc9\xfe\x59\xd5\x21\x38\xfa\xf3\xf2\x72\xd6\xa1\xbe\x54\x20\x6d\xfb\x22\xbd\xf8\x5f\xbf\x6e\xc5\xed\xe5\xbf\xda\x28\xdb\xd1\x7f\x5c\xff\xaf\xc6\xca\x57\xf4\xbf\x7e\x31\xb8\xff\x5d\x89\x35\x63\x8c\x83\x58\xb7\x84\xea\x8c\x60\x30\x7c\xd7\x94\x5c\x14\x8b\xc4\xc0\x32\xa1\x6d\x12\xda\x36\xa1\xed\x12\xda\x3e\xa1\x1d\x12\xda\x71\x59\xe3\x2c\xa1\x25\x9c\xc6\x17\xfd\x12\xfb\x08\x42\x11\x87\x96\xcc\x10\xb5\xe9\xe7\x02\x5a\x12\x8a\xe6\x7c\x11\xe1\xbd\x50\xf3\xaf\xb2\x8c\x7c\x0b\xfa\xaa\x43\x0f\xdd\x23\x2d\xa6\xa2\x32\x78\xbb\x7c\x5b\x51\x99\xdb\x77\x8a\xe6\xd3\x3e\x76\x31\x33\x37\xba\x39\xad\x1c\x81\x08\xaa\x0d\xd3\xef\xaf\x62\x2d\x95\x59\x1b\x02\xa1\x02\xca\x1a\x14\x7e\x8a\xde\x8b\x9e\x33\xbe\x76\xde\x2a\x50\x16\x14\x39\x68\x1d\xb4\x5a\x7a\x4b\xf6\xf4\x6d\xaa\x07\x5d\xfc\x88\x2e\x7f\x44\x6f\xf2\xe8\x2a\x1e\xe0\x6a\x29\xc0\x55\x34\x92\x95\x36\xe7\xbb\xdb\xe3\x6b\x34\x65\xc9\xf8\x5a\x00\x57\xfe\x1a\x53\xe4\xa2\x72\x8e\x28\x86\x97\x6c\xb3\xc6\x05\x65\x17\x5d\xe7\xa1\x2c\x8f\x89\xae\x53\x54\x6b\x69\xfd\xbd\x02\x39\x0d\x6e\xf8\x4f\x84\x2a\x5d\x0e\xf5\x3e\x57\x99\xa2\xfa\x45\x3f\xf5\x8b\x7e\x7a\x28\xb1\x9d\x11\x10\xfa\xab\x36\xe7\x35\xf5\xd3\x13\x22\x23\xd9\x2d\x67\x41\x95\xa9\x0a\x2b\x05\x04\x6c\xb0\xc5\xe0\xfb\x85\xb0\x4b\x21\x6b\x04\x25\x82\x68\x85\x0f\xd1\x03\x2d\x95\x89\x99\xa2\xa8\xd8\x81\x68\xe9\x08\x2d\xa1\x34\xd3\x85\x15\x6d\xb6\x47\x68\x64\x0f\x4d\x63\xba\xef\xda\x71\xb7\x85\xc6\x9a\x88\x56\xf3\xe7\x71\xfa\x80\x8a\x24\xb4\x14\x8c\x51\x89\x04\x63\x54\x22\x69\x76\x57\x8a\xc5\xd9\x8a\xe8\x6c\xb6\x75\x22\xe0\x4d\xd6\xc2\x9c\x11\x64\x63\x2f\x4a\x38\x37\xdd\xef\x84\xe1\x10\xbc\x38\x9d\xb4\x6c\x85\x11\x67\xf4\xdf\x50\xef\x80\xc2\xd2\xf1\x1d\x64\xbc\x05\x68\x49\x07\xa1\x4e\x04\xe7\xa6\x52\x66\xa8\x0e\x71\xdc\x65\x97\x41\x49\x1c\x3a\x27\xe1\xca\x86\x44\xf8\x6a\x92\xaa\x4a\xf1\x76\x89\xe4\x86\xaa\xca\xce\x50\xc1\xf8\xf0\x07\x3a\x43\xd1\xbc\x52\xd5\x36\xa5\x91\xac\x39\xe3\x9c\xb1\x43\x99\xc7\x1d\xf9\x3e\x87\xe3\x45\x99\xb4\xe9\x83\x2b\xcb\x4d\x16\xb7\x4d\xef\xf1\x83\xdb\x97\xc7\x2c\xee\xc0\xcb\x3c\x2e\xcf\x2f\xfc\xc8\xf3\xf6\x71\xcc\xb2\x6f\xf8\x97\x33\x1f\x67\x05\xdb\x65\x71\x65\x91\xb3\x8f\x81\x3b\x64\x71\x1b\x96\xe3\x3f\xce\x76\x45\x9e\x7d\xbb\xac\x3c\xe0\x6c\xbf\x61\x59\xdc\x81\xe7\x72\x79\xf6\x1d\x8a\x9c\xfc\x1b\xb8\x22\x93\x7b\xee\xe7\x92\x1d\x8a\x3d\x7f\x3e\x5f\xc9\x8e\x7c\x97\x71\x2e\x07\x6e\xcf\x9f\xe7\x41\xc9\x19\xdf\x64\x9c\xb7\x92\xb3\x82\xe7\xd8\xc7\x59\xb1\x63\xa9\xbc\xdf\xdd\xb9\x82\x1d\xd9\x36\x19\xb7\x4f\xee\x90\xb4\xef\x83\x1b\x2a\x5b\x16\xb7\xcb\xc8\xe7\x21\x1e\x4f\x6a\xed\x07\xb7\xc9\x38\x97\x25\x3b\x16\x45\xd2\x2f\xdb\xce\x10\x57\x59\x1b\xe0\x2c\x15\xd8\x4f\x6e\x93\x0a\x18\x5e\xe1\xaa\x7d\xb8\x88\x06\x85\x0f\xf5\xf4\x22\x3a\x3d\xed\x73\x94\x16\x67\x63\x29\x68\x49\x40\x17\xe7\xac\x0f\x0b\x24\xc6\x1a\xaf\xa1\xc1\x49\x9a\x80\x17\xb8\x5a\x1f\xf0\x76\xef\xa5\x16\xa6\x3e\x35\x78\x9b\x75\x70\xe7\xf9\x17\xb4\x79\x57\xf3\x19\xed\x15\x7d\x1e\x5b\xcf\xdf\x0f\xf5\xfc\x0d\xa8\xd7\x64\x8a\xe7\x2d\xd8\x17\x2c\xd5\x84\x69\xfe\xe8\x6e\x25\x12\x90\x95\x5a\x34\x0b\xc6\x3d\x03\xc1\x90\x08\x72\xe2\x70\x6d\x4e\xe8\xd1\x48\x84\xc6\x4a\x11\xf4\xd0\x4e\xea\xeb\xb4\xff\x7d\xbd\x66\x77\x39\x4d\xc5\xa1\xeb\x3a\x68\x09\xc4\xab\x50\x66\xfa\xa0\xba\xcf\xec\x63\x6f\xd6\x86\x8a\x0e\x2b\xf0\xa8\x5a\x6b\x14\xdc\xbb\xb4\xf8\x0a\x2d\xcc\x5f\xc1\xad\xad\x74\x83\xe0\xb4\x43\x10\x5e\x2f\xe5\x4d\xa4\xb5\x6f\xc9\x04\xa4\xb0\xf8\x7a\x78\xbc\xc1\xed\xd0\x4d\xa2\x70\x8e\x1e\xce\x99\x11\xfe\xd2\x60\x1a\xb3\x19\x8f\x88\x04\x13\x89\x9c\x35\x48\x18\x82\x36\x67\x5a\x57\xa6\x80\x61\xd4\x7b\xf4\x9e\x8f\x90\xfd\x4f\x47\x0c\x7d\xe6\xcf\x46\xd4\xaf\x39\x6b\x38\x8f\x70\xb2\x36\x38\xaf\x4d\x70\x1e\x95\x96\x53\xb7\x38\x8f\x57\x8d\xdd\x2c\x67\x86\xc7\xf9\xcc\xcf\xb1\x17\xfb\x30\xa7\x1f\x2c\x11\x1f\xa7\x23\x1e\x00\x8f\x43\x41\x23\xe8\x90\x20\xa3\x18\x92\xac\xb1\x15\x5f\x27\x8b\xe4\x3c\xa1\xbc\x78\x8c\x24\xed\x28\x9c\x1a\x41\x75\x10\xcd\xab\x36\xe7\x6f\xfa\x68\x6b\xae\x35\xef\x6e\x27\x61\x54\x65\x93\x15\xf4\x83\xed\xb4\xc9\xe1\x1e\x4c\xfa\x2d\x34\x65\x17\x18\xb3\xf4\x9c\x1c\x95\xc8\x03\x70\x54\x22\xcf\x49\x72\xbd\xc1\xb0\x68\xcf\x5d\x15\xcd\xd2\x05\xf5\xd0\xf1\xe2\xad\xc3\x27\x21\x7c\x6b\xb3\x02\xf0\xd6\xfe\x1d\x26\x72\x34\x88\xba\x79\x86\x53\xb0\x1e\xa5\x08\xa2\xb1\x67\x8f\xd7\xf7\xaa\x7d\xff\xfc\x76\x11\x8d\x0e\x8b\x8b\x5f\xfc\x15\x7b\xe8\x44\x20\x6b\x16\x98\xc0\x80\xa8\x01\xf1\x0a\xaa\x37\xa2\xd5\x12\x82\x1e\x6a\xdb\xe2\x8d\xfd\x39\xe0\x19\x88\x0d\x4a\xdb\xb6\xc2\xa8\xa7\x6e\xca\x60\x23\xee\xfa\x24\x85\x73\x78\x83\x6a\x38\x52\x39\xc0\x9f\xcd\xa6\x8c\x40\xcb\xb6\x3d\xf4\x8b\x5f\x2a\x24\x81\x4e\xf8\xfe\x53\x08\xaa\x85\x1b\xd6\x49\xde\x9b\x57\xce\xc6\xc6\xe7\xcb\x91\x7c\x5a\x3a\xa3\xa3\xe2\xf3\xa3\xa7\x21\x4b\xea\xbe\xf2\x5a\xdd\x7b\x8d\x1a\xfd\x34\xb1\xee\x45\x76\xde\xb3\x8d\x0b\xe4\x5d\x31\x23\x9c\x77\xbb\x8c\x70\xde\xc5\x32\xc2\x79\x77\xca\x08\x67\x54\xc2\xbf\xe0\xf4\x3c\x87\x7f\xe9\x62\xd3\x75\x73\xd2\xef\x66\xae\x9e\x5a\x79\x3c\xde\xb3\xba\x91\x3c\xf6\xa3\xe8\x1c\x3e\x3d\x9b\x23\xfa\xf7\xb0\xc8\xce\x86\xfe\x2f\x63\x77\x79\x97\xe1\xfd\x37\x76\xa0\xdd\x75\xb7\x04\xdc\x9b\xd4\xf7\x7e\xf0\xff\x01\x00\x00\xff\xff\xe0\xe6\xd4\x27\xeb\x1b\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 7147, mode: os.FileMode(438), modTime: time.Unix(1495446709, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\xcd\x52\xc2\x30\x10\x00\xe0\x3b\x4f\x91\x19\x2e\x7a\x60\x9b\x04\x10\xe1\xe8\xdd\x93\x07\xcf\x21\x3f\x25\x43\x9a\x74\xba\x29\xb5\x3e\xbd\x83\x20\xc2\x68\x9a\x32\x3d\xee\xb7\x3f\xd9\xed\x74\x3a\x25\xbb\x80\x11\x49\x67\x3d\xa3\xa4\xad\x95\x88\x9a\x3c\x70\x56\xd0\x65\xc1\x29\x5b\x11\xb6\xdc\x2c\x57\x8f\x93\xa3\x7c\x0d\x8d\x26\xd6\x9b\xb0\x21\xbb\x18\x6b\xdc\x14\x45\x69\xe3\xae\xdd\x82\x0c\x55\x21\x1b\xf1\xd9\xcf\x2a\xf1\x51\xbc\x5b\xaf\x42\x87\x6f\x75\xff\xe2\x82\xdc\xeb\x66\x32\xa1\xf0\xfd\x11\x4a\x29\xa7\x7c\xc6\xc0\x41\x77\x52\xa7\x96\xc7\x0a\x37\x48\xce\x47\x20\xa3\xb2\x88\x2d\xd6\x26\x8f\x9e\xd7\x2c\x8b\x38\x7d\xca\x0f\xce\x99\xa2\x19\x24\x5a\x50\xa1\xf3\x2e\x08\x35\xac\x0e\x8b\x31\x50\x46\xa7\x86\xda\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x78\xeb\x1c\x28\xed\xec\x41\x37\xfd\x00\xfa\x99\x27\x13\x4e\x8f\xa3\xab\xe3\xb4\x98\x28\x60\x34\x87\x73\xd2\x7d\x00\xc4\x5e\x28\x8f\xe0\x75\xbc\xb2\xf3\xdf\x27\x29\xac\xff\x3c\x0b\x3c\x8a\x28\xd3\x39\xc9\x35\x98\x12\x14\xc2\x96\x8d\xb9\x8f\x29\x47\x1e\xf2\xd2\xea\x96\x5c\x4f\x87\x0e\x87\xd7\x93\x02\xff\xad\x07\xa3\x88\x78\xcf\x3e\xcf\x09\x2c\x7d\xbe\x4b\xc9\xa4\x88\xae\x85\x51\x7f\xda\xb8\x9d\xe5\x22\xe7\x40\x68\xca\xaf\x00\x00\x00\xff\xff\xd8\xdd\xde\xe2\xea\x04\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1258, mode: os.FileMode(438), modTime: time.Unix(1495446719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\xf3\x30\x10\x86\xf7\xfe\x0a\x4b\x5d\xbe\x6f\xe0\x9c\x54\x08\x4a\x46\x76\x26\x06\x66\xd7\xbe\x24\x27\x6c\x5f\xe4\xbb\xc6\x2d\xbf\x1e\x15\x24\xa4\x40\x03\xf2\xf6\x3e\xaf\x1f\x9d\xde\xed\x76\x6b\x46\x16\x15\x53\x29\xdf\x1b\x3c\x69\x71\xe6\x5f\xbb\xb7\xcd\x83\xdd\x35\xed\x9d\x69\xf7\xdd\x6d\xf3\x7f\x73\xe9\x3d\x71\x41\x43\xb9\xe7\xce\x8c\xaa\x93\x74\xd6\x0e\xa4\xe3\xf1\x00\x9e\x93\xf5\xc5\xbd\x9d\x6f\x92\x3b\xd9\x17\xca\x81\xab\x3c\x4f\xe7\xc7\xc8\xfe\x15\xcb\x66\xd3\xc0\xc7\x33\xce\x2b\xcd\x4e\x89\x33\x48\x14\x48\xe4\x0b\x0b\xf7\x7a\x31\x7c\x95\x3c\xef\x7e\xa3\x25\xae\x90\x90\x02\x24\x54\x27\x58\x66\xf2\xb8\x26\x08\x59\x20\x49\xaf\xd9\x0b\x2d\xc0\x00\x07\xca\xc3\xb7\x28\xd2\x8c\x8b\x28\xf2\x40\xf9\x67\x7c\xd5\xa8\x94\x10\xea\xe7\x1c\x0b\x30\xbb\x48\xe1\xaf\x1d\x6a\xad\xd7\x0f\xad\xe2\x39\x2b\xb8\x69\x5a\xfd\xba\xd6\x00\x0c\x03\xca\x91\x14\x21\xa3\xbe\x07\x00\x00\xff\xff\x51\xe3\x1e\xc0\xfe\x01\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 510, mode: os.FileMode(438), modTime: time.Unix(1495446644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbd\x6e\xe3\x30\x10\x84\x7b\x3f\x05\x01\x37\x77\x85\x57\xff\x32\xec\xf2\xfa\xab\x52\xa4\xa6\xa9\x95\x44\x58\xdc\x55\xc8\xb5\x65\xe5\xe9\x03\x27\x48\x10\x01\xa6\x13\x83\xe5\xf7\xed\x0c\x38\xeb\xf5\x5a\xf5\x1c\x24\xa8\xc9\xd2\x56\x85\x71\x56\x7f\xf2\x2c\x49\xab\x24\x4f\xb3\xad\xca\xaa\x7d\x55\xff\x5d\x5d\xad\xff\xec\x51\x59\x6a\x79\xaf\x7a\x91\x31\xec\x93\xa4\xb3\xd2\x9f\x0e\x60\xd8\x25\xc6\xeb\xd7\x79\xe3\xf4\x25\x79\xb6\xd4\xf0\x14\x9e\xc6\xf9\xdf\xc0\xe6\x88\x7e\xb5\x4a\xe1\xfd\x29\xd3\x84\x2c\x2b\x0b\x18\x98\x60\x18\x68\x02\x42\x59\xc0\xbc\xde\x45\x61\x9e\x96\x79\x09\x83\x99\x63\xb4\xa8\xee\xd1\x3a\x8b\xd2\xa2\xd8\xc5\x59\x19\xef\x2c\xd3\x2d\xb4\x5e\xdf\x60\xec\x46\x2d\x78\x31\xbd\xa6\x0e\x33\x10\xaf\xdb\xd6\x1a\xa7\x49\x77\xe8\x97\xea\x9c\x43\x40\x11\x4b\x5d\x80\x46\x8b\x06\x67\x8d\xe7\xc0\xad\x5c\x77\x05\x7d\xd4\x0d\x85\xc5\x49\x73\xa8\x1e\x3d\xc1\x13\x9c\xd9\x0b\x5e\x6e\xf8\x5f\x52\x87\xfc\x68\xee\xa7\xbe\x99\x2c\xdd\x8b\x0e\xe3\x4c\x28\xf9\x5d\x8a\x27\xcf\x23\x7e\x53\x6e\xf5\xbd\x38\x10\x1c\xd0\xa1\xf8\x39\x92\x76\xe5\x86\x9d\xd3\xd4\xfc\xc2\xf5\xd8\x30\xd8\xf1\x5c\x47\x8c\x8f\xd9\x7e\xfa\xdf\xa4\x25\x30\x2d\xe1\x5b\x00\x00\x00\xff\xff\x3a\x87\x5f\xb5\x5a\x03\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 858, mode: os.FileMode(438), modTime: time.Unix(1495446658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbb\x6e\xac\x30\x14\x85\xe1\x9e\xa7\xb0\x44\x73\x4e\x31\xbe\x05\xc2\x88\x32\x7d\xaa\x14\xa9\x8d\x2f\x60\x05\xbc\x91\x6d\xe4\x4c\x9e\x3e\x9a\x30\x22\x89\x34\xc1\x88\x8e\xf5\xf1\x6f\xca\xb2\x44\x03\x84\x18\x50\xb2\xae\x41\xcb\xac\x44\xd4\xe8\x1f\x67\x84\xd6\x84\x53\xd6\x20\x56\xb7\xf5\xe3\xff\xe2\x0a\x9f\xc1\x6b\x64\x9d\x81\x16\x0d\x31\xce\xa1\x25\xa4\xb7\x71\x58\x3a\x2c\x61\x22\xd2\x8b\x8f\xcb\x69\x12\xef\xe4\xd5\x3a\x05\x29\xbc\xcc\x97\xa7\x11\xe4\x9b\xf6\x45\x41\xf1\xd7\x83\x28\xa5\xc2\x88\x13\xc3\x23\x4e\xab\x5a\x4f\x5e\x0b\x3f\x51\xa7\x4c\x1e\x99\x8a\x66\x11\x3b\x57\x5d\xbe\xc4\x1f\xce\x79\x54\x69\x9d\x45\x9c\x8b\xe6\x00\x92\x2c\x83\xc4\x82\x15\x24\x37\x82\x50\x3b\x4a\xc6\x51\xed\x55\xb6\xc4\x64\xa5\x87\x00\x26\xde\x9f\x77\x0a\xe1\xc8\x7f\x18\xcd\xf1\xed\xf5\xfd\x4b\xa6\xc7\x2a\xe0\x8e\x1d\x89\x6d\x85\xdf\xc4\xe9\xb8\x91\xbf\x3f\x5e\x97\xdb\x00\xbe\xff\x1e\x52\xda\x39\xfe\x19\x00\x00\xff\xff\x4d\x79\xc3\xf9\x07\x03\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 775, mode: os.FileMode(438), modTime: time.Unix(1495446680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x8f\xdb\x30\x0c\xc5\xf7\x7c\x0a\x03\x59\xda\xc1\x74\x1c\xb4\xe8\x21\x63\xf7\x4e\x1d\x3a\x2b\x12\x6d\x13\x67\x51\x2e\xc9\x58\x76\x3f\x7d\xe1\xeb\x5f\xdf\x9d\xd2\x42\x9b\xde\xef\x51\x7a\x0f\x3c\x1e\x8f\xd5\x90\xd4\xb4\xca\xc4\x0f\x6d\x85\x8b\x89\xab\xde\xb4\xef\x9b\xd3\xbb\xe6\x7c\x6a\x3f\x54\xed\xc3\xe5\x7c\x7a\x7b\xd8\xc0\x4f\x49\xb0\x22\xee\xd2\xa5\x1a\xcc\x26\xbd\x34\x4d\x4f\x36\xdc\xae\xe0\x53\x6c\xbc\xb8\x6f\x6b\x1d\xdd\xd2\x7c\x21\x0e\x29\xeb\xe7\x69\xfd\x38\x26\xff\x88\x72\x38\x9c\xe0\xe9\x54\xce\x1b\xcd\xce\x28\x71\x3d\x9f\x41\x47\x85\x48\x5e\x92\xa6\xce\xb6\x21\x7f\xb8\x69\xc2\xa5\x96\x0e\xa2\xf2\x4e\x08\x31\x40\x44\x73\x8a\x32\x93\xc7\x92\x3f\xb0\x42\xd4\xce\xd8\x2b\xed\x84\x8e\xd8\xb1\x47\xf8\xed\x7f\x7a\x09\xae\xc4\xfd\x9e\x4b\x29\x38\x0e\x41\x88\x1f\xc1\x68\xc4\x22\x28\x75\x27\x50\xfc\x6f\xff\xd2\xd1\xc3\x48\x33\xee\xae\x28\xf6\xa0\x76\x05\xad\x9f\xfb\xc7\xd4\x13\xbf\x34\xbc\x9a\x8d\x71\xb1\xfa\xef\x60\xa5\x76\xbe\xde\x50\x56\x98\x24\x05\xf0\x51\x41\xac\xc0\xfd\x9c\x05\x19\x9d\x0d\x28\x25\xca\x92\x20\x86\x1e\xbb\x00\x41\x17\x88\x53\x01\x34\x8a\x08\xf9\xc7\x72\xec\x84\xd9\x8d\x14\xfe\x63\x2b\xf2\x16\x4a\x70\x02\x8d\x4e\x4c\xbd\x20\x72\x09\xcd\xf9\xf5\x05\xc8\xce\x34\x31\x18\x8e\x18\xd1\x64\x2d\xf9\x83\x2f\xc5\xc8\xea\x13\xdb\xbd\x7e\x8b\x04\x6c\x35\xe9\x8d\x0c\x81\xd1\x9e\xf1\xed\xbf\x47\x9e\xef\x22\x39\xff\x6a\x57\xd1\x89\x1f\x36\xf5\x7b\x00\x00\x00\xff\xff\x7d\xd1\x90\x9d\xe1\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 993, mode: os.FileMode(438), modTime: time.Unix(1495446755, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd3\xbd\x6e\xb3\x30\x14\x06\xe0\x3d\x57\x61\x29\xcb\xf7\x0d\x18\xec\x04\xf2\x33\x76\xef\xd4\xa1\xf3\xa9\x39\x80\x15\xfc\x53\xfb\x10\x42\xaf\xbe\xa2\x95\xaa\x52\x05\x47\xde\xfc\xbc\xb2\x8f\x5e\xd9\xdb\xed\x96\x75\x2e\x52\x64\xa3\xb6\x47\xc1\xa2\x9f\xd8\x3f\x29\xf2\xa2\xcc\x65\x21\x0e\x4c\x94\xe7\xb2\xfa\xbf\x99\x63\xcf\x2e\x20\xd3\xb6\x71\x67\xd6\x11\xf9\x78\xce\xf3\x56\x53\x37\xbc\x71\xe5\x4c\xae\x02\x7c\x4c\x99\x81\x5b\xfe\xaa\x6d\xed\xc6\xf8\xe2\xa7\xa7\xde\xa9\x0b\x86\xcd\xa6\xe0\x5f\x8b\x41\x56\x14\x85\xe0\x90\x99\x88\x75\x8b\xdc\x22\x2d\x4d\x26\x6c\x97\xb0\x7d\xc2\xca\x84\x55\x09\x3b\x24\xec\x98\xb0\xd3\xba\x89\x22\x61\x89\x5e\xc4\x6a\x2f\x77\x36\x55\x1d\x85\xdc\xef\x79\xef\x2c\xef\x7b\x3b\xfe\x45\x29\x64\x59\xa5\xf4\x28\x56\x75\xb7\x3b\xf1\x5e\x4d\x77\xcc\x19\x0f\x84\x37\xd5\x81\x6d\x51\x70\x0a\xd0\x34\x5a\x19\xb0\xd0\x62\x58\x44\x71\xe0\x57\x17\x08\x6f\xbc\x06\x02\x6e\xb4\x0a\x2e\xba\x86\xe6\x67\xf4\x13\x8a\x48\xa4\x6d\x1b\xb3\x51\xdb\x64\xce\x4f\x16\x49\x26\x15\x7a\x4a\x3a\x0e\xc1\x79\xfc\x15\x81\x0b\xd4\x36\x2e\x86\x8e\xef\x86\x13\xf6\x68\x90\xc2\xb4\x76\x1a\x01\xc5\x06\x25\x1f\x7c\x0d\x84\x8f\x52\x63\x5c\x49\xcc\xf7\xa4\x0a\x9c\x5d\x39\x63\xc0\xd6\x0f\x67\xfa\x6e\xfa\x51\x8b\xf3\xdf\xe7\xda\x5f\xab\xa5\x7f\x06\x00\x00\xff\xff\x33\xd6\xbe\x5d\x1d\x04\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1053, mode: os.FileMode(438), modTime: time.Unix(1495446786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x3d\x4f\xf3\x30\x10\x07\xf0\xbd\x9f\xc2\x52\x97\xe7\x19\x6a\xfb\xdc\x98\xbe\x8c\xec\x4c\x0c\xcc\xae\x5f\x92\x08\x27\x0e\xb1\x83\x29\x9f\x1e\x85\x56\x15\x48\x25\x3e\x65\xcb\xfd\xf2\xbf\xbf\x72\xeb\xf5\x9a\x34\x21\xa6\x48\x72\xdb\xef\x81\x4c\x83\x51\xc9\x92\x7f\x02\x18\x97\x4c\x70\xd8\x11\x90\x47\xf9\xf0\x7f\x35\xcb\xa7\x30\x5a\xd2\xf6\x2e\x1c\x49\x93\xd2\x10\x8f\x8c\xd5\x6d\x6a\xa6\x13\xd5\xa1\x63\x7a\x54\x9f\xe7\x4d\xa7\x3e\xd8\x4b\xdb\x9b\x90\xe3\xf3\x70\x7e\xf4\x41\xbf\xda\x71\xb5\xe2\xf4\xfb\x21\x9c\xf3\x4a\x99\x0d\x50\x4f\xf3\x45\x5d\x56\xce\x09\x3f\x91\xe6\xba\x8c\xb8\x13\x18\x74\x28\x22\xe0\x7c\x57\x46\x00\xe5\x4e\xb0\xd3\xb2\x8c\xd4\x7e\x5b\x46\x86\x23\x8a\x1b\x70\x08\x54\x95\x93\xc4\xf6\x50\x15\x90\x9a\xa8\x09\xb9\xf7\x41\x99\x65\xf5\x5e\x61\xe0\xa9\x9e\xa1\xa2\xc6\xd3\x1c\x69\xd7\xea\x31\xc4\xe0\xd2\x1d\x63\xbb\x65\x03\x98\x20\xc0\x24\x09\x4c\x92\xc0\x24\x49\x4c\x92\x2c\x27\xe9\xe4\xcd\xd2\x51\x10\x3f\xda\x59\x41\xaf\xaf\xef\xef\x98\x41\x7e\x5b\x1a\xfe\xd5\xce\xd5\xc8\x63\xdf\x3e\xff\x4d\x7a\x9b\x6e\x24\xfa\xb8\x5c\x13\xb7\xa9\x34\xb9\x0e\xc2\x58\x7f\x05\x00\x00\xff\xff\x0b\x52\x3e\xac\xfd\x04\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 1277, mode: os.FileMode(438), modTime: time.Unix(1495446797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1495292715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x72\xdb\x38\x0c\xbd\xe7\x2b\x3c\x93\xcb\xee\x41\x50\x9c\xec\x66\x76\x32\xb3\x97\xde\x3b\x3d\xf4\xd0\x33\x4d\x42\x12\xc6\x24\xc0\x10\xb0\x65\xe5\xeb\x3b\x4a\xdc\xb8\x56\xc4\xb6\x47\xf1\x3d\x01\xe0\x7b\x0f\xbc\xbd\xbd\xdd\x48\x46\x1e\x8b\x6d\x46\xe2\xed\xdd\x06\x4f\x56\xdc\xe6\xaf\x16\xcd\xb7\x81\x35\x39\x7d\x06\x2f\xdc\xfd\x7d\x33\x73\x3f\x4b\xc1\x0d\x71\x27\x4f\x9b\xc1\x2c\xeb\x53\xdb\xf6\x64\xc3\x61\x07\x5e\x52\xeb\x8b\x7b\x99\x9a\xe4\x4e\xed\x37\xe2\x20\xa3\x7e\xcd\xd3\xa7\x28\x7e\x8f\xe5\xe6\x46\xb1\x1c\xb1\xfc\xdf\x3a\xd6\x11\x8b\x42\x22\x5f\x44\xa5\xb3\xd7\x5f\x2f\x70\xce\x0a\xba\x9f\x32\x2e\xce\x5f\x1e\x1e\xb7\xff\x6d\x1f\xe1\x28\x90\x14\x3d\x07\x60\xb4\x9f\xf1\x7f\xb7\xf7\x0f\x0f\xff\xd4\xf0\x5d\x94\x1d\x8c\xe8\x6c\xc0\x52\xeb\xed\x1d\x87\xc9\x97\x83\x0e\x2a\xc1\xc1\x9e\xb8\x5f\x10\x02\xcf\x62\x18\xb2\x41\x2e\x12\xc0\x27\x85\xa4\xfc\x91\x25\x8c\x2c\x86\xd7\x33\xf8\x41\xc8\x63\xb5\xfb\x0a\x0a\xac\xce\xfc\xa2\x4a\x24\x64\x6b\x14\x7a\x67\x38\xba\x09\x12\xaa\x22\xf7\x58\x20\xd2\x71\x21\xdb\x1b\x19\x46\x56\x18\xdf\x3c\x59\xc3\x67\x83\xa9\x87\xec\x54\xb3\x14\xbb\xee\x17\x30\x47\x99\x40\xcd\x19\x79\x70\x7b\x97\x1c\x19\xfa\x81\x25\x4a\x4f\xb8\x28\x18\xf0\x38\xdf\xc2\x1d\x6c\x80\xd3\x4e\x4e\x1f\x47\x0a\x29\x40\x42\x73\xf3\x37\x79\xac\x26\x21\xf0\xac\x6d\x67\xec\x95\xae\x91\x0e\x31\xec\x9c\xdf\x5f\xfe\x6c\x06\x19\x52\x85\xa4\xe8\x8a\x1f\x6a\x5d\xde\x69\xab\xf2\xf4\x2b\x92\x52\xea\x1b\x6d\x92\x72\x33\x1b\xf4\xa6\xc7\x0b\x2e\xe2\x46\xac\x14\xb0\xe4\x39\xc6\x51\x0e\xc1\xe5\x7c\x4d\x88\xe4\x91\x75\x4e\x58\xca\xb5\xd9\x66\x7d\x79\x65\x82\x04\x83\x58\x72\x14\x17\xc7\xab\x62\x49\xd7\x91\xc7\x73\x0e\x2a\x8d\x84\x7f\x10\xb4\x3b\x41\xd2\x0b\x92\x0b\x79\x8c\xa4\xb6\xb6\x93\xcf\x07\x2c\xd3\x65\x11\x4a\xb5\xfe\x9f\x65\x55\xef\xe0\x3e\x05\xbe\xd6\x49\xbf\xac\x1d\x9e\x2d\x5d\x6e\x9e\xa2\x19\x71\xaf\x8d\x6a\xac\xa4\xef\x1c\xe3\x95\x9a\x26\x05\x1b\x4a\xae\x47\x05\x6d\x6a\x37\x99\x59\x18\x7a\xec\x02\x04\x3d\xfd\xc2\x3c\xa3\x88\xcd\x39\xe3\xbf\x7b\x78\x8c\x12\xae\x07\xd0\xf6\xf7\x90\xa3\x7d\xbc\xea\x81\xd6\x1c\x19\x83\xaf\x0e\x34\xea\xfc\x74\xc1\xeb\x03\x5b\xa3\x8c\xe3\xeb\xca\x79\x61\x46\x6f\x86\x5a\x21\xbc\xc7\xec\x7b\x00\x00\x00\xff\xff\xd7\x34\x57\x3d\x41\x06\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1601, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\xcd\x6e\xd4\x30\x14\xc5\xf1\xfd\x3c\xc5\x95\x66\x03\x0b\x9f\xf8\x5e\xdb\xf9\xe8\x0e\x98\x82\x66\x41\xa7\x4a\x8b\xba\x4e\x33\x1e\x1a\x98\x26\x91\xe3\x68\x5a\x9e\x1e\xa5\x02\x89\x5d\xcc\x3a\xbf\xfc\x75\xe2\x78\xbb\xdd\xd2\x30\xfa\xfe\x12\x22\x5d\xba\x9e\x35\xf9\x97\x18\x1a\x7a\x97\xf9\xd8\x66\xa7\x2e\xf8\x4b\x73\x3e\x63\x9e\x7c\x78\xbf\x59\xf0\xd7\x21\x78\xea\xfa\xd3\x70\x45\x4f\x31\x8e\xd3\x55\x96\x7d\xef\xe2\xd3\xfc\x88\x76\x78\xce\xda\xd0\xfc\x7a\x55\xcf\xcd\x4b\xf6\xd0\xf5\xc7\xe1\x32\xdd\x8d\xaf\x1f\xcf\x43\xfb\xd3\x87\xcd\x66\x4b\xbe\x3f\x0d\xa1\xf5\x14\x86\x39\xfa\x40\xbb\x9b\xbb\x4d\x37\xc6\xe6\xf1\xec\x27\x52\x91\xfa\x26\x92\xda\xd3\x6d\x7d\x5d\x1f\xbe\xdd\xef\x6f\xbe\x90\x1a\x29\xb6\x23\x29\x75\x1c\x87\x10\xc9\x19\x52\x3f\xa8\xbe\xde\xed\xeb\xeb\x4f\xf7\xa4\x54\x1c\xd4\xf2\x60\x22\x67\xd6\x4b\xf3\x31\xb1\xb4\xd9\x52\x98\xcf\x7e\xfa\x27\xb9\xa7\xcf\x87\xfa\xe1\x43\xbd\x5b\x5e\xdb\xd5\x87\x5b\x52\x47\x62\x83\x52\x83\x05\xce\x26\x50\xd6\x05\x0c\x58\xca\x44\x2b\x0c\xd1\x7a\x0d\x5b\x8d\xa2\x80\x88\xc5\x6a\xf7\x2f\xcd\xa1\x33\x59\x5d\x6c\x35\x98\x4b\xb0\x36\x28\xd6\x6c\x6e\x61\xe1\x2c\x44\x52\xa5\x59\x97\x0e\x4e\xc0\x7a\x99\x91\x6e\x2b\x93\x6a\xcb\xa4\x53\x58\xb4\x7b\xd3\x92\x54\x76\x10\x27\xb0\xab\x96\xb5\x85\xb5\x28\xdf\x0e\x38\x05\x0b\x3b\xb0\xcd\x53\xae\x04\x1b\x86\x38\x83\x9c\x93\x3e\x91\x8d\x05\x17\x1a\x5c\x3a\x14\xeb\xf1\xbc\x44\x6e\xc0\x25\x8a\x6a\xd5\x56\x0c\x31\x02\x36\x55\xd2\x12\xd1\x16\x45\x05\xae\x8a\x44\x5e\xc0\xe6\x58\xf6\x8b\x73\xa9\xba\xb2\xe0\xe4\x74\xb5\xa4\xff\x03\x9b\xd5\x7f\xf9\x07\x8b\x18\x54\x49\x33\xf2\x12\x9c\xe7\x10\x67\x7f\x07\x00\x00\xff\xff\x85\xec\xec\xc0\xac\x05\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 1452, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x99\xcf\x73\xe3\xa8\x12\xc7\xef\xf3\x57\xa4\x6a\x2e\xef\x1d\xdc\x06\xc9\x71\xe2\xa9\x7a\x97\x77\xdf\xd3\x1e\xf6\x8c\xa0\x6d\x51\x91\x80\xd0\x58\xb2\xf6\xaf\xdf\x92\xed\xfc\x92\x01\x93\x9d\xa9\x9a\xaa\x94\xbe\x1f\xe8\xa6\x69\x9a\x26\xf9\xf9\xf3\xe7\x83\x75\x68\x46\x1f\x1e\x46\x6d\x38\x7b\x20\x37\x3d\xfc\x67\x8d\x41\xae\x95\xa1\x5e\xd0\x2b\x48\x6b\xf6\xff\xfd\x31\x93\x7f\x58\x8f\x0f\xda\xec\xed\xaf\x87\x36\x04\x47\xbf\xd6\xeb\x83\x0e\xed\xb1\x01\x69\xfb\xb5\xf4\xe2\xef\x69\xd5\x8b\xd3\xfa\x2f\x6d\x94\x1d\xe9\x4f\x37\xfd\xbf\xb3\xf2\x05\xfd\x8f\x1f\x84\x7e\x40\xff\xbf\xb5\x58\x31\xc6\x38\x88\x55\x4f\xa8\x0e\x08\x06\xc3\x7a\x29\x2a\x99\x56\xab\xdc\xd0\x3a\x27\x6e\x72\xe2\x63\x4e\xdc\xe6\xc4\xa7\x9c\xf8\x9c\x13\x77\x19\x91\xb3\x9c\x98\x8b\x1f\x4f\x47\x28\xfa\x15\x84\x22\x0e\x3d\x99\xf3\x1e\x7e\xfd\x5e\x41\x4f\x42\x51\x64\x44\x15\x1b\xe1\x85\x8a\x7c\x96\x75\xec\x63\xd0\x83\x0e\x13\x8c\x97\x4c\x59\xa8\xca\xe0\xe9\xb8\x34\xab\xcc\xe9\x86\xa3\xc8\xd4\x97\xe5\xdc\xba\x1d\x5f\xa6\x56\x8e\x40\x04\xd5\x87\x85\xf0\x22\x56\x52\x99\x95\x21\x10\x2a\xa0\x6c\x41\xe1\x27\xd5\x7b\x31\x71\xc6\x57\xce\x5b\x05\xca\x82\x22\x07\xbd\x83\x5e\x4b\x6f\xc9\xee\x97\x93\x5d\xf0\xea\x7b\x78\xfd\x3d\x7c\x53\x88\x37\x89\x1d\x6f\x92\x3b\xde\xc4\x77\xb6\xd1\xe6\x70\xde\x82\x84\x9d\xae\xae\x19\x5f\x09\xe0\xca\x0f\x51\x49\xa6\xa5\x43\x4c\x32\xbc\x66\x9b\x15\xa6\xa4\x6d\xdc\xd6\x45\xca\x8c\x8a\xdb\xaa\x9a\x95\xb4\xfe\x5c\xab\x9c\x06\x37\xff\x90\xc3\xea\x3c\x56\xbb\x92\xd9\x08\xe6\x1f\xb5\x39\xac\x68\x5a\xe4\x7a\x33\xa5\xa3\x39\xa5\xa3\x79\x91\x62\x8b\x97\xd9\x5a\x2b\x63\x67\x42\xde\xe6\x80\x14\x10\xb0\xc3\x1e\x83\x9f\x52\x89\x20\x85\x6c\x11\x94\x08\xa2\x17\x3e\xc4\x8f\xbc\x54\x26\x6a\x51\x51\xb5\x05\xd1\xd3\x0e\x7a\x42\x69\x16\x4e\x2a\xda\x3c\xee\xa0\x93\x13\x74\x9d\x19\x6f\xc4\xdd\xf6\x11\x3a\x6b\x62\x62\xcb\x0b\xf6\xe3\x9d\xaa\xf2\x54\x32\xfc\x57\x29\x1a\xfe\x36\x99\xe7\x67\xa9\x4a\x4f\x58\xc5\x27\xb4\xbd\x13\x01\x4f\xb2\x15\xe6\x80\x20\x3b\x7b\x54\xc2\xb9\xc5\xba\xbf\x40\x1c\x82\x17\xfb\xbd\x96\xbd\x30\xe2\x80\x7e\xc9\x7a\x07\x14\x92\xe7\x7b\xd6\xf1\x14\xa0\x27\x1d\x84\xda\x13\x1c\xba\x46\x99\xb9\x82\x24\x78\x57\x5e\x30\x25\x71\x18\x9d\x84\x81\xcd\x89\xf1\xc5\x2d\xd5\xd4\xe2\xf5\x18\x4b\x16\xd5\xd4\xa3\xa1\x8a\xf1\xf9\x1f\x8c\x86\xe2\xa9\xa6\x9a\xc7\xac\x48\xb2\xe5\x8c\x73\xc6\x9e\xeb\x42\x70\xc7\x9f\x8a\x40\x5e\xd5\x79\xbf\xde\xc1\xba\xde\x94\x81\x8f\x77\x56\xfa\x0e\x3e\xd5\xbb\x32\xf0\x99\xd7\x85\x60\x61\x78\xf8\x8e\x17\x2e\x66\x57\xe6\xe3\xfc\xbf\x68\x46\xce\x2a\xb6\x2d\x03\xeb\xaa\x68\x31\x33\xf8\x5c\x06\x6e\x58\x51\x1c\x39\xdb\x56\x85\x3e\x6e\xcb\x92\x82\xb3\xa7\x0d\x2b\x03\x9f\x79\x31\x58\xe8\xe3\x73\x55\x94\x8f\x33\x58\x95\x82\x05\x01\xaf\x67\xc3\x25\x47\x61\x06\x37\x25\x49\x31\x83\x4f\xbc\xc0\xc7\x9a\xed\xf8\xb6\xa4\x00\xcc\xe0\x13\x2f\x48\xb3\x9a\xed\xaa\x8a\x15\x1c\x85\x9a\x33\xbe\x29\x5a\x35\x67\x15\x2f\x5a\x0c\x67\xd5\xf6\x8e\xe9\xd1\x10\x57\x39\x62\x7b\x9e\xaa\x62\x3b\xf6\x98\xcf\xaf\x0f\xf0\x39\xbf\x8a\x77\x70\xae\xca\x65\x20\x67\xd9\x48\x7f\x80\x9b\x7c\x5c\x3e\xc0\x6d\xf6\x40\xe3\x00\x83\xf6\xe1\x28\x3a\x14\x3e\xb4\x8b\x3b\x6b\x7f\xbf\x4b\x52\x5a\x1c\x8c\xa5\xa0\x25\x01\x1d\x9d\xb3\x3e\xa4\x50\x8c\x76\x67\x73\x7b\x94\x77\x03\x8f\x30\x58\x1f\xf0\x74\x6e\xc6\x52\xb3\xef\x3b\x3c\xdd\x36\x7a\x87\xc8\x27\xb4\x85\xd7\xf9\x01\xed\x80\xbe\x10\x6e\x23\x6f\x93\x36\xf2\xde\xd4\x2b\x32\x55\x41\x17\xf7\x89\xcb\xf6\x71\x9a\x5f\xba\x6f\x89\x04\x64\xa5\x16\x5d\xca\xc3\x7b\x24\x18\x12\x41\x7e\x8d\xbd\x36\x7b\xf4\x68\x24\x42\x67\xa5\x08\x7a\x6e\x4b\xf5\xb0\xe8\xba\x5f\x86\xf2\x16\xa9\x6b\x38\x8c\xe3\x08\x3d\x81\x78\x11\xca\x2c\xde\x6c\xe7\xc9\x7d\xf4\x85\xdc\x51\x35\x62\x03\x1e\x55\x6f\x8d\x82\x73\x9f\x97\x30\xd2\x43\xe4\xd9\xdd\xdb\x46\x77\x08\x4e\x3b\x04\xe1\x75\x32\x91\x62\xef\x8a\x9e\x4c\x40\x0a\xe9\x77\xce\xe5\xe5\x6f\xe7\xae\x14\x85\x73\x74\x89\xd2\x2d\xe2\x8f\x1d\xde\xe1\x6c\xc9\xe3\x24\x03\xc5\xb6\xd1\x1a\x24\x0c\x41\x9b\x03\xad\x1a\x53\xc1\x3c\xec\x6d\x2b\x0b\x86\xc8\xe9\xdb\x43\xe6\x76\xf5\x9b\x43\xda\x97\x22\x2b\xce\x23\xec\xad\x0d\xce\x6b\x13\x9c\x47\xa5\xe5\x22\x38\xce\xe3\xa0\x71\xbc\x4d\x21\x2f\x54\x24\xe0\xd1\xdf\x12\xcc\xf3\xfa\xd9\x1d\xf1\x7e\x66\x12\x5b\xe1\x71\x2e\x7a\x04\x23\x12\x94\x54\x4c\x92\x2d\xf6\xe2\xf3\x74\xb1\x83\x40\x28\x8f\x1e\x63\x79\x7c\x55\xf6\x9d\xa0\x36\x88\xee\x45\x9b\xc3\x12\xb8\x3a\x5c\xec\xd1\xdb\x0e\x90\x30\xaa\xb1\xf9\x3a\xfb\x0e\x8f\xda\x14\x81\x17\xe8\xce\x2b\xeb\x2b\x9c\x82\x4c\xf2\xc9\x7a\x95\x62\x2f\xcc\xab\x14\x7b\xb2\x92\x9b\x0c\x86\xb4\x53\x67\x59\x74\xc9\x1b\xed\x02\xe0\xd1\x5b\x87\xf7\xf6\xf3\xb5\x2f\xdb\x8b\xd7\xfe\xb7\xa0\xd8\x89\x21\x1a\x23\x69\x4f\xc1\x7a\x94\x22\x88\xce\x1e\x3c\x0e\x6f\xe5\xfd\xfc\xf9\xf5\x28\x3a\x1d\xd2\xf6\x8f\x7e\xc0\x09\x46\x11\xc8\x9a\x14\x14\x18\x10\x75\x20\x5e\x40\x4d\x46\xf4\x5a\x42\xd0\x73\xf1\x4b\x5f\xf4\x1f\x23\xee\x92\xd8\xa1\xb4\x7d\x2f\x8c\xba\x1f\xad\x02\x38\x16\xb5\x0f\x54\x38\x87\x27\x68\xe6\x83\x96\x20\x32\x96\x2f\xc0\xd1\x27\xeb\x47\xa0\x3d\xbe\xfd\x46\x83\x5a\xe1\x66\x33\xf9\x3b\x74\xe0\xec\xda\x11\x7d\x3a\x84\xf7\x0b\x67\x74\x58\xc2\x02\x7a\x9a\x93\xa1\x9d\x1a\xaf\xd5\xb9\xfd\x68\xd1\x2f\x12\xe8\x5c\x63\x23\x1d\xdd\xd5\x46\xe1\x3d\x73\xa5\x0b\xaf\x98\x2b\x5d\x78\xbb\x5c\xe9\xc2\x8b\xe5\x4a\x97\x14\xc1\x7f\x13\xfd\xc2\xc8\x7f\xea\x74\xef\xd4\xcc\x2f\x4d\x71\xa9\x03\x59\xe3\xd7\x03\x7d\x5b\x2b\xf2\x27\xfd\xaa\x3a\x87\xf7\x0f\xe3\x95\xfd\x4d\x2e\xb6\xbe\xb9\x39\x2c\x59\x63\xe1\xa5\x78\xfe\xb3\x22\x68\x37\x6c\x93\xc4\xb9\x8d\x7d\x6f\x16\xff\x09\x00\x00\xff\xff\x83\x88\xb8\x77\x94\x1c\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 7316, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x98\x3d\x6f\x1b\x47\x13\xc7\x7b\x7d\x8a\x05\xd4\x3c\x4f\xc1\x3f\x77\x66\xdf\xdd\x25\x91\x13\xa8\x88\x6d\xd0\x0e\x5c\xcb\x12\x1d\x2b\x91\x49\x82\x3c\x41\x51\x3e\x7d\x30\x7b\x77\x12\x5d\xcd\x5c\x71\x6a\xf4\xe3\x60\x5e\x76\x5e\x2f\x2f\x2f\xdd\xfe\xb0\xdd\x3d\x1d\x07\xf7\x74\xbf\x23\xef\x4e\x87\x67\xf7\xbf\xf5\x76\xb8\x5d\x7f\xbd\x3f\x6e\x9f\x6e\x1e\x1e\xf0\x78\xda\x1e\xff\x7f\x21\xe8\xef\xfb\xe3\xd6\xdd\xef\xbe\xee\xdf\xb8\x6f\xc3\x70\x38\xbd\x59\xaf\xff\xbc\x1f\xbe\x3d\x7e\xc1\xed\xfe\xfb\xfa\xf6\x78\xf3\xef\xf3\xea\xfb\xcd\x3f\xeb\xcf\xf7\xbb\xbb\xfd\xd3\xe9\xe3\xe1\xf9\xe7\x87\xfd\xed\xdf\xdb\xe3\xc5\xc5\xa5\xdb\xee\xbe\xee\x8f\xb7\x5b\x77\xdc\x3f\x0e\xdb\xa3\xbb\x7a\xf7\xf1\xe2\xfe\x30\xdc\x7c\x79\xd8\x9e\xdc\x6a\x70\xbb\x9b\xc1\xad\xae\xdd\x87\xcd\xdb\xcd\xfb\x3f\x3e\x5d\xbf\xfb\xcd\xad\x0e\x6e\xb8\x3d\xb8\xd5\xea\xee\xb0\x3f\x0e\x2e\x05\xb7\xfa\xcb\x6d\xde\x5e\x5d\x6f\xde\xfe\xf2\xc9\xad\x56\xc3\x7e\x25\xff\x38\xb9\x14\x74\x49\x8f\x77\x46\x49\x17\x97\xee\xf8\xf8\xb0\x3d\x9d\x89\xbc\x76\xbf\xbe\xdf\x7c\xfe\x69\x73\x25\x3f\xbb\xda\xbc\xff\xe0\x56\x77\x8e\x02\x4a\x06\x53\x05\x51\xb1\xc2\x0d\xd4\xc8\x0e\x33\x79\x03\x4c\xbe\x20\xa1\x56\x0d\xe5\x80\x56\x90\x09\x14\x54\x85\x47\x96\x4a\x05\x95\x60\x83\xd9\x37\x34\x93\xe0\x06\xf2\x20\xd5\x0f\x33\xda\x10\xa3\x9d\xcd\x56\x96\xb2\x7c\x46\x98\x09\xec\x2d\xc6\x91\x67\x44\x70\xb2\x38\x4d\x58\x26\x58\x14\x16\x94\x52\x02\x45\xf5\x45\x74\x3a\x80\x2a\x83\x58\xb5\x2f\x7a\xe4\x86\xe8\x41\x49\x35\x2f\x7a\x79\x98\x04\x2a\x16\xb1\x82\xb2\x6e\xdc\x0b\x49\x99\x2d\x6c\x01\x73\x83\x5f\xb3\x45\x72\x15\x3f\x34\xc4\x66\x60\x89\x02\x2a\x38\x25\x23\x4b\x1e\x45\xcd\xb9\x99\x8d\xa0\x64\x55\x82\x19\xd1\x12\x0b\x12\xa9\xb1\x81\x59\x7d\x13\x13\xcd\x91\x40\x51\x4d\xbc\x4e\x27\x90\x21\xef\x3a\x5a\x40\x51\x84\xdb\xd4\x28\xa0\x44\x60\x93\x37\x98\xba\x68\xaa\xea\xd3\x48\xdd\x32\x04\x46\x52\xed\x4b\xf2\xd8\xba\xc2\x08\x6a\x9e\x9e\xc1\x7a\x04\x5f\x60\x29\x17\xea\x43\x12\x5a\x2a\x6c\x2c\x16\xe7\xcd\xb4\x38\x8f\x74\x7f\x4c\xb4\x7c\x6a\xb6\xce\x70\x0b\x96\x92\x38\xd1\xcc\x01\x6c\x72\x5f\x2d\xc8\x5e\xda\x94\x06\xe7\x88\x88\x0c\xf2\xaa\x33\x3a\xc9\xc1\x54\x07\x3a\x9b\x4c\x45\xf9\x15\xd5\xa5\x26\x84\xd6\x9f\x33\x07\x5d\xdd\x84\xc4\xe0\x0c\x56\x2b\xc6\x88\x92\xf7\x36\xdb\x46\x3a\x93\xa1\xef\x4d\x4a\xc8\x5c\x61\x08\x45\x42\x4a\xe0\x06\x0e\x26\x95\x47\x6f\x98\x1c\x91\x10\xa3\x21\x4b\x5f\x51\x93\x65\x1d\x25\x6f\x54\xb6\xb3\x6a\x3a\x8f\xac\x34\x11\xbd\xc4\x8e\x6c\x2f\xf6\x46\xd3\x3a\xab\x26\xf2\x19\xab\x3f\xdf\x91\x0d\x1e\xc9\xaa\x6f\xc9\x68\x46\x96\xad\xf9\x36\xd2\x89\x6d\xb4\x8c\x61\x6d\x2c\xf3\xfa\x08\xf2\x03\xad\xc7\xfa\x8c\xae\x7a\xb4\xcf\x68\x83\x4f\x66\xba\x80\x82\x1a\xf1\x52\x90\x8b\xa4\x93\x61\x76\x22\x1f\xd1\x1b\x48\x81\x3e\x7b\x77\x58\xde\x46\x41\xb6\x49\x16\x58\x56\x0b\x2b\x1c\xbd\x44\xde\x48\x33\x57\xe8\x65\xf6\x0c\x66\xaf\x66\xc0\x4c\x87\x02\xca\x6a\x14\x3b\x2d\x09\x03\x6a\x6a\x07\x9e\x60\x96\x49\x4a\x4f\xc5\x4e\xcb\x00\xcc\x7a\x8a\x4f\x6c\xa8\x86\xc2\x3c\xb1\x49\x06\x1e\x93\xca\x4c\x1e\x11\x45\x5f\x3b\x67\xd6\xa3\x9a\x61\x26\x06\x47\x53\x0c\xc5\x6f\x21\x81\xf5\x39\x91\x88\xc0\xb2\x44\xc9\xae\xb1\x00\x26\x83\x91\xaf\xb4\xa1\xc3\xff\x40\x9b\xd5\xce\xd1\x54\xcb\x28\x90\xe8\x20\xe3\xfe\x12\x5c\xe6\x50\xc3\x09\x21\x82\x8a\x47\xf0\xa6\x9c\x39\xa3\x0d\xa9\x3e\xd1\x32\x4a\xe8\x8d\x79\xa6\xc9\x67\xa3\x99\x33\x2f\x73\xee\x12\x3a\xaa\x15\xfe\x9c\x6e\x7a\xfd\x7b\xa1\xeb\x22\x4d\xea\x22\x4d\x2a\x8a\x39\x3e\x5d\x93\x05\xaa\x10\x2d\x73\x39\x25\x24\xbb\x5b\xd8\x2f\x71\x0b\xfb\x25\x6e\x61\xbf\xc4\x2d\xec\x97\x84\xb3\x54\xc3\xe5\xe9\x95\x6e\x96\x6a\x38\xd3\x55\x9e\x8a\xd9\x4c\x0e\xc9\xb0\x6f\x49\xb7\x26\xca\xa8\x64\xf2\x77\x99\xd6\x0c\x93\xe8\x54\x64\xfa\x32\x0e\x5f\x33\x6d\x4c\xe4\x91\x26\x6f\xbb\xbf\xcc\x38\x9b\xa6\x8d\x09\x0e\xb6\xbd\x67\xc2\xc5\x27\x8b\xf0\x05\x86\x66\xc8\x5f\x23\x5a\x64\x67\xd4\x1b\xdb\x08\x37\xb2\xf4\xee\x91\x95\x22\x4b\xd5\xaa\xf1\x48\x5b\x95\x1e\x69\x7d\xa2\x9a\x68\x0a\x60\xc3\xa9\x7b\xa2\x99\x60\x17\xcd\xd1\x92\x92\x13\x1c\x9b\xc9\xd7\xb9\x22\x4b\x7e\x59\x2e\x5e\x13\x4c\x31\xc3\x30\x81\xcd\xb0\x8c\x27\x56\xb8\x30\x8a\x4d\x8d\xf1\x60\xa2\x2f\x7b\x1d\x0e\xfd\x52\x90\x6d\x92\xc3\xd8\x6e\xf4\x9b\x17\x35\x02\x07\xee\x8b\x82\x29\x5f\x3a\x9f\xfb\x85\xba\xea\x91\xe9\x74\x01\xfb\x6a\xb9\x50\xbf\xe0\x24\xba\xeb\x4f\xaa\xe3\x0d\x29\x22\xe9\xfd\xa6\x49\xc9\xe9\x57\x5f\x93\xa1\xb2\x93\xc5\x8c\x22\xdb\xad\x91\x25\x6f\x39\x76\xce\xb0\x0c\x8f\xfa\x05\x7a\xa6\x5b\x34\x4c\xd3\x02\xe7\x0a\xca\xd9\x32\xf1\x32\x05\x50\x6b\xbd\x4b\x8a\x47\xfe\x0b\x00\x00\xff\xff\x66\x74\xc2\x1f\x22\x1c\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 7202, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x00\xe3\x08\x33\x5e\xbc\x7b\xf2\xe0\x39\xe4\xa5\x64\x48\x93\x98\xdd\x52\xeb\xa7\x77\x90\x0a\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\x9b\x44\x45\x63\x3d\x9f\x17\x75\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x04\xbe\x82\x0c\xde\xfc\x9f\x1c\xf1\x53\x48\xba\xb0\xde\x84\x4d\xb1\x23\x8a\xb8\x61\xac\xb4\xb4\xab\xb7\x20\x43\xc5\x64\x12\xef\xed\xac\x12\x6f\xec\xc5\x7a\x15\x1a\x7c\x8e\xed\xa3\x0b\x72\xaf\xd3\x64\x82\x3a\x1d\x74\x7a\x60\x7c\xb5\x36\x33\x0e\x0e\x9a\x93\x39\x4d\xfc\xec\xbf\x98\xfb\x35\xcf\x99\xc5\x7c\x91\x27\x77\x79\xc3\xd5\x3c\x6b\xe4\x32\x4b\x8c\xca\x11\x51\x83\x0a\x8d\x77\x41\xa8\x0c\x3b\xac\x46\x49\x49\x4e\x0d\x4e\x54\x16\xa3\x13\xad\x14\x24\x5c\x28\xa1\x8a\x50\x59\x99\x02\x06\x43\x3f\xa0\x03\xa5\x9d\x3d\xe8\xd4\x0e\xa9\xaf\x9d\x72\xf5\x81\x95\x74\x75\x5c\x19\xfb\x3e\x61\xf4\x02\xba\xb6\x1b\x05\x88\xbd\x50\x1e\xc1\x6b\xfa\x8e\x97\x97\x87\x29\x8c\xbf\x1e\x07\x1e\x05\xc9\x81\xa6\xfe\x34\x4c\x09\x0a\x61\xcb\x47\x9d\xca\x94\x63\x8f\x7a\x9e\x76\x6d\xae\x36\x44\x87\x99\x94\xfa\xc4\x9f\x29\x21\x09\x42\xa3\xf9\xc0\x5d\x3a\x72\x43\xf4\xe7\x8e\xfe\x8f\x92\xab\x61\xdc\x9f\x37\x32\xbb\x6c\xa9\xab\x84\x54\xb2\x8f\x00\x00\x00\xff\xff\x6d\x9e\x36\x8f\xfb\x04\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1275, mode: os.FileMode(438), modTime: time.Unix(1495898227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x72\xd3\x30\x10\x06\xe0\x7b\x9e\x62\x67\x72\x81\x83\xd6\x5e\xc9\x92\xed\xde\x80\x14\x26\x07\x9a\x8e\x5b\xa6\x67\xd7\x51\xa8\xc1\xb5\x3c\xb2\x3c\xa1\x3c\x3d\xe3\x18\xa8\x7b\x92\x74\xce\x97\x9d\x7f\x77\xb3\xca\x76\xbb\x05\x33\xe8\xfe\x6c\x1d\x9c\xdb\x9e\x52\x98\x86\x63\xed\x34\xbc\x4b\xb4\x6b\x92\x53\x6b\xf5\xb9\xee\x3a\x9c\x46\x6d\xdf\x6f\x66\xfd\xd5\x58\x0d\x6d\x7f\x32\x57\xf0\xe4\xdc\x30\x5e\x25\xc9\xf7\xd6\x3d\x4d\x8f\xd8\x98\xe7\xa4\xb1\xf5\xef\x17\xf6\x5c\xff\x4a\x1e\xda\xfe\x68\xce\xe3\xdd\xf0\xf2\xb1\x33\xcd\x4f\x6d\x37\x9b\x2d\xe8\xfe\x64\x6c\xa3\xc1\x9a\xc9\x69\x0b\xbb\x9b\xbb\x4d\x3b\xb8\xfa\xb1\xd3\x23\x30\x07\x7d\xed\x80\xed\xe1\xb6\xba\xae\x0e\xdf\xee\xf7\x37\x5f\x80\x0d\xe0\x9a\x01\x18\x3b\x0e\xc6\x3a\x90\x02\xd8\x0f\xa8\xae\x77\xfb\xea\xfa\xd3\x3d\x30\xe6\x0c\x9b\x3f\x18\x41\x0a\x7f\xa5\xe9\x18\x58\x69\xb3\x05\x3b\x75\x7a\x5c\x95\xdc\xc3\xe7\x43\xf5\xf0\xa1\xda\xcd\x5f\xdb\x55\x87\x5b\x60\x47\x20\x81\x94\xe6\x98\xa1\x4c\xc3\x29\xf7\x51\x3e\x53\x81\x54\x94\x48\x5c\xc5\x68\x99\x47\xe9\xc2\xa7\x95\x44\x29\x91\x44\x81\x69\xc2\xb3\x40\xad\x44\x90\x26\x41\xc8\xa5\x40\x21\x82\xa6\x97\x21\xe5\x29\x4a\x42\x2a\xbc\x4d\xbe\xd1\xde\x26\xd7\xba\x8c\x49\xc2\x33\xef\x72\xde\xe8\x98\xdc\x3c\x0b\xcf\x2d\x90\x97\x11\x58\x84\xf7\x18\xb6\xf7\x7f\x9c\x48\xa2\x0a\x2e\x7e\xd1\xde\x5b\xf8\xaf\x95\x8c\x99\xc9\xc2\x83\xa7\x72\xe1\x92\xe2\xb8\xf0\x72\x99\x2f\xe7\x23\x90\xa7\xfe\x29\x2e\x9a\x67\x29\x16\xfe\xe0\xaf\x98\x73\xff\xc8\x67\xad\x30\xcf\xe7\x53\x8e\xc1\x61\x39\x16\x9c\xc5\xc4\xc8\xfc\xb3\x5e\xe1\x98\xcc\x01\x4b\x5f\x70\xa9\x50\x86\x2d\x65\xb1\xa1\x21\x4a\x85\xc4\xfd\xbf\x8d\x92\x90\x0b\x8e\xc5\x7c\x92\x31\xd8\x1f\xe3\x15\x07\x1c\xe3\x0a\xfb\x6f\xf1\x82\x33\xcc\x39\x52\x11\x18\xfa\xaf\xf6\x3f\x94\x6b\x1d\xd8\xe3\xa2\xfd\x4f\x36\x9f\xff\x77\x15\x12\x65\x01\xe3\x5b\x61\x45\x7f\x02\x00\x00\xff\xff\x6b\xaf\x79\xf1\x1e\x09\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 2334, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfe\x8a\x48\x5d\x60\xc0\x91\x58\x90\x2a\xb1\xb0\x33\x31\x30\xa7\x8e\xef\x6a\x91\xd8\x47\xec\x5e\x5a\x7e\x3d\x2a\x48\x88\x43\x2d\x88\xd1\xef\x7b\x7e\xc3\xb7\x5e\xaf\x83\x4e\x24\xbd\x79\xe8\x2c\x77\x81\x0e\xde\x52\xb8\x8a\xe4\x18\xb3\x58\x4d\xf6\x0a\xa8\x32\x5c\xaf\x4e\xd5\x47\x6d\x14\x58\x06\xdd\x84\x9d\xfb\x64\x9b\x18\x47\xf6\xdd\x7e\x0b\xa8\x35\x62\x4b\x6f\xc7\x9b\x9a\x0e\xf1\x99\x25\x6b\xb7\xa7\xe9\xf8\x50\x14\x5f\xa8\xad\x56\x46\x6d\xa6\x76\x1f\x13\x3a\xcf\xc9\x59\x05\xac\x18\x54\xc6\xa6\xa6\x83\x7f\x2c\x7c\xb5\x50\x6f\x7f\xc5\xad\x5c\x42\xb9\x66\xa8\xe4\xe9\x74\x33\xd2\xc5\x89\x2c\x06\xd5\x06\x17\x34\x5e\x92\x11\xb6\x2c\xe3\xcf\xac\xf0\x4c\xcb\xac\xe8\xc8\x72\x26\x3f\xbf\xea\x5c\x09\xfa\xa7\x97\x25\x99\x53\xe1\xfc\xa7\x91\x6e\xa8\xe2\x90\xa6\xe9\xff\x15\xa0\x3c\x92\xed\xd9\x09\x84\xfc\xdb\x43\xef\x4b\x07\xef\x01\x00\x00\xff\xff\x6e\x7e\x1a\xa7\x0f\x02\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 527, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbd\x72\xb2\x40\x14\xc6\xf1\x9e\xab\x78\x66\x68\xde\xb7\xd8\x03\xcb\x87\xa2\x5d\x12\x4c\x86\x22\xea\xac\x66\xac\x11\xd6\x48\x82\xec\xce\x72\x18\x34\x57\x9f\xb1\x4b\x87\xf5\xf9\x9d\xff\x3c\xbe\xef\xc3\x58\xdd\x8d\x8e\x31\x36\xdd\x1c\xfa\xca\xae\xc4\xbf\x40\x73\x15\x9c\x1a\xa7\xc7\xb2\x6d\x69\xe8\xb5\xfb\xef\xdd\xed\xbb\x71\x1a\x4d\x77\x32\x4b\x9c\x99\x6d\xbf\x0c\x82\xcf\x86\xcf\xc3\x91\x2a\x73\x09\x2a\x57\xfe\xdc\xc4\xa5\xbc\x06\x87\xa6\xab\xcd\xd8\xef\xec\xed\xb9\x35\xd5\xb7\x76\x9e\xe7\x43\x77\x27\xe3\x2a\x0d\x67\x06\xd6\x0e\xf9\x7a\xe7\x35\x96\xcb\x63\xab\x7b\x08\x46\x57\x32\x44\x81\xad\x5a\xa9\xcd\xc7\xbe\x58\xbf\x41\x58\x70\x65\x21\x44\x6d\x8d\x63\xa4\x31\xc4\x17\xd4\x2a\x2f\xd4\xea\x65\x0f\x21\xd8\x88\xfb\xa1\x47\x1a\x4f\x97\x86\xfa\xc1\x92\xe7\xc3\x0d\xad\xee\xff\x24\x0b\xbc\x6e\xd4\xe1\x49\xe5\xf7\xb7\x5c\x6d\xb6\x10\x35\x64\x4c\x59\x48\x32\xa2\x34\x99\xa2\x49\x48\x52\x66\x24\xc3\x98\xe6\x53\x76\x96\x52\x1a\xd1\x22\xa3\x28\x96\x8f\x59\x19\x66\x24\xa7\x47\x44\xe1\x9c\x92\x19\xc9\x45\x42\x32\xf9\x0d\x00\x00\xff\xff\xd8\x95\x44\x55\xf9\x01\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 505, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbd\x6e\xea\x40\x10\x85\x7b\x9e\xc2\x12\xcd\xbd\x05\xbb\xf8\x07\x10\x48\x69\xd2\xa7\x4a\x91\x7a\xd8\x1d\x9b\x15\xde\x99\x65\x77\xc0\x38\x4f\x1f\xa1\x28\x4a\x40\xd8\x09\xf5\xf7\x9d\x33\x9a\x33\x9d\x4e\x33\x0e\x48\x5d\x94\xac\x73\xb4\xca\x52\xe8\xb3\x7f\x1a\xc5\x68\x4b\xc9\x43\x3a\x28\xc3\x54\xff\x9f\x5c\xc4\x17\x8e\x98\x39\xaa\x79\x93\xed\x44\x42\xda\x68\xdd\x38\xd9\x1d\xb7\xca\xb0\xd7\x26\xc2\x7b\x3f\xf3\x70\xd6\x6f\x8e\x2c\x77\xe9\x35\xf4\xcf\x2d\x9b\x3d\xc6\xc9\x24\x61\x3c\x61\x7c\xd2\xc6\xa6\x3c\xaf\x4a\xd5\x32\xa9\xb6\xa5\x4e\x11\x8a\xbe\xa2\xc5\x72\x3d\x4c\x8b\x79\x55\x54\xaa\x35\xfd\x20\x2e\x17\xa3\x78\x99\x0f\xe3\xb2\x5c\x8f\xc0\x6a\xe4\x6e\x35\x5f\xa9\x3a\xc2\x3d\xc8\x3e\x80\xe0\xd9\xec\x80\x1a\xcc\x95\x44\xa8\x6b\x67\x3c\x10\x34\x18\x6f\xdc\xbe\x50\x09\x45\x1c\x35\x49\x59\x10\x50\xde\x99\xc8\x89\x6b\xb9\x0c\xac\x60\x0f\x96\xd2\x75\xc6\x6e\x17\x0f\x67\xf0\xa8\x4e\x1c\x05\xcf\x77\x02\xdf\x56\x83\xfc\x70\xf3\x97\x3f\xeb\x1c\x8d\x96\xa7\xd0\x13\x4a\x31\x8e\xf1\x18\x39\xe0\x0f\xe7\xee\xc9\x83\x57\x82\x2d\x7a\x94\xd8\x0f\xf5\x5d\x04\xc3\xde\x03\xd9\xbf\xc8\x11\x2d\x2b\x17\x4e\xcb\x21\xe5\x73\xbe\x5f\xbf\xec\x40\x12\xd3\x0d\xfd\x08\x00\x00\xff\xff\x41\xcc\x82\xeb\x72\x03\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 882, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x41\x73\xd3\x30\x10\x05\xe0\x7b\x7e\xc5\xce\xe4\x02\x07\xbf\x68\x57\x92\x65\xf7\x06\xa4\x30\x39\xd0\x76\xdc\x32\x3d\xa7\x89\x4b\x03\xa9\xed\xb1\x95\x09\xe5\xd7\x33\xa6\xd0\xba\xa7\x55\x0e\x39\xe5\xd3\x8e\xf2\xf4\xb2\xf3\xf9\x9c\xda\xae\x6e\x8e\x7d\xa4\xe3\xae\x09\x34\x74\x4f\xf4\x6e\x51\xc7\xcd\xe2\x7e\xd7\xd7\xc7\xf5\x7e\x8f\xc3\x50\xf7\xef\x67\xa3\xfc\xda\xf6\x35\xed\x9a\xfb\xf6\x8c\x1e\x62\xec\x86\xb3\xc5\xe2\xfb\x2e\x3e\x1c\xee\xb0\x69\x1f\x17\x9b\x7e\xfd\xfb\x29\x7b\x5c\xff\x5a\xdc\xee\x9a\x6d\x7b\x1c\xae\xbb\xa7\x8f\xfb\x76\xf3\xb3\xee\x67\xb3\x39\xd5\xcd\x7d\xdb\x6f\x6a\xea\xdb\x43\xac\x7b\x5a\x5e\x5c\xcf\x76\x5d\x5c\xdf\xed\xeb\x81\xb2\x48\xcd\x3a\x52\xb6\xa2\xab\xea\xbc\xba\xfc\x76\xb3\xba\xf8\x42\x59\x47\x71\xd3\x51\x96\x6d\xbb\xb6\x8f\xe4\x2d\x65\x3f\xa8\x3a\x5f\xae\xaa\xf3\x4f\x37\x94\x65\xb1\xcd\xc6\x2f\x06\xf2\x56\x9f\x74\xd8\x26\x4e\x9a\xcd\xa9\x3f\xec\xeb\x61\x32\x72\x45\x9f\x2f\xab\xdb\x0f\xd5\x72\x3c\xb6\xac\x2e\xaf\x28\xdb\x12\x5b\x84\x12\x62\x4b\xe4\xa5\x66\x9d\x41\x08\x10\xc9\x21\xee\x14\xec\x4d\x02\x66\x2e\xc0\x26\x07\x5b\x55\x7b\x06\x3b\x86\x15\x78\x56\xad\x80\x73\x07\x71\x06\x5e\xbd\xf3\x0b\x66\x88\xf1\x29\x3a\x14\x60\x17\xc6\xf1\xa9\xda\x33\x84\x25\x55\x8f\x9f\x3c\x15\x97\x16\x9c\xac\x45\x2c\xc4\xa6\xe0\x22\x20\x37\x60\x13\x34\x9c\x3b\x38\x78\x07\xf1\xea\xdc\x57\xea\x54\xea\xe1\x3d\x9c\x03\x9b\xe2\x04\xab\x3e\xf6\xb3\x65\xb6\xd0\x9f\x63\x62\xf5\x9f\xf6\xd7\x8a\x17\x04\xb5\x9d\xaf\xb6\x3c\x61\x2e\x97\x6a\xdb\xf2\x1c\xcc\x25\x78\x8c\xc2\xeb\x0f\x37\xd5\x7a\xc8\x13\x5d\xe8\x31\x4f\xb4\x7e\x6f\x36\x0e\x6e\x4c\x39\x20\x57\x9b\xfc\x82\x4b\x88\x1a\xf5\x3f\x2c\x52\x40\xaf\xe7\x04\x8b\x51\xdb\xf1\x5f\xdb\x00\xd6\xb7\x28\x33\x43\x84\x21\x65\x42\x99\x26\x38\xe1\x5f\xc5\xd6\x81\x83\x81\x35\xe3\xa1\x54\x3d\x6e\x24\xa7\x87\x3d\xd5\x6a\xa3\xde\x68\xb5\x51\x2f\xda\x42\xf4\xfc\xc6\x98\x39\x40\xac\x4f\xd8\x8d\x5c\x32\xc4\xca\x73\x49\x12\x12\x7c\xc3\xd5\xdd\xf4\xcc\x03\xc4\x14\x60\xc9\xff\x04\x00\x00\xff\xff\xc3\xe9\xd3\x96\x87\x08\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2183, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4f\xc3\x30\x10\x05\xe0\x3d\xbf\xc2\x52\x16\x18\x6a\x93\x10\xa9\x55\x25\x16\x76\x26\x06\x66\xc7\x3e\xa7\x16\x89\xcf\xd8\x17\x4c\xf9\xf5\x08\x52\x05\x18\x6a\x67\xf5\xfb\x7c\xef\xd5\x75\xcd\xd0\x83\x4b\x81\x58\xb2\x6e\xcf\x66\xaf\x25\x01\xbb\x11\x40\x4a\x68\x17\x27\x19\xdf\xb8\x42\x67\x6e\xab\x6f\xfb\x84\x01\x98\x75\x06\x8f\xec\x44\xe4\xe3\x51\x88\xc1\xd2\x69\xee\xb9\xc2\x49\xa8\x20\x3f\xcf\xbb\x49\x7e\x88\x17\xeb\x34\xa6\xf8\xec\xcf\x8f\x23\xaa\x57\x08\x55\x15\x21\xbc\x43\x78\x10\xcd\xa1\xeb\x77\x0d\x1f\x79\x5a\xcc\xd2\xf8\xf3\x7f\x35\x6d\x2b\xf7\x65\xa3\x9a\xa2\xb9\x3f\x94\x48\x07\x50\x22\xd2\xc8\x22\x99\xb9\xc6\xe4\x46\x94\x3a\xc7\x7a\x6d\x4a\x97\x14\x8d\x3a\x0b\xd6\x9e\xc9\xaa\x80\x11\x0d\x5d\xc9\x73\x37\xe2\xa6\xb9\xa6\xbb\x2b\xcd\x35\xd0\xf2\xcb\xfb\x95\x3d\x66\xe0\x3a\xf2\xbe\xd9\xd4\xb8\xde\xf8\x6f\x1c\xd0\xaf\xc9\x7c\x5f\xa2\x4b\x82\x61\xf8\x93\xa4\x94\x1b\xf0\x15\x00\x00\xff\xff\x91\xff\x09\xc0\x08\x03\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 776, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\xcd\x6e\x9c\x30\x10\x07\xf0\x3b\x4f\x31\x12\x97\xf6\xe0\x61\xc7\xc6\x06\x72\x6b\xbb\xdb\x6a\x0f\xcd\x46\x24\x55\xce\x04\xbc\x0d\x2d\xc1\x96\x31\xa2\xe9\xd3\x57\xf4\x4b\xbb\x27\xe3\x33\x3f\x46\x33\xff\x19\x48\xd3\x14\x8c\xd5\xe3\xe2\x3c\x2c\xfd\x58\xc0\x6c\xbb\xc6\x6b\x78\x93\x69\xdf\x66\xe7\xde\xe9\xa5\x19\x06\x9c\x27\xed\xde\x26\x2b\xfe\x6c\x9c\x86\x7e\x3c\x9b\x1b\x78\xf6\xde\x4e\x37\x59\xf6\xb5\xf7\xcf\xf3\x13\xb6\xe6\x25\x6b\x5d\xf3\xf3\x95\xbd\x34\x3f\xb2\xc7\x7e\xec\xcc\x32\xdd\xdb\xd7\xf7\x83\x69\xbf\x6b\x97\x24\x29\xe8\xf1\x6c\x5c\xab\xc1\x99\xd9\x6b\x07\xfb\xdb\xfb\xa4\xb7\xbe\x79\x1a\xf4\x04\xcc\xc3\xd8\x78\x60\x47\xb8\xab\x0f\xf5\xe9\xcb\xc3\xf1\xf6\x13\x30\x0b\xbe\xb5\xc0\x58\x67\x8d\xf3\x20\x05\xb0\x6f\x50\x1f\xf6\xc7\xfa\xf0\xe1\x01\x18\xf3\x86\xad\x0f\x26\x90\x22\x5c\x69\xee\x36\x56\x4a\x52\x70\xf3\xa0\xa7\x8b\x92\x47\xf8\x78\xaa\x1f\xdf\xd5\xfb\xf5\xb5\x7d\x7d\xba\x03\xd6\x01\x09\xa4\x5d\x81\x39\xca\x5d\x88\xf2\x95\x0a\xa4\xb2\x42\xe2\x32\x4a\xab\x18\x2d\x8b\x28\x5d\x86\xb4\x92\x28\x25\x92\x28\x91\x88\xc7\xe0\x3c\x02\x87\x47\xbc\xc0\xe5\x56\xac\x04\x72\x4e\x31\x38\x38\x20\x89\x1c\xa9\xd8\xa1\x24\xa4\x2a\xb8\xf3\xff\x5a\xa0\xd8\x8e\x4b\xdc\x65\x3c\x98\xde\x3f\x4e\x24\x51\x6d\xee\x9b\x94\x44\x9e\x07\x97\x7e\xcd\xab\x28\x2e\x83\x89\x5f\x73\x11\xe4\xb2\x40\xa9\xb0\x52\x48\x3c\x8c\x2b\x42\x2e\x38\x96\x6b\x90\x11\x58\x85\xf7\x73\x81\xc3\x79\xff\xc6\x39\x16\x1c\xa9\xdc\xd8\xf4\x5f\x1d\xbc\xee\x2b\xbd\x71\xc6\x3f\x3a\x7c\xb1\x7c\xfd\x9b\xa9\xf5\xeb\x45\x59\xfe\x0a\x00\x00\xff\xff\x39\x91\xe9\x3f\x1b\x06\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 1563, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xdb\x40\x0c\x85\x77\xff\x0a\x01\x5e\xda\x41\x14\x92\xa9\x08\xd0\xa5\x7b\xa7\x0e\x9d\xcf\x77\x94\x4c\x44\x47\x5e\x48\x5a\x27\xf7\xd7\x17\x72\x83\xb6\x4e\x7c\x81\x47\xe9\x7d\x7c\x47\x3e\xbc\xfd\x7e\xdf\x49\x41\xae\xea\x5d\x25\xfe\xf2\xd0\xe1\xea\x1a\xba\x4f\x03\x7a\x1c\x12\x5b\x0e\xf6\x02\x51\x78\xfc\xbc\xdb\xd8\xef\xa2\xd8\x11\x8f\xf2\xd4\x1d\xdd\x8b\x3d\x0d\xc3\x44\x7e\x3c\x1d\x20\x4a\x1e\xa2\x86\x5f\xe7\x3e\x87\x75\xf8\x49\x9c\xa4\xda\x8f\x72\xfe\x36\x4b\x7c\x46\xdd\xed\x0c\x75\x41\xfd\x3a\x84\xe8\xb4\x04\x27\xe1\x7e\x79\x04\x9b\x0d\x32\x45\x15\x93\xd1\x2f\x26\xff\xc0\x52\x70\xed\x75\x84\x6c\x7c\xad\xa4\x9c\x20\xa3\x87\xed\x9b\x22\x36\x1d\x12\x1b\x64\x1b\x9d\xa3\xd1\xb5\x32\x12\x07\x8e\x08\x7f\x1d\x2e\x8f\xc1\x81\x78\x7a\x03\x8a\xa4\xc0\x29\x29\xf1\x33\x38\xcd\xd8\x26\xb5\x1f\x15\xda\x4b\x4f\x37\x66\x26\x98\x69\xc1\xeb\x7f\x94\x27\x30\x3f\x80\xf5\xef\x2c\x66\x99\x88\x6f\x8c\xdc\xbe\x91\x71\xf5\xfe\xff\x03\x9b\x39\xbd\x9c\x50\xcf\x50\x54\x12\xc4\x6c\xa0\xde\x02\x5f\xdd\xa0\x62\xf0\x23\x6a\x13\x73\x51\xc4\x34\xe1\x98\x20\xd9\x0a\xb9\xb4\x48\xa7\x8c\x50\xff\x94\xe5\x5a\x59\xc2\x4c\xe9\x9e\x9a\xd4\xed\x34\xc5\x02\x96\x83\xba\x45\x45\xe4\x26\x1b\xdc\x84\xc1\x71\xc6\x8c\xae\xe7\x26\x97\x62\x73\xe5\x6a\x51\xd8\x3f\xcc\xb3\x89\xc0\x16\x8a\x9d\xc8\x11\x18\xfd\xed\xc0\xc3\x1d\xa6\x8f\x1f\x33\xb5\x36\x0a\xbf\x29\xaf\x39\x1b\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x76\x74\x20\x1d\xff\x03\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd1\xbf\x6e\xab\x30\x14\xc7\xf1\x9d\xa7\x38\x12\xcb\xbd\x83\x0f\x3e\xc6\xe6\x4f\xb6\x7b\x4b\x5a\x31\x34\x89\x48\xaa\xcc\x04\x9c\x86\x96\x60\x64\x8c\x48\xfa\xf4\x55\xb6\x76\xa8\x48\x67\x7f\xfc\x1b\xbe\xc7\xf7\x7d\x30\xbd\xee\x26\xeb\x60\x6a\xba\x84\x40\x5f\x9c\x2d\xe1\x4f\xa0\x5d\x15\x1c\x1b\xab\xa7\xb2\x6d\x71\x1c\xb4\xfd\xeb\xdd\xf0\xb3\xb1\x1a\x9a\xee\x68\x16\x70\x72\xae\x1f\x16\x41\xf0\xda\xb8\xd3\x78\xc0\xca\x9c\x83\xca\x96\x1f\x57\x76\x2e\x2f\xc1\xbe\xe9\x6a\x33\x0d\xdb\xfe\xfa\xbf\x35\xd5\xbb\xb6\x9e\xe7\x83\xee\x8e\xc6\x56\x1a\xac\x19\x9d\xb6\x90\xad\xb6\x5e\xd3\xbb\xf2\xd0\xea\x01\x98\x83\xae\x74\xc0\x72\xd8\x14\xcb\x62\xfd\xb2\xcb\x57\x4f\xc0\x7a\x70\x55\x0f\x8c\xd5\xbd\xb1\x0e\x54\x08\xec\x0d\x8a\x65\x96\x17\xcb\x87\x1d\x30\xe6\x0c\xbb\x3d\x0c\xa0\xc2\xf9\xa5\xb1\xbe\x73\xc9\xf3\xc1\x8e\xad\x1e\xbe\x4c\xe6\xf0\xb8\x2e\xf6\xff\x8a\xec\xf6\x2d\x2b\xd6\x1b\x60\x35\x50\x88\x09\x47\x12\xa8\xe4\x1c\x95\x1c\x89\x12\x24\x1e\x62\x7c\xb7\x8d\x90\x42\x3e\xa7\x23\x89\x12\x95\x44\x21\x66\xa5\x42\x25\x90\x78\x82\x22\xbd\xdf\xaa\x5f\x58\xfa\x76\x86\x1f\x9a\x11\x0a\x15\x62\x44\xc8\x03\x31\xdb\x4d\x70\x89\x71\x8a\x94\xc6\x28\xf8\x6c\x0b\xc1\x63\x94\x11\x52\x2a\x91\xe4\x67\x00\x00\x00\xff\xff\x07\x8e\xcb\x74\xdb\x02\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 731, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xcf\x6e\xa3\x30\x10\xc7\xf1\x7b\x9e\x02\x29\x97\xdd\x03\x36\x26\x7f\x36\x89\xb4\x97\xbd\xef\xa9\x87\x9e\xa7\xf6\x40\xac\xe0\xb1\x63\x0f\x21\xf4\xe9\x2b\x5a\xa9\x6a\xda\xe0\x5c\xf9\x7c\x05\xd6\x4f\xc8\xcb\xe5\xb2\xf0\x01\x69\x88\x5c\x0c\x96\x76\xaa\x48\x61\x2c\x7e\x49\x64\x2d\x0d\x25\x07\xe9\x2c\xb4\xa7\xe6\xf7\x62\x2a\xff\xfb\x88\x85\xa5\xc6\x1f\x8a\x23\x73\x48\x07\x29\x5b\xcb\xc7\xfe\x45\x68\xef\xa4\x8e\xf0\x3a\x96\x0e\xae\xf2\xd9\x92\xf1\x43\x7a\x0a\xe3\xbf\xce\xeb\x13\xc6\xc5\x22\x61\xbc\x60\xfc\x2b\xa1\xac\xaa\x4a\x09\x28\x5d\x42\xd3\xa2\x20\x64\x79\x8b\x75\x0e\x57\x39\x5c\xe7\x70\x93\xc3\x6d\x0e\xff\xe4\x70\x97\xc3\x7d\x06\x55\x95\xc3\xdc\x42\x6a\x7e\xa1\x7b\x4f\xb5\x49\xaa\x5e\xaf\x45\xe7\x49\x74\x1d\x0d\x3f\xb4\x56\xf5\x66\x9b\xe5\x9d\x9a\xe7\xd5\x6a\x2f\x3a\x3d\xde\x43\xef\x02\x30\x5e\xf5\x11\xa8\x45\x25\x38\x42\xd3\x58\xed\x80\xa0\xc5\x78\xdb\x62\x2f\x2e\x3e\x32\x5e\x85\x01\x06\xe1\xac\x8e\x3e\xf9\x86\xdf\x7f\xac\xcf\x2a\x21\xb3\xa5\x36\x95\x83\xa5\x7c\x18\x46\x42\xae\xf3\x0c\x1d\xe7\x03\xec\xa3\x0f\xf8\xa5\x81\x13\x18\x4a\xb7\x27\x4f\x67\x27\x18\x3b\x74\xc8\x71\x9c\x7d\x1f\x03\xa7\x06\x6b\xd1\x07\x03\x8c\x0f\xb3\x21\xcd\x25\xd3\xa7\xb2\x4b\x4e\x81\xf6\xce\x01\x99\xc7\xe7\xfa\xd8\xfc\xe1\x9c\xd3\xcd\x20\x6c\xb8\x6c\xbf\x05\x6f\x01\x00\x00\xff\xff\xcc\x44\x6c\xc1\x3e\x04\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1086, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x72\xd3\x30\x10\x06\xe0\x7b\x9e\x42\x33\xb9\xc0\xc1\x7f\xb4\x2b\xc9\xb2\x7a\x03\x52\x98\x1c\x68\x3b\x6e\x99\x9e\xd3\xc4\xa5\x81\xd4\xf6\xd8\xce\x84\xf2\xf4\x8c\x5d\x1a\xc4\x69\x95\x43\x4e\xf9\xbc\xb3\xda\xd5\xae\xe6\xf3\xb9\x6a\xda\xaa\x3e\x76\x83\x3a\xee\xea\x82\x54\xdf\xbe\xa8\x77\x8b\x6a\xd8\x2c\x1e\x77\x5d\x75\x5c\xef\xf7\x38\xf4\x55\xf7\x7e\x36\xd2\xaf\x4d\x57\xa9\x5d\xfd\xd8\x5c\xa8\xa7\x61\x68\xfb\x8b\xc5\xe2\xfb\x6e\x78\x3a\x3c\x60\xd3\x3c\x2f\x36\xdd\xfa\xf7\x4b\xf6\xbc\xfe\xb5\xb8\xdf\xd5\xdb\xe6\xd8\xdf\xb6\x2f\x1f\xf7\xcd\xe6\x67\xd5\xcd\x66\x73\x55\xd5\x8f\x4d\xb7\xa9\x54\xd7\x1c\x86\xaa\x53\xcb\xab\xdb\xd9\xae\x1d\xd6\x0f\xfb\xaa\x57\xd9\xa0\xea\xf5\xa0\xb2\x95\xba\x29\x2f\xcb\xeb\x6f\x77\xab\xab\x2f\x2a\x6b\xd5\xb0\x69\x55\x96\x6d\xdb\xa6\x1b\x94\x33\x2a\xfb\xa1\xca\xcb\xe5\xaa\xbc\xfc\x74\xa7\xb2\x6c\x68\xb2\xf1\x8f\x5e\x39\x23\x47\x3a\x6c\x13\x23\xcd\xe6\xaa\x3b\xec\xab\x3e\x0a\xb9\x52\x9f\xaf\xcb\xfb\x0f\xe5\x72\xfc\x6c\x59\x5e\xdf\xa8\x6c\xab\xc8\xc0\x07\xb0\x09\xc8\x43\x82\x2d\x08\x2e\x80\x2d\x4b\x96\x0d\x42\x01\x1b\x40\x36\x85\x86\x89\x32\x49\xd6\x6a\x78\x0f\xe6\x1c\x6c\xc5\x7c\x23\xec\xb4\x84\x1d\x81\x2c\xc1\x30\x9c\x98\x85\x63\x50\x6e\xc1\x56\xc3\x89\x59\x9c\x30\x81\xb5\x4b\xd1\xbe\x00\x59\x3f\x86\x4f\xd5\x8e\xc0\x24\xf6\xe4\x4d\x8f\xbf\x3c\x15\x07\x03\x4a\xd6\xcc\x06\x6c\x52\x70\xe1\x91\x6b\x90\xf6\x12\xce\x2d\x2c\xd8\x43\xee\xe0\x24\x9d\x05\x3b\x31\x83\x7f\x54\xbc\x9d\x63\xeb\x8c\x99\x5a\x48\x45\x91\xac\x73\x90\x96\xb5\x83\x73\x20\x1a\x4b\x7c\x86\x15\x1b\x1d\x59\xb9\x14\x93\x65\xc7\xb0\x67\xd8\x70\x86\xa5\x20\xb7\xee\x84\x59\xcb\xa7\xcb\x41\x34\x2e\x16\x0b\x72\xf2\xfd\x89\xb5\xdc\x91\x48\x17\xe2\x68\xc7\x5a\x3e\x24\x69\x0b\x3b\xb6\xc4\x23\x17\x07\xea\x84\x03\xe4\xad\xf8\x17\x33\x17\x90\xef\x7e\x84\x13\x8a\xfd\xa6\x8d\x07\xa5\xbc\x10\x16\xe4\x35\x8c\x4e\x8a\x1d\x6b\x39\xef\x58\x8b\x63\x1b\xeb\x84\x02\x8e\xc7\xa3\x7c\x2a\x37\xc9\x2f\xd6\x2b\xf7\x60\xe3\x12\x36\x29\x39\x3f\x8d\xa3\x31\x49\x89\x8f\x3a\x07\x05\x0b\x2f\x57\x30\xc2\x72\x01\x23\x2c\xa7\x11\x08\x6c\xf8\xb5\x22\x85\x9c\x48\xc4\x13\xf6\xef\xff\x3c\x31\x19\x0f\xd6\x05\x88\xe5\x82\x4f\x3c\xc0\x69\x90\x38\xf1\x11\xf6\xe2\x32\x39\x61\x06\x69\x79\xe0\xdf\xb4\x85\xe3\x3f\x01\x00\x00\xff\xff\xd9\x4b\x7a\x31\xa4\x0a\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2724, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\x3b\x6f\xc3\x20\x10\x07\xf0\xdd\x9f\x02\xc9\x4b\x3b\x04\x8c\x63\x2b\x0f\xa9\x4b\xf7\x4e\x1d\x3a\x13\x1e\x8e\x55\xcc\x39\x80\x43\xd3\x4f\x5f\xb9\x89\x1a\x55\x4a\x72\xac\xdc\x8f\xff\xf1\xb8\xb2\x2c\x09\x8c\xda\x25\x1f\x49\xea\xdd\x9a\x93\x69\x54\x22\x6a\xf2\xc4\x74\x94\x4c\xb9\x30\x88\x70\xa0\x12\x9c\x79\x2e\x66\xfc\x06\x5e\x93\xde\x19\xd8\x92\x7d\x8c\x63\xd8\x32\xd6\xf5\x71\x3f\xed\xa8\x84\x81\x49\x2f\xbe\x4f\x8b\x41\x7c\xb1\x8f\xde\x29\x48\xe1\x7d\x3c\xbd\x5a\x90\x9f\xda\x17\x45\xd0\xfe\xa8\xfd\x0b\xe3\x55\xb5\x5a\x70\x6a\x69\x3a\x9b\x73\xc7\xdf\xfd\x57\xc3\xb9\x44\xcd\x4a\xb6\xa8\x11\xeb\x25\x6a\x54\xb5\xc1\x0d\x37\xb8\x69\xd0\x9c\x7a\xb9\x69\x30\xd3\x08\x85\x11\x31\x51\x05\xc9\x59\x10\x0a\x61\xc7\x26\x4b\xee\xba\x59\x0a\xaa\x2c\x4d\x81\x0e\xbd\xf4\x10\xc0\xc4\x5b\x48\x0f\x08\xe2\x59\x51\x3c\x2b\xab\xce\xca\xaa\xb3\xb2\xda\xac\xac\x36\x23\x4b\x56\xe8\x70\xca\x68\xd5\x43\x90\xf3\x2b\xa6\xc6\xda\x18\x74\xe2\x8c\xae\xe9\x65\xfd\xce\x6d\x66\x91\x0e\x0f\xab\x77\x5f\xc2\x74\xb9\x13\xf6\x17\xf0\xdf\x38\x1d\xaf\x26\xd8\x80\x9c\x35\xb3\x19\x5a\xba\x54\xc0\x77\xec\x27\x00\x00\xff\xff\x05\x90\x6a\x07\x03\x05\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 1283, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x41\x6f\x9b\x30\x14\x07\xf0\x7b\x3e\xc5\x93\x72\xd9\x0e\x7e\xe4\xd9\xd8\x40\x6f\xdb\x92\x4d\x39\xac\xa9\x68\xa7\x9e\x29\x38\x2b\x1b\xc5\xc8\x18\x65\xdd\xa7\x9f\x48\xb6\x96\x1e\x26\xdb\x67\x7e\x58\x7f\xbd\xe7\x3f\xac\xd7\x6b\x30\x83\xee\x4f\xd6\xc1\xa9\xed\x73\x82\x69\x68\x2a\xa7\xe1\x5d\xa2\x5d\x9d\x1c\x5b\xab\x4f\x55\xd7\xe1\x34\x6a\xfb\x7e\x35\xeb\xaf\xc6\x6a\x68\xfb\xa3\xb9\x82\x47\xe7\x86\xf1\x2a\x49\xbe\xb7\xee\x71\x7a\xc0\xda\x3c\x25\xb5\xad\x7e\x3f\xb3\xa7\xea\x57\x72\xdf\xf6\x8d\x39\x8d\xb7\xc3\xf3\xc7\xce\xd4\x3f\xb5\x5d\xad\xd6\xa0\xfb\xa3\xb1\xb5\x06\x6b\x26\xa7\x2d\x6c\xaf\x6f\x57\xed\xe0\xaa\x87\x4e\x8f\xc0\x1c\xf4\x95\x03\xb6\x87\x9b\x72\x57\x1e\xbe\xdd\xed\xaf\xbf\x00\x1b\xc0\xd5\x03\x30\xd6\x0c\xc6\x3a\x90\x02\xd8\x0f\x28\x77\xdb\x7d\xb9\xfb\x74\x07\x8c\x39\xc3\xe6\x07\x23\x48\xe1\x3f\x69\x6a\x02\x4f\x5a\xad\xc1\x4e\x9d\x1e\x17\x47\xee\xe1\xf3\xa1\xbc\xff\x50\x6e\xe7\xd7\xb6\xe5\xe1\x06\x58\x03\x24\x90\x36\x19\xa6\x28\x37\x3e\xca\x67\x2a\x90\xf2\x02\x89\xcb\x28\xad\x62\xb4\xcc\xa2\x74\xee\xd3\x4a\xa2\x94\x48\x22\xc7\x4d\xc2\xd3\x40\xad\x44\x84\xe6\x29\x47\x2e\xbd\x98\x04\x21\x97\x02\x29\x45\x7a\xb3\xec\xff\xe8\x14\x29\xdb\xa0\xa4\xa0\x24\x2f\x5c\x20\x2f\x22\xb0\xf0\xee\xfd\x05\x87\x0d\xf0\x1f\x27\x92\x28\xbd\x8b\x5f\x6a\x15\x1c\xe5\xac\x79\xb0\x56\xf3\x8a\xbc\xf7\xe4\x2d\x0f\x9e\xe1\x99\x4b\x8a\xe3\xfe\xed\xcb\xec\x72\xb3\x36\x98\xfb\xa3\xbc\xe2\x80\xae\x2d\x34\xe7\xfe\x91\xcf\x5a\x61\x96\xcd\x0d\x8a\xc1\x61\xa9\x2f\x38\x8d\x89\x91\xfa\x67\xbd\xc0\x31\x99\x03\x96\x7e\xc1\x85\xc2\x80\xba\xbf\xda\xd0\x10\x85\x42\xe2\x61\x77\xe3\x82\xfd\xdf\x4a\x2a\x08\xb9\xe0\x98\xcf\x6d\x8f\xc0\x01\x65\x5c\x60\x7f\x17\xcf\x38\xc5\x8c\x23\xe5\x81\x39\xfe\x6a\xef\xf0\xf8\xfc\x03\x53\x48\x94\x06\x4c\x7a\x81\x15\xfd\x09\x00\x00\xff\xff\xf3\xe5\xd1\x86\x3c\x08\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 2108, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xcb\x92\xe3\x30\x08\xbc\xcf\xa7\x4c\x95\x39\xcc\x75\xbe\x46\x83\xb0\x4d\xd9\x80\x56\x90\x28\xd9\xaf\xdf\x72\x6c\x97\x13\x67\xf6\x28\x1a\x9a\x47\xb7\x3e\xe1\x4b\xb2\x82\x52\x7c\x7f\x7c\x82\x90\x3b\xe9\x40\x15\x66\xbe\x12\xa0\xc9\x23\xea\x7d\x28\x3a\xef\xef\xab\x81\x38\xa1\xe6\xbd\xac\x51\x8a\x91\x2a\x08\x63\x35\xb7\x3e\xf6\xcc\xdb\x8f\xdd\x0e\xa6\xa4\xde\xa8\xfa\x39\x2d\x95\xe2\xe0\xd3\xbd\x6c\x69\x98\x34\xdf\xb1\x5e\x7c\x74\xcb\x09\x26\xd6\x61\x03\xb2\x02\x9a\x06\x69\x40\xa9\x96\x01\xc5\x41\x5c\x0f\xd4\x94\xd4\x82\xd6\xb9\x70\x34\x46\x3a\x77\xfb\x2d\x0a\xea\x29\x70\xab\x9a\x79\xe1\x6f\xea\xd0\x58\xb3\x35\xdf\xea\x1e\x71\x34\xed\x79\x80\x92\xdc\x8b\xd5\x58\x4b\x32\x95\xd9\xee\xe0\x91\x82\x11\xd2\x94\x24\x71\x10\x8e\x6a\xb3\x0d\x4c\x1b\x41\x96\x0c\x42\x91\x9c\xea\x95\x91\xde\xce\xd0\x13\xe5\x9f\x84\xd3\x11\xef\x46\x1b\xe5\x04\x3a\xa5\x8a\xe3\x7f\x6b\x5f\x46\x1e\x9e\x54\x64\x19\x3a\xef\xc4\xb5\x5b\xf6\x5d\x67\xfc\x4b\x9b\x82\xac\xce\x99\x6a\x59\x14\x98\xed\x92\x53\x29\x2b\x30\x33\x92\xfa\x22\x80\x94\x73\xcf\x65\x37\x7d\xea\x20\x30\x5a\x48\xe2\x79\x7b\xbe\x98\xc6\xfa\x9e\x91\xb6\xdb\x9e\x88\x4c\x77\xc0\xfb\x1b\x88\x7f\x7f\x94\xca\x48\x33\x7b\x3c\xdb\xe2\xcf\x85\xea\xfd\xd0\xbd\xbe\xf1\xec\xa7\xd9\x0d\xe1\x61\x95\x3a\x96\x34\x90\x83\x77\xe7\xec\x05\xa5\x3c\x50\x9f\x21\xfb\xed\x97\x05\x83\x85\x5e\x0f\x1a\xd3\x17\x94\x39\x8e\x16\x17\x7e\x9e\xb0\x65\x7c\x23\x69\xbe\x38\x16\x1e\x1e\x3f\x43\xad\x3d\xbe\x16\x9a\x2a\x61\x04\xf9\x0a\xfc\x0b\x00\x00\xff\xff\xf2\x29\x36\x94\x93\x03\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 915, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd0\x49\x8e\x84\x30\x10\x44\xd1\x3d\x77\xe1\x2b\x23\x07\x0f\xf2\xfd\xef\xd5\x32\x55\x5d\xc0\x2e\x9e\x72\x92\xad\x60\x18\x72\x2a\xd7\xa1\x40\xd6\x09\xe4\xe3\x27\x17\x6e\xb6\x8e\x34\x7a\xc7\x3d\x19\x37\x1a\x76\xde\xd9\xab\xae\x92\x34\x90\x05\x7d\x1d\x2d\x49\x2a\x71\xbf\x73\xec\x5c\x94\x23\xdb\xcd\x4f\xcd\xb8\x35\xb0\xf3\xce\xd7\xf2\xcd\xfa\x30\xfe\xe5\xe5\x64\xac\x43\x96\x64\x32\xae\xdb\x1f\xba\x0a\x65\xfb\x3c\x40\x21\xbc\x82\x26\xec\x7c\xe0\x5a\xac\x48\xd4\x0d\x8d\xa2\xef\xe6\x36\x68\x81\x06\x7d\xae\x43\x53\x78\x38\x8a\xb9\x67\x1f\xba\x86\xdd\x92\x3e\xd1\xec\xd8\xf9\xc0\xb7\xd8\xc9\xc6\x3e\xf0\xf2\x4c\x94\x2f\xfa\xbb\x1a\xf1\xa3\x7b\x30\xbf\xcd\x6d\xa0\xb6\xff\x3a\xd7\x5f\x00\x00\x00\xff\xff\xa9\x49\x01\xa2\xbd\x01\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 445, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x57\x6d\x8e\xeb\x2a\x0c\xfd\x7f\x97\x32\x52\x11\x24\x9d\x4e\xab\xbb\x1a\x07\xdc\x04\x4d\x02\x3c\x4c\x93\x76\xf7\x4f\xb4\x69\xbe\x4b\xee\x48\x23\x35\xe7\x1c\xb0\xb1\x9d\x60\x7f\x31\x38\x34\x84\xaa\x44\x66\x30\xfc\xfd\xf3\xc5\x40\x99\x3b\x31\x69\x9b\xd7\x03\x7d\xb1\x86\x40\xd1\x48\x3f\x11\x33\x28\x9a\xe7\x33\x4a\x33\x28\x82\x6a\xc2\x9b\x56\x72\xb1\x7d\x59\x17\xca\x50\xc6\x1a\x2d\xbd\x25\x7b\x1d\x94\xb5\x95\x10\xb4\x35\xac\xd6\xed\xa0\x9e\xaf\xf5\xa0\xa6\xa6\x7d\x74\x6b\xf2\x4c\xe8\x5b\x2d\x91\x18\x59\xa9\xa1\x5e\x9b\x08\x58\x63\x83\xc1\x3f\x36\x28\x0f\xd7\xab\x96\x0d\x18\x28\xd1\xbf\x0d\xb6\xda\x87\x1b\xd4\x08\x3e\x54\x03\x66\x7d\xc0\xfb\x17\x53\x10\x80\xc5\xdd\xde\x2e\x4b\xdb\x30\x43\x10\xe4\xb6\x72\x69\xf1\xc5\x6e\x92\xf3\x94\x80\xcc\xc7\x53\x82\x0c\xba\xd5\xe1\xc1\x3a\x6d\x94\xed\xfa\x44\x81\x32\x78\xbf\xf5\x39\x9a\x24\x70\x16\x20\x50\x24\xa6\xb9\xec\x9f\xdf\xec\x2f\x1c\xa4\x32\x07\x43\x0c\x54\x40\x59\x31\x85\x7f\xff\x80\xf7\xf0\xf8\x3a\x38\x6f\x15\x53\x96\x29\x72\xac\x71\x4b\x77\x0b\x6d\xca\xa7\xa5\x05\x5c\xe7\x39\x17\x07\x60\x42\xf9\x76\x06\xc9\x35\x54\x4e\x21\x23\x72\x7e\x3c\xe0\x12\x3a\xcd\xf7\x7a\x41\x1b\xaa\xf9\x5e\x59\x71\x90\xd6\x73\x2e\x18\x38\xcd\x5c\xfc\xb1\x45\xe7\xdb\x74\xee\x52\xab\xe9\x55\x73\xa6\x3c\xd0\xa3\x0f\x79\xf1\x58\x9f\xfa\xb1\x3e\xf5\x0b\x9a\x3a\x2f\xc7\x5c\x48\x90\x15\x3e\x2b\xa3\x01\x1f\xe6\xa9\x96\x8a\x8e\xdf\x17\x56\xcb\x07\xab\x6b\xd3\xbd\x52\x29\x15\x5d\x4e\xdf\xac\x8e\xa5\x38\x82\x95\x48\xf8\x3e\xb0\xd9\x36\xbb\x72\xb9\x87\x70\x0d\x95\x4b\x28\x5b\x2f\xcc\xe6\x0b\x6d\xe3\x20\xe0\x5d\x56\x60\x4a\x64\xb2\xb6\x37\x05\xce\xf5\x7e\x5b\xef\x18\x85\x55\x3d\x49\x27\xb8\xd8\x29\x45\x49\x82\x75\x4e\xb2\x96\x4b\xd5\x7f\x90\x54\x91\x77\x86\x32\x2e\xe2\x1f\xeb\x0c\xcd\xe3\xa9\x8a\xef\x4d\x90\x64\x25\xb8\x10\x9c\x9f\xf3\x1d\xc1\x45\xfc\x24\x05\x22\xcb\xb7\xed\x0e\x82\x3c\x3f\xa6\x05\xdf\x1f\x3c\x1f\x04\x3f\xf9\x25\x2d\x38\x8b\x7c\x47\xb0\x73\x4c\x71\x11\x3b\x4e\x5e\xd2\x3e\xc4\xff\xe4\x0e\x82\x67\xfc\x94\x16\xe4\x59\xd2\xc9\x28\x38\xa7\x05\x47\x9e\x8c\x83\xe0\xa7\x6c\xc7\x87\x53\x3a\x59\x82\xff\x1c\x79\x5a\x70\x16\xbb\x82\x1d\x1f\xce\x59\xb2\x1e\xa2\x20\xdb\x13\x24\x02\x95\x47\x03\xa9\x92\x8b\x82\x63\x2a\x59\x51\xf0\x23\x12\x3e\xe4\xfc\x22\x4e\xa9\x17\x27\x0a\x7e\x44\x22\xdd\x39\xbf\x64\x19\x4f\x94\x5c\x2e\xb8\x38\x26\x4f\x21\x78\x26\x92\x4e\x0a\x9e\x9d\x3e\x98\xe8\x0c\x09\xb5\xc5\x9c\x9e\x4b\x33\x7e\xe1\xdf\xdb\x79\x1e\x05\xe7\x6d\xef\x06\x41\xfc\xfa\xa4\x05\x82\x6f\x46\x68\x14\x1c\xb7\xcf\x37\x0a\x4e\x9b\x2f\x84\x86\xd2\x58\x0a\x5a\x12\xa3\x9b\x73\xd6\x87\xe5\x97\xf6\x5a\xe3\x7d\xbc\xb1\xca\xc9\x4f\xb4\x3b\x1f\xe9\x12\x6d\x8b\x7e\x47\x54\x4d\x7a\x93\x2a\x1b\x7f\xeb\x03\x99\x2c\x71\xaf\x4d\xf8\xcd\x9b\xed\xb7\xdd\xbf\x45\xea\x42\xb0\xae\xeb\x58\x43\x0c\x7e\x41\x99\xbe\x61\xaa\x29\xeb\xb0\x60\x1e\x55\x63\x8d\x62\xcf\x7b\x6a\xb1\xb2\xb1\x85\xae\x91\x39\xed\x90\x81\xd7\xab\xce\x6e\xda\xd7\x35\x64\x02\x52\x58\xb7\x10\xaf\x5e\xce\xc6\x7e\x14\xc1\x39\x1a\xda\xcb\x9e\xf2\xb7\x1a\x3f\xf0\xd6\x20\x61\x08\xda\x94\x74\x28\x4c\x96\xea\x4f\xa7\x52\xf9\xf8\x67\x69\xbc\x2f\xff\x51\x5a\xfd\x26\x77\x75\x1e\xd9\xd5\xda\xe0\xbc\x36\xc1\x79\x54\x5a\xf6\x51\x72\x1e\x5b\x8d\xdd\x98\xf4\xd8\xf8\x8f\x87\x9c\x8d\x01\x71\x9d\x8f\x66\x60\x68\xff\x17\x31\x27\x59\x61\x03\x53\x78\x9a\x54\x42\x79\x8b\x8e\xd4\x40\x55\x80\xfa\x57\x9b\xb2\x5f\xf6\x3e\x06\x81\x51\x85\xdd\xee\xd4\x07\x51\xa7\x4d\x52\xb0\x4d\x9a\x55\x97\xd5\x43\xb8\x86\xa6\x5d\x16\xb9\x87\xc1\xb0\x1a\xa2\x5e\x30\xd4\xab\x97\xf5\x45\xe0\xcd\x5b\x87\x9f\xe2\x40\xdd\x24\xc4\x14\xac\x47\x09\x01\x6a\x5b\x7a\x6c\xdf\xa3\xd9\x13\xfe\xef\x06\x75\x9c\x40\x96\x36\x6e\xbe\xc5\x07\xeb\x20\x90\x35\x4b\x72\x9c\xbc\xc0\x39\xbc\xb3\x38\x32\xbc\xec\x7e\x9c\xc9\x46\xe2\xe6\x57\x39\x0d\x74\xc5\xf7\xcc\x46\x15\xb8\xb8\xdd\xf6\xbb\xdc\xa2\xa7\xe8\x7a\xf5\x28\xbc\x56\xcf\x2f\x42\x85\xbe\x3f\xe6\x6b\x06\x3b\x7c\xa5\xca\xb4\xd7\xa4\xaa\xa0\x97\x7c\xaa\x81\xd9\xa4\xb7\x67\x68\x73\x87\x3e\xa8\x63\x7e\xb6\xa3\xdc\x69\x23\x38\xd3\xae\x3d\x2d\x98\xff\x03\x00\x00\xff\xff\x9e\x0f\xfa\xb5\xe6\x0f\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 4070, mode: os.FileMode(438), modTime: time.Unix(1495898227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x96\x59\xae\x83\x21\x08\x85\xdf\xbb\x97\x7b\xc2\xc1\x01\x4d\xf7\xbf\xaf\x1b\x70\xee\x43\x1b\xbf\x1f\x05\x45\x06\x99\x60\x15\xca\x06\xd2\xbe\x9f\x85\x1d\xec\xbc\x51\x29\x81\x14\x43\x41\x6b\xdf\x8f\x26\x74\x43\x25\x98\x6c\x11\xad\x81\x96\x16\xaa\x74\xf4\x29\xec\xa0\x80\x3c\xd0\x91\xf3\x4d\xf5\x10\xab\xff\x36\x2a\xa1\x32\xd4\x50\x14\x19\x5a\xd2\x26\x25\xf2\x06\x96\x02\x66\x99\x9c\xc0\xa6\xa0\xd6\xef\x27\x0b\x6a\x47\x16\xb0\x58\x90\x55\x10\xb4\xba\x41\x5d\xcd\x1e\xb3\xea\x20\x83\x6a\x87\xfc\x9d\xb1\x96\x12\xa2\xe6\xea\x3b\x72\x0f\x22\x13\xda\x96\x31\x3c\x05\x6b\x87\x32\x58\xce\x54\x55\x64\x9b\x94\xc1\xdc\xa1\x2a\x9b\x35\x13\xcc\x9c\x5c\xc0\x70\x55\x80\x81\xd9\x27\xc8\xe1\x42\xe8\xd4\xac\x0c\x31\x9b\x7e\x3f\x25\x74\x20\x29\x0a\xbf\x9f\xe2\x67\x8a\x85\x48\xe9\x41\xdf\xd5\x46\xf7\x74\x19\xec\x57\x99\x6d\x98\x5a\xec\xa6\xa8\x87\xfd\x57\x0f\xf6\x34\xee\x6d\xb2\x6a\x82\x4e\x63\xcd\x50\xc5\xa3\xe7\xfb\xa9\x19\x19\x15\x14\x99\x63\x4d\x90\xbf\x35\x0a\x17\x06\x94\x79\xd1\x07\xf2\xf7\x53\x0b\x52\x8f\x73\x6b\x92\xc0\xa2\xd0\x0a\x6d\x0b\x28\xe2\xea\xf6\x78\x28\x1c\x58\x19\x61\x36\x57\x79\x58\xc7\x86\x0a\x4a\x81\x5f\x6d\x6a\x8b\xdc\x88\x2c\xc8\x39\x7c\x78\x20\x5f\x40\x69\x0f\xf5\x45\x1e\x20\xba\x75\x44\x10\xf0\x21\x7d\x28\x6d\x4a\x82\x72\xd6\x59\x45\xdf\xa4\xc3\x57\x7b\xbc\x0f\x57\xa0\x45\x8f\xc8\x8f\x17\x22\xcf\xa4\x3e\x82\xc2\x23\xff\xe1\xf6\x72\xeb\x2f\x87\xd5\xc5\x06\x26\x7e\x3f\x66\xa8\xe6\xae\x8a\xd4\xa1\x64\x44\xc8\x18\x3c\xe9\x03\xfd\x24\x86\x5a\x2f\xf4\xea\x71\x30\x8b\xef\x7c\xb3\x6a\x43\x79\x51\x45\x0f\x27\x03\x6b\x9f\xec\xae\x02\x7b\xd9\xa8\x9e\x3d\x5c\xd3\x3d\xa7\x95\xdc\x94\x5a\x5c\xf7\xa4\xe2\x09\x32\x97\x2a\x05\x19\x66\x17\x09\xda\x85\x4a\x85\xe6\xb4\x3e\x64\xa4\x02\xf5\x2c\x24\x09\xf5\x8a\xe4\xe5\xe4\x41\x86\xba\xc3\x11\xbc\x0f\x5f\xcb\x6b\x86\xfc\x5d\x10\xb7\xc5\x44\x5f\xe5\xc5\x42\xfe\x2e\x78\x84\x9e\xc1\x51\xa9\x33\x68\x82\x24\xd3\x5f\x17\x87\xbb\x27\x7b\xd8\x97\x8b\x29\x35\x94\x1f\x9a\xda\xd7\x07\x4f\xf9\x97\x73\x7b\xb9\xd7\x9b\xdb\xcf\xfc\xf6\x33\xbf\xc1\xf4\x67\xfe\xb3\x80\xbc\xf7\xe3\x1e\x79\xf6\xc3\x82\x72\xdb\x53\x79\xed\xa9\xbc\xf6\x54\x5e\x7b\x2a\xef\x7e\xad\x45\x4b\x3a\xdc\xc7\xbd\x2f\x6e\x7e\x9e\x4b\xa1\xa6\x12\x35\xce\xa3\xda\x1b\x53\xe3\xb4\x6f\xb3\x0a\x4d\x71\x31\x4f\xbc\xc8\xc1\x33\x1e\x47\x99\x58\x2f\x51\x7d\x44\xde\xfe\xb6\xcc\xe1\x11\xea\xcc\x9f\x89\x49\xae\xb9\x49\x9e\xb9\xbe\x9b\x2d\x74\x78\x85\xf5\x16\xde\x5b\xa8\xf0\xff\x0d\xe6\x21\x27\x1b\x3b\x47\xa6\x0c\xf2\x90\x61\xcb\x3f\x5c\x7e\xb8\x1f\xf6\x76\xc7\x6b\xbd\x12\xb7\x58\xf3\xb8\x80\x89\xde\x0a\xc3\x76\x6d\xfe\xb8\xd0\x3c\x3a\xe1\x44\x66\xdf\xf6\x85\x9e\x76\x07\x4d\x61\x6b\xf2\x68\x3a\x5e\x56\x03\x53\x34\x83\xca\x0b\x1b\xd4\x7b\x21\x3b\xa1\x49\xa3\x50\xc9\xdf\x4d\xc3\x41\xf1\xa1\xc6\xdb\xa2\xc9\x62\x7f\xdc\xb4\xf1\xb6\xd8\x1f\xe8\x0a\xfb\xfa\xd0\xbd\x67\x15\x0f\xc5\xee\x17\x15\x8f\x83\xd0\x7f\x28\xf4\x7b\xf5\xcc\x15\xe6\x45\x7b\x13\x65\x34\xf5\x85\x5e\x07\xae\xc9\xec\x39\xaa\x8f\x63\xf5\x1e\x5c\x47\x75\x51\x6f\x24\xfe\x64\x32\x3f\xca\x4d\x6e\xea\x3f\x00\x00\xff\xff\x6c\x99\xbf\xd3\xec\x09\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 2540, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1495898227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x4d\x92\xc4\x20\x08\x05\xe0\x7d\xee\x32\xaf\x7c\xfc\x89\xe5\xfd\xef\x35\x65\x27\xdd\x11\x77\xf9\x40\x02\x21\x52\xc1\xd6\x61\xf0\x36\xaf\x17\x32\x2f\x59\x50\x30\x07\x28\x51\xed\xfd\x70\xce\x2b\x1c\xee\xa0\x26\xda\xdf\xfb\x2c\xee\xbf\x54\xe8\x9b\x0a\xbd\x53\x54\x42\x5c\xa1\xfa\x4c\x60\x60\x6f\x70\x82\xd9\x0f\x67\xf5\xa8\xe7\xc5\xe2\x70\x3f\xbc\xd7\x2b\x64\x14\xea\xfe\xb6\xf5\x0d\x1b\x9e\x49\x6f\x93\x8e\x68\x87\x65\x73\x78\xed\x75\x07\xc6\x11\x70\x9e\x01\x9d\x17\xbd\xdf\x8b\x53\x48\xb3\x9f\xc5\x1a\x72\x14\x8a\xb4\xc7\x81\xde\xd7\xaa\x2b\x47\xa1\xd5\xc3\xc6\xca\x5a\x6b\x6f\xed\x08\xb8\x15\xe5\x2e\xca\x9a\x79\x10\xa2\x82\x5c\x6b\xac\xcc\xc2\xcf\xd2\x36\xca\x97\x86\x2e\x60\xea\xe1\x38\x9c\xd5\xeb\xf7\xcb\xba\xad\x01\xd2\x3e\xcd\x36\x06\xe7\x7f\x00\x00\x00\xff\xff\x6c\x87\x98\x7c\xdb\x02\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 731, mode: os.FileMode(438), modTime: time.Unix(1495898226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x3b\x0a\x03\x31\x0c\x05\xfb\x1c\x25\x85\x8a\xb4\x7b\x1a\x47\xd6\x9a\x07\x96\xb4\xac\x14\xef\xf5\x53\x98\x40\xbe\x90\xee\x69\x06\xc1\x9c\x49\x63\x4d\xe3\x00\xb1\xeb\x72\x2a\x9c\x18\x25\xe1\x46\xd1\x83\x14\xbc\x7b\xf8\x9a\xd3\xb2\x5f\xbe\xe2\xbd\xbf\xa3\xaa\x95\x54\xb2\x84\xec\x03\x2c\x1f\x2f\x8d\xae\xb0\xf6\xd8\x1d\x43\xe6\xee\xde\x60\x4f\xf7\x6b\x5d\x42\x85\x0e\x58\xf5\x23\x26\x19\xa5\xa3\xfe\xec\x3d\x82\xdd\x92\xca\xb6\xfd\xaf\x48\x6a\x93\xb8\x21\x85\x4c\x72\xb9\x07\x00\x00\xff\xff\x61\x01\x49\x4a\x21\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 289, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xca\xb9\x0d\x00\x21\x0c\x45\xc1\x9c\x62\x9e\xfc\x7d\x80\x91\xfb\xef\x6b\xb5\x01\xe1\x48\xa3\xa0\x0d\x39\x95\xb3\xd2\x90\x1a\x59\x70\x66\xed\xa2\x9c\xdb\x78\xe8\x49\xd6\xe8\xaf\x6e\x87\xdc\xe8\x26\xca\xf9\x02\x00\x00\xff\xff\x4c\x1d\x4f\xb9\x46\x00\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 70, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x51\x6a\xc3\x30\x0c\x06\xe0\xf7\x1d\xa5\x30\xd1\x38\x6e\x46\xd9\x69\x34\x5b\x09\x66\x8e\x14\x64\xad\x59\x6e\x3f\x4a\x18\x84\xc4\x85\xbc\x7e\xfe\x7f\x19\x5b\x17\x30\xca\x34\x92\xe9\x02\x63\x0a\x2a\x45\x7a\x83\x20\xe3\xe7\xdb\x05\x4c\xb1\xef\x53\x18\x91\x71\x20\x05\x26\x7b\xea\x43\xd4\xe8\x17\x22\x1a\xee\x2b\x21\x96\xa6\xf1\x2d\x64\x61\xc8\x99\xe7\xb5\xf2\x54\xd7\xdd\x8f\xea\xae\xde\x79\xc8\x61\x39\x70\x7b\xab\x72\xd7\x1c\xb9\x6d\xef\x15\xf4\x95\xb9\xfe\xfa\x01\xbd\xe2\x16\x17\x07\x85\xcc\x12\x0f\xa5\xf2\x20\xc0\x6f\x8c\x5c\xd6\x6c\xfc\xba\x9d\xce\x0e\x24\xa7\xb3\xff\xb9\xf7\x39\x71\xf5\x53\xcb\xb4\x30\x99\xab\x33\xfd\xa8\x4c\xb4\x39\xdb\x8e\x36\x52\x8a\x02\x69\x7a\x74\xfb\xf6\xba\xc4\x97\x77\xce\x68\x45\x78\xa7\x7f\x01\x00\x00\xff\xff\x6b\x8d\x7f\x2a\x2c\x02\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 556, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x4d\xae\x84\x30\x0c\x03\xe0\x3d\x87\xb1\x62\xe7\xaf\x55\xef\x7f\xaf\xa7\x32\x9a\x47\x99\x05\x8b\x2f\x40\x9d\x34\x74\xf4\x84\x7c\xa2\xe6\xba\xc2\xd0\x0d\xa9\xa0\x78\x33\xed\x26\x39\x40\x2b\xd0\x6d\x5d\x49\x30\x08\x17\x92\xeb\x4a\x81\x15\x50\x18\x72\x1e\x24\x64\xf9\x71\x0f\x30\x7a\x7f\xf2\x38\x09\x51\x8f\xf7\x53\x0f\xa7\x83\x87\x25\x87\xfc\xc3\xd1\x28\x03\xad\xd7\x55\x81\x40\x06\x94\x7e\x22\xd6\x55\x89\x4c\x44\x80\x36\x5e\x9a\x5f\x91\x8e\xdd\xc0\x21\xff\x4a\x29\x34\x4f\xcd\xd7\x3b\x4e\x5b\x57\x15\xc8\x09\xee\x63\xb3\x7f\x3c\xde\x1e\xf3\xed\xfd\x3f\x2d\x10\x3b\xb5\x51\x75\x70\x42\xfc\xa7\x34\xb0\x87\x3b\x28\xd3\x63\x6f\x70\x6f\x90\x24\x24\x42\xf3\x1e\xe3\xe0\x7d\x37\xf4\x00\xdb\xe0\xb6\xcb\x8f\xf7\x16\xa2\x7e\xdc\x3f\x1e\x87\x1d\xda\x69\x3b\x96\x0d\x79\xde\x5b\xe3\x24\xe4\xfa\x34\x7f\xe7\xbd\x0a\xf1\x2d\x34\x64\x03\x54\xad\xbf\x00\x00\x00\xff\xff\xc7\xbc\x07\x23\x80\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 640, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x41\x8a\x85\x21\x0c\x03\xe0\xbd\x77\x99\x60\x5a\x53\x2b\xde\xff\x5e\x43\x17\x8f\x5f\x5d\x7e\x11\x12\x54\x3a\xd8\x27\x06\xd4\x77\xb3\x82\x83\xb9\x40\xd3\xe3\xb8\xad\xf9\x38\x77\x0b\x41\x02\x3d\x41\xda\xcd\x71\xb1\xca\x0e\xe6\xc7\x70\x98\xf1\xa6\xed\x46\x1f\xe0\xec\x10\xc1\xd5\x0f\x3b\xfc\x64\xa2\xff\x1d\x30\xe9\x3b\x24\x85\x38\xba\x18\x82\x8d\x7c\x83\xf5\x04\xe2\x1b\xf8\x6e\xd4\x84\x02\x2b\x40\x2b\x2e\xc2\xdc\x90\xb5\x7a\x31\xfa\x4d\xfb\x71\x60\x1a\x98\xfe\x38\x1e\xe7\xed\xba\xbb\xd5\x7f\x45\xbd\x69\x8d\xfd\x07\x00\x00\xff\xff\x28\x59\x2c\x24\xc1\x01\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 449, mode: os.FileMode(438), modTime: time.Unix(1495898223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6e\xeb\x30\x0c\x44\xf7\xff\x28\x01\x4c\xe0\x67\xdb\xd3\x28\xd2\x58\x21\x20\x4a\x2e\xc9\x58\xc9\xed\x8b\x36\x70\xe0\xda\x6e\x76\x36\xe7\x69\x38\x9c\x13\x85\x69\xc2\x7d\xd0\x91\xc4\x2a\xc5\x26\x1f\xff\x4e\x24\x36\x7a\x8d\xc6\xcb\xbf\x41\x67\x8e\xb0\x27\x4c\x17\xae\xf9\x25\x49\x50\xb7\xa8\x40\x25\xe1\xa8\xcd\xda\xe8\x8b\xe8\x28\x10\xb8\x3e\x0e\x24\x2e\x38\xb0\xeb\x08\x7e\x85\x6e\xf9\x10\x9d\xe7\xe0\xdc\xea\x30\x9f\xc9\x8a\xed\x80\xdd\x15\x49\x12\x09\x3c\xbc\xb2\x6f\x5e\xe4\xd5\xde\x4c\x85\x67\x3c\xbf\x59\x32\x99\x5f\xc8\x86\x97\x55\x69\x99\xeb\x0a\xf9\x5d\x4f\xc5\xdd\x87\x75\x43\xbb\x55\x9f\x37\xe8\x83\x26\x6d\x89\xa2\x18\xa9\x6f\x01\xf3\xa6\x40\xca\x18\x13\x25\xbb\x93\x4c\x5b\xc2\x59\x40\x9d\x6b\x6a\xdd\x9e\x93\x39\x14\x4e\xef\x2a\xe9\x29\xee\x6c\xba\xc5\x56\xfd\x30\xe4\x9f\x12\x7d\x07\xb3\x1b\x3b\xa8\xc2\x17\xf0\xff\x1b\x93\xf3\xb1\xd6\xfb\x72\x81\x21\x68\xbc\xfe\x8c\xbf\x02\x00\x00\xff\xff\xd2\xa6\xb4\x9f\x81\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 641, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xc7\xbb\x0d\x03\x20\x0c\x45\xd1\x9e\x5d\x72\xe5\xe7\x1f\x20\xef\xbf\x57\x94\x8e\x94\x47\xc1\x31\xe4\x54\xce\x4a\x43\x3a\xc8\x82\xfd\xa8\x51\xd8\xac\x4e\x92\x4a\xdc\x67\x75\x51\x8e\xec\xe0\xf7\x55\xfd\x49\x15\xb3\x14\xc2\x2b\x68\x61\x9f\x07\x5e\x35\xcb\x2d\xd9\x17\xdd\x8d\x9b\xfd\xbc\xc9\x46\x37\x51\xce\x37\x00\x00\xff\xff\x7d\x8c\x3d\x44\x9d\x00\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 157, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xd1\x6a\x86\x30\x0c\x85\xef\xf7\x28\x3f\xfc\x01\xab\x13\xc7\x9e\x26\xb4\x51\xca\xda\xb4\x34\xd1\xce\xb7\x1f\x4c\x36\x9c\x76\xb7\xdf\x97\x70\x0e\xe7\x01\xf8\x8c\x42\x6e\x21\x60\xd2\xf7\x97\x07\x28\x05\x8a\xa4\x65\x87\xe8\x6d\x49\x92\x66\x05\x9b\xe2\xb7\x2a\x38\xcf\xde\x46\x64\x5c\xa8\xfc\x3c\xac\xd9\xa1\xd2\xfd\x7a\x4b\x45\xe9\x13\x1c\x2a\xde\x65\x95\x2b\xfb\xdb\xc3\x3a\xe9\xcc\x30\x40\x48\x0c\x21\x70\xfd\xa5\xa6\x33\xaf\x63\x13\x4f\xdd\x1d\xf7\xfd\x1b\x04\xbb\x9f\xa0\x90\xaa\xe7\x45\x9e\xd5\x73\xb3\x9b\xe4\x9d\x49\x4d\x1b\x63\xd0\xb6\xa0\xb5\xa4\x7c\x1e\x01\x3f\xd0\xb1\x1c\x99\xc7\x12\xff\x26\x56\xcf\x13\xf8\xbc\x8d\x17\xf1\x15\x00\x00\xff\xff\x2a\x24\xee\x07\x9c\x01\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 412, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x51\xce\x84\x20\x0c\x04\xe0\x77\x0f\x33\x61\xa6\x2d\xa5\xf1\xfe\xf7\xfa\x03\xae\xff\xc2\x3e\x98\xf8\x55\x9c\x22\x95\x86\x2c\xc8\x0a\xbd\xee\x8b\x86\x41\x44\x41\xae\xfb\x92\xa1\x06\xbc\x40\x7f\x50\x0b\xe2\x7d\x79\x43\x26\xa4\x0e\x79\x1d\x8c\x76\x5f\x41\xd0\x09\x13\x82\xf7\x15\x02\xbb\x43\xde\x10\xb5\x91\x50\x8b\xc7\x39\x40\xcf\xb9\xe4\xeb\x20\x44\x7d\x3d\xaf\xfe\x65\x19\xb8\x59\x32\xc8\x1e\x8e\x44\x6f\x60\xcb\xfb\xea\x0e\x87\x12\x73\x57\xeb\x3e\x1c\x0a\xdb\xe1\x0b\x32\x5b\xdb\xe2\x18\x9b\x3b\xd8\xa6\x03\x11\x20\x67\xcb\x43\x3a\x64\xaf\x14\x82\x1f\xaa\x43\xac\xb6\x53\x6d\xe6\x74\x90\xf3\xa8\x1d\x8c\xfc\xf1\x38\x3d\xea\xf4\x8c\x63\x73\xf8\xdc\x44\xa2\xf7\x8d\x85\x39\xaf\x0f\xa5\x81\xf9\xf5\x1b\x57\xf3\xd7\x96\xe0\xf3\x1f\x38\x98\x0d\xd6\x3e\xcf\x77\xdb\x8f\xfd\xf4\x6a\x37\x83\xd8\x57\x7b\xd2\xdf\x42\x42\x16\x6b\x8a\x8c\x5c\xc7\x66\xf6\x09\x98\xee\x60\x39\x52\x27\xed\xe4\x5c\x5c\x84\x4c\x4f\xfa\xd0\x59\x58\xd3\x3d\x0b\xff\xaf\x24\xd4\x06\xa8\xfe\x16\x0a\xd1\xc0\x71\x30\x73\xa3\xc0\xd6\x36\x3b\x42\xf7\x5f\x00\x00\x00\xff\xff\xb5\xa0\x27\x16\x34\x03\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 820, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x4d\x92\x85\x20\x0c\x04\xe0\xbd\x77\x79\x5d\x74\xfe\x08\xc5\xfd\xef\x35\x05\x33\xf3\x24\xec\xfc\x12\xbb\x94\x56\x2a\xd8\x3a\x0c\xde\xe6\x23\x0b\x0a\xe6\x00\xc5\x2f\x47\xb5\xf7\xcb\x39\x9f\x70\xb8\x83\x9a\x68\x9f\xf7\x5a\xdc\xbf\xab\xd0\x77\x15\x7a\xae\xc4\x04\xe2\x36\x1f\x2a\x21\xae\xa0\x81\xae\xcb\x06\xf6\x06\x27\xda\xe7\xc0\xce\x7e\xad\x90\x51\xa8\xed\x60\x9e\xd1\xac\x51\xd2\xe1\x51\x1d\xed\xb2\x1c\x8e\xf5\xb2\x79\x0f\xc6\x35\x70\xde\x83\x75\x16\xef\xbf\x67\x6d\xc8\x51\xb8\xfb\x3d\x2c\xd2\xfe\x1c\xe8\x7d\xf5\x58\x39\x0a\xad\xde\x6c\xac\xac\x59\x7b\xb3\x23\xb0\x2b\x7f\x95\xa7\x28\x5a\xb8\xbe\x39\x07\x21\x2a\xc8\xd5\x72\xe1\x2e\xed\xa0\xfc\xd3\xd0\x05\x4c\xbd\x9c\xf3\x91\xf5\xeb\x05\x48\xdb\x4f\x3e\x18\x9c\x3f\x01\x00\x00\xff\xff\xdf\x1e\xe7\xc0\x9b\x02\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 667, mode: os.FileMode(438), modTime: time.Unix(1495898224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\x1b\x27\xee\x76\x7d\x6d\x2f\x85\xed\x36\x10\x96\x1c\x4a\x0f\x8a\x2c\x3b\xa2\xb6\x46\x68\xe4\x3c\x58\xf2\xdd\x17\x29\x89\x1f\xd0\x43\x11\x86\x99\x9f\x66\xfe\xf3\x90\xff\x4d\x00\xd8\x5e\x39\xd2\x68\x58\x0e\x6c\xc9\x17\xfc\x9e\xdd\x05\x5a\xa8\x6d\x5b\xb1\x1c\x4a\x51\x93\x8a\xc4\x3a\x3c\xea\x52\x2b\xc7\x72\x08\x89\x00\xac\xc6\x6a\x25\xfc\x2e\xa4\x3e\xe5\xc9\x5f\x52\x8e\x92\xf7\x96\x94\x33\xa2\x51\x1f\xc9\x33\xca\xb6\x51\xc6\x53\xb2\xba\xe5\x26\xbf\xb1\xe2\xfe\xe8\xd9\x04\xe0\x1c\x65\xe9\x44\x4d\xac\x7e\xd5\x54\x7b\x7f\x1c\x88\x6e\x5e\xfe\x3c\xbf\x6d\xd6\x09\x9d\xc8\xab\x66\x91\x26\x07\x6d\xd4\xde\x07\x1d\x4a\x5e\xb5\x74\x48\x58\xfa\xd9\x46\x9b\x02\x0f\x34\x5b\x47\xb5\x1f\xcb\x37\xab\x9c\xf0\x1a\x8d\xa8\x79\x50\xec\xeb\x1d\xb4\x53\xb4\x13\xee\xb3\x2f\x69\xa5\xb0\xe6\x9b\x93\x6c\x6e\xe9\x89\x14\x96\x5f\x32\xe3\xc6\x00\x98\x14\xd6\xb7\x4e\x75\xc2\x00\x4c\x1b\xaf\x5c\x29\x64\x80\xf3\xbb\x1b\x2d\x75\xed\xe3\x1e\x99\x41\x0f\xc2\x59\x10\xa6\x00\x8b\xce\x43\x00\xd9\x22\xfa\xc1\xd4\xb2\xb1\x23\xe7\xa1\xf3\xb6\x0e\x45\x21\x05\xc5\x5d\x02\x9c\xbb\x09\xd5\x51\xd6\x6d\xd1\xb7\xc1\xb4\x25\x96\xc3\xfb\xad\xfa\x3d\x8f\x87\x75\xed\xcc\xd3\x9f\x11\xcd\x07\xe8\x57\xca\xe7\x0f\x8f\x01\xcf\x7a\x3b\xcd\xb2\x3e\xe4\x91\xc7\x33\x06\x4b\xbe\xec\x41\x9a\x65\x7c\xf0\x5d\xfa\xfc\xb8\x2e\x6b\x87\xe4\x47\x6d\xbd\x9e\x9e\xb0\xb1\x6d\x58\x4c\xa7\x50\xa3\x14\x75\x88\xfc\x02\xf1\x68\x15\xd8\x08\x6d\xfa\xeb\xe9\x05\xf7\xe0\x84\xad\x7b\x59\xaf\xb8\xc4\x66\x18\xf5\x25\xee\xfe\x0d\x8e\xae\x1a\x46\x8f\x2f\x46\x73\xa0\xab\x46\x63\x4c\xc3\x6b\x6f\x11\x3f\xa7\xd7\xb8\xf0\x2e\x93\xf3\xe4\x7f\x00\x00\x00\xff\xff\x28\xab\xe9\xd6\x6c\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 876, mode: os.FileMode(438), modTime: time.Unix(1495981334, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

