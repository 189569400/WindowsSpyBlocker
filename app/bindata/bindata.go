// Code generated by go-bindata.
// sources:
// app/settings.json
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x7d\x6f\xdb\xba\xf5\xfe\xbf\x9f\x82\x3f\x15\x06\xee\x0d\x7e\xa2\x6c\xa7\x71\x3b\xaf\x2f\xe8\x92\x6e\x0b\xd0\x97\x20\xee\x1a\x0c\xe3\x70\x41\x8b\xc7\x36\x6f\x24\x92\x97\x87\xb2\xec\x3b\xf4\xbb\x0f\xa4\x6c\x4b\xb2\xa5\x24\xbd\x18\xe0\xc0\xd1\x39\x0f\x9f\xf3\x9c\x17\x91\xf4\x7f\x9e\x11\x12\x15\x56\x62\x34\x25\xfe\x7f\x42\xa2\x8c\x3b\x40\xf7\x0d\x2c\x4a\xad\xa2\x29\x89\x56\xce\x19\x9c\x26\x89\xe5\x25\x5d\x4a\xb7\x2a\xe6\x05\x82\x4d\xb5\x72\xa0\x1c\x4d\x75\x9e\x94\xf2\x5e\x26\xa9\xe5\xbf\x6f\xe3\x9c\x6f\x92\x3b\xa9\x84\x2e\x71\x66\xb6\x7f\xc9\x74\x7a\x0f\x36\xa9\x38\xa3\xff\xaf\x22\xb8\x95\x05\xee\x52\xab\x4b\xd1\xe4\x2f\xcb\x92\x36\x5c\x54\xdb\x65\x82\xc0\x6d\xba\x7a\x6f\x64\xb2\x1e\x27\x03\x4c\x2c\x18\x6d\x5d\xf2\x6e\x80\x6f\x06\xb8\xe7\x2b\x57\xdc\x85\x0c\x02\x95\x67\x0a\x86\x7c\x2b\x0d\x17\xc2\x02\x62\x50\x29\x4d\xb2\x5f\x21\x14\xfe\x56\x80\xdd\x36\xc3\xef\x6d\x21\x6e\xb9\xd2\x12\x0f\x70\x69\xb8\x91\x0d\x7e\x69\x62\x6e\x64\x20\xfd\x15\xb5\x6a\xe0\xa4\x5a\xe8\x16\xd0\x1b\xa8\xd4\x5e\xbb\x87\xd6\x48\xb5\x68\x06\x97\x86\xaa\x45\x32\x40\x1a\x40\xcf\x08\xf9\xee\x81\x51\x26\xe7\x8d\xce\x94\xd2\x02\xae\xb8\xbd\x3f\x98\x42\xf3\xb2\x56\x16\x19\x9d\x4b\xe5\x2c\xdf\x06\x79\xa1\x29\x89\xd3\x3a\xc3\xe4\x6e\xbf\xfc\xa3\x74\x10\x8f\xe9\x98\x4e\xe8\xef\xd2\xec\x24\x11\x12\xa5\x2b\x48\xef\x17\x32\x03\x4f\x78\x08\xc6\x98\x0b\xdf\x14\x36\x10\x05\xe8\xf7\x5d\x12\xca\xa4\xdc\xfc\x31\x2d\x61\x69\x3c\xa4\xaf\x26\x81\xb6\x5b\xc2\xe5\x94\xb1\xdd\x2c\x31\x36\xdb\xa2\x83\xfc\x7c\xcc\xd8\x67\xbf\x96\xb1\xd2\x7f\x51\x91\x65\x6d\x51\xb8\xc5\x3c\xcc\xed\x1f\x50\x35\x0b\x6b\xe3\x73\x3a\x1a\x3e\x50\x99\x2a\x42\x50\x94\x6b\xd5\x28\xcb\xa1\x6d\x82\x3b\xfe\xd5\x64\x75\xe7\x84\xc2\xd4\x6e\x8d\x6b\xca\x5a\x01\x0f\xe3\x5f\x47\x59\xf3\xac\x08\x11\x06\xd8\xce\x49\x1b\x50\xa5\x6d\xad\x96\xcd\xc2\x37\xd8\x9e\x3f\x7f\x4e\x76\x70\x32\x40\xff\xf9\x29\x01\x97\x26\x0b\x69\xa1\xe4\x59\x46\xfd\xbb\xfb\x33\x53\x1e\xf7\x49\x5b\x20\x7e\x40\xa7\x64\x80\x4c\x31\xf5\x9c\x80\x5a\x68\x9b\x02\xb1\xba\x70\x60\xc9\xd5\xe7\x19\x53\xd2\x38\x3e\xcf\x00\x49\xec\x88\xe2\x8e\xc4\xd7\xe4\xe6\xf6\xc3\xed\x97\x7f\x7c\xbd\xfe\xfc\x37\x12\x1b\xe2\x52\x43\xe2\x58\xf8\x37\x93\x5c\x9c\x93\xf8\x57\x72\xfb\xe1\xea\xfa\xf6\xc3\xe5\x57\x12\xc7\x4e\xc7\xde\x81\xe4\xe2\xfc\x09\x54\x85\x78\x2a\x95\x57\x6b\x8b\x0c\x90\xa9\x43\x05\x9b\x35\xac\x43\x5d\x93\xbf\x7e\xb9\xbd\x7b\x7f\x7b\xe5\xe9\xae\x6e\xbf\xdc\x90\x58\x90\x7d\x89\x0f\x45\xf6\x5d\xd2\x39\x97\x0a\x7f\xac\xb0\x42\x61\xce\xf1\x37\x9a\x6a\xb5\xe8\xab\x6b\xa7\x40\x04\xbb\x06\xfb\xc6\xef\x0c\x07\x29\xad\xae\x9b\xb1\xe9\x9a\x17\x1f\xe1\x64\x87\x25\x66\x6c\x2a\x59\x8f\x49\xa8\x05\x9c\x90\x4c\x8f\xe7\xce\x58\xbd\x91\x0b\x09\xf6\x29\x93\xd7\x99\xe4\x00\xff\xfc\x83\x75\x7e\x94\xa6\xfd\xb6\xcb\xdc\x64\x61\xb0\xbb\x4a\xf5\xfa\xff\xe2\xb8\xa3\x56\x55\xfb\xe2\xf8\x2d\x53\x01\x31\xd3\x85\x4d\x61\xda\x36\x7e\xe4\xe8\xe2\x4f\x5a\xf8\xfc\x45\xed\x63\xea\xf5\xbb\x4d\x9e\x91\x75\x75\x3e\xbe\x61\xd1\x88\x0e\x59\xf4\xce\x2f\xb3\x5a\xbb\xb7\x9d\xa5\x66\xee\xb5\x74\x90\x13\xc5\x73\x78\xc3\xa2\x01\xfe\x12\x3e\x2c\x0a\x23\x1c\x2c\x2c\x22\x42\xda\x37\x2c\x1a\xb2\x88\x18\xab\x9d\x4e\x75\xb6\x7b\xac\x83\xf9\x27\x89\xbf\xcc\x7d\x26\x3e\x76\xf5\x08\xca\x8f\xba\xd8\x19\x92\xb7\xc7\xfb\xd1\x69\x1f\xa3\x42\xad\x79\x26\xc5\x47\xa9\xc0\x37\xe2\x5f\x7b\xc9\x77\x90\xa5\x3a\x07\xe2\x34\xb9\x39\xac\x3a\x24\x74\x63\xb5\xdf\x05\xc9\xa9\x05\xf9\x1a\x04\xe1\x58\x7b\x3e\xea\x25\x09\xae\x9d\xba\xda\xf3\xd5\xf2\xc5\x42\xa6\x24\xd3\xcb\x7e\x67\x58\x2a\x24\x1e\xb9\xbf\x81\x9d\x6b\x04\xa2\x0b\x67\x0a\x77\xba\xdc\x47\xbd\x92\x16\x52\xa7\xed\x96\x48\x24\x08\x8e\x38\xdd\x04\xa4\x3c\x23\x97\x9f\xbe\xcc\xc8\xa5\xaf\x62\xed\x79\x5f\x38\x9d\x73\x27\x53\xbf\xed\x91\x5c\x0b\x20\x02\x1c\xa4\x4e\xea\x46\x4f\x7f\xba\xbe\x59\x4f\x7e\xae\x9f\x31\x0c\x0f\x41\x3f\x5a\x8e\x28\xed\xc8\x42\x17\xaa\xa1\xe8\x52\x2b\x55\x91\x20\x11\x3a\x20\xb4\x95\x4b\xa9\xb8\x03\xb2\xb0\x3a\x27\x6e\x05\x84\x1b\x93\xc9\x94\x07\x58\xd5\xbe\x7f\x1f\xda\x77\x74\xa4\x45\xb0\x76\x9b\x1b\xee\x56\x27\x67\x24\x6e\x51\x71\x27\xd7\xc0\x58\x29\x15\xac\x1d\x63\x1f\xf5\x12\x19\xfb\x24\x53\xab\x51\x2f\x5c\xbc\xc3\xc6\xd5\xe1\x35\x78\xf1\xc5\x80\x0d\x51\x79\x46\x3d\x6f\x7d\xf7\x50\x29\xca\x3a\xa6\x85\x65\xf3\x0d\xbb\x87\x70\x77\x9a\xfd\x73\xf6\xf5\xc3\x27\xc6\x2e\x0b\x6b\x41\xb9\x4b\xad\x9c\xd5\xd9\x0c\x1c\x63\x33\xb0\x6b\x99\x02\x32\xf6\x39\xe3\xb3\x75\xca\xd8\x0d\xb7\x3c\x07\x07\x16\x19\xbb\x56\x0e\xac\x02\x57\x97\xa9\x84\xf9\x8d\xd5\x73\xf8\xbb\x46\x7f\xd0\x45\xef\x53\x9f\xc8\x5d\xd3\x7a\x82\xdd\x17\xa1\x8d\x0d\xd6\x13\xec\x65\x75\x5f\x3d\x85\xef\x1d\x9d\x4a\xbe\x4d\xba\xb5\x7c\x9b\x74\xab\xe9\xc2\xef\xec\x7d\x8a\xba\x96\xd4\xae\x7a\xd3\x54\xd8\x51\x9f\xab\xa6\xf5\x04\x7b\x92\xf3\xd5\x91\xa3\x93\xbd\x29\xe8\xaa\x6d\xef\x8b\xd0\xb5\xa4\x76\x1d\x9f\x29\x73\x68\xee\xfd\x51\xbe\x1f\xce\xf6\x81\x50\xc2\x3c\x44\x7d\x11\x6e\xa3\x65\x49\x73\x5c\x38\x3f\x94\xfe\xda\xd6\x3c\x25\x7c\x3d\x7d\x89\x03\x30\x00\xdc\xc6\x1d\x01\xf6\x62\x02\xe6\xf0\x36\x90\xcf\x97\xb3\xeb\x23\x64\x5d\x01\x69\xd6\x93\x47\x83\x4e\x9e\x10\x74\xf2\x70\x50\xa1\xb0\x4e\x54\x28\xec\x8d\x29\x14\xb6\xf2\x18\x9d\x8f\xe8\x68\xf8\x92\x8e\x2f\x2e\xfc\x5f\x17\xe7\xe4\x07\x38\x03\x76\x21\xce\x61\xfa\x62\x71\xc1\xa7\x17\xf3\x57\xa3\xe9\x74\x74\x7a\x7c\x97\x38\x7f\xa0\x53\xbd\xbf\x12\x7b\x5b\xf6\xd0\x0f\xc7\x9c\xa3\x03\x9b\xf8\x0b\x75\xe2\xe5\x27\x4f\xe9\xef\x09\x4d\x6f\x8b\x7f\x48\xec\xe4\x7f\x2d\x76\xf2\xa8\xd8\xd6\x68\x28\x1c\x51\x33\x9a\x50\xb1\xf5\xe7\x09\x6d\xee\x9e\x1d\xc3\x31\x1e\xbe\xa2\x2f\x5f\xd1\x97\x43\x3a\x9a\xf4\x4e\xc6\x93\x29\x27\x15\xe5\x70\x34\xbd\x18\x0e\xa7\x7f\x1a\x4e\xfd\x68\x4c\x8e\xee\x64\x87\xa3\xa3\x94\x59\xca\xad\x98\x15\xf3\xfa\xaa\x57\xdd\x30\xa2\x33\x3a\xce\x85\x6a\x44\x8a\xce\x28\x8f\x73\x04\xb1\x84\x23\xab\x50\xb0\x29\xf0\xc4\xb8\xc1\x46\x83\x82\x09\xcf\x68\x8e\x5c\x9c\x40\x83\x5d\x1d\xa1\xf3\x60\x85\xf4\x58\x83\x31\xb0\x89\xed\xa2\x63\x85\x13\xb9\x6b\x9b\x44\xda\xa9\x58\x40\x26\xd7\x60\xb7\x54\xa0\xa1\xb9\xa1\x87\x8d\xcd\xaf\xa6\x0a\xb9\x4b\x7b\x16\x1c\x83\x6b\xc8\x32\x9b\x0b\x85\xe3\x3e\x77\xa6\xab\x3b\x03\xf5\x44\x6d\xf2\x1c\x10\x41\x2d\xc1\x56\xbe\xd6\xb2\x03\x5b\x59\x4d\x5f\x61\x04\x77\xc7\xeb\x3b\x32\xec\xd8\x45\xa2\x33\x6a\xb9\xe8\x88\xe1\xad\x27\xc5\xb4\xbe\x4d\x27\x56\xdc\xdd\x15\xaa\x2e\xf8\x9f\xe7\xcb\x1e\x00\xea\x54\xf2\xac\xaf\x1a\x98\x73\xeb\x30\xb5\x00\xaa\x0f\xe2\x20\x83\x1c\x9c\xdd\x36\x63\xb5\x72\xac\x11\x8f\x52\x3c\xda\xe0\x1a\x5a\x58\xec\xe5\x93\x19\xf4\x66\xee\xaa\xeb\x70\xce\x15\xf7\xad\x6c\xb1\xef\xba\xd6\x43\xdb\xe5\xa5\xfc\x9e\xfb\xd3\xa0\x45\xb3\x96\xd6\x15\x3c\x03\x6e\xdd\xea\xc8\xa3\xab\x57\x45\x1c\x9b\xad\x83\xcd\x19\xf5\x1b\x1d\xf5\xe9\xed\xe7\xaf\xa7\x0a\x6d\x7c\xb7\xda\x0a\xf3\x20\xa4\x04\xee\x56\x60\x7b\xdd\xad\x51\x7e\xc0\xa5\xed\xf2\xd8\xd5\xe9\xe9\x6d\xd8\x66\xae\x37\xc7\xf3\xce\xad\xe5\xdb\xb3\xd8\x58\x2d\xa8\xd0\x9d\x3b\xc0\x1e\x5a\xa5\x1a\x9f\x3d\x50\xba\x67\xfe\xfa\xff\xfd\xd9\x7f\x03\x00\x00\xff\xff\xd3\xae\x49\x3d\x9e\x15\x00\x00")

func appSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_appSettingsJson,
		"app/settings.json",
	)
}

func appSettingsJson() (*asset, error) {
	bytes, err := appSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/settings.json", size: 5534, mode: os.FileMode(438), modTime: time.Unix(1508888955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xd1\x72\xe3\x30\x08\x7c\xef\xa7\x74\xc6\x3c\xf4\x8f\x54\x84\x65\x26\x16\xe8\x04\x89\x93\xfb\xfa\x1b\xd9\x4e\x1c\xab\xd7\xc7\xec\xb2\x88\xcd\x82\x3f\xe1\x2b\x47\x01\x21\xff\xf8\x84\x4c\x66\x24\x89\x2a\xcc\x7c\x23\x40\xcd\x0d\x34\x8a\x89\x9e\x15\x36\xba\xa0\xf1\xce\x59\x0e\xd5\x0d\x2b\x91\x40\x66\xac\x6a\x3a\xfa\xce\xdd\xb4\x49\x51\xe2\x2e\x5d\x28\xf8\x44\xf5\x47\xdd\xfd\x5b\xef\xaf\xe7\x82\xd8\x42\xd5\xba\xa2\x50\x8a\x81\x5d\x1e\x65\x2b\xc2\x20\xf1\x81\xf5\x6a\x93\x69\x0c\x70\x61\x49\x1b\x1e\x05\x50\xc5\x49\x1c\x4a\xd5\x08\x98\x0d\xb2\xc9\x8b\x54\x21\x51\xdf\xbc\xe0\xa4\x8c\xd4\x3d\xf4\x3f\x10\xc4\x82\xe3\xa6\x99\xb9\xf5\x5e\xc4\x60\x61\x89\xba\xd8\xa6\x5a\x61\x54\x19\x39\x41\x09\x66\x45\xab\xaf\x82\x48\x65\xd6\x07\x98\x07\x67\x84\x70\x09\x39\xb0\x13\x4e\xa2\xb3\x26\xa6\x4d\x1e\x73\x84\x4c\x1e\x8c\xea\x8d\x91\x7a\xf3\x23\x51\xfc\x0e\x78\x39\xe0\x61\xd2\x29\x9f\x39\xa3\x50\x71\xfa\x4d\xf9\x3e\x6c\x3a\xb2\x65\xc2\xdb\xcc\xe6\x9d\x8c\x73\x1a\x6c\xc8\x26\x43\x73\xbf\x0d\xfd\x97\xb6\x18\x59\x8c\x23\xd5\xd2\x92\x98\xf5\x1a\x43\x29\xef\xf8\x6e\xa1\x6b\x38\x33\x92\x58\x4b\x29\x97\x9e\xd2\xc4\x72\x4c\x94\x61\x52\xcf\x81\xe7\xed\x17\x45\x0e\x95\x22\x57\xc2\x7e\xc8\xd3\x22\xea\x38\x32\xd2\x9e\xce\xb9\x4e\xe5\x89\xdb\x78\x87\x6c\x1f\xa5\x32\xd2\xea\xfa\x58\xa8\xe2\x0c\xe6\x5a\xfb\xc1\xff\x5c\xa9\x3e\x8e\x55\xaa\x7d\xf3\x4a\x89\xcd\xa9\x02\xc6\x82\x7d\x6e\xcf\x48\xf6\xfd\x6b\xfd\x43\xa2\xc3\xeb\xfa\xe0\xc0\x39\x24\x32\xb0\xa1\x13\x37\xb2\xdd\xdd\x18\x21\xda\xfd\xe7\x1f\x67\xd7\xb2\x6e\xd9\x19\x75\xce\x74\x4a\xdb\x2f\x5f\x50\x66\x7f\x4d\x71\xe5\x37\xdb\x4b\xc4\xbe\x6d\x83\xc2\xdc\xb7\x5d\xac\x9d\x15\xac\x67\xd8\x31\xcb\xb2\x7e\x13\x50\x45\x08\xdd\xc9\x56\xfc\x5f\x00\x00\x00\xff\xff\x8c\x45\x8f\xa0\x56\x04\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 1110, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9b\xef\x92\xab\x2e\x0f\xc7\xdf\xff\x2e\xe5\xcc\xd4\x21\xa0\x56\x2f\x87\x2a\xdb\x3a\x6b\xd5\x47\x6c\x7b\x7a\xf7\xcf\x60\xbb\x2d\xd4\xec\x37\x67\x5f\x6d\xf9\xf0\x27\x24\x40\x02\xc2\x9f\xcc\xee\xce\xde\xb5\x47\x97\x0d\x6e\xf9\xef\x4f\x66\xdb\xe1\xaf\xcf\x9a\xf1\xbc\xfe\xef\xff\x64\x67\x6f\x5b\xff\x82\x6b\xc2\xf0\xc3\xcf\xeb\x4f\xd7\x0c\x3f\x7c\x69\xcf\xcb\x13\xb6\x4d\x5a\xf1\xb1\x3f\xb4\x83\xd7\xd9\xb9\x6b\xe6\xd1\x8f\x5f\x3f\xf9\xfa\xb1\xb1\x4b\x37\x0e\x59\xdf\x5d\x7f\xf2\x26\x05\x67\xdb\x46\x6d\xce\x41\x9a\xf7\x4f\xef\xe6\x6b\xd7\x38\x9f\xf9\xb1\xe9\x6c\xbf\xa9\x7d\x71\xbd\x3b\xbb\x65\xbe\x6f\xc9\x6c\xbf\xbe\xba\xe6\x6c\x07\x7b\x74\xf3\xb3\xad\x6b\x37\x2f\x17\xdb\x3b\x3b\x2f\xa7\x9f\xa4\x71\x5e\xdc\xdf\x3f\x59\x6b\x17\x9b\x85\xaa\x7e\x44\x6d\xc6\x73\x36\x78\xbb\x34\x6c\xc6\x8f\xd6\x1e\x90\x63\x89\xfe\x6d\x63\x5e\x9d\xb3\xcd\xd2\x5d\xbb\xe5\x9e\xdd\xba\xa1\x1d\x6f\x0f\xa3\xd8\x76\x70\x7f\x2f\x0f\x7b\xbc\x4d\x15\xeb\xc4\xb6\x9e\x22\xa3\x3d\x7f\x3e\xd9\xb7\xdd\x35\xed\xb0\x1b\x7c\x66\xdb\xc5\x35\xa7\xac\x75\xff\xd9\x79\xb6\xf7\x3f\xbb\x69\x1e\xdb\xac\x1d\xb3\xd6\x4f\xd9\x79\xfa\x10\xf2\xd0\x0d\xc7\xb5\x91\x34\xb5\x37\x46\xd1\xce\x66\xd4\xce\xd7\x38\xa5\xd9\xa4\x1c\xa3\x94\x81\x8c\xca\x77\xee\x23\xa5\x4c\xea\x79\xa4\x6c\xf3\x24\xf5\xe8\xc3\xae\x19\x67\xa5\x28\xb3\x53\x97\x4d\xe1\x1f\x86\x6a\x48\x0d\xa4\x39\x4f\x6f\x83\xa7\xec\x36\xf8\xc4\x34\x87\xc1\x4c\x48\x1e\xe3\x9b\x93\xd2\x4a\x91\x2a\x8a\x8a\x2b\xfd\xe6\xa5\x82\xbc\x24\x5c\xbe\xd4\x35\xe6\x86\x95\x3e\xe2\x85\xc0\x4b\xcc\x0b\x28\x3f\xed\xf5\x1e\x71\x5d\xc1\xf2\x5a\x19\xad\x21\xdf\xe7\xa8\xff\x5a\x1b\x8d\xf4\xa7\xb5\x81\xfd\xd7\xda\x94\x9c\xfe\x72\xdf\x9c\x48\x11\x69\x55\x51\x2e\x70\xae\xfd\x37\xaf\x09\xd7\x5f\x93\x41\x9c\x14\x71\xfd\x7f\x73\x52\x02\xc7\xf2\x91\xd6\xb8\xfd\x5c\x71\xf6\x7d\x73\x7e\xfc\xbe\xf9\x5e\x41\xfd\xd1\x5e\x90\x7f\x8f\xf5\x4f\xb5\x82\xed\x6b\x22\x28\xbf\x36\xc4\x8d\xcf\x98\x73\xe3\xf3\xcd\x73\x0d\xed\x6b\x08\xcb\x67\x08\xb7\x6f\xb4\xfa\xbd\xfd\x60\x7d\xd2\x8c\x7e\xfc\xc3\x97\x0e\xc7\x9d\xbf\x3f\x93\xee\x9b\xe5\xfd\xbe\x59\xde\x1f\x29\xd1\x42\xdd\xbc\xbc\x4d\x63\x9b\x93\x5b\x5d\xde\xd9\xce\x4b\xd2\x5a\xd3\x7a\xd2\x2a\xcf\xfa\xe0\x4c\xfb\xe1\xb6\xba\xaa\x35\xb1\xaa\x99\xc4\xda\x6c\x13\x8d\xde\x6f\x12\xb5\xca\x69\x9f\xf5\xcd\xfd\x33\xd5\x10\x97\x5a\x28\x36\x95\xad\x61\x5f\x6c\x53\x49\xe7\xdb\x2e\xe8\xba\xde\xe4\xcc\xd5\xb6\x74\xae\x99\xb4\x82\x29\x5b\xe7\x9b\xb4\xba\x2c\x3e\xda\x3d\xd1\xef\xae\xe7\x05\x39\x4f\xd8\x9c\x3e\x4d\xfa\x4c\x71\x9b\x94\xe3\x47\x8a\xde\x94\xd2\x49\xa9\xf1\x3c\xd9\xc5\xfd\x6d\x4e\x76\x38\xba\xac\xe9\xc7\x4b\x6b\xa7\xe9\x21\xef\x38\x2c\xdd\x70\xb9\x9c\xb3\x76\x13\x55\x34\xe3\x3c\x65\x7e\xd9\x24\x4f\xa4\x08\x47\x29\xcd\xa4\xe5\x2c\xb9\x98\x25\xf8\xf6\xa9\xc9\xae\xaa\x69\x1f\x81\x6d\x7b\x30\xb7\xc1\x6b\x45\xe1\x6f\x33\x73\xda\xc3\xd6\x5b\xb4\x87\xe2\x39\x1b\x83\x3f\xdb\xce\xc6\x94\x6f\x57\x9b\x98\x57\x8c\xb7\x4e\x39\x6e\xbf\x66\x56\xb3\x84\x6b\xa1\x3c\xe3\x2d\x13\x6e\x20\x0f\x3d\xc4\x1c\xeb\x87\x14\xb3\x5a\x25\x1c\xeb\x87\x94\x11\xca\xe7\x42\xfb\x39\x2e\x2f\xd8\x37\x2c\xc8\x02\x87\xfa\x27\xc2\xfa\x27\x62\xa2\xbd\x84\x1b\xa1\xfd\x1c\xb7\xaf\x19\x6f\x9b\x70\xc6\x9b\xa5\x1c\xcb\xaf\x05\xfb\x69\x03\xc7\x2f\x19\x3c\xbe\xc9\x08\xe3\xc7\x08\xfa\x33\x82\xfe\x8c\x30\xbe\x8c\x30\x3f\x72\x26\x5a\x4b\xb8\x20\x7f\xae\xb7\xd1\x78\xca\xb1\x7e\x72\xb3\x8d\x26\x12\x2e\x8c\x8f\x82\x5f\x13\x23\x8e\xfb\x57\x08\xfa\x2f\xf0\xfa\x46\x45\x2e\xb4\x9f\x63\xfb\x95\x4c\xb4\x95\x70\x26\x5a\x4d\xb8\x20\x3f\xb7\xdb\x4a\xb9\x20\x5f\x8e\xed\xb3\x17\xf4\xbf\x17\xd6\xa7\xbd\xc1\xf2\xef\x05\xfb\x57\xcc\x6e\x24\xe1\x1a\xcb\x5f\x09\xe3\xb7\x12\xd6\x0f\xc1\xff\x51\x25\xac\x1f\x95\xb0\xbe\xd7\x4c\x34\x9d\x72\x5c\x7f\xcd\x44\xeb\x29\x17\xda\x17\xc6\x57\x2d\xd8\xaf\xc6\xf3\x43\x2b\x82\xfa\xd3\x0a\xaf\xaf\x9a\xdb\x6d\x26\x1c\xfb\x3f\xad\xb0\xff\x0b\xdb\x7d\x81\xa3\xfa\x83\x03\x47\xe3\x27\x70\x24\xff\xea\x20\x31\x87\xe3\x6f\x5d\x80\x21\xd7\xcc\x6e\x37\xe5\x68\x7e\x84\x1d\x9d\x50\x1e\xea\x97\x94\x86\xfa\x0d\xe1\x17\x2e\x6f\xe0\xf8\x21\x65\xa0\xfd\x03\x97\xca\x63\xfb\x19\xb8\xbe\x86\xf0\x4f\xe2\x82\x7c\x42\xff\x73\x85\xcb\x63\xff\x1e\xc2\x4f\xdc\xbf\x5c\x18\x5f\x39\x8c\x2f\x42\xf8\x8a\xed\x5b\xc0\xf8\x9c\x54\x01\xd7\xaf\xc0\x71\xfb\x05\x8c\x3f\x48\x15\xc2\xfc\xc5\xfe\x97\x54\x09\xe3\xcf\xc0\x71\xff\x4b\x18\x5f\x05\x8e\xe7\x5f\x09\xe3\x3f\x52\x7b\x85\xed\xb7\x87\xfe\x93\xd4\x5e\x90\x6f\x0f\xfd\x03\xa9\x3d\x8c\x1f\x48\x55\x82\x7d\x2b\xc2\xfd\xaf\x04\xfd\x57\x82\xfe\x2b\x61\xfe\x63\xff\x1f\x38\xee\x3f\xde\x3f\x93\xb0\x7f\x26\x55\x0b\xf3\xb7\x16\xfa\x5f\x0b\xeb\x1f\xf2\xef\x46\x55\xc4\x9d\x26\xc7\x9c\x3b\x0d\x8e\xb8\x56\x20\x3e\x0c\xfc\x97\x33\x8d\x17\x37\xc0\x7f\x06\x9e\x03\xff\xf4\xe0\xb0\x7f\xba\x94\xb8\x20\x1f\x77\x1a\x9c\x70\xe6\x34\x36\xe6\x15\x94\xbf\x56\x04\xfc\x5b\xe0\x1a\xcc\x9f\xc0\x73\x68\xbf\xc0\x71\xfd\x05\xb4\x6f\xe0\xb8\x3c\xda\xdf\x04\x2e\xf5\x1f\x8f\xbf\x3a\xb4\x80\x38\xe1\xf1\x17\x38\xb2\x4f\x1d\x56\x58\x81\xc3\xfe\x91\x16\xea\x37\x82\x7c\x06\xeb\x9f\x04\xfb\xc2\xfd\x71\xe0\x78\xfc\xd7\x54\x82\xf8\x3b\xf0\x3d\xb6\x3f\x55\x42\x79\xee\x6b\x48\xc2\xb1\xfc\x5a\xe1\xf1\xaf\x05\xfb\x68\x14\x7f\x07\x8e\xce\x9f\x56\x2e\xb4\x5f\xa0\xf2\xb4\x7e\x8f\xc4\x1c\xac\xef\x81\xa3\xf3\xaf\xc0\xe1\xf8\x59\x39\x18\x3f\xa4\x54\x8e\xc6\x2f\x29\x18\x9f\x3d\x38\x96\x0f\xae\xaf\xa4\x14\x5c\x3f\xd7\x2d\x18\x18\x7f\xeb\xf9\x21\xb0\x7f\xe0\x42\xfd\x82\x7e\x28\xc7\xf2\x53\x8e\xf5\x4f\x70\x7d\x5d\xcf\x7f\xa0\x7e\x49\xd0\x1f\xa1\xf8\xcf\x08\xe7\x37\x46\x38\x5f\x31\xeb\xf9\x03\x1c\xdf\xf0\x7c\xc1\x84\xed\x25\x2e\xaf\x09\xdb\x47\x6b\xb0\xff\x79\x70\x5c\x3f\xf7\x35\x35\xe6\x39\xd8\x1f\xaf\x5c\x28\x0f\xd7\xd7\xc0\x85\xf2\x7b\x91\x43\xfb\xe9\x8a\xb7\xff\x6d\xf0\xd4\x32\xa0\x5c\x0b\xea\x10\x78\xb0\x1d\x8f\x39\xd7\xb1\x88\xb3\x86\x8b\x39\xe7\x58\x23\xce\x06\xee\x6f\xce\x1b\x3e\xe6\xb8\x7e\x7e\x61\x88\x39\xee\x1f\xbf\xf0\xc7\x9c\x33\x4c\xcc\x71\xff\x0c\x6b\xb8\x98\xe3\xfe\xf1\x81\x73\xc4\x05\xf9\x78\xc7\xf1\xe6\xfc\xc0\x8f\x39\xee\x5f\x21\x8c\x2f\xde\xb1\xc4\x5c\xa8\x5f\x90\xbf\x60\x17\xa6\x98\x63\xfb\x97\x42\xfd\xa5\x50\x9e\xdf\xf8\xc6\x1c\xdb\x87\x3f\x18\x8e\x39\x1e\x3f\xfc\xc1\x71\xcc\xf1\xf8\xe1\x0f\x96\x63\x0e\xe5\x0f\xa1\x87\xc0\xa1\x7c\xa4\xb0\x7c\xc4\x3b\x96\x88\x0b\xf2\x91\x20\x1f\x1f\x78\xbc\x39\x7f\xb0\x1a\x73\xa9\x3c\x96\x5f\x58\x1f\xc8\x08\xfa\x13\xd6\x07\x32\x52\xfb\x78\xfe\x90\x30\xff\xa9\x10\xf4\x5b\x08\xf2\x17\x82\xfc\x25\x9e\x1f\x54\x0a\xed\x97\x78\x7d\xa5\x92\x93\xaf\xb3\xc7\x61\xf4\x4b\xd7\xf8\xcc\x5f\xa6\x69\x9c\x97\x8f\xeb\x1d\x6d\xe7\x1b\xf1\x26\x49\xc8\x24\xde\x25\x09\x99\xc4\xdb\x24\x5f\xbd\xfb\xfb\xba\x11\xf5\xf5\x79\xa9\xe5\xf8\x42\x47\x37\xe2\x8a\x8e\x6e\xbc\xba\x19\xe7\x39\xbd\xaf\xfa\x9e\xf4\xfb\xdf\xef\xad\x1d\x4e\xdf\x3a\xe8\xd1\xac\xd7\x25\x99\x0d\x4c\xca\xb7\x76\x4a\xf9\xd6\x4e\x29\xdf\x8e\xe3\x84\x33\x1f\x20\x62\x5e\x31\x07\xa0\x09\x67\x0e\xf0\x13\x5e\xe0\xfe\x55\x85\x50\x7f\xb1\x9d\xe7\x31\xaf\x05\xf9\x6a\xe6\xba\x6c\xc2\x99\x03\xda\x84\x17\x42\x79\xe6\x3a\x71\xc2\x99\xeb\xaa\x11\x27\xee\x03\x5f\xc2\xb1\xfd\x48\x31\x07\xa8\x31\x27\xe6\x03\x6c\xc2\x99\x0f\x14\x09\x2f\xa0\x7d\x49\x0b\xf2\xeb\x1c\xea\x8f\x34\x73\x5d\x38\xe1\xcc\x75\xec\x94\x43\xfb\x13\x77\x5d\x39\xe5\xb8\x7f\xdc\x05\x95\x84\x33\x1f\x20\x12\x2e\xc8\x9f\xe3\xf9\x47\x39\xf3\x81\x26\xe5\xd8\xfe\xb9\x60\xff\x1c\x8f\x7f\xca\x99\xeb\xe0\x31\xe7\x3e\x40\x25\x5c\xd0\x6f\x81\xd7\x2f\xe2\x3e\x60\x25\x9c\xb9\x40\x90\x70\xbc\xbe\xb0\x17\x4c\x12\x2e\xd8\xb7\x64\x3e\x00\x26\x5c\x18\xff\x65\x81\xed\x5f\x4a\xf2\x17\x58\x3f\x82\xff\x20\xc1\x7f\xb0\xcf\x05\x12\xce\x5c\x60\x4a\x39\x5e\xff\xf6\x42\xff\xb8\x0f\x4c\x09\x17\xda\xaf\x84\xf9\x53\x09\xe3\xbf\x12\xd6\x47\xc1\xbf\x51\x25\xd8\xb7\x16\xf4\xcb\x5d\x00\x4d\x39\xd6\x8f\xe0\x9f\xb4\xe0\x3f\xb4\x62\x3e\xe0\xa7\x1c\xb6\xaf\xb9\x0b\x1a\xa7\x6f\xfe\x11\xcf\x33\xfd\xb0\x01\xdd\xee\xd0\x97\xe0\x7d\x4f\xcc\xb9\x7b\xd6\xdd\x0e\xbf\x0f\xea\x76\x87\xfb\xbf\x72\xbe\x7e\x78\x07\x3c\xc2\x7c\x69\x3f\x68\x54\xfa\x85\xb9\xd2\xdf\x57\x31\xa0\xfe\xbe\x8a\xe1\xf4\xf7\x55\x0c\xa6\xfb\x03\x65\xb7\xdb\x2d\x3b\xfb\xcc\x7e\xdb\x76\x78\x3c\x71\xeb\xbd\xbe\xb9\x43\x36\xbb\xf6\x3c\x0e\x6d\xb6\xde\x1f\x4f\xcb\x9d\xc7\x43\xd7\xbb\x6c\xea\x26\x97\xd9\xb9\xfb\x7c\x82\x17\x3d\xc0\x3b\xfb\x61\x71\x7e\xd9\xbc\x85\x78\xbc\xba\x1b\xbf\xbe\xba\xc6\xd9\x69\xf2\xaf\x27\x80\x0f\x32\x5f\x7a\xc7\xe3\x71\x70\xde\x2d\x4b\x37\x1c\xfd\xee\x30\x68\xf0\x82\x30\xce\xd9\xdc\xff\x35\x67\x7b\x28\xfe\x31\x67\xd8\x06\xfc\x9e\x73\x9a\x5d\xf6\x35\x8e\xcb\x34\x77\xc3\x32\xcd\xae\xed\x9a\x87\x72\xa6\xd9\x5d\x3b\x77\x7b\xed\x26\x66\xdb\xbe\x7b\x17\xbf\xcd\x0c\x65\xe6\xd0\x82\x7d\x3d\xca\x4c\xd5\xec\x9b\x93\x3b\xdb\x38\x35\x32\xa2\x77\xcd\x25\x88\xd0\x5b\x7f\x5a\x6c\xff\xdd\x0d\xc7\x47\xa1\x1f\xf1\xbd\x1d\xda\xc3\xc8\x3e\xa1\x7c\xe5\xb9\x75\xc3\x6e\x9a\x9c\x94\x07\x71\x96\x0d\x9f\x6f\x24\x9e\x29\x6e\x93\x12\xbd\x91\xf0\xd3\x7d\x70\xcb\xe7\x83\xd7\x47\xaa\xed\x3f\xb7\xa5\x8f\x74\x77\x99\xc7\xc9\xfd\xa2\x21\x7f\x7b\x2b\xde\x2f\xe3\xec\x1a\xbb\xd8\x7e\x3c\xce\xee\xfa\xf3\x86\x76\x4d\xfe\xdf\xc5\xf6\xdd\xf2\xf9\xe2\xd5\x5f\xe6\xab\xbb\x67\x37\xbb\xf8\x71\xf8\x60\xef\x57\xb2\x76\x9a\xdc\xdf\xec\x10\xb4\x1f\xda\xfc\xed\xf9\xec\x3b\xfd\x32\x7f\x9a\x79\x9d\x3f\xec\xe3\xd5\xc5\x7f\xb9\x9f\x77\xb7\xfe\x64\xa7\xd0\x0a\x3b\xcf\xaf\x6e\xf6\xa1\x3b\xa7\xfb\x61\xee\xda\x75\xc5\x39\xb9\xf9\xd1\xf3\xc7\x4b\xda\xdd\x1f\x30\x96\x9f\x59\xc0\x88\x79\xe6\xf8\x65\x2c\x24\x8f\x75\x85\x56\xb8\xf2\x4f\x1d\xbf\x8c\xc5\xea\xfc\xd6\x0d\xa4\xb2\x6e\xba\x96\x0c\xd8\xb3\xe8\xff\x01\x00\x00\xff\xff\x2a\x0e\x10\x8f\xad\x3d\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 15789, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4d\x6e\x03\x21\x0c\x85\xf7\x3d\x4a\x17\x56\x9b\x9e\x88\x18\x0f\x75\xe5\x9f\x11\xf6\xc0\xf5\x2b\x4d\xa4\x46\x25\xc9\x0e\x3e\xfb\x7b\xe2\xf1\x0e\x1a\x5b\x1a\x06\x03\xba\xbe\x15\x4c\x1e\x25\xd9\x0d\x42\x02\x94\xb1\x7b\xf8\x96\xb7\xe1\xce\x70\x65\x6b\xe7\x05\xfd\xf2\x64\x05\xbb\x2c\xa4\x6a\x05\xa5\x2c\x41\x7d\x30\xd2\x2a\xb4\x7b\x62\x03\xe1\x41\xb7\xa3\xf8\xb5\x08\x44\x51\xd0\xb0\x13\x31\xe1\x10\x8e\x5c\x7c\xf1\xc6\x76\x17\xff\x95\xf1\xdc\xfe\xf4\x7e\xf9\x88\xf9\xf3\xf9\xa5\x7d\x09\x48\x38\xfa\xfa\xa8\x64\x25\x98\x6c\xd5\x67\x9c\xe0\xf8\xde\x96\x95\x47\x69\x14\xe1\xfa\xea\xeb\x66\xc5\xfd\x09\x2a\xb2\xf6\x99\x81\x6e\x09\x65\xdf\x1f\x22\x5e\x4d\x80\x6a\xa3\x38\x38\x09\x8c\xf2\x37\x00\x00\xff\xff\x29\x4d\x1a\xbd\xd1\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 465, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\x5d\x6e\xc3\x20\x0c\x07\xf0\xf7\x1d\xa5\x52\xad\xf0\x91\xd0\x1e\x87\x81\x13\xa1\x11\xa8\x80\x96\xe6\xf6\x53\xb2\x4d\x6a\x82\x27\xf5\x91\x1f\x7f\xe3\xc4\x82\x13\xe8\xf3\x9c\xd1\x4e\x08\x01\xcb\xc7\x09\xac\xd9\xaf\x0b\x7a\x9c\xb1\xa4\x05\x66\x67\x52\xcc\x71\x2c\x60\xe2\xbc\xee\x24\x3d\x8e\xce\xcc\x3a\xe8\x09\xd3\x6f\xfc\x11\x53\xc1\x27\x58\x5d\xf4\xa1\x40\x5b\x0f\xd5\x05\x1b\x6b\xde\xd6\xc6\x66\xc6\xa4\x00\x1f\x03\x78\x1f\xea\x76\xc0\x8a\xbc\x23\xf1\x4a\xa0\x94\x04\xf6\x8a\xc0\x81\x2a\xbf\x10\x49\xa5\xc0\xde\xf3\xce\x78\x27\x19\x03\x6f\x96\xa3\x72\x49\x6a\x4f\xa9\x20\x55\x92\x3a\x90\xdd\xae\x44\x96\x71\xd1\x0e\x8b\x33\xbe\x9e\x40\x68\xfb\xbf\x9c\x09\x62\xb2\x9c\x09\xde\x9e\x20\xba\x4b\xf3\x05\x42\x5c\x5b\x93\xed\x5c\x64\x37\x10\xa6\x60\x4c\x7a\x6f\x52\xb5\xb9\xbe\xed\x4b\xcd\x48\xaa\xa3\x2d\x1c\x32\x96\xe2\xc2\x94\x89\x2b\x09\xfa\x4b\xdb\x90\xb7\xa8\xfd\xec\xdf\x8d\x4e\x18\xdf\x8e\xd6\xe7\xee\xce\xff\x95\x9d\xab\x0b\xd4\x1b\xc9\xb7\x25\x60\xe1\xa4\xe2\x3d\xc5\x1b\xbe\x6c\xbd\xf4\x29\x98\xd0\x46\x70\xb7\xc7\x70\xa8\xfd\x79\x8f\xff\xf5\xab\xba\xe4\x18\xf6\xf8\x1d\x00\x00\xff\xff\xa7\x53\x41\xe7\x12\x04\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 1042, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x51\x6e\x83\x30\x0c\x06\xe0\xf7\x1d\xa5\x52\xad\xc4\x40\x1b\x8e\x13\x81\x41\xd1\x42\x82\x12\xb7\x8c\xdb\x4f\xdd\x26\x6d\x60\xef\xf5\xb3\x25\x5b\xbf\xfe\x0b\xf8\xeb\x52\x69\x9c\x09\x12\xf1\xdb\x05\x98\x22\x2d\xc4\x65\x87\x25\x0c\x25\xd7\x3c\x31\x0c\x79\x79\x4d\x8a\x9f\xa6\x30\x2c\x3e\xf9\x99\xca\xcf\xfa\x63\x1d\x3d\x93\xd8\x7d\xe6\xc2\xf4\x01\xa3\x67\x2f\x66\x5b\x3d\xd1\xe1\x83\x61\xac\x16\x6d\x0f\x31\x27\x88\x31\x6d\xbf\x88\x4e\xc1\xb6\x55\xf0\xd6\x29\x78\x6f\x14\x74\xda\xa6\xbb\x0b\x44\x63\x4c\x07\x95\xcf\xda\x9a\x16\xe2\xb0\x9f\xb5\x43\x4d\x9d\xa2\x16\x51\xbe\xf0\x52\x99\x00\x5a\xec\x6e\x9a\xde\x65\x30\x68\xd1\x59\x4d\x7b\x99\x42\x63\x8d\xf8\xab\x69\x7a\x61\xce\xca\x3b\xae\x41\x69\xad\x39\x5a\x25\xe6\x90\xe6\x7a\xdd\x42\xd2\x2a\x51\xd7\x3d\x11\xa3\xaa\x3e\xb2\xea\xf4\x28\x79\xfd\xdb\x3b\xff\xee\xc7\x54\xbf\xee\x7d\x97\xef\xbf\x6b\x5b\x48\x0e\xc2\xfa\xbc\x1d\xfd\x33\x00\x00\xff\xff\x09\xc8\x75\xd4\x09\x03\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 777, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd4\xb1\x72\xf3\x36\x0c\x07\xf0\x5d\x4f\xe1\xbb\x2c\xed\xe0\xbf\x01\x10\x20\x89\x8c\xdd\x3b\x75\xe8\xec\xa6\xfe\x1a\x5f\x93\x38\xe7\xb8\x97\xa4\x4f\xff\x1d\x48\x49\xa6\x06\xdf\xe1\x67\x8a\x14\x48\x02\x7a\x78\x78\xd8\xfd\x38\x5f\x4f\x9f\xc7\x97\x97\xdd\xe7\xf9\x8d\x69\x77\xfa\xba\x5d\x8f\xbb\x5f\xc8\x0f\xa4\x07\x21\xae\x3b\xae\x8f\xe2\xbf\x4e\xf1\xec\xef\x97\xeb\x69\x77\x7e\xfb\x71\x79\xdc\x3d\xdf\x6e\xef\x1f\x8f\x87\xc3\x3f\xe7\xdb\xf3\x7f\x7f\xe1\xe9\xf2\x7a\x78\xba\x1e\xff\xff\xde\xbf\x1e\xbf\x0e\x7f\x9e\xdf\xfe\xbe\x7c\x7e\xfc\xf1\xfe\xfd\xdb\xcb\xe5\xe9\xdf\xd3\x75\x9a\x38\xa1\x38\x24\x39\xb2\x0f\xa8\x12\xa8\x04\x16\x98\x46\xcc\x54\x90\xc0\x52\x17\x18\x2a\x0d\xf1\xfa\x7f\xcc\x5b\x21\x0c\x21\x9a\x24\xc1\x33\x4c\x60\x69\x8e\x85\x6a\xfc\x9a\x0a\xb8\x54\x70\x69\x63\x4c\xf1\x52\x01\x17\x9b\x94\x50\x08\x04\xa6\xda\xe2\x02\x11\xc5\x18\x33\x8f\x50\x1b\x24\xa6\xab\x0c\xa2\xf7\x69\x19\xa2\x79\xa3\xb2\xd1\xf6\x49\x1f\x65\xb4\x28\x11\xfa\xeb\x6a\x9c\x4a\x81\xb5\x4c\x9c\xc0\x29\x63\x13\xfb\x00\x69\xf3\x99\x18\x9a\x63\xd7\x4d\xac\x10\x65\xb0\x72\x67\x01\x3b\xa1\x48\x57\x05\x53\x42\xcb\x90\xe3\x38\xe3\x64\xcd\x3b\x0b\x58\x05\x25\x4f\x16\xd3\x09\xd9\x50\x75\x81\xd7\xb8\xd3\x19\xed\x59\x2f\x9d\x8c\xd8\x8b\xf8\xa2\x24\x91\xbe\x09\x38\x2b\xd8\x19\x66\x8b\x44\x4a\xbb\xa7\xc6\x0c\x66\x42\xd6\x55\x12\x67\xd1\xe5\x28\x0c\x36\x6a\x2a\x04\x76\x5d\xc6\x62\xa0\xed\x7d\x1e\xac\xe0\xcc\x50\xbe\x2b\xa1\xb6\x37\xc6\xa9\x32\x81\x6b\xea\x8a\x85\xe7\x55\x1a\xbc\xed\xb5\x23\xfb\xf2\x3a\x49\x09\xec\xde\xee\x2a\x2b\x14\x92\x40\xfb\x25\x12\xb3\xfe\xaf\x45\x4d\xa4\x21\xd6\x29\x5b\x14\x65\x2b\x39\x1e\xe0\xa9\xc1\xa2\xf0\x20\x69\x1d\xa9\x10\x1f\x60\x23\x9c\x06\x70\xb5\x79\x05\xe9\xb9\xac\x71\xcb\xa6\xcb\x04\x9a\x26\x26\x85\x12\x84\x09\x49\xee\x62\x24\xeb\xd2\xd6\x86\x45\x56\x55\x88\x8e\xa8\x03\x98\xe6\x15\x0d\x51\x38\xa5\x34\x09\x6b\xaf\x60\x9e\x69\x60\xed\x17\xc2\x89\xe3\x54\x90\x19\xb4\x1f\x10\x79\x72\xd2\x7e\x95\xd5\x50\x68\x60\x6d\x4d\xc2\x56\x62\x1f\x96\x63\xe6\x1a\xb7\x89\x5d\x4c\x8e\x32\x42\x22\xf1\x91\x79\xcb\xba\x61\xa2\x2d\x65\xa5\x38\x62\x2b\xb3\x22\xad\x94\xb7\xac\x1b\xea\x7d\xa5\x64\xfd\x1b\x96\x2b\x72\x8a\x33\x2a\x3e\x45\xc5\xb7\xf2\x4a\x0e\x99\xd5\xaa\x1e\x1c\x19\x36\x7b\x6f\x3c\x2f\x93\x90\xc6\x57\x92\xbd\x80\xf6\x03\x62\xe3\x41\x8e\x1a\x88\x16\x53\x9d\x84\x4a\x34\x7a\x0c\xca\x82\x68\x7e\xf1\x55\x16\xed\x6c\x2b\x3d\xd2\x1d\x25\x9b\xb1\x94\x46\x29\x2d\x8a\xd2\xf2\x3e\x2f\xd7\xd6\x9b\x62\xfa\x33\x00\x00\xff\xff\x0c\x44\x28\xd9\x47\x06\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 1607, mode: os.FileMode(438), modTime: time.Unix(1523291382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd6\xbb\x72\x1c\xb7\x12\x06\xe0\x7c\x9f\x62\xab\x94\x9c\x13\xf8\x5f\x74\xa3\x71\x53\xe8\xdc\x91\x03\xc7\xb2\x2c\x59\x2c\x53\x24\x8b\xa4\x8b\xa6\x9f\xde\xf5\xf7\x00\x18\x40\xc1\x92\xf8\x0a\x18\x0c\x2e\x3d\x0d\x7c\xf8\xf0\xe1\xfa\xf5\xee\xf9\xcb\xdb\xa7\xfb\xfb\xeb\xdb\xdd\x83\x84\xeb\xcb\xd3\xfb\xf5\x7f\xa1\xdd\x82\xdd\x34\x48\xbd\x4a\xfd\xa8\xed\xff\x17\xb6\xfc\xe5\xf1\xf9\xcb\xf5\xee\xe1\xeb\xe3\xc7\xeb\xb7\xd7\xd7\xa7\x97\x8f\xb7\xdb\x9f\x77\xaf\xdf\xfe\xfe\x1d\x9f\x1f\xbf\xdf\x3e\x3f\x7f\xfa\xf7\xfd\xa7\xef\x9f\xfe\xb9\xfd\x76\xf7\xf0\xc7\xe3\xdb\xcb\xaf\x4f\xef\x3f\xdf\x3f\x7e\xfe\xeb\xcb\xf3\xe5\x22\x11\xb9\xa2\x2a\xea\x28\x56\x88\x36\xa2\x64\xa8\x54\x88\x94\xa9\x06\x69\xb2\x48\x25\xb8\x2a\xa4\x14\x88\xd9\x14\x5b\xb6\xa1\x1a\x90\xc2\x82\x76\xc2\x20\x35\x4f\x65\x68\x9a\x7d\xd4\x82\x54\x3b\x34\x26\x88\xe6\x45\x6a\x3e\xac\x2a\x48\x48\x71\x14\x1b\xd4\x94\x90\x50\x30\x7b\x23\x4c\x5d\x1a\xd1\x0a\xb2\x40\x62\xe9\xd0\xd0\xd0\x0e\x34\x48\x80\xc8\x2c\x37\x98\x2d\xc8\x13\x92\xf9\x1b\x52\x81\x06\xef\x41\x82\xc2\xa0\x29\x0e\xa8\xc0\x46\x59\x52\x82\x58\x38\x18\x21\x55\x7d\x4e\x16\xb8\xee\xaa\x6c\xac\x2e\x2e\x6c\x46\x89\x0b\xb8\x27\xa7\x34\xc9\x54\x45\x3e\x9f\xe2\xb2\x97\x21\x0d\xb0\x3c\x21\xd0\x38\xfb\x50\xe5\x84\xa6\x22\xe2\x0a\x69\x95\x2a\xc1\xfb\x50\x3b\x94\x21\x90\x92\x47\x59\x61\x67\x51\x8e\x31\x94\x02\xd5\x0a\x2b\x0b\xea\x8a\x36\x9b\x45\x8e\xc0\x67\x51\x1a\x2a\x77\x37\x11\x95\xeb\xd2\x60\x3e\x1c\xe1\xae\x42\x53\x1a\x90\x80\x52\x27\x04\x2d\x4e\x18\x24\xcd\x87\x54\xfb\x18\xbc\x07\x63\x80\x38\x0c\x62\xbe\x30\x07\x13\x84\x1b\xec\x65\x0f\x5f\xa8\x85\xc9\x24\x38\x16\x9d\xfb\xcb\x4a\xa9\x7a\x49\x2c\x32\x7a\x20\xd9\x2e\xc9\x97\x11\x15\xd2\xce\xb2\x86\xa5\x2c\xa3\xcc\x45\xaa\x0b\xce\x56\x25\x23\x6e\x90\x15\x3a\x3b\xab\x88\xb6\x22\xad\xc8\x67\xd7\x01\x52\x36\xd5\x4d\xed\x94\x6d\x75\xf6\x43\x5d\x1f\x61\xac\x10\xf3\x6d\x5c\xd5\x56\x71\xe5\x49\x7e\x56\xfc\x32\x8f\xc1\x64\x5f\x4e\xc4\xb8\x6a\xb4\xa4\xf8\xd5\xa4\xc9\xe4\x7b\xe1\x2a\x1e\xa0\x55\x57\x89\x95\x93\x11\xd2\xa7\xcf\x2f\xc7\x20\xa5\x3f\xd9\x98\xca\xa4\xaf\x20\x15\x11\x67\x99\x49\x60\x40\x34\xc2\xea\x54\x65\x53\x57\x39\x62\xf0\x18\x66\x31\x86\xd2\x98\x50\x49\xd0\x88\xd2\xab\x38\xf5\xe2\x01\x33\xc8\x80\x11\x9d\xe4\x2f\x4f\x35\x4e\x61\x61\xf4\x04\xd2\xc9\x19\xe9\xf1\x7e\xbe\x9c\x71\x5a\x3a\x19\xd7\x9c\x52\x3e\x99\xa0\xa1\xb3\x20\x07\xa6\x37\x4a\xb5\xf9\xf0\xa5\xc8\x4a\x55\x3b\xe9\x49\xe8\xa4\x31\xc2\x17\x49\xd1\xad\xf2\xd8\xbb\x83\xa9\xcf\x5c\x63\xf6\x64\x1a\x4f\x45\x68\xd0\x4b\x36\x18\x32\x24\x84\x4b\x4e\x60\x5d\x86\xd6\x5e\x96\x10\x50\x96\x72\x5b\xca\x22\x6b\xc5\x06\x5d\x11\x57\xd8\x40\x16\xe6\xe5\xfe\x46\x9e\x49\xe1\x78\x4f\x82\x36\x68\xac\x1d\x91\x29\xbc\x97\xcd\x90\x64\x29\xdb\x59\x96\x50\x57\xb4\x0e\xee\x8a\x8e\xc7\x8f\xe4\xb3\x42\x57\xc4\x81\xe8\xc7\x5e\x47\xc9\x3c\xf6\xfa\xc0\x92\xc2\xe2\x82\xbc\xa2\xac\xcd\x8a\xac\xd0\x05\x6d\x7d\x46\xb6\xbe\x7d\x37\x78\x42\x35\x8f\x51\x7e\x0f\x12\x0c\xfe\xc1\x15\x9e\x2b\x2e\x0e\xb5\x20\xe7\x53\x3c\x41\xa6\x8c\xa1\x33\x9b\x32\x79\xa7\x4d\x7c\xc9\x60\x2c\xfc\x8c\x0e\x72\x15\x20\x2d\x0d\x29\xa3\x59\x7a\x5b\x9e\x21\x2a\x32\x10\x2b\xf7\xae\x23\x05\x3f\x04\x28\x95\x00\x43\x29\x27\x02\x13\xd0\x90\x32\x7f\x5a\xec\x36\xf8\x75\xc0\x2e\x22\x72\x9c\x73\x3c\xa0\x37\xc5\x5d\x5b\x53\xf5\xdb\x83\xf0\x3f\xb2\xbf\x65\x42\xc2\x59\xe5\x07\xcc\x46\xe5\xb2\x76\x46\x32\xec\xb4\x9d\x65\xa3\xc5\x9d\x79\xe7\x0f\x8d\xdb\xc6\xa4\x3b\xd3\x24\xd3\x2d\x1f\x35\xff\xf2\x63\x38\x36\x69\x21\xf7\xb7\x93\x51\x93\x4e\xf2\x8e\xa4\xb6\xd1\xea\xc6\x96\x17\xd6\xbd\x71\xdd\x1b\x57\x86\xea\xd6\x78\x6d\xed\x77\x8a\x8d\xeb\xc3\x1a\xb6\x87\x35\x6c\x2f\x2e\x95\x77\xb5\x41\xbf\x16\xb2\xb6\xf8\x95\xac\x8a\x77\x9c\x0a\x52\x06\xff\x8e\x32\x73\x19\x6f\xa0\x87\x9a\x78\x68\x1d\x90\x90\x99\x56\x77\xa6\x9d\x6d\x92\x77\x0b\x39\x9f\x55\xc1\x52\xa9\xe6\xe1\xd3\xc5\x8b\x06\xdf\x99\x2b\xaf\x9b\x3c\xa4\x4c\x86\xc4\x78\x87\x3b\xc5\xfc\x3a\x55\xfc\xab\x77\x1d\x29\x9e\xe1\x4b\x45\xcf\x7c\x59\x4e\x55\x4f\xd1\xd2\xc4\xf3\x30\x4f\x86\x1a\x3a\x8b\x5f\x0d\x99\xa5\x0f\x37\x24\x43\xd2\x0b\x33\x80\xe5\x23\x17\x4c\x49\x8f\x23\x32\xf3\xd8\xf2\xab\xf3\x7f\x01\x00\x00\xff\xff\xed\x6e\x78\x08\x85\x0c\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 3205, mode: os.FileMode(438), modTime: time.Unix(1523291387, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd4\x3d\x73\x1a\x4d\x0c\x00\xe0\x7e\x7f\xc5\xcd\xd0\xbc\x6f\x61\xdd\xea\x63\x77\xb5\x94\xe9\x53\xa5\x48\x4d\x30\x8e\x99\x60\x8e\xc1\x78\x88\xf3\xeb\x33\xe2\xf8\x90\xd2\xe9\x19\xb4\x42\x48\x1a\x16\x8b\xc5\xf0\xb2\x3d\x6e\xce\xab\xdd\x6e\x38\x6f\xf7\x98\x87\x8f\xc3\xf3\xea\xb4\x19\xfe\xcb\x7d\xcc\x32\x52\x46\x1d\x50\x97\xd4\xff\x4f\x96\xfc\x75\x3a\x6e\x86\xed\xfe\x65\x5a\x0e\xaf\xa7\xd3\xe1\x7d\x39\x8e\x3f\xb7\xa7\xd7\x8f\x1f\xb0\x9e\xde\xc6\xf5\x71\xf5\xe7\xf3\xe9\x6d\xf5\x7b\xfc\xbe\xdd\x3f\x4f\xe7\xf7\x6f\x87\xcf\x2f\xbb\x69\xfd\x6b\x73\x4c\x09\x19\xaa\x82\x36\x90\xf6\x88\xb1\x95\x2b\x3a\x03\xe6\x6e\x68\x02\xd8\x3a\x20\x5e\xf2\x9a\x02\x56\x05\xe2\x7c\x15\x71\x06\x64\x31\x61\x6e\x20\x50\xb2\x8b\x29\x91\xc5\x0c\xa8\x1d\x90\x6a\x60\x69\x91\x9a\x24\x43\x6b\x40\xd4\xa1\xbb\x18\xc9\x83\x3d\xaa\x03\xf9\x34\x12\x0f\x9f\xc6\xd9\xa3\x78\xf8\x06\xc4\x17\x10\x9f\x56\x7c\x81\xe2\xdb\xa9\x3e\xad\x36\x0f\xff\x7b\x9a\x2f\xd0\xd0\xc3\x37\xaa\x3e\x4d\x7d\x9a\xc6\x81\x84\x89\x88\x4f\xc4\xde\x53\xa1\x39\x6c\x08\x5a\xbd\x28\x53\xaa\x62\x5b\x12\x40\xbd\x87\x44\xa9\x16\x28\x05\x90\x15\xf2\xd3\x23\xa6\x52\x6e\x9f\x54\x06\xc2\xee\x45\x39\x08\x83\x28\xd5\x0a\x88\xd6\x9d\x5c\xd6\x1e\xa8\x81\xda\x03\x7b\x4e\x88\x68\x15\xc1\xf6\x60\xb7\x85\x40\x85\x81\x79\xbe\xb4\xbb\x28\x73\x60\xb1\x9b\xb4\xdb\xcd\x50\x10\x50\x5b\xa4\x06\xda\xd7\x3c\x48\x52\x23\x5b\xa4\x7b\xcb\x40\xdd\x8b\x5d\x21\x1b\x9f\x83\xcd\xef\x46\x44\x1b\x4f\x64\x0d\xac\x39\x92\x1e\xac\x25\xf4\x30\xbb\x47\x17\xfc\xc7\x9c\xb0\xb4\x79\x95\x36\x2b\xb9\x91\x24\x83\x76\x2f\xdb\xe5\x85\xd5\xce\x08\x59\x83\xba\x97\x84\x4c\xc1\xa0\xf0\x4e\xee\xef\x7a\x85\x22\x1e\xea\x80\xc4\x09\x3b\x02\x31\x81\xda\x40\x83\xd4\xcb\x06\xe4\x44\x77\x21\x77\x40\x8d\x26\x57\x69\xb6\x5c\x2d\xd0\x08\x50\x39\xb2\x46\x6a\x60\xcf\x89\xec\xef\xcd\xce\x54\xac\x2b\xa7\x8a\x7f\x03\x00\x00\xff\xff\xb3\xe0\x3c\x26\xc5\x05\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 1477, mode: os.FileMode(438), modTime: time.Unix(1523291391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\x3f\x53\xc2\x50\x10\x04\xf0\xfe\x7d\x8a\xcc\xd0\x68\xc1\xe6\xed\xbd\xbb\xf7\x87\xd2\xde\xca\xc2\x3a\x62\x90\x8c\x40\x98\x10\x07\xf0\xd3\x3b\xe1\x8f\xda\xed\xef\x76\x6f\x36\x9b\x55\xab\x6e\x68\x8f\xcd\x66\x53\x1d\xbb\x5d\xaa\xda\xd3\x38\x34\xd5\x83\x2f\xb5\xd7\x5a\x3c\x73\xc5\xbc\x90\xf2\xe8\xa6\xe9\x73\x3f\xb4\x55\xb7\x5b\xf5\x8b\x6a\x3d\x8e\xfb\xc3\xa2\xae\x3f\xba\x71\xfd\xf5\x86\x65\xbf\xad\x97\x43\xf3\x7d\x9e\x6f\x9b\x53\xfd\xda\xed\xde\xfb\xe3\xe1\x65\x7f\x7e\xda\xf4\xcb\xcf\x76\x70\x8e\x01\xa9\x40\x42\x41\x2c\x13\xb2\x07\x05\xa6\x4e\x3d\xc8\x0c\xfa\x80\x74\x81\x24\x50\x05\x29\x3a\x23\xa8\x1e\xd1\x90\xf5\x8e\x4b\x5d\xd2\x95\x44\x10\x18\x9d\x09\x18\x23\x48\x8f\xa8\xbf\x12\x8f\x94\xae\x2a\x48\x04\xcd\x5f\x94\x32\x18\x09\xe5\x9f\x02\xb2\x4d\x92\x30\xad\x6f\x6f\x12\x02\x58\x0a\x44\x8b\x8b\x0a\x85\x04\xf8\xf9\x3d\x89\xd9\xf5\x6a\x0a\xb1\xf0\x2f\xab\x8b\x06\x13\x94\x0c\x09\xbc\x81\x3e\x83\xa6\x8e\x21\x81\x4c\x90\x60\x60\x74\x2c\x84\x84\x04\x99\x6a\x89\x4e\x7c\x82\x46\xb0\x28\xa8\x3f\x01\x00\x00\xff\xff\xbd\xda\xf6\x4e\x9e\x01\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 414, mode: os.FileMode(438), modTime: time.Unix(1523291407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x3f\x8f\x13\x31\x10\x05\xf0\xde\x9f\x62\xa5\x34\x50\xf0\x76\xde\x78\xfc\x2f\x25\x3d\x15\x05\x75\x08\x39\x6e\x45\x2e\x1b\x6d\x82\x42\xf8\xf4\xc8\xbe\x64\xb3\xa1\xb0\xe4\x9f\xc6\x63\x7b\xf4\x56\xab\x55\xf7\x32\x4c\xbb\xcb\x66\xbf\xef\x2e\xc3\x21\x75\xa7\xe3\xb5\xfb\x20\xa5\x17\xeb\x55\x98\x3b\xe6\xb5\x96\x8f\xae\x1e\xfc\x32\x4e\xbb\x6e\x38\xbc\x8c\xeb\xee\xf5\x7c\x3e\x9e\xd6\x7d\xff\x73\x38\xbf\xfe\xfe\x8e\xed\xf8\xd6\x6f\xa7\xcd\xdf\xeb\xa7\xb7\xcd\x9f\xfe\xdb\x70\xf8\x31\x5e\x4e\x5f\x8f\xd7\xcf\xfb\x71\xfb\x6b\x37\x39\x47\x8f\x94\xa1\xde\x83\xde\x57\x65\x22\x20\xcc\xdb\x02\x35\x75\x26\x88\x19\xaa\x0a\x65\x53\x12\xa8\x0a\xd4\xf2\x2c\x42\xad\x34\x25\xa8\xc6\xff\x15\xa4\x8a\xcc\xa0\x44\xd0\x8b\x0b\x0a\xfa\x0c\x5a\x46\x4e\x4f\x2a\x4b\x31\xcc\x54\x46\x64\xdf\x14\x0d\x6a\x82\x5b\xad\x89\x50\x09\x33\x03\x61\xd6\x94\x32\xea\x55\x81\x77\xd1\x52\x6d\x9e\x19\xd8\xc6\xba\xb3\xae\x38\xab\x78\xf0\x41\x55\x0f\x7d\xff\x41\x4e\x88\x02\x4a\x72\x31\x20\x04\x98\x81\x92\x97\x28\x37\x90\x1e\xd4\x25\xfc\x0d\x1a\x14\x89\x0b\x94\x65\x85\x45\x1c\xc5\x60\xb5\x23\x21\xc6\x87\x0a\x94\x77\xa9\xe6\x16\xd8\x43\x2a\x3a\xd3\x27\x30\x16\x47\xf2\x3d\xa3\x52\x5f\x7f\x92\x2d\xa9\x2d\x7a\x03\x93\xc0\xb7\x58\xff\x05\x00\x00\xff\xff\x96\x71\x73\xc0\x8a\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 650, mode: os.FileMode(438), modTime: time.Unix(1523291410, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\xb1\x6e\xc2\x40\x0c\x06\xe0\xfd\x9e\x22\x12\x4b\x3b\xe0\x9c\x7d\xe7\x3b\x9b\xb1\x7b\xa7\x0e\x9d\x53\x08\x25\x2a\x10\x14\x82\x28\x7d\xfa\x2a\xa5\x82\x33\xe3\xa7\x3b\xff\xb6\x2c\xcf\x66\xb3\x6a\xdd\x0d\xed\xb9\xd9\x6e\xab\x73\xb7\xcf\xd5\xe9\xb0\x6a\xc6\xb6\x7a\xf2\x5a\xfb\x58\x93\x47\xa9\x50\x16\xa4\xcf\x6e\xfa\xfb\xda\x0f\x6d\xd5\xed\xd7\xfd\xa2\xda\x8c\xe3\xe1\xb8\xa8\xeb\xcf\x6e\xdc\x9c\x3e\x60\xd9\xef\xea\xe5\xd0\xfc\x5c\xe6\xbb\xe6\xbb\x7e\xef\xf6\xab\xfe\x7c\x7c\x3b\x5c\x5e\xb6\xfd\xf2\xab\x1d\x9c\xc3\x00\xe8\x33\x44\x60\xef\xa2\x87\x9c\x81\x48\x21\x70\x09\x29\xc0\xc1\xd1\x54\x12\x00\x45\x01\x89\x2d\x93\x21\x67\x4b\x71\x89\x81\x19\x30\x08\x20\x92\x51\x2c\x45\xa9\x94\xdc\x94\x02\x10\x6a\x29\xf2\x46\x68\x44\x2e\x25\x40\x54\xc0\x18\xff\xa6\x31\x14\x43\x51\x43\xf5\x0e\x43\x04\xcc\x1e\x18\x1f\x49\x31\x59\x66\x4b\xb9\x33\x00\x69\xa9\x50\x04\x09\xf8\x79\x01\x62\xbe\xbd\x21\x32\x24\xba\x33\xb1\x89\xbd\x5a\xad\x19\x1f\x1c\x1c\x72\x06\x4e\xa0\x09\x90\x82\x43\x45\xa0\x40\x20\x53\xbb\x52\xc9\x1b\xd1\x4d\x18\xf4\x9a\x63\x1c\xff\x1d\x21\x13\xa0\x04\xcb\x64\x29\x86\xea\x1d\x4d\xe7\x36\x6d\x3a\x02\xcb\x6f\x00\x00\x00\xff\xff\x6f\x3d\xa3\x5d\xea\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 746, mode: os.FileMode(438), modTime: time.Unix(1523291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\x3d\x6f\xdb\x4c\x10\x04\xe0\xfe\x7e\x05\x01\x35\xef\x5b\x68\xb8\xb3\x1f\xf7\xa1\x32\x7d\xaa\x14\xa9\x15\x45\x8e\x89\xc8\xa2\x41\x2b\x90\x9d\x5f\x1f\x5c\x14\x47\x4c\xb7\x0f\xb1\x9c\xc1\xdd\x6d\x36\x9b\xe1\x61\x5a\x8e\xd7\xfd\xe9\x34\x5c\xa7\x73\xe5\x70\x7c\xbd\x2c\xfb\xe1\x3f\x69\xa3\xf8\xa8\xc2\x3a\xb0\xee\xb4\xfd\x9f\xfa\xee\xc7\x79\x39\x0e\xd3\xf9\x61\xde\x0d\x8f\x97\xcb\xf3\xcb\x6e\x1c\xbf\x4d\x97\xc7\x1f\x5f\x70\x98\x9f\xc6\xc3\xb2\xff\xf9\xb6\x7d\xda\xbf\x8e\x9f\xa7\xf3\xd7\xf9\xfa\xf2\xe9\xf9\xed\xc3\x69\x3e\x7c\x3f\x2e\x29\xd1\x50\x1a\xd4\x1a\x72\xeb\xa8\x02\x2a\xc2\x93\x0b\xc8\x0a\x8a\xa1\xdc\x91\x41\x93\x14\x04\x5d\x90\x03\xd5\xdf\x41\x2d\x60\x2b\x37\x12\xa6\x08\xa6\x50\x30\x67\x90\x82\xec\x7f\xa5\x82\x52\x6e\x6a\x28\x04\x43\x7e\xab\x54\x30\x13\xce\xbb\x0c\x35\xba\xd4\xfa\xf6\x9f\xdf\xd4\x0c\x6c\x0d\xea\x2d\x65\x87\x43\x0d\xb2\x7d\x9f\x34\xe2\xf6\x35\x1c\x1a\xb6\x9a\x3d\xe5\x40\x8f\x96\x0a\x6d\x2b\xc4\x1a\x0c\x4b\x14\x87\x07\xfa\x91\x4b\x49\x34\xf6\x24\x64\x42\xb6\x2b\xf4\x26\x5a\x01\x59\xa0\x16\x60\x4e\x8c\x82\x08\xd0\xbc\x5f\xca\x9d\x01\x6a\xfd\x87\x26\x89\x8d\x50\x2b\xd0\xde\xaa\x39\xa9\x78\x7f\x0c\xb6\x02\xd9\xae\xd0\x7b\x54\x0a\x3c\x83\xad\x07\xff\x0a\x00\x00\xff\xff\xab\x62\x25\xe3\x20\x02\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 544, mode: os.FileMode(438), modTime: time.Unix(1523291395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\xbf\x8e\xdb\x30\x0c\x06\xf0\x5d\x4f\x61\xe0\x96\x76\xe8\x67\x7d\x14\xf5\x87\x19\xbb\x77\xea\xd0\x39\x4d\x73\xbd\xa0\xb9\x38\x48\x52\xa4\xe9\xd3\x17\xd2\xe5\x6c\xa5\x83\x01\xfe\x40\x52\x26\x6d\x3d\x3d\x3d\x0d\xcf\xbb\xd3\xf6\xba\xde\xef\x87\xeb\xee\x50\x38\x9c\x8f\xb7\xe1\x83\xb7\xd1\xeb\x28\x9e\x65\x60\x59\x89\x7d\x74\xb5\xf2\xcb\x74\xda\x0e\xbb\xc3\xf3\xb4\x1a\x5e\x2e\x97\xe3\x79\x35\x8e\x3f\x77\x97\x97\xdf\xdf\xb1\x99\x5e\xc7\xcd\x69\xfd\xf7\xf6\xe9\x75\xfd\x67\xfc\xb6\x3b\xfc\x98\xae\xe7\xaf\xc7\xdb\xe7\xfd\xb4\xf9\xb5\x3d\x39\xc7\x80\x5c\x20\x21\x82\x92\xaa\x0a\x11\x11\xc3\x7b\x68\x10\x15\x27\x01\x56\xa0\x06\x6a\x8b\xad\xc5\x42\xa7\x1e\x39\x43\x24\x41\xd4\x7a\x45\x3f\xab\xc0\xa4\xc1\x50\xea\x6b\xa2\x8b\x02\x86\x02\x6a\x41\xc9\x0f\xb2\x5e\x8c\x6f\x4c\x0a\x09\xc4\xbd\xb1\x4a\x3d\xba\x9c\x12\xe2\x97\x64\x24\x54\x9b\x72\x3d\x27\xd7\xf2\x99\x91\x10\xca\xcc\xfa\xa4\x59\x16\xc0\x85\x22\x01\x12\x9a\x4a\x4d\x28\x98\xef\xcc\x48\x1e\xf4\xd9\xa5\x88\x18\xa1\x0a\xfa\x72\x07\x59\x8b\x7b\x48\x8f\x70\x87\x44\x81\xf6\xb0\x1e\x34\xdf\x49\xbc\x38\x7a\x85\xd6\xfe\x8c\x94\x16\x19\x84\xef\x92\x90\xc1\x64\x33\xa5\xb4\x1f\xb9\xa8\x9d\x43\x42\x84\x10\x03\x83\xf6\x94\xa8\x8e\xed\x3b\x07\xd4\x65\xdb\x25\xa8\x4b\x7b\x04\xff\xd6\xdb\xf3\xbf\xac\x3e\xb0\x0e\x55\xa7\x61\x6a\x33\x92\xea\x18\x33\x62\x02\x4d\x91\xe5\x41\xe1\x41\xea\x68\x84\x04\x43\xf4\x60\xe9\x95\xf3\x22\x01\xbd\x5f\xa8\x88\xf2\x2f\x00\x00\xff\xff\x26\x57\x47\x5b\x35\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 821, mode: os.FileMode(438), modTime: time.Unix(1523291398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xbf\x72\x5a\x3d\x10\x05\xf0\x5e\x4f\x71\x67\xdc\x7c\x5f\xe1\x73\x75\x56\x2b\x69\xe5\x32\x7d\xaa\x14\xa9\x09\xc6\x31\x13\x0c\x0c\xc6\x43\x9c\xa7\xcf\x88\x3f\xb6\x36\x1d\xbf\x41\xab\xbb\x3a\x5a\xdd\xdd\xdd\x4d\x4f\xeb\xc3\xea\xb4\xd8\x6c\xa6\xd3\x7a\x6b\x9c\xde\xf6\x8f\x8b\xe3\x6a\xfa\x2f\xb6\x39\xea\x2c\x91\x36\xd1\x1e\xa4\xfd\x1f\xfa\xe2\xaf\xbb\xc3\x6a\x5a\x6f\x9f\x76\x0f\xd3\xf3\xf1\xb8\x7f\x7d\x98\xe7\x9f\xeb\xe3\xf3\xdb\x0f\x2c\x77\x2f\xf3\xf2\xb0\xf8\xf3\x7e\xff\xb2\xf8\x3d\x7f\x5f\x6f\x1f\x77\xa7\xd7\x6f\xfb\xf7\x2f\x9b\xdd\xf2\xd7\xea\x10\x02\x13\x8a\xc1\x2a\x58\xf3\x15\x2d\x81\xb1\x75\x54\x05\x6b\x03\x59\xcf\x32\xb0\x18\x24\xc5\x9b\x4c\xa1\x7a\x85\xa4\x08\xa6\xb3\x18\x2b\x14\x39\x06\x8d\xa8\x15\x22\x0d\x29\x8f\xb0\x01\x39\x05\xe9\x25\x09\xb4\x06\x4a\xf6\x2c\x8e\xb9\x7a\x5a\xc8\x02\x5a\x82\xf6\x03\x94\x9b\x48\x03\x2b\x3b\xfb\x27\x58\x09\x89\x12\x8a\x42\x21\xb5\x77\x56\x32\x72\x06\x93\x21\xde\x7f\xfe\x96\x9c\x6f\xff\x94\x04\x61\x1b\x25\xd1\x89\x4e\x72\x95\xa8\x40\xb2\x86\x52\x40\x36\x50\xf5\xdc\xb4\xa3\x39\x5a\x73\x6c\x3d\xdc\x1e\x7b\x44\x26\x68\xd5\xd3\x1c\xfd\x62\xd1\xe2\x59\x3d\x87\xda\x04\x69\xa3\xd2\xb0\x51\x8f\x64\x40\xcf\xe4\x46\xb2\x1f\xd2\xb3\x38\x96\xe8\x29\x9f\x2c\xd9\xf5\x70\x71\xf3\xce\xfc\xc7\x29\x30\xd7\xcb\xf5\x24\x48\xd4\x1b\x45\x23\xac\x8d\xea\xa3\x32\xb0\x5f\xd7\x99\xa5\x0f\x1a\x93\x39\xb5\x51\xea\x56\x2a\x9d\x5c\x9d\x7e\xd4\xb5\x82\xac\x23\x6c\x00\x25\x8d\xca\x35\xb0\x11\x92\x04\xd6\xd3\x76\xb2\x51\x3d\xbd\x41\xf2\x21\xa6\x06\x9a\xb7\x0c\x3b\x5d\xac\x57\x2b\xea\xf9\x1d\x78\x16\x4f\x73\x6c\x31\x48\x7f\xb5\x7d\x12\xb5\x77\x35\xa8\xf0\x6f\x00\x00\x00\xff\xff\xf1\x07\x69\xb6\x91\x04\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 1169, mode: os.FileMode(438), modTime: time.Unix(1523291402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x3d\x73\xdc\x38\x0c\xed\xfd\x2b\x34\xe3\xe6\xae\x10\xf6\xcb\xe7\xf1\xb9\x4c\x9f\x49\x91\x22\x35\x97\x84\x24\xcc\x8a\x00\x43\x40\xab\x5d\xff\xfa\x8c\xd6\x6b\x3b\xca\x8a\x19\x8f\x3a\x3e\x80\x4f\x78\x78\x00\xef\xef\xef\xab\x4e\xd4\xb4\x1a\x89\x37\xeb\x0a\x4f\x96\x5d\xf5\xcf\x7a\xb7\x5a\xef\x56\xdb\xf5\xe6\xa9\xda\xfc\xff\xfc\xb0\xf9\xf7\x6e\x0a\xfc\x2a\x19\x2b\xe2\x46\x9e\xab\xce\x2c\xe9\xf3\x6a\xd5\x92\x75\xc3\x1e\xbc\xc4\x95\xcf\xee\xe5\x5c\x47\x77\x5a\xfd\x20\x0e\x32\xea\xf7\x74\xfe\xd2\x8b\x3f\x60\xbe\xbb\x5b\xc3\xe5\xab\x1c\xeb\x88\x59\x21\x92\xcf\xa2\xd2\xd8\x94\xfa\x81\xa6\xa4\xa0\x87\x73\xc2\xf9\x71\x56\xd0\xe8\xb2\xa9\xcf\x88\x5c\x4a\x7e\xd9\x3d\x6e\x9e\x36\x8f\x70\x14\x88\x8a\x9e\x03\x30\xda\x6f\xf0\x7f\x9b\xed\x6e\xf7\x50\x80\xf7\xbd\xec\x61\x44\x67\x1d\xe6\x02\x81\x77\x1c\xce\x3e\x0f\xda\xa9\x04\x07\x07\xe2\x76\x8e\x07\x06\x2f\x6c\xc8\x06\x29\x4b\x00\x1f\x15\xa2\xf2\x4d\x90\x30\xb2\x18\xce\xf8\x7d\x27\xe4\xb1\xc4\xbc\x00\x02\xab\x33\x3f\xbf\xa3\xa7\x89\x7b\x64\x85\xf1\xb5\x05\xf3\x5b\x2e\x70\xad\xd0\x3a\xc3\xd1\x9d\x21\xa2\x2a\x72\x8b\x19\x7a\x3a\xe2\x42\xac\x17\x6e\xa8\x85\xe4\x54\x93\x64\x9b\x91\x05\x4c\xbd\x9c\x41\xcd\x19\x79\x70\x07\x17\x1d\x19\xfa\x8e\xa5\x97\x96\x70\x4e\x1d\xf0\x38\x15\xe0\x06\xeb\xe0\xb4\x97\xd3\x0d\x5f\x88\x01\x22\x9a\x53\xcc\x53\x64\xc9\x20\x81\x27\x45\x1b\x63\xaf\x34\x03\x1a\xc4\xb0\x77\xfe\xf0\x91\x57\x77\xd2\xc5\xe5\x18\x45\x97\x7d\x57\xa0\x78\x8f\x5a\x92\xb0\xbd\x55\x8a\xd0\x1f\x7b\x52\x2b\x5c\x47\xb1\xad\xb5\x8e\xca\xf5\xd4\xb3\x57\x99\x5e\x70\xee\x3d\x62\xa5\x80\x39\x4d\xb6\xef\x65\x08\x2e\xa5\x25\xfc\xaa\x4d\x81\xa8\x27\x8f\xac\x93\x27\x63\x2a\x85\x48\x4b\x7c\x5b\x41\x84\x4e\x2c\x3a\xea\xe7\xa7\x18\xc8\x65\x0c\x94\xd1\x97\x8a\x5b\x6c\x85\x34\x0d\x79\xbc\x7a\x71\x39\x4f\xf8\x0d\xd7\xe6\x04\x51\xdf\x81\x94\xc9\xe3\x45\xcd\xdb\x2d\x90\x8c\x40\x4d\x72\x49\x80\x9f\x03\xe6\xf3\xc7\xe0\xe5\x12\x79\xc6\x96\xd4\x30\x83\x0f\xc9\x97\x8c\xf6\xa9\x21\xd1\x35\x6c\x63\xe0\x59\xaf\xf4\xdb\xc2\xd9\xd5\x6f\x7f\xac\x02\x45\x33\xe2\x56\x6b\xd5\x7e\x79\x2a\xae\xc3\x75\x7b\xa1\x49\x76\x2d\x2e\xfc\xd1\xa4\x4f\x4d\xd1\xb5\xa8\xa0\x75\xa1\xb6\x29\x08\x43\x8b\x4d\x80\xa0\xa7\xb2\x5f\x74\x48\x97\xb1\x5f\x46\x8d\x7a\xac\xdf\x3c\xf9\xf7\xcd\x69\x14\x71\x71\x9e\xec\xb0\x85\xd4\xdb\x8d\x34\x03\x2d\x18\x60\xf8\xd4\x33\x30\x06\x5f\xaa\x67\x82\x5c\x5f\xaa\xe7\xf2\x00\xd6\x36\xd5\xab\x93\x3a\x33\xc5\x47\x9d\x36\x3b\x5c\x1e\xa8\x42\xfa\x38\x5e\x56\x93\x17\x66\xf4\x66\xa8\xcb\xf8\xdb\xbc\xfc\x0a\x00\x00\xff\xff\x5c\xa5\xc5\x4e\x7a\x07\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1914, mode: os.FileMode(438), modTime: time.Unix(1520102541, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\xbb\x92\xe3\x38\xb2\x86\xfd\x79\x8a\x8a\x18\xe7\x1c\x43\x68\x24\xc0\xeb\x98\xeb\xaf\xb5\xc6\xda\x10\x09\x49\x8c\xe2\xad\x09\x4a\x2a\xed\xd3\x6f\x80\x52\x77\x11\x25\x22\xeb\xd7\xce\x8c\xd3\x51\xf9\x09\x40\x26\x12\xc8\xc4\x8d\x7f\xfe\xf9\xe7\xdb\x69\x70\xb3\x7b\xbb\x36\x3d\xc9\x37\x37\xde\xde\xfe\x4f\x96\x3f\x64\xf2\x43\x49\x2a\xde\xa8\xf8\x4b\x95\xff\xff\x87\xc7\xfe\x39\x4c\xf6\xad\xe9\x0f\xc3\x5f\x6f\xa7\x79\x1e\xdd\x5f\x3f\x7e\x1c\x9b\xf9\x74\xde\x8b\x6a\xe8\x7e\x54\x93\xf9\xcf\x6d\xd7\x99\x8f\x1f\xff\x6e\xfa\x7a\xb8\xba\x7f\x8d\xb7\x7f\xb4\x43\xf5\x6e\xa7\x3f\xfe\x90\x62\xf9\xff\xcd\xec\xa4\x94\x24\xcc\xae\x73\xb6\x3e\x5a\xd1\xdb\xf9\xab\xac\xae\xa2\x42\xc5\xfc\x50\xb3\x32\xa6\xd0\x84\xf9\x61\xca\xc8\x32\x46\x96\x33\xb2\x82\x91\x95\x71\x19\x49\x46\xc6\x58\x94\xa2\x46\xdb\xfa\xa3\x30\xb5\x23\xd1\xb9\xde\x77\x69\xf8\x67\x25\x3a\x67\x6a\xf7\xcc\xab\x0d\x7e\x32\xf5\xf3\x5f\x2b\xbd\xf1\xb7\xb9\xb9\x34\xf3\x4d\x5c\xef\x3e\x13\x0a\xeb\xde\x7e\x9c\xbf\xd4\x58\xf7\x1f\x5f\x29\xf7\x5c\xec\x5d\x8b\xa7\xe6\x6e\x2a\xd7\xd4\xa3\x13\x66\xae\xbb\x39\xfc\xfb\xbb\xd9\x55\x75\xbf\xeb\x9d\x30\xf5\x6c\xab\x93\xa8\xed\xa7\x70\x9a\xcc\x8d\x24\xed\xc6\x69\xa8\x45\x3d\x88\xda\x8d\xa2\x1b\x45\xd7\x54\xd3\xe0\x86\xc3\x97\xa2\xee\xb4\x7a\x89\xd6\x2f\xd1\xc9\x0b\xb4\x7a\xa9\xdd\xea\xa5\x76\xab\x97\xda\xad\x5e\x6a\x77\xf2\x52\xbb\x93\x97\xda\x9d\xbc\xd4\xee\xe4\xc5\x76\xa7\x2f\xd1\xd9\x4b\x74\xfe\x12\x5d\x60\xf4\x7e\x7b\x22\xd8\xc7\x26\x82\xfd\xe6\x88\xdf\x37\xfd\x71\x19\x9e\xdb\x75\xb4\x5a\x4b\xda\x19\x41\xf5\x74\xd9\x92\x54\x51\xc9\x71\x43\xd2\x93\x96\xc9\xce\x46\x24\xd9\x66\x3d\x77\x49\xfc\x37\x9b\xf5\xa8\xfd\xae\x1a\xa6\x25\x8c\x8d\x8d\x18\xfd\x3f\x18\x4a\x41\x94\x86\xa8\x84\xa7\xae\xbd\x23\x71\xed\xdd\xe6\x64\xba\xef\xf5\x88\xb4\x5b\xbb\xea\x24\x95\x8f\x37\x69\x5a\x70\xa5\x7d\x72\x99\x84\xb8\x8c\xb0\xf2\x32\x55\x62\x9c\x66\xb5\x5d\x71\x29\xc8\x65\x18\x97\x42\xfa\x52\xae\x72\x84\x53\x05\x54\x9e\x92\x5a\x29\x88\xcb\x13\xc4\x7e\x4a\x69\x85\xf4\x87\x52\x1a\xb2\x9f\x52\x3a\xe3\xfa\x23\x71\xd5\x89\x24\x91\x92\x05\x25\x20\xc7\xb5\xef\x93\x2b\x09\xab\xb7\x24\x8d\x70\x24\x89\xb3\xdf\x27\x47\x12\xe4\x30\x3d\x48\x29\xac\x7d\x89\xe4\xfc\xea\x93\xe3\xc7\xdb\x27\x97\x4b\xa8\x3f\x28\x07\xf5\xcd\xb1\xfe\xa5\x52\x42\xed\x53\x44\x90\xbe\x4a\x13\x37\x8e\xd6\x1c\x37\x8e\x3e\xb9\x44\x41\x7e\xa5\x09\xd3\x43\x13\xd6\x3e\xad\xe4\xf7\xed\xf3\xde\x47\x8a\xb1\xb3\x13\xce\x4e\x97\xa6\x3f\xee\xdc\xed\x8b\xe8\x16\x0d\xbb\xb7\x68\xd8\xbd\x4b\x36\x02\x65\xc5\x2d\xda\xaa\x8d\xb4\xba\x7a\xca\x12\x2a\x23\x66\xdb\xda\xce\xce\xd3\x2d\x92\x2a\x54\xa6\x3a\x59\x51\x9b\xd9\x74\x66\x9a\x37\x35\xae\xea\x7e\xab\xb6\xda\x91\x92\x89\x68\x87\x5e\xb4\x6d\x7f\x0d\x9b\xe7\x85\x45\xc9\x08\x4b\x1d\x17\x6a\x95\x47\x85\x4a\x26\x94\x8b\xb6\xba\xc5\xa4\x9a\x38\x69\x2a\x59\x29\x5b\x72\x9e\xc6\xa5\xa4\x92\xb8\x29\x54\x26\x4c\xe7\x4a\xd1\x39\x5b\xf5\x4f\xc2\xb2\x8c\x16\x9b\xc8\x78\x95\x89\x62\x64\x29\x53\x66\x99\x44\x65\x65\x96\x46\x94\x38\xd1\xf7\x19\xce\x6f\x88\x4b\xcc\xaa\x53\x6c\x24\x3c\x24\x5b\x23\xe1\x14\x4b\x4d\x17\x89\x8a\x96\xa6\x36\x4b\x1b\xba\xd1\xcc\xf6\xa3\x3a\x99\xfe\x68\x45\xd5\x0e\xe7\xda\x8c\x63\xa8\x6f\xc0\x90\x98\x27\x73\x38\x34\x55\x67\x7a\x73\xb4\xd3\x17\xb4\x9f\x9b\xfe\x7c\xee\x44\x1d\xcd\xc7\xab\x61\x1a\x85\x9b\x39\xb1\xfd\x98\x45\xe7\x9a\xd9\xd4\x07\x27\x8e\xed\xbe\xee\xfd\x6a\x60\x1b\x1f\xe1\xe5\x71\x35\xc2\x2b\xd2\x6a\x84\x17\x81\x95\x4f\x86\xc7\x4a\x5c\xa4\x9f\x1a\xd6\xc6\xa8\xf7\xda\xfc\x3c\x6f\xcc\x16\xf5\x5e\x5f\x7b\xa7\x24\xf9\xff\xa2\x73\x6b\xbd\x8f\xe7\x43\xf5\x3e\x7d\xcc\xe3\x3e\xb3\x8b\xcf\xe3\x21\x17\x8f\x6f\x6b\xae\x60\xf2\xdd\x90\xc3\xda\x57\x32\x71\x35\xe0\x14\x58\x1e\x93\x4f\x06\x9c\x86\x38\x6f\x19\x8c\xc3\xec\x4c\x92\x89\x97\x01\x87\xd9\x99\xa4\x06\xcb\x4b\xc0\xf6\x25\x58\x79\xa0\x5f\xf9\x54\x02\xe4\xa0\xfe\x25\xc2\xfa\x97\x88\x59\xbf\x05\x9c\x06\xdb\x97\x60\xed\x53\x4c\x7e\x1a\x70\x4c\x5e\x17\x72\x98\xbe\x0a\xf4\x17\xa5\xa1\xf1\x46\x1a\x1b\x97\xa4\x41\x7f\xd6\x60\x7f\x68\xb0\x3f\x34\xe8\xf7\x1a\x1c\xe7\x09\xb3\xde\x0a\x38\x50\xdf\x44\xc5\xd7\xf1\x21\x87\xd9\x39\xd1\xf1\xbc\x3d\xe0\x40\x3f\x4d\xf9\xd8\xb2\xe2\x30\xbb\xa4\x60\xff\xa6\x58\x5c\xa0\x34\x01\xdb\x97\x60\xfe\x92\x31\xeb\xa3\x80\x63\xd6\xab\x01\x07\xea\xcb\xed\x0f\x85\x1c\xa8\x47\x82\xf9\x41\x0e\xf6\x6f\x0e\xce\xe3\xb9\xc6\xf4\xcd\x41\xff\x2b\x98\x7d\x90\x80\x53\x98\xbe\x05\x38\xde\x0a\x70\x3e\x05\xf3\x17\x2a\xc0\xf9\xb4\x00\xe3\x6a\xc9\xac\xbb\x43\x0e\xab\xb7\x64\xd6\xfb\x21\x07\xb6\x0f\xf4\xfb\x12\xf4\x97\x12\x1b\xe7\x4a\x12\xd4\x1f\x4a\x62\x71\x4b\x71\xfb\x6b\x01\x87\xe5\x2f\x4a\x62\xf9\x8b\x92\x1a\xea\x5f\x25\xa1\xf9\xc0\x27\x6c\x88\x3f\x7b\x0e\xd1\x77\x49\x74\x30\x0e\x1a\x1f\x4b\x80\x83\x38\xc5\xec\xff\x85\x1c\x32\xce\x49\x2a\x50\x0f\x05\xf5\x1b\x49\x05\xf5\x9b\x4f\xef\xb1\xf2\x34\xe4\xcf\x24\x35\xe4\x7f\x9e\x43\xcb\xc3\xfc\x45\x43\x71\xcb\x2f\x3f\x50\x0e\xd4\x03\xb4\x5f\x22\xb1\xf2\xb0\xbc\xce\x2f\x8f\x30\xbb\x24\xa0\xdf\x27\x50\xde\xe9\x97\x5b\x98\x5f\xa5\xd0\x3a\x94\x64\x0a\xcd\xf7\x9e\xc3\xda\x97\x42\xf9\x29\xc9\x14\x9c\xaf\xb0\xfc\x8a\x64\x06\xad\x8f\x3c\x87\xd9\x2f\x83\xf2\x76\xcf\x61\xf3\x4b\x06\xad\x3f\x48\xe6\x12\xf3\x97\x1c\xca\x87\x48\xe6\xa0\x1e\x39\x14\xa7\x49\xe6\x50\x3e\x49\xb2\x00\xfd\xaa\x20\xcc\x7e\x05\xd8\xbf\x05\xd8\xbf\x05\x38\xff\x61\xf9\x9f\xe7\x30\xfb\x61\xfb\x61\x04\xee\x87\x91\x2c\xc1\xf9\xaa\x04\xed\x57\x82\xf1\x03\xc9\xeb\xb4\x2c\x88\x3b\x37\x5d\x73\xdc\x39\xe7\x8a\x53\x12\x58\xa7\x78\xee\x9b\xbd\xd0\xdf\x9c\x06\xf2\x21\xcf\x25\x40\x1e\x71\xe7\x20\xbb\xa8\x0c\xe5\x40\x3d\xb8\x73\xce\x80\x63\xce\x11\xd7\x5c\x01\xe9\x5b\x4a\x02\xf2\x12\xcf\x29\x60\x3e\xf0\x5c\x02\xf9\x8b\xe7\xb0\x7a\x53\xc8\xaf\x3c\x87\x95\x87\xec\x0b\x78\x0e\xb5\x1f\x36\x3e\x4a\x5f\x33\xc2\x11\x36\x3e\x3c\x87\xf8\x41\xe9\x23\x17\xc8\x41\x76\x21\x05\xd6\xab\x41\x3d\x34\xd6\xbf\x04\xfa\x15\xb4\xcf\xe5\x39\x6c\xfc\x96\x94\x01\xeb\x4b\xcf\xe5\x98\xff\x51\x01\x96\xc7\xdd\x53\x08\x38\x4c\x5f\x25\xb1\xf1\xab\x40\x3f\x50\xc8\xfa\xd2\x73\xc8\xfe\xf8\xc2\x81\xed\x4b\x91\xf2\x68\xb9\x09\x85\x71\x40\x5c\xf5\x1c\xb2\x7f\xef\x39\xc8\x9f\x17\x0e\xf0\x67\x92\x32\x41\xc6\x1b\x49\x68\x1d\x70\xe7\x30\x3d\xa0\xb8\x45\x52\x42\xf1\x68\xd9\xe2\x00\xc6\xc7\x72\x9e\x02\xf8\x9f\xe7\xc0\x7a\x41\x3b\x53\x82\xe9\x4b\x09\xd6\xbf\x04\xc5\xad\x65\xff\x19\xea\x37\x02\xfb\x83\x90\xf5\x87\x06\xf7\x8b\x35\xb8\x6f\xab\x97\xfd\x49\x68\x5c\x42\xfb\x8e\x9a\xa4\x92\x58\x79\x8a\x30\x3f\x50\x0a\xd8\x3f\xb8\x73\x58\xbd\xdc\xbd\xaf\x35\x97\x00\xfb\x5c\x0b\x07\x96\x07\xc5\x2d\xcf\x81\xe5\xe5\x30\x07\xf9\x8b\x2a\x78\xff\xbb\xf6\x8e\x6a\x06\xc8\x96\x82\x94\x4f\x4c\x59\xc3\xad\x39\xce\x20\x2b\x8e\x75\x94\x35\xc7\x25\x4c\x2b\x8e\x5d\xa8\x7e\x72\xbc\xe3\xad\x39\xac\x5e\x7e\x82\x5c\x73\x98\x5d\xf8\xc0\xbb\xe6\x38\x07\x58\x73\x98\x5d\x34\xeb\x28\x6b\x0e\xb3\x0b\xbf\x10\x5c\x71\xa0\x1e\x7c\x20\xff\xe4\xf8\x81\xbb\xe6\x30\xbb\xa4\xa0\xdf\xf3\x01\x7f\xcd\x81\xf5\x82\xfa\xa6\xec\x04\xbe\xe6\x30\xff\xcb\xc0\x7a\x33\xb0\x3c\x7e\xe3\x6a\xcd\x61\x7e\xc0\x1f\xd0\xad\x39\xcc\x9f\xf9\x83\xbc\x35\x87\xf9\x33\x7f\xe0\xb7\xe6\x20\x7d\x7d\x6a\x0a\x72\x90\x1e\x24\x31\x3d\x88\x0f\xf8\x2b\x0e\xd4\x83\x40\x3d\xf8\xc4\xf4\x93\xe3\x0f\xac\xd6\x1c\x5a\x1e\xa6\x2f\x38\x4f\x92\x06\xfb\x03\x9c\x27\x49\xa3\xed\xc3\xe6\x03\x02\xe7\x3f\x4a\xc1\x7e\x4b\x41\x7d\x53\x50\xdf\x0c\x1b\xe7\x94\x81\xed\xcb\xb0\xb8\x45\x19\xa7\x87\xbd\x88\x4b\x33\xcd\x67\xd3\x5a\x33\xcd\xa7\xf0\x42\xe9\xe1\xdb\x1b\xec\x75\x63\x8e\xfd\xe0\xe6\xa6\x72\xc2\x9d\xc7\x71\x98\xe6\x28\xe9\x2a\xf8\xea\xac\x87\xe1\xcb\xb3\x1e\x86\xaf\xcf\xda\xad\xcb\xfb\xb6\xea\x05\x6b\x09\x7b\x16\x97\x61\x9a\xed\xc7\x72\x59\x3f\x52\xf4\xa1\xb5\x1f\x4f\xaf\x00\x0e\xb1\x7b\xc7\xc7\x27\xf4\x68\x07\x4c\x87\xa3\x1d\x2e\x76\xc2\xd8\xd3\xf3\x6b\xc7\xd3\xf3\xcb\xe6\xd3\x7b\xdc\x35\x4f\xef\xca\xbb\x92\x5e\xde\x60\x31\x7b\x14\x21\x17\x77\xe1\x90\x8b\xbb\x70\xc8\xc5\xa7\x8a\x80\x63\xce\xd4\xd7\x5c\xc1\x9c\x79\x05\x1c\x73\xc6\x1c\x70\x29\x66\x97\x22\x05\xeb\x4d\xe3\x53\xf2\x9a\x2b\x41\x3d\x4a\xe6\x0d\x60\xc0\x31\x67\x77\x01\x97\x82\xe5\x31\x6f\x2d\x03\x8e\x79\x63\xb7\xe2\x88\xbb\x8b\x13\x70\x98\xbf\x90\x64\xce\xd0\xd6\x1c\x31\x77\xb2\x02\x8e\x39\x7b\x0f\xb8\x14\xf2\x2b\x52\xa0\xbe\x2a\x81\xfa\x83\x14\xf3\x86\x32\xe0\x98\xb7\xaf\x21\x07\xf9\x1f\x71\x6f\x3c\x43\x0e\xb3\x0b\x77\xf7\x37\xe0\x98\x33\xf5\x80\x03\xf5\x4d\xb0\xf9\x85\x12\xe6\xee\x42\xc8\x61\xfe\x97\x80\xfe\x97\x60\xe3\x97\x12\xe6\x6d\xee\x9a\xe3\xee\x74\x04\x1c\xd8\x6f\x29\x36\xdf\x13\x77\x47\x24\xe0\x98\x3b\x90\x01\x87\xcd\xbb\xec\x5d\xdd\x80\x03\xfd\x2a\x63\xee\xec\x04\x1c\x38\x7e\xb3\x14\xf3\xbf\x0c\xd5\x37\xc5\xec\x0c\xc6\x73\x02\xe3\x39\xfb\x86\x3c\xe0\x98\x3b\xea\x21\x87\xc5\x8f\x1c\xb4\x0b\x77\x57\x23\xe0\xc0\xf6\x15\xe0\x7c\x50\x80\xe3\xb7\x00\xe3\x0c\x98\x97\x50\x01\xfa\x55\x09\xf6\x1b\xf7\x66\x2a\xe4\x30\x3b\x83\x79\x84\x02\xe3\xb9\x92\xcc\x1d\xc3\x90\x83\xda\xa7\xb8\xbb\xab\xa7\x77\xfe\x0b\x16\x0f\xf9\x3e\x0a\x34\xbb\x7d\x9b\x01\x1f\xb9\x58\x73\xdc\x2b\xd0\x66\x87\x7d\x34\xa3\xd9\xed\x6f\xaf\x72\x7c\xbd\xd0\x4b\xd6\x15\xc6\x97\xe6\x7a\x85\x94\xf6\x1b\x63\x4b\xa3\xfb\xc3\xf2\xca\x3a\xe1\x86\xaa\x31\x6d\x64\x3d\xf5\x1d\x28\x7a\x67\xe6\x2a\x58\x3c\x36\xfd\xc1\x4e\xb6\xaf\xac\x68\x87\xca\xcc\xcd\xd0\x8b\xb6\xb9\x84\x4f\xca\xdf\x2f\xf0\xda\xf8\xfd\x02\xaf\x8c\xdf\x2f\xf0\xba\xb8\xdd\x93\xb8\x5e\xaf\xa2\x73\xc2\xbc\x9b\xba\x0f\xbf\x83\xb3\xb4\x77\xda\xfa\x24\x55\xeb\xd4\xd5\xee\xc5\x64\xeb\x6e\xe8\x6b\xb1\x3c\xb6\xdd\xae\xa1\x13\xcf\x1f\xb9\xea\x86\x7d\xd3\x5a\x31\x36\xa3\x15\x66\x6a\x62\x2b\xeb\x8d\x37\xf8\x9d\xeb\x67\xeb\xe6\xe8\xe7\x00\xee\x9f\xd8\x1a\x0e\x87\xa6\xb2\x66\x1c\xdd\xdd\xe4\x4f\xc4\x74\x6e\x2d\x8f\x0d\xc0\x3b\x7e\x86\xd9\xf0\x87\xa1\xb7\xce\xce\x73\xd3\x1f\xdd\x6e\xdf\x2b\xe1\x7f\xf5\xcb\x27\xbe\xff\x45\x75\x7b\xf5\x17\xf5\x3e\x7d\xf1\x17\xa7\x77\xa4\x8e\x71\xb2\xe2\x30\x0c\xf3\x38\x35\xfd\x3c\x4e\xb6\x6e\xaa\xd0\x2c\xe3\x64\x2f\x8d\xbd\x3e\xf9\xcc\x64\xea\x67\x3b\x6f\x7d\x68\xc9\x97\x39\xf9\x96\x98\xdf\x63\x6e\xbb\x03\x26\x3b\x0e\xd3\xec\xc4\xd5\x3a\x01\xec\x5a\xb9\xea\x64\x3b\xb3\x2e\x6c\xc3\xe7\x9d\xad\xce\x93\xdd\x70\xda\x87\xe0\xd0\x1a\x77\x9a\x4d\xfb\xde\xf4\xc7\x2f\xf2\x47\x5b\xd1\xd6\xfc\x32\xbb\x33\x7d\xbd\x1f\xd8\x3d\xa6\xdf\xec\xb5\xe9\x77\xe3\x68\x51\x16\xe1\xee\x0c\xff\xfc\x3d\x64\x23\x4c\x1f\xfb\xca\xc0\x43\xb2\xf1\x5d\x80\x87\x64\xe3\x2b\x03\x6e\xbc\xf5\x76\x8e\xb6\x67\x91\x9a\x36\xb6\xeb\x78\x97\xdb\xf3\x34\x8c\xf6\x9b\xee\xfe\xd9\x41\x9d\xf5\xb3\xfb\x3b\xcc\xc6\x30\x72\xee\xfa\x3c\x1a\xdc\x3c\x4c\xb6\x32\xb3\x69\x87\xe3\x64\x2f\xbf\xe2\xc6\xf2\xe7\x9f\x67\xd3\x36\x73\xb4\xf2\xf3\x74\xb1\x37\x71\x35\xb3\x1b\xfa\x08\x33\x4b\xe1\x5c\x2b\xcc\xbb\xa8\x6f\xbd\xe9\x9a\x4a\xcc\x8d\x9f\x07\xa3\xfb\x9f\x9f\x3f\xf8\x0e\xb4\xad\xad\x86\xae\x33\x7d\xfd\xad\x99\x00\x76\xc3\x5c\x9f\xa4\x19\x47\xfb\x21\xf6\x7e\xf8\x6d\x03\xf1\x6a\xef\xf2\xf3\x14\x9b\x4f\x96\xd0\xc2\x7e\xc4\x71\x76\x07\xfb\xeb\xcb\x14\xee\x64\x46\xdf\x0a\x36\xc0\x5e\x48\x3e\xf6\x90\x57\xe3\xf1\xdb\x39\x76\xf3\x57\xdb\xe5\xdb\xc9\x79\x17\x39\xdd\xf6\x53\x53\x2f\xa9\xce\xc9\x4e\xa1\x57\x2d\xb3\xf1\xf3\xf6\xf7\xa3\x02\x2c\x16\x3d\x60\x2c\x0c\x3d\x60\x2c\x02\x3d\x60\x2c\xf8\x3c\x60\x60\xca\xfc\x1f\x8c\x8e\x19\x7c\x75\x20\xc0\x4f\x9a\xc1\xd1\x01\x58\x3b\x57\xf3\x63\x6c\x3f\x4d\x1a\xec\x98\x7f\x08\x7d\xcc\xf8\x6e\x84\x3c\xd0\xbf\x87\x6d\x68\xe6\x13\x45\x40\x3b\x2c\x6a\x2e\x9f\xf5\x15\xcd\x78\xc9\x18\x20\xff\x06\x59\x12\xde\x5f\xb9\xe5\x7f\x03\x00\x00\xff\xff\x23\xf2\x44\x50\x33\x58\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 22579, mode: os.FileMode(438), modTime: time.Unix(1523291431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x72\xea\x30\x10\x85\x7b\x9e\x42\x33\x34\xf7\x16\xac\x25\xc1\x40\xa0\x4c\x9f\x2a\x45\x6a\xa1\x1f\xa3\x41\x96\x3c\x5e\x19\xc7\x79\xfa\x0c\x81\x10\x3c\x89\x2c\x33\x2a\xf7\xdb\xdd\xb3\xe7\x68\x3e\x9f\x93\x43\xc0\x88\xa4\xb3\x9e\x51\xd2\xd6\x4a\x44\x4d\xfe\xb1\x4d\xc1\x68\xc1\x29\xdb\x10\xca\x76\xcb\xf5\xff\xd9\x99\x7c\x09\x8d\x26\xd6\x9b\xb0\x23\x87\x18\x6b\xdc\x15\x45\x69\xe3\xa1\xdd\x83\x0c\x55\x21\x1b\xf1\xd1\x2f\x2a\xf1\x5e\xbc\x59\xaf\x42\x87\xaf\x75\xff\xec\x82\x3c\xea\x66\x36\xa3\xf0\xf5\x08\xa5\x94\x53\xbe\x60\xe0\xa0\xbb\x50\x97\x95\xe7\x09\x03\x48\x2e\x27\x40\x46\x65\x21\xb6\xda\x9a\x3c\xf4\xb4\x65\x79\xc8\xf0\xbc\x26\x4e\xd7\xf9\xeb\x38\x53\x34\x03\x89\x16\x54\xe8\xbc\x0b\x42\x8d\x53\xa7\xd5\x14\x50\x46\xa7\xc6\xd6\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x38\xe4\x1c\x28\xed\xec\x49\x37\xfd\x08\xf4\xad\x27\x53\x4e\xcb\xd1\xd5\x59\x2d\x26\x06\x18\xcd\xe1\xda\xf4\x18\x00\xe2\x28\x94\x47\xf0\x3a\xde\xb1\xcb\x9f\x93\x14\xd6\xbf\xce\x02\x8f\x22\xca\x74\x4f\xd2\x06\x53\x82\x42\xd8\xb3\x29\xf9\x98\x72\x62\x90\xb7\x55\x43\xe4\x5e\x1d\x3a\x1c\xb7\x27\x05\xfc\x65\x0f\x46\x11\xf1\x11\x3f\xaf\x0d\x2c\x1d\xdf\x6d\x64\x92\x88\xae\x85\x49\x3f\x6d\x9a\x67\xb9\xca\xb5\x10\x9a\xf2\x33\x00\x00\xff\xff\xde\x5a\x01\x20\x0f\x05\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1295, mode: os.FileMode(438), modTime: time.Unix(1508198014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x6f\xe3\x30\x0c\x85\xf7\xfc\x0a\x01\x59\xee\x86\xa3\xed\xe4\x80\xbb\x66\xec\xde\xa9\x43\x67\x45\xa2\x6d\xb6\x92\x68\x88\xb4\x95\xf4\xd7\x17\x69\x87\xc2\x48\x94\xc2\x1b\xdf\xe3\xf7\x68\xbd\xed\x76\x6b\x46\x16\x15\x53\x28\xfd\x33\x78\xd2\x6c\xcd\xaf\x76\xdf\xb4\xfb\x66\xd7\x76\xff\x4d\xf7\x70\xf8\xdb\xfd\xde\x5c\x7c\x4f\x9c\xd1\x50\xea\xf9\x60\x46\xd5\x49\x0e\x4d\x33\x90\x8e\xf3\x11\x1c\xc7\xc6\x65\xfb\x7e\xfe\x13\xed\xa9\x79\xa1\xe4\xb9\xc8\xf3\x74\x7e\x0c\xec\xde\x30\x6f\x36\x2d\x7c\x7e\xc6\x3a\xa5\xc5\x2a\x71\x02\x09\x02\x91\x5c\x66\xe1\x5e\x2f\x84\x6f\xd3\x44\x70\xa4\x34\xac\x86\x8e\x77\x77\x56\x5c\x0e\x15\xc5\x47\x0f\x11\xd5\x0a\xe6\x85\x1c\xd6\x00\x3e\x09\x44\xe9\x35\x39\xa1\x95\x30\x5c\x9f\x32\x40\xa0\x05\xd7\xa3\xc0\x47\x1b\x40\x6c\x84\x28\x69\x25\x11\xba\x25\x90\x68\x25\x38\xf0\x40\xe9\x1a\x78\xf3\x16\xd6\xfe\x0a\x9f\x77\xad\x94\xd7\x6e\x1f\x73\x25\x40\x61\xce\xb5\xbf\x56\x8a\x08\xe5\xab\xae\x95\x30\x8f\x7d\x65\xa5\x0e\x5b\x6c\x20\xff\x53\xb7\xc5\xbb\xe9\x8e\x64\x43\xed\x9d\x4a\x29\xb7\x0b\x2a\xe2\x38\x29\xd8\x69\xaa\x66\xd6\x1c\x80\x7e\x40\x99\x49\x11\x12\xea\x47\x00\x00\x00\xff\xff\x1b\x70\xbd\x5e\x0b\x03\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 779, mode: os.FileMode(438), modTime: time.Unix(1520102527, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x4f\x8f\x9b\x30\x10\xc5\xef\xf9\x14\x48\xb9\xb4\x87\x0c\xfe\x97\x90\xe4\xd8\x7b\x4f\x3d\xf4\xec\xb5\x07\x82\x16\xdb\xd4\x76\x96\xd0\x4f\x5f\xd1\x55\x57\x45\xc2\xd3\x46\xdc\xf8\xbd\xf7\xfc\x98\x11\xde\xef\xf7\xd5\x2d\xa4\x9c\xaa\xa9\xf7\x4d\x95\xc6\xb9\xfa\xc4\x64\xcd\x64\x2d\x18\x3f\x57\xfc\x72\x55\xfc\xf3\x6e\x51\x7d\x0d\x11\xab\xde\xb7\xe1\x5a\xdd\x72\x1e\xd3\xb5\xae\xbb\x3e\xdf\xee\x2f\x60\x82\xab\x4d\xd4\x3f\xe7\x83\xd3\x8f\xfa\x7b\xef\x6d\x98\xd2\xb7\x71\xfe\x32\x04\xf3\x8a\x71\xb7\x63\xf0\xfb\xa9\xf4\x81\x31\xc6\x41\x1f\x5c\x42\xdb\x21\x78\xcc\x6b\x26\x49\x66\xcd\x26\xb4\x03\x4c\xef\x67\x2e\x4d\x3e\xde\x1b\x9b\x38\x57\x12\x86\xe0\x61\x18\xfc\xb4\x32\x2d\x50\x30\x12\x5e\x08\xa8\x14\x01\x8f\x0d\x01\x4f\x54\xec\x99\x70\x36\x0d\xd8\x7b\xda\x64\x82\x29\xce\x61\x30\x73\x89\x0a\x45\xd2\x23\x45\x25\x49\x15\x49\x4f\x64\xab\x0b\xe1\xe5\x42\x96\x97\x23\xb8\x58\x92\x09\x5a\x9e\xa3\xe0\x92\xd8\xac\xe0\x52\x94\x93\x25\x3b\x17\x1b\x4b\x79\x29\x33\x55\x9e\xbf\x62\x27\x82\x35\xd0\x46\xbd\xcd\x54\x53\xf6\x1d\xcb\x3d\xa9\x9d\xa8\xa6\xc4\x82\x1b\x75\xc6\x87\xb9\x69\xdf\x21\x87\x1c\x75\xdb\xf6\xc6\x69\xaf\x3b\x8c\x6b\xe9\x2c\x20\x61\xce\xbd\xef\x12\x58\x9d\x35\xb8\xde\xc4\x90\x42\x9b\x97\xbf\x13\xf4\xab\xb6\x3e\xad\x2c\xf6\xe5\xf8\xac\x05\xef\xf0\x16\x62\xc6\xc7\x86\xfe\x43\xd4\x61\x78\x36\xb7\x9b\x1e\x9b\x77\xc9\x9f\x98\xc3\xd4\x7b\xea\xc8\x34\xce\x1e\xb3\x20\x29\xde\x63\x18\xf1\x2f\xc9\x46\x8f\xf4\xc3\x41\xc6\x01\x1d\xe6\x38\x17\xd2\x16\x6e\x82\x73\xda\xdb\xff\xd0\x46\xb4\x01\xfa\xf1\xed\x54\x50\xbc\x8f\xf3\x5f\xdf\x37\xe9\x9c\x82\x5f\xc3\x5f\x01\x00\x00\xff\xff\xff\x21\x51\xe5\x42\x06\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 1602, mode: os.FileMode(438), modTime: time.Unix(1523163074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xbd\x8e\xdb\x30\x10\x84\x7b\x3f\x05\x01\x37\x49\x71\x14\x77\x45\x49\xa4\xcb\xf4\xa9\x52\xa4\xe6\xaf\x2d\xc4\x16\x0d\x89\x86\x72\x79\xfa\xe0\xe2\x83\x83\x03\x7c\xda\x85\x3a\xed\xa7\x99\x85\x66\x76\xbf\xdf\x8b\x53\x59\xea\x22\xd6\x71\x1a\xc4\xed\x1a\x5d\x4d\xe2\x8b\xb2\x8d\xd2\x0d\x2a\x30\x02\xcc\x01\xed\xd7\xdd\x1b\xf8\xbd\xcc\x49\x8c\x53\x2e\x07\x71\xaa\xf5\xba\x1c\x9a\xe6\x38\xd6\xd3\xcd\xcb\x50\x2e\x4d\x98\xdd\x9f\xd7\x97\x8b\xfb\xdd\xfc\x1c\xa7\x58\xd6\xe5\xc7\xf5\xf5\xdb\xb9\x84\x5f\x69\xde\xed\x94\xfc\xf7\x08\xa5\x94\x02\xff\x02\xf2\x2c\xd7\x3b\x75\xb7\x7c\x53\xf8\x00\xb9\x96\x01\xe5\x44\x43\xd0\x71\x20\x1f\x18\x50\x8a\x34\x84\xad\x61\x40\x86\xb1\x53\x3b\x00\x03\xb2\x3d\x0d\xe9\xc4\xb0\xeb\x35\x43\xc9\x80\xa3\x21\xdb\x33\x7e\x81\xeb\x3a\x06\x94\x19\x76\xbe\x65\xc4\xe2\x83\x62\x40\x31\xd3\x50\xf0\x0c\xa5\xd8\x33\x76\xca\x9a\x56\x02\xad\x90\x86\xfa\x40\x5f\x0b\x0c\x99\xee\x13\x18\x4d\x1f\x27\x98\xa0\x69\xc8\x6a\xcb\x80\x7a\xba\x99\xe0\x3d\x5d\x15\x48\x8a\xbe\x60\x48\x96\x86\x50\xb9\x81\x86\xc0\xd1\xd9\x21\x0e\x74\x9f\x10\x39\x76\x18\xe8\xec\xb0\x35\x74\x2c\xd8\x32\x3a\x8e\xda\xd2\x2d\xc0\xae\x63\x2c\xde\x25\xfa\x82\xb1\xcb\x74\xc7\xb1\x37\x54\x76\xee\x26\x63\x59\xa7\x73\x71\x71\x83\x0a\xf5\x1c\xb7\x54\x1e\x12\x97\x31\xcc\x65\x29\xb9\x3e\x1f\x6f\x28\x2c\x9c\x3d\x72\x42\xf9\xfe\xfa\xb9\x53\x3e\xca\xb8\x48\x0f\x1c\xb1\x87\xc2\x47\x64\x4a\xf5\x81\x7c\xfe\xf1\x7d\xf2\x3e\x28\xf3\xf1\xff\x60\x5d\x37\xcc\xff\x06\x00\x00\xff\xff\x13\x84\x26\x61\x3b\x08\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 2107, mode: os.FileMode(438), modTime: time.Unix(1523291422, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\x31\xaf\x9b\x30\x10\x07\xf0\x3d\x9f\x02\x29\x4b\x3b\xc4\xd8\x86\x24\x26\x63\xf7\x4e\x1d\x3a\x5f\xcd\x41\xac\x87\x6d\x6a\x5f\x1e\xa1\x9f\xbe\x22\x95\xaa\x46\x7d\xbe\x88\x8d\xdf\x1f\x38\xfe\x27\xc1\x7e\xbf\xaf\xae\x31\x53\xae\x16\x17\x8c\xaa\xf2\xbc\x56\x9f\x64\x53\xcb\xa6\xd6\x52\x99\x4a\x75\x97\x56\x7d\xde\x6d\xb1\xaf\x31\x61\xe5\xc2\x10\x2f\xd5\x95\x68\xce\x97\xba\x1e\x1d\x5d\x6f\x3f\x84\x8d\xbe\xb6\x09\x7e\xad\x07\x0f\xf7\xfa\xbb\x0b\x7d\x5c\xf2\xb7\x79\xfd\x32\x45\xfb\x86\x69\xb7\x93\xe2\x71\x54\x70\x90\x52\x2a\x01\x07\x9f\xb1\x1f\x51\x04\xa4\x67\xd3\x8c\x35\x8c\xb5\x8c\x1d\x19\x3b\x31\x76\x66\xcc\x30\xd6\x95\x4d\x49\xc6\x98\x5e\x54\xb1\x97\x0f\x4e\xda\x3e\x2b\xad\x3a\x31\xc5\x20\xa6\x29\x2c\xff\xa3\x36\x0c\xb6\x2d\x83\xa7\x23\x83\xe7\x86\x41\xc3\x5d\x69\xce\x45\xd4\x8f\x0d\x66\x2a\x69\x2b\x5b\x31\xd9\xb5\xa4\x47\xcd\xa9\x61\x54\x69\x5d\x1e\x79\xd3\x72\xc3\x5a\xe9\xe3\x89\xd3\x73\x79\x01\x5a\x69\xa3\x38\xed\xca\x2d\x37\x4a\x16\xdf\xa7\x69\xba\xa2\x19\x55\x9e\xc7\x34\xba\x6c\xad\x2c\x58\xf4\x33\x10\xde\xed\x15\xc2\x88\x4a\x50\x82\x61\x70\xd6\x43\x80\x11\xd3\x53\x14\x6f\xe2\x3d\x26\xc2\xbb\xe8\x81\x40\x78\x67\x53\xcc\x71\xa0\xed\xa3\xf2\x37\x94\x91\xc8\x85\x31\x1f\x16\x17\xd8\xdc\xbc\x06\x24\xcd\x2a\x4c\xc4\x3a\xde\x52\x9c\xf1\x9f\x08\xbc\x41\x1f\xf2\xd3\xd0\xf9\xa7\x17\x84\x13\x7a\xa4\xb4\x96\xee\x46\x40\x79\x40\x2d\x6e\x73\x0f\x84\xaf\x52\x4b\x2e\x24\xb6\xe7\x70\x05\x6e\x6e\xa3\xf7\x10\xfa\x97\x33\xfd\x69\xfa\x55\x8b\xdb\x9f\x40\xb8\xf9\xfd\xf4\xec\xbf\x03\x00\x00\xff\xff\x5e\xcb\x74\xfd\x2b\x06\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1579, mode: os.FileMode(438), modTime: time.Unix(1520102553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd4\xbf\xaf\xda\x30\x10\x07\xf0\x9d\xbf\xc2\x12\x4b\x3b\x3c\xc7\x67\x3b\x21\x61\xec\xde\xa9\x43\x67\xff\x0c\x51\x93\x98\xc6\xa6\xe9\xeb\x5f\x5f\xa5\x0f\x21\x21\xd1\xdc\x89\x0d\x7f\xf8\xde\xf9\xce\xe2\x78\x3c\xb2\x4b\xca\x25\xb3\x75\x98\x5b\x60\xb7\xab\x37\x25\xb0\x4f\x42\x55\x42\x55\x52\x40\xcb\xa0\x3b\x6b\xf8\x7c\xd8\xe4\xd7\xb4\x04\x36\xcc\x31\x9d\xd9\xa5\x94\x6b\x3e\x57\x55\x3f\x94\xcb\xcd\x72\x97\xa6\xca\x2d\xe6\xcf\xfb\xdb\x64\x7e\x57\xdf\x87\xd9\xa7\x35\x7f\xbb\xbe\x7f\x19\x93\xfb\x11\x96\xc3\x41\xf0\x7f\x1f\x26\x84\x10\x5a\xbd\x01\x1f\xf9\xfa\xa1\x3e\x4a\x6e\x09\x4f\xa8\x01\x02\x8a\x92\x82\x3a\x1c\xa9\xe8\x70\xa4\x8d\xc7\xd1\x29\x68\x1c\x75\x2d\xa1\x27\xd3\x08\x1c\x59\x59\x13\x50\x43\x98\x93\x0d\x84\x72\x4e\x10\xe6\xe4\x25\xe1\x76\x5e\xe3\xe5\x40\x88\x13\x01\x79\x83\x23\x00\xbc\x71\x90\x0a\x7f\x99\xa0\x3a\x42\xe3\x27\x87\xaf\x05\x3a\xdf\xe2\xc8\x28\x7c\x77\x60\x5a\x42\xe3\xce\x13\x46\xe0\x05\xbe\x3b\xf0\x10\x09\x48\x53\x92\x1c\xe1\x76\x41\x10\x86\x19\xad\x45\x91\x84\x16\x2f\x27\x65\x68\x28\x88\x50\x4e\x75\xf8\x7f\x81\xac\x6d\xc0\x51\x63\xb1\xdd\x99\x1b\xf7\x69\x9d\xc7\x64\xfc\xbe\xfa\xa5\x29\xd0\xf6\x1b\x34\xdc\x8f\x7c\xcd\x7c\x1a\xdc\x92\x72\x8a\xe5\x85\x09\xd3\xbe\x01\x4a\x10\x50\x92\x24\x25\x49\x52\x92\x14\x25\x49\x51\x92\x34\x25\x49\x53\x92\x6a\x4a\x52\x8d\x27\xb9\x32\xfa\xbd\x87\x42\x58\x7e\x0c\x92\xdf\xbf\x7e\x5d\x63\x03\xeb\xcf\xbd\xc3\xff\x75\x17\x7b\xe2\x03\x7c\xfc\xfc\x99\xcc\xa1\x3c\x48\x1e\xf3\x7e\x9b\xb4\x4a\xd8\xc9\xfd\x20\x2d\xfd\xdf\x00\x00\x00\xff\xff\xb7\x3f\x7a\xe8\x2e\x09\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 2350, mode: os.FileMode(438), modTime: time.Unix(1523166029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1518299054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xb1\x72\xe3\x38\x0c\xed\xf3\x15\x9e\x49\x73\x57\x08\x8e\x93\xbb\xcc\x4d\x66\xae\xd9\x7e\x67\x8b\x2d\xb6\xa6\x49\x48\xc2\x58\x04\x18\x02\xb2\xec\x7c\xfd\x0e\x1d\x27\x5e\x2b\xe2\x6e\x4a\xe9\x3d\x02\xc4\xe3\x03\x70\x7b\x7b\xbb\x92\x84\x3c\x65\x5b\x4d\xc4\x9b\xbb\x15\x1e\x2c\xbb\xd5\x5f\x6b\x34\xbf\x0e\xac\xd1\xe9\x33\x78\xe1\xf6\xef\x9b\xc2\xfd\x2a\x19\x57\xc4\xad\x3c\xad\x7a\xb3\xa4\x4f\xeb\x75\x47\xd6\x8f\x5b\xf0\x12\xd7\x3e\xbb\x97\x63\x13\xdd\x61\xfd\x83\x38\xc8\xa4\xdf\xd3\xf1\xcb\x20\x7e\x87\xf9\xe6\x46\x31\xef\x31\xff\xbf\x76\xac\x13\x66\x85\x48\x3e\x8b\x4a\x6b\xa7\xa3\x17\x38\x25\x05\xdd\x1d\x13\xce\xfe\x67\x05\x8d\x2e\x9b\xfa\x8c\xc8\xd5\xe3\x2f\x0f\x8f\x9b\xff\x36\x8f\xb0\x17\x88\x8a\x9e\x03\x30\xda\xaf\xf8\xbf\x9b\xfb\x87\x87\x7f\x6a\xf8\x76\x90\x2d\x4c\xe8\xac\xc7\x5c\xcb\xe1\x1d\x87\xa3\xcf\xa3\xf6\x2a\xc1\xc1\x8e\xb8\x9b\x11\x02\x17\xcd\x0c\xd9\x20\x65\x09\xe0\xa3\x42\x54\xfe\xc8\x12\x46\x16\xc3\xeb\x3b\xf8\x5e\xc8\x63\x35\xfb\x02\x0a\xac\xce\xfc\x2c\xca\x40\xc8\xd6\x28\x74\xce\x70\x72\x47\x88\xa8\x8a\xdc\x61\x86\x81\xf6\x33\x75\x5f\xc9\x30\xb1\xc2\xf4\xfa\x74\x4b\x78\xf1\x01\x75\x90\x9c\x6a\x92\x6c\xd7\xf9\x02\xa6\x41\x8e\xa0\xe6\x8c\x3c\xb8\x9d\x8b\x8e\x0c\x7d\xcf\x32\x48\x47\x38\x0b\x18\x70\x5f\xaa\x70\xa3\xf5\x70\xd8\xca\xe1\xe3\x95\x42\x0c\x10\xd1\x5c\xf9\x26\x8f\x55\xc3\x04\x2e\xda\xb6\xc6\x5e\xe9\x1a\x69\x11\xc3\xd6\xf9\xdd\xe5\x64\xd3\x4b\x1f\x2b\x24\x45\x97\x7d\x5f\xcb\xf2\x4e\x5b\x94\xa7\x5b\x90\x94\xd0\xef\x07\x52\xab\x45\xa4\xd8\x35\xda\x44\xe5\xa6\x3c\xe0\xab\x5e\x2f\x38\xb3\x23\xb1\x52\xc0\x9c\x4a\x37\x0c\x32\x06\x97\xd2\x22\xe1\x2c\x52\x2d\xd7\x40\x1e\x59\x8b\x4f\x63\xaa\x72\xa4\x23\x5e\xa8\x23\x42\x2f\x16\x1d\x0d\xb3\xdf\x18\xc8\x65\x0c\x94\xd1\x57\x6b\x5c\x7e\x17\x69\x5b\xf2\x78\xb6\x5c\xe5\xa4\xf0\x1b\x41\xdb\x03\x44\xbd\x20\x29\x93\xc7\x93\xb0\x0b\x53\x22\x19\x81\x9a\xe4\xaa\x12\xcf\x23\xe6\xe3\xa5\x29\x73\xf5\x02\x19\x3b\x52\xc3\x0c\x3e\x24\x5f\x35\xdf\xe7\xba\x4b\xef\xe0\x3e\x06\xbe\x7e\x39\xfd\xb6\xf4\xf3\x6c\xc2\xf9\xac\x50\x34\x23\xee\xb4\x51\x1d\x2a\xfd\x72\x6e\xbc\x85\x98\x26\xd9\x75\xb8\x74\xaf\xa2\x54\x43\xd1\x75\xa8\xa0\x4d\xad\xc6\xc2\xc2\xd0\x61\x1b\x20\xe8\xe1\x37\x16\xd2\x31\x9d\xe6\x42\x05\x36\x1a\xb0\x79\x73\xea\x1f\x66\xac\x51\xc4\xe5\x5e\xb3\xdd\x3d\xa4\xc1\x3e\x6a\x34\xd2\x92\x23\xc6\xcf\xed\x8d\x29\xf8\x6a\x59\x05\x73\x43\xb5\xac\xd3\xde\x6c\xac\xd4\xad\x45\xa6\x6b\xf5\x27\x2d\x9b\x00\x4e\x6b\xad\x16\x60\x9a\x4e\x13\xcc\x0b\x33\x7a\x33\xd4\x0a\xe1\xbd\x95\x7e\x06\x00\x00\xff\xff\xa2\x9c\xd2\x0c\xb7\x07\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1975, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x97\x3d\x8f\xdb\x46\x13\xc7\xfb\xfb\x14\x0b\xa8\x79\x9e\x82\x7f\xed\xcc\xee\x72\xb9\xee\x92\xdc\x25\xb8\x22\x3e\x43\x76\xe0\x5a\xd6\xf1\x62\x25\xb2\x28\x50\x14\xce\xce\xa7\x0f\x86\xa4\x2c\xb9\xc9\x8c\x0a\x55\xfa\x71\x30\x2f\xff\x79\xd9\xc5\x62\xe1\xba\x43\xbb\x7f\xed\x07\xf7\xba\xdd\x93\x77\xed\xd7\xa1\x5f\xbb\xff\x2d\xdb\x61\xb3\x7c\xd9\xf6\xed\xeb\x7a\xb7\xc3\xe9\xd8\xf6\xff\xbf\x13\xf8\xf7\xae\x6f\xdd\x76\xff\xd2\xbd\x71\x9f\x87\xe1\x70\x7c\xb3\x5c\xfe\xb9\x1d\x3e\x9f\x3e\x61\xd3\x7d\x59\x6e\xfa\xf5\x3f\xdf\xaa\x2f\xeb\xaf\xcb\x8f\xdb\xfd\x73\xf7\x7a\x7c\x7f\xf8\xf6\xf3\xae\xdb\xfc\xdd\xf6\x77\x77\x0b\xd7\xee\x5f\xba\x7e\xd3\xba\xbe\x3b\x0d\x6d\xef\xee\xdf\xbe\xbf\xdb\x1e\x86\xf5\xa7\x5d\x7b\x74\xd5\xe0\xf6\xeb\xc1\x55\x8f\xee\xdd\xea\x61\xf5\xf4\xc7\x87\xc7\xb7\xbf\xb9\xea\xe0\x86\xcd\xc1\x55\xd5\xf3\xa1\xeb\x07\x97\x82\xab\xfe\x72\xab\x87\xfb\xc7\xd5\xc3\x2f\x1f\x5c\x55\x0d\x5d\x25\x7f\x1c\x5d\x0a\xba\xa5\xd3\xb3\xd1\xd2\xdd\xc2\xf5\xa7\x5d\x7b\xbc\x32\xf9\xe8\x7e\x7d\x5a\x7d\xfc\x69\x75\x2f\x9f\xdd\xaf\x9e\xde\xb9\xea\xd9\x51\x40\x2e\xe0\x50\x50\x17\x3b\xdb\xb0\x81\x6d\x3c\x88\x91\xa2\x01\x25\x9f\x11\x40\xdc\x18\xd9\x84\xc6\xdb\x51\xab\x55\xf1\xd9\xca\x32\x81\xbd\xea\x03\x07\x94\x1a\x89\xf1\x43\x6d\xff\x03\x65\xdf\xc8\xcf\x02\x67\x50\x6e\x40\xd9\x62\x99\xbc\xd4\x82\x41\x39\x69\x74\xf4\xc8\x1e\x1e\xa4\x7b\x21\x68\x06\x73\xc4\x0d\x28\xd1\x0d\x6c\x34\xb9\x3b\xc1\xac\x2b\xed\x0c\x27\x70\x34\xbb\x5c\x83\x63\x7d\x0b\x9c\x6f\x81\x6f\x72\x43\xed\xd0\x2b\x38\xa9\xe2\x9c\xe1\xe0\x61\x4a\x73\x23\x0d\x9a\x91\x2c\xf5\x2b\x1e\x14\x6a\xdc\x82\x5a\x62\x9b\x59\xb6\x84\x46\x9e\x10\x6b\xe9\x11\x0b\x4c\x11\x1c\x09\x14\x2d\x2e\x13\x65\x50\xf1\xc8\xea\x14\x1c\xe1\x06\xe4\x03\x2c\xaa\x20\x99\x2a\x32\x60\x92\x25\x1b\x52\x0d\x8a\x8c\xac\xaa\x33\x49\x64\x1e\x75\x42\xa3\xf6\xc8\xcc\x96\xc6\xb0\x10\x66\x76\x74\xa4\xa8\x01\x8e\x34\x41\xc4\xc9\x36\xd3\x84\xc0\x06\xc1\x25\x06\xd5\x11\x54\x08\x49\x55\xf2\x0c\x33\x67\xcb\xa0\x1d\xe9\x1a\x44\x1e\xb5\x9e\xba\x19\x66\x69\x2c\x13\x5c\x90\x09\xa4\xb7\xaa\xc0\xd9\x83\x4a\x34\x5a\x16\xb3\x63\xa7\xd8\x4c\x37\xa0\x9a\xa0\x8b\xff\x3b\x1c\xd0\x58\x32\x2d\xc3\x85\x3c\xa8\x51\x97\xd4\x08\x4b\x4a\x6c\x01\x8e\x6c\xb1\x48\x7f\x62\xeb\x62\x4c\x33\x87\x00\x2a\xc5\x32\x6c\xeb\x88\x08\x0e\xf0\x4b\x56\xa5\x31\xb2\x49\x96\x94\x9a\x89\x0b\xaa\x5b\x4d\x72\x5b\x8c\xcb\x5d\x2d\xdd\x85\x2d\xba\x0b\x33\xdb\x40\x6f\xd4\x0b\xab\x0f\xad\x0b\x5b\xd4\x5a\x5c\x58\xd2\xa5\x26\x70\x9a\x1c\x36\x05\x97\xc0\xd6\xc2\x4d\x74\x62\x44\xd5\x32\xf9\x88\xe8\xc1\xe4\x11\xf4\x03\xf9\x0c\x13\x82\x1a\xdf\x08\xc7\xf1\xa2\xd6\x97\xce\x19\x6e\xa0\x87\x77\xc5\xea\x97\xef\x77\x96\xbc\x2d\x17\x09\xb2\xfc\xf4\x86\x16\x98\x29\x4e\xb7\x8b\xaa\xe4\x89\x4e\xa0\x68\x1a\x70\x14\x48\xda\x0e\x35\x99\x0a\x4e\x21\x4e\xb3\xb6\x49\xc8\x06\xe3\x67\xba\xb1\x1c\x73\x94\xb2\xc8\x29\xd5\x36\x57\x26\x9a\x7c\xd1\xaf\x87\x2b\x96\x6f\xb2\xcc\xac\xce\xd0\x1f\x68\x6b\x8c\x23\x1d\xf4\x04\x5e\xd3\xba\xb4\x67\x9a\x0b\x0c\x3a\x99\x61\x29\x51\x30\x07\x39\xd2\xe6\x20\x85\x8e\xe6\x20\x43\x32\xbd\x71\xeb\x06\x75\x90\xd6\xc9\xfa\x93\xbc\xd0\xb4\x0b\x43\x81\x9e\xbd\x11\x1e\xef\x1e\x90\xa1\xec\x23\x5e\xa6\x8b\x54\x3f\xef\xd8\x47\xe4\x22\xa4\x49\xdc\x82\x93\x4c\x78\x39\x09\xa3\x01\xcf\x72\xce\x67\x19\xc5\x46\x56\x5e\x00\xfa\xfe\x3a\xc3\x49\xce\x6e\x75\x10\x9f\xe9\x22\x75\xbf\x01\xe6\x5b\x2c\x07\xfd\x49\x7f\x81\x75\xf5\xcd\xb0\x6c\xbc\x62\xf2\xb9\x6e\xc6\x3b\x96\x53\xfc\x37\x00\x00\xff\xff\x5f\xe1\xa9\x73\x5b\x13\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 4955, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\x41\x93\xa3\xba\x11\xc7\xef\xef\x53\x6c\xd5\x5e\x92\x83\x35\x6a\x09\x30\xbc\xaa\x5c\x72\xcf\x29\x87\x9c\x65\x90\x6d\x6a\x8c\x60\x11\xb6\xc7\xf9\xf4\x29\x61\xef\x0c\xf2\x40\xf3\x77\xde\x9c\xa6\xac\x1f\x92\xba\xd5\xea\x6e\x09\x89\x9f\x3f\x7f\xfe\x68\x3b\xeb\xae\xfd\xf0\xe3\x5a\x3b\x92\x3f\x7c\x77\xfb\xf1\xb7\x37\x3b\x94\x6f\x95\xf3\x8d\xf1\xbf\x44\xd9\xba\xfd\xdf\xff\x08\xe4\xbf\xda\xde\xfe\xa8\xdd\xbe\xfd\xf3\xc7\x71\x18\x3a\xff\xe7\xdb\xdb\xa1\x1e\x8e\xe7\x9d\x28\xdb\xe6\xad\xec\xcd\x7f\x6f\x9b\xc6\x7c\xbc\xfd\xa7\x76\x55\x7b\xf5\xff\xee\x6e\xff\x3c\xb5\xe5\xbb\xed\xff\xf8\xc3\xdb\xfe\x62\xfb\x7f\xbc\x99\x8d\x94\x92\x84\xd9\x34\xde\x56\x07\x2b\x9c\x1d\xde\x9e\x0b\xab\x72\xb9\x54\x71\x8f\x6a\xbe\x90\xab\x37\xe1\x1e\x4d\xb9\xc2\x8c\x2b\xdc\x72\x85\x39\x57\x58\x30\x85\x24\xb9\x42\x4e\xbb\xb4\xac\xbf\xd9\x5f\x85\xa9\x3c\x89\xc6\xbb\x71\x84\xe3\xdf\x95\x68\xbc\xa9\xfc\xcc\x13\x6a\xee\x89\xde\x54\x33\x3f\x97\x7a\xee\xc7\xa1\xbe\xd4\xc3\x4d\x5c\xef\x76\xf4\x54\x5a\x39\xfb\x71\x7e\x6e\xb6\x72\x1f\xdf\x38\x3f\x53\xf5\x5d\x9c\xef\xdd\x9e\x17\xb3\xae\x3a\x2f\xcc\x50\x35\xc3\x53\xc1\xbb\xd9\x94\x95\xdb\x38\x2f\x4c\x35\xd8\xf2\x28\x2a\x3b\x29\xed\x7b\x73\x23\x49\x9b\xae\x6f\x2b\x51\xb5\xa2\xf2\x9d\x68\x3a\xd1\xd4\x65\xdf\xfa\x76\xff\x5c\xd9\x1d\x57\xaf\xe1\xfa\x35\x3c\x79\x05\x57\xaf\xf5\x5d\xbd\xd6\x77\xf5\x5a\xdf\xd5\x6b\x7d\x4f\x5e\xeb\x7b\xf2\x5a\xdf\x93\xd7\xfa\x9e\xbc\xda\xf7\xf4\x35\x3c\x7b\x0d\xdf\xbe\x86\xe7\x20\xbe\x5b\xf0\x12\xbb\x45\x2f\xb1\x9b\xf7\x06\xbb\xda\x1d\xc6\x69\xbb\xd0\xce\x49\x6b\x49\x1b\x23\xa8\xea\x2f\xb3\x45\xe5\x72\xd1\x61\xae\xc8\x91\x96\xc9\xc6\x2e\x15\x65\xf3\x6d\xdd\x8b\x98\xa7\xe6\xdb\x52\xbb\x4d\xd9\xf6\x63\xf4\xeb\x6a\xd1\x85\x7f\x38\x4c\x61\x98\xc6\xb0\x64\x05\xbb\x3a\x4f\xe2\xea\xfc\xbc\xcf\xdd\x39\xdd\x41\x9d\xd7\xbe\x3c\x4a\x15\x22\x54\x9a\xe6\x6c\x7d\x5f\x60\x26\x31\x30\x23\xb0\xc6\x4c\x15\x20\xa8\x79\x99\x27\x60\x8a\x82\x19\x08\xa6\x98\xd4\xb4\x55\x5b\x08\x54\x39\x56\xa3\x92\x5a\x29\x0c\xdc\x26\x90\x1e\x95\xd2\x0a\x1a\x19\xa5\x34\xa6\x47\xa5\x74\xc6\x8e\x4c\xe2\xcb\x23\x49\x22\x25\x73\x4a\x50\x90\xed\xe3\x17\x58\x10\xd8\x74\x41\x1a\x02\x49\x12\xab\xc7\x2f\x90\x24\x0a\x82\xc2\x90\x52\x60\x1f\x13\xc9\x9a\xd9\x17\xb8\x32\x0b\xbf\xc0\xad\xc4\x46\x86\xb6\xa8\xd4\x5b\x70\xac\xa9\x90\x58\x1f\x15\x11\x26\xb5\xd2\xc4\x4e\xae\x29\xc8\x4e\xae\x2f\x30\x51\x98\x99\x69\x02\x85\xd1\x04\xf6\x51\x2b\x09\xf4\x31\x58\x23\x29\x4e\xe1\x5e\x84\x7f\x6b\x77\xd8\xf8\xdb\x73\xd9\x6d\x39\x52\xdf\x96\x23\xf5\xbd\x68\x2e\xb0\x96\xec\xca\xb0\x9c\xcb\xd1\xcb\xef\xf9\x45\x69\xc4\x60\x4f\xb6\xb1\x43\x7f\x5b\x4a\x32\x4a\x53\x1e\xad\xa8\xcc\x60\x1a\xd3\x0f\xf3\xa2\x97\x95\x9b\x6d\xb1\xf2\xa4\x64\x22\x4e\xad\x13\xa7\x93\xbb\x3e\x75\x32\x94\xe6\x05\x57\x5a\x68\xa6\x54\xab\xed\x72\xa9\x92\x09\x6d\xc5\xa9\xbc\x2d\x16\x6b\x62\x8b\x53\xc9\x17\xf3\x95\x6f\x53\xa6\x98\x54\xc2\xe8\x44\x65\xc2\x34\xbe\x10\x8d\xb7\xa5\xfb\x5e\x5a\x14\xcb\x35\x27\x92\x69\x36\x51\x5c\x61\xca\x55\x5b\x24\xcb\x85\x45\x96\x2e\xc9\x72\x24\x20\x45\xfa\xa4\xd8\xf4\xae\x3c\x2e\x4e\x92\x47\xd1\xec\x24\x39\x2e\x66\xba\x63\x91\x5a\xae\x50\xcd\x57\xd8\x36\x9d\x19\xec\x47\x79\x34\xee\x60\x45\x79\x6a\xcf\x95\xe9\xba\x27\xb9\x23\x88\xc4\xd0\x9b\xfd\xbe\x2e\x1b\xe3\xcc\xc1\xf6\xcf\xac\x1b\x6a\x77\x3e\x37\xa2\x5a\x4e\xf3\xcb\xb6\xef\x84\x1f\xd8\x72\xfb\x31\x88\xc6\xd7\x83\xa9\xf6\x5e\x1c\x4e\xbb\xca\x85\x85\xc6\x02\xdf\xe1\x6b\xf1\xb2\xc3\xd7\xbe\x65\x87\xaf\x35\xcb\x90\x5d\x77\xa5\xb8\xc8\xe0\x3b\x22\x9d\x54\x3b\x6d\x7e\x9d\xe7\xfc\x49\xb5\xd3\x57\xe7\x95\xa4\xf0\xb7\xec\x88\xab\x1d\x93\x54\x55\xbb\xf4\xe1\xf7\x43\x8e\xc8\xf8\xfd\x18\x64\xc2\xe2\x14\xcc\xb9\x04\x3a\x06\xc1\x3e\x16\x5c\x44\x8e\x40\x85\xd6\xc8\x25\xa7\x11\xa8\x31\x30\x28\x08\x04\x41\x85\x93\xe4\x02\x6d\x04\x82\x0a\x27\xa9\xd1\x1a\x13\xb4\x8f\x09\x58\x23\x6a\x66\x21\x15\x41\x41\x6c\xac\x89\xc0\xb1\x26\xe2\x96\x88\x11\xa8\xd1\x3e\x26\x60\x1f\x15\x97\xee\x46\x20\x97\x21\xc6\x20\x28\xb5\x42\xad\x47\x69\x6c\x16\x92\x06\xa7\x2b\x69\xd4\xc2\x35\x3a\x32\x1a\x1d\x19\x8d\x4e\x05\x8d\x3a\x80\x84\x5b\xd0\x45\x20\x2a\x75\xa2\x98\x7d\x83\x18\x04\x15\x9e\x68\x66\x35\x10\x81\xa8\xe1\xa6\x2b\x41\x68\x02\x82\xea\x49\xd1\xb1\x4e\xc1\xf0\x41\x69\x82\xf6\x31\x01\xad\x27\xe3\x96\x5f\x11\xc8\x2d\x8c\x23\x10\x95\x9a\xdd\x9e\x8a\x41\x54\x98\x04\x34\x8a\x2d\x3a\xd6\x5b\xd4\xd9\x6f\x35\x28\xf5\x16\xb5\xc7\x9c\xdb\x7f\x89\x40\x05\x4a\x9d\xa3\xb3\x30\x47\x3d\x2e\x9a\xf7\x50\x8e\x7a\xdc\x1c\x0d\xc3\x05\xb7\xca\x8f\x41\xb0\xe9\x82\xdb\x60\x88\x41\xb4\x8f\xe8\x54\x28\x50\xeb\x29\x40\x07\xa0\x24\x61\x23\xa3\x24\x18\xe2\x14\xbb\xcd\x17\x81\x60\xde\xa3\x24\x98\xf7\x28\xa9\xb1\xb1\x56\x12\xf3\x14\x21\xdd\x83\x2c\x3c\x80\x90\xd4\x63\x86\x04\x82\xd8\x9c\x19\x83\x21\x06\x2a\x6e\x2b\x32\x06\x21\x07\x40\x52\xa1\xc2\x28\x6c\x08\x49\x2a\x6c\x08\xc3\x52\x01\xac\x51\x63\x16\x4e\x52\x63\xf6\x18\x40\xb8\x46\xd0\x7a\x34\x16\xe2\xc2\x72\x06\x06\x51\x61\x50\x3d\x26\x12\xac\x11\x4c\x0b\xc3\x92\x0b\x54\x4f\x82\x4e\x85\x04\x4b\x5d\xc3\x22\x0e\x34\xb3\x14\x5b\xe4\x92\x4c\xb1\xa8\x10\x40\xb0\x8f\x29\x96\xe3\x92\x4c\x51\x6f\x06\xe6\x66\x24\x33\x6c\xcd\x15\x40\x50\x8f\x19\xb6\x04\x08\x20\xe8\x7b\x32\x6c\x3d\x43\x72\x2b\x41\xeb\xd9\x62\x99\x14\xc9\x2d\x2a\xcc\x16\x0b\xec\x24\xb7\x58\x46\x4a\x32\x47\xcd\x2c\x27\x50\x8f\x39\x3a\xd6\x39\x3a\xd6\x39\xea\x1f\xc1\xfc\x31\x80\xa0\x1e\xc1\x9d\x38\x42\x77\xe2\x48\x16\xa8\x37\x2b\x50\x3d\x16\x68\x9c\x81\xd2\x42\x2d\x73\x62\xdf\xfe\x4e\x41\xf6\x5d\xed\x04\x54\x12\x59\xf8\x04\x70\x6d\x4b\xf6\x13\xd4\x48\x26\x15\xc0\x04\x49\x3e\xee\x20\xa6\x1e\x95\xc1\x20\x2a\x0c\xfb\xae\x36\x02\xb9\xf7\xa0\x53\x30\xc7\xa4\x2e\x24\x21\xe9\x4c\x00\x15\xe2\x29\x02\x98\x60\xd6\x13\x40\xb0\xe9\x14\x33\xb3\x00\x82\x35\x42\xdb\x0f\x01\x84\xf5\x08\xce\x99\x22\x34\x0e\x81\x04\xce\x99\x00\x42\x46\x51\x84\x20\x87\x82\x98\x7a\x48\xa1\x4d\x6b\x54\x18\x0d\x8e\x35\xa1\x66\x86\x6d\xb0\x05\x10\x9c\xd7\x05\x65\xc8\xda\x35\x80\x5b\xd0\x1e\x29\x47\x6b\x64\xcf\x60\x44\x20\x28\xb5\x92\xe0\xbc\x56\xa8\x51\x28\x68\xed\x1a\x40\x68\xcf\x7e\x04\xd1\x3e\xa6\x50\x8d\x34\x9e\x00\x03\x41\x24\x0c\x07\x10\x7a\xaf\x10\x40\xcc\xc2\x47\x10\xb1\x70\x92\x32\x81\x66\x21\x49\x6c\x51\x71\x07\x41\x61\xb0\x10\x47\x52\x62\x91\x6b\xdc\x4e\x41\xe6\xcc\xf8\xc6\x07\xb1\xc7\x00\xa2\x4d\xa3\x0a\xa7\x04\x94\x9a\x12\x70\xac\x09\x0b\x71\xe3\x7e\x38\x36\x84\x84\x8e\x0c\x41\xeb\x19\x8d\xee\x5e\x6b\x74\x0b\x59\x8f\x7b\xa4\xd8\x74\xc5\xb6\x3e\x35\x49\x25\xc1\x1a\x15\x81\x46\xa1\x14\xb2\x4f\x71\x07\xc1\xa6\xd9\x53\x6f\x53\x30\x41\x36\xd8\x46\x10\xad\x11\x0b\x71\x01\x44\x6b\xdc\xe2\x20\x66\x3d\x2a\x5f\xb1\xc7\xab\xf3\x54\x71\x44\x36\x56\xa5\x42\x72\xcb\x2b\x70\x0a\xb2\x7a\x99\x80\xbc\xd9\x4c\x41\x36\xd7\x9a\x80\xfc\x32\xf8\x0b\x5c\x31\xc4\x29\x08\x36\xbd\xe2\x41\xa7\x20\xa8\x9e\x95\x40\x3d\x05\x59\x6b\x98\x82\xa0\x7a\x34\x6f\x36\x53\x10\x54\xcf\xca\x12\x73\x02\xa2\xc2\xac\x84\xfe\x2f\x70\x65\x42\x4f\x41\x50\x3d\x29\x3a\x15\x56\x72\x84\x29\x88\x36\x8d\x4a\x9d\xf2\x5e\x7e\x0a\x82\xf6\x98\xa1\x4d\x67\x68\x8d\x2b\x1b\x66\x53\x10\x34\x8a\x95\x37\x8a\x53\x10\xb4\xf0\x95\x57\x8f\x53\x10\xb4\xf0\x95\x77\x94\x53\x10\x93\x3a\xa4\xb7\x28\x88\x09\x43\x12\x14\x86\x56\x72\x84\x09\x88\x0a\x43\xa8\x30\x2b\xc9\xed\x17\xb8\xf2\x6e\x6d\x0a\xc2\x35\x82\x52\xa3\x8e\x94\x34\x3a\x32\xa8\x23\x25\x0d\xf7\x11\xf4\x14\x84\xfa\x47\x4a\xd1\x21\x4c\x51\xa9\x53\x54\xea\x0c\x74\x00\x94\xa1\x7d\xcc\xc0\x10\x47\x19\x2b\x8c\xbd\x88\x4b\xdd\x0f\x67\x73\xb2\xa6\x1f\x8e\x4f\x07\x6c\xf7\xeb\xa7\xfe\xab\xda\x1c\x5c\xeb\x87\xba\xf4\xc2\x9f\xbb\xae\xed\x87\x65\xd4\x97\xf8\x81\xe2\x40\xe3\x47\x8a\x03\x8d\x1f\x2a\xb6\xb3\xf7\x1e\x6c\xe9\x04\xaf\x10\x7b\x16\x97\xb6\x1f\xec\xc7\x78\xcd\x61\xa9\xf6\xfd\xc9\x7e\x7c\xbf\x42\xb1\x5f\x3c\x96\x7d\xf8\x0e\x1f\x6c\x0b\x8a\x72\xb0\xed\xc5\xf6\x20\x7c\x9c\xb9\x6b\x7a\x9c\xb9\x73\x7e\x7c\x67\xcc\xf5\xf8\xae\x82\x71\xe9\xf1\xa2\x1b\xb7\x23\x12\x83\x8c\x5d\xc7\x20\x63\xd7\x31\xc8\x38\x92\x08\xe4\xce\x07\x4c\xc1\x9c\x7b\x47\x17\x81\xdc\x9b\xf2\x08\x4c\x41\xf5\xe4\x29\xda\x74\xca\x78\xee\x29\x58\xa0\xc2\x14\xdc\xc5\xcb\x08\xe4\x5e\x38\x46\x60\x8a\xd6\xc8\xdd\x74\x8d\x40\xee\x52\xe3\x04\x24\xf6\xc8\x51\x04\x82\xd6\x43\x92\x7b\xeb\x37\x05\x89\x3b\x87\x16\x81\xdc\x41\x82\x08\x4c\x31\x33\x23\x85\x4a\xad\x12\x6c\x64\x48\x71\x17\x58\x23\x90\xbb\x83\x1c\x83\x98\x3d\x12\x7b\xc9\x36\x06\x41\xf5\xb0\x07\xa3\x23\x90\x3b\x1f\x10\x81\xa8\xd4\x09\xe8\x7b\x28\xe1\x0e\x64\xc4\x20\x68\x8f\x09\x6a\x8f\x09\x38\xaf\x29\xe1\xee\x49\x4f\x41\xf6\xbc\x4a\x04\xa2\x43\x98\x82\x51\x81\xd8\x13\x30\x11\xc8\x9d\x06\x8d\x40\xd0\x35\xf3\xc7\x98\x23\x10\x35\xb3\x8c\x3b\x9b\x14\x81\xe8\xbc\xce\x52\xd0\x1e\x33\x58\xea\x14\x54\x38\x9a\x01\x10\x9a\x01\xf0\x17\xfc\x23\x90\x3b\xd1\x1f\x83\x60\x9c\xd9\xa2\xea\x61\x8f\xa1\x44\x20\xda\xc7\x1c\xf5\x14\x39\x3a\xaf\x73\x34\x20\xa1\xe9\x0c\xe5\xa8\x99\x15\xe8\x10\xb2\x77\xd1\x62\x10\x54\x38\x9a\x7c\x28\x34\x03\x50\x92\x3b\x69\x19\x83\x58\x1f\x15\x7b\xa0\xf7\xf8\xbe\xf2\xed\x91\x07\xb0\x5b\x26\xea\xcd\xee\x94\x21\xdf\x27\x99\x82\xec\xfd\xdb\x7a\x03\x7e\xf1\xa4\xde\xec\x6e\x2f\x83\x2b\x4d\x63\x17\x89\x27\xdc\x4a\x7d\xde\x29\xa8\xbe\x4f\x8e\xaf\x8f\xee\xd7\xfe\x4b\xeb\x85\x6f\xcb\xda\x9c\x96\x96\x69\x6b\xa4\x70\xde\x0c\x65\xbc\x34\xad\xdd\xde\xf6\xd6\x95\x56\x9c\xda\xd2\x0c\x75\xeb\xc4\xa9\xbe\x3c\x5d\xf7\x7f\xbf\xe0\xeb\xef\xf7\x0b\xbe\xfa\x7e\xbf\xe0\x6b\xef\xd3\x8e\xc4\xf5\x7a\x15\x8d\x17\xe6\xdd\x54\xee\xe9\x03\x47\x63\xa7\xfb\xd9\x4f\x90\x9d\xbc\xba\xda\x9d\xe8\x6d\xd5\xb4\xae\x12\xe3\x6d\xe7\x85\x46\x1a\x31\xf3\x5d\xb3\xa6\xdd\xd5\x27\x2b\xba\xba\xb3\xc2\xf4\xf5\xe2\xfa\x7d\xee\x43\x09\x8d\x77\x83\xf5\xc3\xf2\x87\x1b\xee\x9f\x56\x6b\xf7\xfb\xba\xb4\xa6\xeb\xfc\x5d\xfb\xdf\x91\xfe\x7c\xb2\x2b\x5c\x8b\x7c\x6d\x81\x81\xe6\xcc\xa3\x75\xd6\xdb\x61\xa8\xdd\xc1\x6f\x76\x4e\x89\xf0\xd8\x6f\x13\x01\x1e\x29\x6f\x2f\x3f\x52\xed\xd2\x57\x1f\x39\xbe\x43\xad\x74\xbd\x15\xfb\xb6\x1d\xba\xbe\x76\x43\xd7\xdb\xaa\x2e\x9f\x94\xd3\xf5\xf6\x52\xdb\xeb\x77\x13\xea\x4d\x35\xa3\xf0\xd9\x4f\x6a\x85\x7a\xfb\xd0\x1d\xf3\x39\x17\x17\x86\xa2\xb7\x5d\xdb\x0f\x5e\x5c\xad\x17\xc8\x96\x99\x2f\x8f\xb6\x31\xd3\xea\xe6\x26\x82\xb7\xe5\xb9\xb7\x73\x76\xfc\x28\xd9\x9f\x8c\x3f\x0e\xe6\xf4\x5e\xbb\xc3\x33\xf0\xe8\x30\xdc\xa3\xdf\x23\xe0\x8d\xab\x76\x2d\xbf\xbd\xf5\x09\x5f\x6b\xb7\xe9\x3a\x0b\xc3\x10\x78\x87\x56\x3e\x4c\x10\xc3\x4b\x90\x5b\xfc\x14\xc4\xa3\x68\xee\xcb\x0d\x8f\xa2\xb9\x4f\x41\xf8\xee\xe6\xec\xb0\xdc\xa9\xb1\xd8\x9c\x16\xf7\x3f\xef\x80\x3d\xf7\x6d\x67\xd7\x06\xff\x57\x83\x0d\xdc\xaf\xe6\x2f\x41\x73\xd3\xcb\xfb\xeb\xcc\x1c\xf1\x43\xdb\xdb\xd2\x0c\xe6\xd4\x1e\x7a\x7b\xf9\x1d\x63\xc6\x9f\x7f\x9d\xcd\xa9\x1e\x96\xdb\x3f\xf7\x17\x7b\x13\x57\x33\xf8\xd6\x2d\x41\x83\x14\xde\x9f\x84\x79\x17\xd5\xcd\x99\xa6\x2e\xc5\x50\x07\x4f\xb9\xbc\x19\xfb\xf5\xc4\x2a\x69\x4f\xb6\x6c\x9b\xc6\xb8\x6a\x5d\x5b\x00\x3c\xa7\xb5\x2f\xd4\x74\x9d\xfd\x10\xbb\x30\x2b\x17\x08\xa6\xe5\x3b\x70\xee\x17\x9d\xcd\x18\x85\xf8\xef\x7c\x0e\x7e\x6f\x7f\x7f\x4c\xc4\x1f\x4d\x17\x7a\xc2\xc7\xe4\x0b\xc9\xc7\xc6\xf6\x64\x9e\xae\x3b\xe2\xd9\xc7\x16\x5a\xb0\xbd\x0f\xf6\x72\xbc\xed\xfa\xba\x1a\xd3\xa4\xa3\xed\x9f\x6c\x6c\xf4\xd9\x33\x1b\xf3\x8f\x36\xc0\xb8\xf5\xa0\xc1\x90\xf5\xa0\xc1\x68\xf5\xa0\xc1\x40\xf5\xa0\x11\xa7\xfa\xff\x68\x1f\xd4\xfc\xe4\x85\xc5\x8a\x5b\x8d\xde\x6d\xa0\x1d\x60\x1b\x7f\xcc\xf9\xef\xee\x84\x77\x06\x8f\xd2\x10\x5c\x56\x67\xcd\x83\xfd\x8b\xdc\x9c\x7c\x21\xd9\x44\x64\x04\x83\xec\xf8\x95\x68\x51\x77\x97\x8c\x23\xb6\x6b\xcc\x98\x3a\x7f\x26\xa8\xff\x0b\x00\x00\xff\xff\x26\xe3\xe6\x0e\x87\x5a\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 23175, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x9a\xbd\x72\x1b\x47\x0c\xc7\x7b\x3d\xc5\xce\xa8\x49\x0a\x42\x0b\xec\xb7\xbb\x24\x72\x32\x2a\x62\x7b\x68\x67\x5c\xcb\x12\x1d\x2b\x91\x45\x0e\x49\x8d\xe2\x3c\x7d\x06\x7b\x77\xe4\xb9\x09\xfe\x57\xd0\x8d\x7f\xda\xc1\xe2\x1b\xd8\xbb\xbc\xbc\x74\xdb\xdd\xe6\xe9\x65\x7f\x74\x2f\x0f\x4f\xec\xdd\x61\xf7\xcd\xfd\x70\xb5\x39\xde\x5d\x7d\x7e\xd8\x6f\x5e\x6e\x1f\x1f\xe9\xf9\xb0\xd9\xff\x78\xa1\xe8\xef\xdb\xfd\xc6\x3d\x3c\x7d\xde\xbe\x72\x5f\x8e\xc7\xdd\xe1\xd5\xd5\xd5\x9f\x0f\xc7\x2f\xcf\x9f\xe8\x6e\xfb\xf5\xea\x6e\x7f\xfb\xef\xb7\xd5\xd7\xdb\x7f\xae\x3e\x3e\x3c\xdd\x6f\x5f\x0e\xef\x77\xdf\x7e\x7e\xdc\xde\xfd\xbd\xd9\x5f\x5c\x5c\xba\xcd\xd3\xe7\xed\xfe\x6e\xe3\xf6\xdb\xe7\xe3\x66\xef\xae\xdf\xbc\xbf\x78\xd8\x1d\x6f\x3f\x3d\x6e\x0e\x6e\x75\x74\x4f\xb7\x47\xb7\xba\x71\xef\xd6\xaf\xd7\x6f\xff\xf8\x70\xf3\xe6\x37\xb7\xda\xb9\xe3\xdd\xce\xad\x56\xf7\xbb\xed\xfe\xe8\x52\x70\xab\xbf\xdc\xfa\xf5\xf5\xcd\xfa\xf5\x2f\x1f\xdc\x6a\x75\xdc\xae\xf4\x3f\x0e\x2e\x05\xfb\xa4\xe7\x7b\xf0\xa4\x8b\x4b\xb7\x7f\x7e\xdc\x1c\x66\x47\xde\xb8\x5f\xdf\xae\x3f\xfe\xb4\xbe\xd6\x3f\xbb\x5e\xbf\x7d\xe7\x56\xf7\x8e\x03\xe5\x4a\x55\xa8\x82\x64\x25\x96\x06\xb0\x25\x93\x70\x25\xe6\x82\xc2\x8d\xb8\x31\x0e\x0b\x7b\x04\xae\xc4\xa5\x10\xc7\x88\xc2\x2a\x06\x74\xc1\x4a\x5c\x3d\x25\x54\x8a\xea\xa9\xc1\x6c\x24\xae\x19\x85\x33\x49\x42\xaf\x57\x0b\x25\xc4\xd4\xa5\x92\x84\x44\x2c\xa0\x14\x0a\x4b\x44\x6c\x5d\x99\x12\x7d\xe7\xeb\xff\x47\x36\x92\x28\x00\xcb\xbe\x10\xaa\x07\x65\xa3\x20\xb0\x04\x6a\x85\x32\x13\x07\xf3\x6a\x03\x2b\xbe\x51\x83\xd8\x46\xec\x89\x4d\x87\x9f\xd0\x46\xb6\x0b\x9f\xd9\x8c\xb2\x9c\xf5\x07\xc2\xc2\x24\x1e\xb9\x1c\x7b\xa1\x48\x62\x5b\x79\x64\x85\x09\x11\x58\x51\x4e\x89\x38\x9a\x81\xd4\xe9\x40\x5c\x05\xf1\xe1\xe8\x35\xb7\x89\xa8\x24\xa6\xb7\x29\xac\xe9\x27\x53\x31\xef\x77\x66\x81\xac\x79\x86\x25\x99\x7e\x31\xc1\x95\x32\x2c\xb1\xa6\x36\xd3\x7c\x23\x2c\x9e\x22\xa4\x37\x65\x99\x24\xa0\xd7\x13\x51\x0f\x45\xe1\x40\xf8\xc1\x81\xb8\x99\xb9\x2d\x7a\x2a\xbe\x5f\x4f\x22\x04\x67\x62\xe2\x82\xa8\x42\x51\xb1\x1d\xf9\x44\x32\x64\xb9\x52\x48\xa4\x92\x9d\x5b\xcf\x6c\x5d\xc0\x36\x54\x86\xa0\x76\x43\xdc\xb2\x34\xaa\x5a\x39\x12\xc0\x56\x0d\xd1\x46\x11\xb1\x31\x6b\x49\x20\x49\xc8\xb9\xdc\xd3\x3c\x15\xc4\xc2\x9d\x65\x6a\x48\x30\x77\x36\x12\x27\x54\x60\x11\xcc\x72\xfd\x72\x11\xa8\x8b\x9d\x8d\xc4\xb1\xc7\x28\x44\x27\x62\xa0\x78\x74\xb4\x77\x4a\x24\x76\x7e\x9d\xe8\xc4\x04\x25\x36\xad\x1d\x7a\x34\x57\xd3\xdf\x92\x92\x5a\x72\x89\xed\x32\x96\x7a\x36\xa1\x4a\x6c\x4a\x71\x42\x6d\xb5\x9d\x51\xd3\xe1\x47\x54\xc3\xd9\x74\xb6\x33\x0b\x8b\x50\x32\x85\x25\x2c\x2a\xaf\xb2\xb6\x25\x46\x35\x54\x0a\xb0\x21\x2a\x05\x33\x40\x67\xac\x99\x57\x4f\x3a\xf3\x64\x8f\x12\x73\x18\xb7\x86\xc7\x9d\x87\x25\x2e\x39\x39\x2e\x3b\x19\xf3\x8a\x50\x89\x23\x92\xe4\xe7\x30\x24\xc6\x08\x03\xd9\x4d\x69\x6d\x8b\xb5\xe9\x87\x4c\x98\x7b\x56\xa1\x60\xe6\xb7\x19\x0c\x8a\xa1\xb0\x36\xa6\x90\xdb\x29\x9d\x90\x74\xd8\xe1\xd2\xdb\x15\x20\x65\x9d\x61\xb6\xd3\xfd\x89\x0e\xc4\x58\xb0\x68\x73\x1a\x89\x0b\x26\x75\xd3\x79\x9e\xb1\x54\xa0\x70\x20\xcc\x2a\x8d\xaa\x0e\x4e\x20\xcb\x12\xc8\xee\xb0\x26\xb8\xaa\x1c\x08\x5c\x86\xa6\x01\x72\x8d\x12\xb5\xfe\x82\x1e\x5a\x12\x49\xa0\x82\x1d\xac\x81\x52\x90\x3a\x39\xd1\x5a\x27\xed\xd1\x62\xa2\xf5\x87\x09\xad\x85\x4f\x9d\x0e\xa7\x03\x32\xf0\x8d\xb4\xba\xa8\x40\x66\x51\x9b\x68\x5b\x62\x8f\x44\x9d\xd6\x16\x4a\x7d\x14\x12\xa4\xd3\x89\xc4\x63\x74\xa1\xec\x75\xc6\x07\x60\x91\xd6\x3d\x8a\x0b\x12\x2c\x13\x2d\x82\xc4\xe1\x40\xf7\x81\x15\xa6\x23\xd0\x4c\xcd\x60\x2e\x88\x47\x9d\x8e\x86\x92\xef\x40\x27\x2c\x10\x24\xe4\xbe\x49\xb1\x67\xb4\x09\x0e\x24\xde\x14\x3a\x47\x8a\x94\x89\xbd\x19\x5e\x39\x91\x9e\x9c\x49\xcc\x4c\x33\xa0\xec\x3d\x99\x9e\x71\x46\xcd\x7b\x9d\x51\x7b\x95\x33\x3b\x76\x09\x6b\xab\xeb\xcc\x9a\x16\x9e\xb1\xa6\x13\x8f\x6c\x66\x60\x9d\x34\x1a\x82\x1b\xb2\x21\x52\x38\x91\x34\x92\x00\x99\x2d\x51\x68\x64\xaf\x7b\x07\x34\x46\xb2\xb7\x27\x67\x14\xba\x59\x47\xd9\x83\xc2\x76\x16\xf2\x9c\xd4\x6b\x99\xdd\xf6\x0d\xec\x30\xa8\x2e\x60\x21\xcf\x19\x59\xc8\x73\x12\x71\x40\x56\xde\x23\x5b\x32\xb0\xf2\x1e\x9d\x21\x09\x45\x50\x06\x65\xf3\x02\xb6\x2c\x90\xc1\x2e\x04\x33\x16\xd4\xaf\xb2\x58\x64\x0e\x2c\x2f\x51\x1a\x92\x4e\x33\x31\xb7\xde\xb1\x00\x5d\x21\xfb\x48\xbd\x9f\x2e\xc0\x7e\xb3\xc3\xea\x3d\x85\xb2\xfd\x52\x30\xc1\x0d\x98\xab\x27\x38\x6a\xbd\x45\xe5\x10\xa9\xc8\xd3\xc2\x19\x06\xb4\x37\xd1\xa1\x68\xa7\x0a\xd1\x1a\x52\xc4\xcd\xac\xfb\x23\x2c\xda\x38\xd9\xc1\xda\xe9\x4c\xda\x48\x62\xda\xcb\x14\x2a\x90\xba\x47\x36\x79\x64\x67\xa7\xb0\xb0\xa7\x48\xc5\x7e\xec\x99\x58\x0f\x0c\xab\x13\x2c\xac\x1d\x3b\x64\x43\xd5\x5b\x7f\x76\xb2\xaf\xc8\x3c\x6c\xa9\x1b\x90\x40\xe7\xb0\x2d\xc7\x1c\x5e\x22\x07\xf0\x38\xc2\x81\x15\xa3\x8c\xa8\xef\xc4\xb2\x87\x0f\xee\x9b\xcc\x25\xb4\x00\xe9\x63\xa4\x83\xd2\xc0\x7b\xe7\x8c\x06\xde\xee\x66\x34\xac\x12\xa5\x01\x87\x9a\xd3\xc0\xa3\xe7\x8c\x5e\x26\x09\xf0\xb6\x7c\xa6\x13\xf0\xf6\x39\xa3\xed\xf0\x1d\xe9\xe8\x09\x51\x60\xec\xf3\x4e\xf0\x50\x9e\x9c\xd1\x40\x7a\x1f\x69\x2d\x77\x76\xbb\x36\xd1\xec\x75\xe8\x5e\x42\xdb\x1b\x88\x39\xdd\x00\xc3\x4f\x74\x5d\x24\x49\x5d\x24\x49\x05\x7a\x8b\xef\x24\x59\x20\x4a\x7f\xf9\x5a\x42\x2f\x10\x5c\xfc\x12\xc1\xc5\x2f\x51\x78\xa9\xc0\xc3\xfa\x44\xf7\x6f\x17\x80\xb3\x4b\x7f\x01\xaf\x8c\xa8\x24\x15\x4a\x99\xf4\x5f\x10\xd5\x99\x1b\xf8\x3c\x64\x80\x1b\x23\x15\x75\x60\xd9\x67\xe2\x8a\x4a\x3c\xd0\xa8\xd0\x03\x6d\x27\xa9\x91\xe6\x40\x02\x7c\xe2\x33\xd2\xc2\xc0\x26\xfa\x04\x47\xa4\xee\x8d\x70\x6c\x90\xae\x73\xa5\xcc\x7d\x97\x1a\xed\xa4\x33\xc0\x1c\x33\x01\x7d\xd1\x04\x37\xe0\x99\x62\x82\x0b\x32\x6f\x74\x78\xd8\x6b\x01\xed\x88\xc2\xa1\xcf\xf7\x19\x3b\x39\x0c\x09\xc4\xde\x0d\x71\xe3\xbe\xc2\x61\x9d\x5a\x6d\x4d\x77\xba\xf4\x0f\x14\x80\xf5\xd0\x80\x37\x4a\x91\xec\x92\xa7\xa3\x49\xcc\xc3\x90\x82\xc2\x8c\xd5\x47\xa5\x73\x25\xce\xfd\x5b\xa2\xff\x02\x00\x00\xff\xff\xcb\xdd\xef\xd6\x58\x28\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 10328, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x14\xc6\x11\x66\xbc\x78\xf7\xe4\xc1\x73\xc8\x4b\xc9\x90\x26\x31\xbb\xa5\xd6\x4f\xef\x20\x08\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\xdb\x44\x45\x6b\x3d\x9f\x17\x4d\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x05\xbe\x82\x0c\xde\xfc\x9f\x1c\xf0\x53\x48\xba\xb0\xde\x84\x75\xb1\x25\x8a\xb8\x66\xac\xb2\xb4\x6d\x36\x20\x43\xcd\x64\x12\xef\xdd\xac\x16\x6f\xec\xc5\x7a\x15\x5a\x7c\x8e\xdd\xa3\x0b\x72\xa7\xd3\x64\x82\x3a\xed\x75\x7a\x60\x7c\xb9\x32\x33\x0e\x0e\xda\xa3\x39\x4e\xfc\xec\xbf\x98\xfb\x15\xcf\x1a\x53\x2e\x72\xa6\x9c\x97\x79\x72\x97\x37\x5c\xcd\xb3\x46\xe6\xb7\x31\x2a\x47\x44\x03\x2a\xb4\xde\x05\xa1\x32\x6c\xbf\x1c\x25\x25\x39\x35\x38\x51\x59\x8c\x4e\x74\x52\x90\x70\xa1\x82\x3a\x42\x6d\x65\x0a\x18\x0c\xfd\x80\x0e\x94\x76\x76\xaf\x53\x37\xa4\xbe\x76\xca\xd5\x07\x56\xd2\xf5\x61\x65\xec\xfb\x84\xd1\x25\x9c\xda\x6e\x14\x20\x76\x42\x79\x04\xaf\xe9\x3b\x5e\x5c\x1e\xa6\x30\xfe\x7a\x1c\x78\x14\x24\x07\x9a\xfa\xd3\x30\x15\x28\x84\x0d\x1f\x75\x2a\x53\x8d\x3d\xea\x79\xda\xb5\xb9\xda\x10\x1d\x66\x52\xea\x13\x7f\xa6\x84\x24\x08\x8d\xe6\x03\x77\x39\x91\x1b\xa2\x3f\x77\xf4\x7f\x94\x5c\x03\xe3\xfe\xbc\x91\xd9\x65\x4b\xa7\x4a\x48\x15\xfb\x08\x00\x00\xff\xff\x7c\xbe\x53\x60\x1f\x05\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1311, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd7\xcf\x72\xda\x4c\x0c\x00\xf0\x3b\x4f\xb1\x33\x5c\xbe\xef\x60\xd9\xda\xff\xce\xad\x2d\x69\x87\x43\x93\x8c\x93\x4e\xce\x04\x9c\x86\x96\x60\x8f\x59\x86\xa6\x4f\xdf\x59\x4c\xc2\x72\x92\xf6\x9c\x5f\x3c\x5a\x69\xa5\x15\xd3\xe9\x54\x74\x7d\xbb\x3d\x0c\x41\x1c\xd6\x5b\xac\xc4\xbe\x5f\x2d\x42\x2b\xfe\x2b\xdb\xb0\x2c\x9f\xd7\x43\x7b\x58\x6c\x36\xb0\xdf\xb5\xc3\xff\x93\xa8\xbf\x77\x43\x2b\xd6\xdb\xe7\xee\x4a\xbc\x84\xd0\xef\xae\xca\xf2\xe7\x3a\xbc\xec\x9f\x60\xd9\xbd\x96\xcb\x61\xf1\xf7\xad\x78\x5d\xfc\x29\x1f\xd7\xdb\x55\x77\xd8\xdd\xf7\x6f\x9f\x37\xdd\xf2\x77\x3b\x4c\x26\x53\xd1\x6e\x9f\xbb\x61\xd9\x8a\xa1\xdb\x87\x76\x10\xb3\x9b\xfb\xc9\xba\x0f\x8b\xa7\x4d\xbb\x13\x45\x10\xdb\x45\x10\xc5\x5c\xdc\x35\xd7\xcd\xed\x8f\x87\xf9\xcd\x37\x51\xf4\x22\x2c\x7b\x51\x14\xab\xbe\x1b\x82\x30\x4a\x14\xbf\x44\x73\x3d\x9b\x37\xd7\x5f\x1e\x44\x51\x84\xae\x88\x7f\xd8\x09\xa3\xe8\x2f\xed\x57\xcc\x2f\x4d\xa6\x62\xd8\x6f\xda\x5d\xf2\xc9\xb9\xf8\x7a\xdb\x3c\x7e\x6a\x66\xf1\xdf\x66\xcd\xed\x9d\x28\x56\x02\x15\x58\x0f\xde\x81\x76\x6c\x8a\xce\xf0\x6c\xad\x00\xab\x9a\x61\x9d\x06\x74\x35\x20\x72\x82\x70\x1e\xd0\x7a\x90\xaa\xe2\x61\xa9\x2a\x40\xa5\x19\x18\x2b\x07\x1a\x0c\xe7\xbb\x27\x2a\x29\x2a\x23\x55\x80\xbe\x06\x94\x36\x47\x1b\x32\x17\x17\xda\x53\x5a\x57\xe0\x1c\x48\x59\x03\x59\x91\x33\x45\xf2\x80\x89\x55\x19\x96\x4c\xc5\xd9\xca\x8c\x18\x24\x59\xe6\xc4\x66\xc4\x40\xdf\xb5\xc4\x92\xdd\x91\xd8\x8c\xb2\xe9\x8c\xb3\xe9\x8c\x18\xe8\xfb\x9e\xd8\x8c\x1a\xdb\x8c\x18\x2c\x79\xd9\x13\x9b\x71\x7f\x5d\xc6\xd9\x1c\x66\xd8\x8c\xbb\xe3\x33\x62\xf0\x19\x31\xf8\xac\xde\xcc\x69\x4e\x9d\x11\x05\xd6\x64\x39\x8c\x1c\xa5\x43\xf0\x64\xde\x12\x2c\x2b\xf2\x84\x56\xc7\x29\xac\x01\xc9\x3e\x7a\x97\xf4\x34\xb1\x06\x8c\x01\x54\x1e\xaa\x92\x9e\x27\x27\x6d\x15\x48\x24\x33\x91\x60\x49\xde\x8a\x14\x93\x05\x49\x31\x7d\x42\x0b\x88\xb1\xce\x9a\xf3\xcc\x5c\x68\x3a\xcf\x89\xf6\x74\x42\x12\x5d\xd3\xef\x2e\x62\xcc\x05\xc4\x01\xc7\x78\xa4\x11\xa4\x51\xa0\x14\xeb\x45\xff\xc0\xb2\x22\x5b\x25\xd5\x86\xb1\x58\xc4\xed\xa6\x02\x83\x80\x9e\xb1\xe0\x24\x9a\xcc\x76\xaa\x19\xf9\x3b\x6b\xa9\xc9\x4e\xbc\xd0\x39\x71\x4b\xcd\x8f\x5b\x81\x64\x2c\x88\x1f\x98\xb3\xf3\x9d\x30\xaf\x7d\xdf\x39\x62\x6c\xa0\x2c\xcd\x4e\x60\xd4\x96\x1d\xf8\x51\x93\x2d\xfc\xa1\xad\xc9\xc9\xf7\xc8\xd9\x19\x3f\x72\x43\x0e\x9f\x4b\x4e\xb7\x8f\x71\xe3\x84\x8d\xcd\x46\x57\x68\xd4\x52\x57\x40\xcf\x93\x04\x33\x26\xec\x51\xdb\xf8\x92\x21\xbd\x88\xa5\x98\x17\xc7\x88\x19\x93\x2a\xc1\x74\xae\x13\x9c\x13\x33\xa3\xe8\x23\xae\x2d\x30\x66\xda\xd9\x72\x83\xa8\x2d\xa0\xa4\xef\x46\x8d\x20\x95\x04\x5f\x31\x76\xcd\x14\xd3\x61\x9c\x31\xa3\x19\x13\x4c\xf7\xe2\x09\xa3\xaa\x01\xe9\xad\x2c\xe5\x9c\x6e\xb9\xe0\x74\x65\x8e\x5c\x83\x93\x80\x9e\xf9\xf1\x93\xa6\x07\x5a\xaa\x99\x09\x1f\x35\xfd\x36\xc9\xf8\x83\x3a\x6e\x03\x9a\x51\xcb\x04\x5b\xfc\x17\x00\x00\xff\xff\x43\x00\xe3\xd1\x01\x12\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 4609, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x31\x53\x23\x31\x0c\x85\xfb\xfc\x8a\x9d\x49\x73\x57\x9c\xf6\x08\x05\x33\x99\xa1\xa1\xa7\xa2\xa0\x76\x6c\xed\x46\x60\x4b\xc6\xd2\xae\x13\x7e\x3d\x13\x28\x60\x21\x0e\xa5\xf5\xf4\xbe\x27\x5b\x5e\xaf\xd7\x9d\x64\xe4\x5a\xac\xab\xc4\x37\x1d\x1e\xac\xb8\xee\x4f\x8f\xe6\xfb\xc0\x9a\x9c\xbe\x80\x17\x1e\xfe\xae\x4e\xad\xf7\x52\xb0\x23\x1e\x64\xdb\xed\xcd\xb2\x6e\xfb\x7e\x24\xdb\x4f\x3b\xf0\x92\x7a\x5f\xdc\xeb\xf1\x5f\x72\x87\xfe\x91\x38\x48\xd5\x87\x7c\xbc\x8b\xe2\x9f\xb1\xac\x56\x8a\x65\xc6\x72\xdb\x3b\x6f\x34\x3b\x23\x61\xd0\xa8\x90\xc8\x17\x51\x19\xec\x9d\xf0\xd9\x95\x09\x76\xc4\xe3\xb2\xea\x65\x73\xc9\xe4\x4b\x6c\x49\x21\x05\x48\x68\xee\x74\x26\x8f\x4d\x44\x60\x85\xa4\x83\xb1\x57\x5a\x2a\xe3\x99\x79\x46\x88\x34\xe3\xb7\x5a\x94\x9d\x8b\xa0\x2e\x41\x52\x5e\x6a\x84\x7e\x8e\xa4\xd6\x4a\x8f\x32\x12\x9f\x61\x9e\x9f\x48\x6c\xf8\x19\x51\x36\xff\xb5\x3e\x5d\x5d\xa7\xd2\x0a\x31\x98\x4a\xf3\xfe\x46\x09\xa1\x7e\x6c\x6f\xa9\x4c\xfb\xa1\x65\xba\xc0\x9b\x5d\xa4\xf0\xeb\xb6\x6b\xf0\xf9\x92\xe6\x62\xf3\xc9\xaa\x7a\x61\x03\x97\x73\x9b\xde\x6a\x01\x0c\x23\xea\x44\x86\xc0\x68\x5f\x0c\xb5\x2e\x3f\xc1\x5b\x00\x00\x00\xff\xff\xf2\xdd\xe5\x5b\x26\x03\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 806, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xb1\x6e\xdb\x3a\x14\xc6\xf1\xdd\x4f\x71\x00\x2f\xf7\x0e\xfc\xa4\x73\x48\x8a\x52\xb6\xb6\x76\x0b\x0f\x8d\x03\x25\x45\x66\x45\xa6\x1b\xb5\x8e\x24\x50\x34\x9c\xf4\xe9\x0b\xb9\x19\xda\x89\x9a\xf5\xd3\x87\x3f\x08\x72\xbd\x5e\xd3\x30\xfa\xfe\x12\x22\x5d\xba\xde\x91\x7f\x8d\xa1\xa1\xff\x32\x1f\xdb\xec\xd8\x05\x7f\x69\x4e\x27\x9c\x27\x1f\xfe\x5f\xcd\xf6\xeb\x10\x3c\x75\xfd\x71\xb8\xa1\xe7\x18\xc7\xe9\x26\xcb\xbe\x77\xf1\xf9\xfc\x84\x76\x78\xc9\xda\xd0\xfc\x7a\x53\x2f\xcd\x6b\xf6\xd8\xf5\x87\xe1\x32\xdd\x8f\x6f\x1f\x4f\x43\xfb\xd3\x87\xd5\x6a\x4d\xbe\x3f\x0e\xa1\xf5\x14\x86\x73\xf4\x81\x36\xb7\xf7\xab\x6e\x8c\xcd\xd3\xc9\x4f\xa4\x22\xf5\x4d\x24\xb5\xa3\xbb\x7a\x5b\xef\xbf\x3d\xec\x6e\xbf\x90\x1a\x29\xb6\x23\x29\x75\x18\x87\x10\xc9\x6a\x52\x3f\xa8\xde\x6e\x76\xf5\xf6\xd3\x03\x29\x15\x07\x35\x7f\x98\xc8\xea\xf4\xd2\xf9\xb0\x70\x69\xb5\xa6\x70\x3e\xf9\xe9\xaf\xc9\x1d\x7d\xde\xd7\x8f\x1f\xea\xcd\xfc\xdb\xa6\xde\xdf\x91\x3a\x10\x6b\xb8\x0a\xa2\x2b\x14\xd5\x02\x5b\xe6\x60\x81\x35\x29\x6a\x72\x30\x97\xe0\x5c\xc3\x2d\xb1\xe2\xc0\x46\xe0\x8a\x14\xb6\x0c\x36\x39\x0a\x8b\x32\x19\xf1\x6e\xaf\xe3\x55\x32\xe3\xaa\x19\x5a\x60\x39\x69\x05\x5c\x14\x60\xce\x51\xa4\x33\xde\xb1\xe4\x70\xe9\x8a\x19\x57\x70\x0c\xb6\xf9\x12\xec\x4a\x70\xc1\x30\x8b\x9a\xaf\x58\xa3\xb4\x0b\xb0\xe8\x39\x65\x59\xb2\x68\x0d\xae\x2a\x88\x49\x5e\xa2\xc2\xc0\x40\x34\xf2\x4c\x92\x27\x77\xb5\xd6\x40\xfe\x79\x1a\x09\x9a\x5e\xb5\xb0\x82\xaa\x84\xe8\xe4\xa1\xfd\xb1\x9c\x97\xe0\xf4\x30\x6b\x07\x66\x07\xd1\x16\x9c\xbc\xc9\x5c\x31\x44\x3b\xc8\x3c\x2e\x49\x2e\xb9\x83\x29\xc0\x95\x01\x9b\xdf\x01\x00\x00\xff\xff\x27\x76\xf4\xfd\xf2\x04\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 1266, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x3d\x6f\xdb\x30\x10\x06\xe0\xdd\xbf\x42\x80\x97\x76\xf0\x49\xfc\xb0\x15\x07\xe8\xd2\xbd\x53\x87\xce\x0c\x79\x92\x89\x88\xa4\x42\x9e\x2d\xab\xbf\xbe\x70\x83\x7e\x38\x90\xae\xcd\xfc\xbc\xef\xe9\xac\x83\xb5\xdd\x6e\xab\x34\x62\x9c\x32\x55\x93\x8f\x6d\x55\xc6\xb9\xfa\x50\x23\xd9\xda\xc5\x12\x4c\x79\x01\x9b\x62\xf7\x71\x73\x0b\x7e\x49\x19\x2b\x1f\xbb\xf4\x58\x9d\x88\xc6\xf2\x58\xd7\xbd\xa7\xd3\xf9\x09\x6c\x0a\xb5\xcd\xe6\xfb\xbc\x0b\xe6\x5a\x7f\xf3\xd1\xa5\xa9\x7c\x1d\xe7\xcf\x43\xb2\xcf\x98\x37\x9b\x82\xf9\x82\xf9\x53\x6d\x76\x4d\xd3\x08\x30\xbb\x50\xd0\xf5\x08\x11\xa9\xbe\x47\xc5\xa3\xb3\xcb\xea\x06\x98\x5e\x1f\xfb\x73\x99\xdf\x60\x5d\x11\x42\x2b\x18\x52\x84\x61\x88\xd3\x7d\xed\xa6\xb2\xe1\xf5\xc8\xa9\xd6\x9c\xee\x5b\x4e\x0f\xec\xe4\x07\xae\xdb\xb6\xe0\xce\x65\x19\x65\xa3\x85\x80\xc1\xce\xab\x2c\x35\xcf\x7b\x96\x15\xcf\x9a\xe7\x03\xbf\xda\x91\x6b\x0b\xa9\x98\x53\x49\x21\x6f\xc3\x39\x66\x5e\xa9\x14\x8a\xbb\xb4\x14\x4a\x32\xc3\x55\xf3\xb0\xbe\xb7\x52\x47\x06\x35\x73\x0c\xdd\x1c\x38\x6c\xa1\xcb\x66\x05\x75\xcb\x34\xf7\xcc\xb6\xec\x85\x74\xbb\x8a\x29\x8c\x86\xf0\x6a\x4f\x26\xf6\x28\x80\xb2\xe9\x3a\x6f\x83\x89\xa6\xc7\xfc\x26\x3b\x4b\x28\x48\xe4\x63\x5f\xc0\x19\x32\x10\xbc\xcd\xa9\xa4\x8e\x6e\x7f\x5e\x30\xcf\xc6\xc5\x72\xdf\x71\x4f\xfb\x77\x77\xf0\x0c\x97\x94\x09\xaf\x0b\x85\x3f\xa9\x1e\xd3\xbb\x27\xf7\xd3\x75\xf9\x73\xf3\x6b\xd0\x6e\xf2\x91\x7d\x6a\x19\xe7\x88\x24\x79\xc6\x73\x4e\x23\xfe\x95\x59\xda\xa5\xbc\x04\x20\x1c\x30\x20\xe5\x79\x6d\xde\x2d\x60\x53\x08\x26\xba\xff\x09\x67\x74\x09\xfc\x78\x39\xac\x45\x5e\xdf\xeb\x3f\x7f\xe5\x64\xa8\xa4\xf8\x46\x7f\x04\x00\x00\xff\xff\xb5\xb5\x16\x7c\x74\x06\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 1652, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x72\xd3\x30\x10\x06\xe0\x7b\x9e\x62\x67\x72\x81\x83\xd6\xda\x95\x64\xc9\xbd\x01\x29\x4c\x0e\x34\x1d\xb7\x4c\xcf\xa9\xa3\x50\x43\x6a\x7b\x64\x65\x42\x78\x7a\xc6\x0d\xa5\xe1\x24\xe5\xe0\x93\x3f\xef\xac\xf4\x4b\xeb\xf9\x7c\x0e\xfd\xe0\xbb\x43\x88\x70\x68\x3b\x0b\xe3\x70\x84\x77\x85\x8f\x4d\xb1\x6d\x83\x3f\xac\x77\x3b\xdc\x8f\x3e\xbc\x9f\x4d\xf2\x6b\x1f\x3c\xb4\xdd\xb6\xbf\x82\xa7\x18\x87\xf1\xaa\x28\xbe\xb7\xf1\x69\xff\x88\x4d\xff\x5c\x34\x61\xfd\xfb\x28\x9e\xd7\xbf\x8a\x87\xb6\xdb\xf4\x87\xf1\x6e\x38\x7e\xdc\xf5\xcd\x4f\x1f\x66\xb3\x39\xf8\x6e\xdb\x87\xc6\x43\xe8\xf7\xd1\x07\x58\xdc\xdc\xcd\xda\x21\xae\x1f\x77\x7e\x04\x11\xa1\x5b\x47\x10\x4b\xb8\xad\xaf\xeb\xd5\xb7\xfb\xe5\xcd\x17\x10\x03\xc4\x66\x00\x21\x36\x43\x1f\x22\x18\x05\xe2\x07\xd4\xd7\x8b\x65\x7d\xfd\xe9\x1e\x84\x88\xbd\x98\x5e\x8c\x60\x54\xba\xd2\x7e\x93\x59\x69\x36\x87\xb0\xdf\xf9\xf1\xac\xe4\x12\x3e\xaf\xea\x87\x0f\xf5\x62\xfa\x6c\x51\xaf\x6e\x41\x6c\x80\x14\x5a\x87\xac\x14\x92\x52\x19\xd8\x11\x1a\x34\xb9\xb2\x42\xd6\x9c\xb2\x5a\x62\xe9\x90\x99\x91\x29\x07\x5b\x89\xcc\x12\x59\xbb\x5c\x4c\xc8\xba\xca\xc1\x16\x99\xcb\x0b\xb1\x91\x19\x98\xc8\x21\xc9\x12\x49\x25\xb5\x61\x24\xe5\x90\xb4\x43\x67\x2f\xc1\xc9\xa6\xcf\x30\x99\x5c\xcd\x54\xa2\x4b\xe6\x3d\xe1\x52\x23\x6b\x89\x79\x95\x5f\x30\x21\x4b\x93\xab\x0d\xa1\xd6\x39\xd8\x3a\x9c\x56\x69\x28\x13\x93\xb6\x53\xe3\xb9\xda\x50\xce\x39\x7d\xd5\xd3\x53\xe6\xe2\x4a\x21\x65\x6b\x66\x85\x9c\x15\x8c\xb3\x58\x4a\x24\x99\x3c\x4d\xa5\x41\x63\x50\x6b\x24\x99\xbc\x5b\x67\x36\x19\xf8\xc9\x12\x29\x4c\x6f\xdc\x99\x4d\x2e\xee\x64\xd9\x30\xda\x64\xd8\x6f\xb6\xba\xa0\x2e\x55\xc9\x73\x41\x52\xa3\x9e\xba\xb5\x58\x26\xb3\xfb\x87\x2b\xe4\x64\xcb\x7f\x31\xb3\xcb\x99\xb8\x6f\x98\x65\x72\x97\x5f\xb5\xb2\x48\x65\x32\x3f\x22\x3a\x4d\xd1\x2a\x23\x94\xff\x70\xf2\xc2\x9e\x69\xce\xf9\xad\x68\x24\x2b\x51\xbd\x4c\xf5\x3f\x01\x00\x00\xff\xff\xa8\x72\xe3\xa8\xf6\x07\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2038, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xbd\x72\xe3\x30\x0c\x84\x7b\x3f\x85\x66\xdc\xdc\x15\xa6\x24\x8a\xfa\xf3\xcc\x35\xd7\x5f\x75\x45\x6a\xfe\xda\x9a\x48\xa4\x42\xd2\x61\x9c\xa7\xcf\x24\xf6\xd8\x49\x61\xad\x5a\xe1\x23\xb0\x00\x16\xda\x6e\xb7\x99\x9b\xb5\x4d\x3e\x66\x69\xb0\x6d\x76\x9a\x15\x8f\x3a\xfb\x95\xeb\x28\x73\x65\xc3\xc4\xc3\x0b\x91\xce\x9a\xdf\x9b\x4f\xf6\x9f\xf3\x3a\x1b\xac\x71\xfb\xec\x18\xe3\x1c\xf6\x79\x7e\x18\xe2\xf1\x24\x88\x74\x53\x2e\x3d\x7f\x3f\xef\x26\xfe\x96\x3f\x0d\x56\xb9\x14\xfe\xcf\xe7\xbf\xa3\x93\xcf\xda\x6f\x36\x41\xfb\x57\xed\xff\xe4\x25\x2b\xe8\xae\x24\x23\x49\x17\xe6\x52\xf1\xeb\xfd\x9d\xa9\x35\x44\x1a\x59\x41\xa6\x35\x25\x64\x3a\x26\x30\x23\x19\x64\x7a\xd6\x63\xa6\xc1\x7d\x61\x35\x42\xd4\x98\x91\x10\xd1\xc5\x0a\xa6\x5f\xc1\x28\x84\xd0\x82\xb7\x90\x29\x79\x01\x19\xda\x1a\xcc\xac\xa8\x45\x25\xf4\x05\xad\xba\x15\x08\xb4\x05\xad\x14\x96\xcc\x7a\xb8\x74\x5a\xd7\xb8\xad\x5a\x73\xcc\x18\x78\x7d\xb4\xe9\xe0\xd6\x69\x07\x9d\x5c\xb5\x70\xc8\x55\xdf\x20\x84\x69\x58\xa8\x61\x30\x4b\x57\xc2\xc9\xf4\x0d\x5c\x38\x87\x7f\x1c\x5e\xc3\xd3\xe4\x06\x4a\xe1\x27\xa2\x5c\xb2\xa3\xe3\x6a\x09\x13\x15\xbc\x3c\x21\xe1\x51\x09\x6c\x50\x29\x60\x16\x19\x47\xb5\x08\xa8\x06\x8a\xbd\xf5\x3c\x0d\xd2\xbb\xe0\x4c\x7c\x10\x5f\xca\x11\x56\x8d\xce\x30\xd8\x91\x81\xbe\x33\x9a\x92\xeb\xf7\x07\x8a\xcd\x81\xa8\x40\x44\xb9\x4a\xd3\x2d\xc7\x4f\xc6\xea\x78\x67\x16\x9e\x5f\x42\xd7\x88\xf3\x87\x6f\x91\x94\x96\x04\x7c\x04\x00\x00\xff\xff\x7a\x78\x9d\x90\x04\x08\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 2052, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x4d\x6f\x9c\x3c\x10\x07\xf0\xfb\x7e\x8a\x91\xf6\xf2\x3c\x07\x0f\x3b\x36\xe6\x25\xb7\xb6\xbb\xad\xf6\xd0\x6c\x44\x52\xe5\x4c\xc0\xdb\xd0\x12\x8c\x8c\xd1\x36\xfd\xf4\x15\x49\x1a\x81\x54\x69\xf0\x99\x1f\x23\xe6\x3f\x63\xb3\xdd\x6e\xc1\xf6\xa6\xbb\x38\x0f\x97\xa6\x4b\x61\xec\xeb\xd2\x1b\xf8\x2f\x32\xbe\x8a\xce\x8d\x33\x97\xb2\x6d\x71\x1c\x8c\xfb\x7f\x33\xe1\xaf\xd6\x19\x68\xba\xb3\xbd\x82\x47\xef\xfb\xe1\x2a\x8a\xbe\x37\xfe\x71\x7c\xc0\xca\x3e\x45\x95\x2b\x7f\x3f\x8b\xa7\xf2\x57\x74\xdf\x74\xb5\xbd\x0c\xb7\xfd\xf3\xc7\xd6\x56\x3f\x8d\xdb\x6c\xb6\x60\xba\xb3\x75\x95\x01\x67\x47\x6f\x1c\xec\xaf\x6f\x37\x4d\xef\xcb\x87\xd6\x0c\x20\x3c\x74\xa5\x07\x71\x84\x9b\xe2\x50\x9c\xbe\xdd\x1d\xaf\xbf\x80\xe8\xc1\x57\x3d\x08\x51\xf7\xd6\x79\xd0\x0a\xc4\x0f\x28\x0e\xfb\x63\x71\xf8\x74\x07\x42\x78\x2b\xa6\x07\x03\x68\xc5\x57\x1a\xeb\x95\x95\x36\x5b\x70\x63\x6b\x86\x59\xc9\x23\x7c\x3e\x15\xf7\x1f\x8a\xfd\xf4\xda\xbe\x38\xdd\x80\xa8\x81\x14\xd2\x2e\xc5\x18\xf5\x8e\xa3\x72\xa2\x0a\x29\xcb\x91\xa4\x0e\xd2\x49\x88\xd6\x69\x90\xce\x38\x1d\xef\x30\x4d\x51\xca\x1c\x15\xfb\xd5\x33\x1b\x50\x77\x31\xb9\x7f\xda\x44\xa3\xd6\x48\x2a\x43\x22\x19\x82\xe3\x00\xcc\xc7\x3c\xc3\xd9\x5a\x9c\x28\x94\x94\x07\x60\xc9\x6e\xd2\x1c\x53\x08\xe6\xa3\x4b\x90\x28\x47\x8a\xe3\x35\x7b\xb4\xd0\xec\xbc\xe7\x3a\xe3\x03\x99\xe9\x9c\x4d\x84\x54\x8c\x94\xee\x50\x53\xa0\x96\x31\x3b\xc7\x85\x66\x33\x59\x68\x36\x93\x77\xad\x50\xb2\x91\xcc\xb0\x5a\xdf\x63\x86\xbb\x48\xb2\xc7\xe0\x2f\x27\xd2\x98\xb0\x6b\xf2\xae\x13\x1d\xd2\xe5\x2b\x5f\xdd\xe7\x0b\xd7\xec\x82\x2f\x39\x7b\x95\x90\x4e\x51\x27\x98\x27\x48\x92\xc7\x39\xa1\x54\x12\xb3\x29\xc8\x00\x9c\xf0\xf3\x99\x61\x3e\xef\x37\x4c\x2a\x5f\xd5\xe2\x82\xf3\xb3\x7f\xe1\x31\xa6\x12\x29\x5b\x59\xfc\x4d\xf3\x87\x67\xae\x57\x26\xf8\xaa\xf9\x63\x2c\xa7\x1f\xef\x74\x4d\xc4\xa8\xb3\x3f\x01\x00\x00\xff\xff\xe8\x29\x05\xd1\xc6\x08\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 2246, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x4f\x6f\x9b\x4c\x10\x06\xf0\xbb\x3f\xc5\x48\xbe\xbc\xef\x81\x87\x9d\xfd\x0b\xb9\xb5\x75\x5a\xf9\xd0\x38\x22\xa9\x72\x26\x78\xdd\xd0\x3a\x80\x96\xb5\x9c\xf4\xd3\x57\x6b\x45\x55\x7b\x5a\x72\xe6\xc7\xe8\xe1\xd1\x0c\xeb\xf5\x9a\xc6\xc9\x0f\xe7\x10\xe9\xdc\x0f\x15\x93\x7f\x89\xa1\xa5\xff\x4a\x1f\xbb\xf2\xd0\x07\x7f\x6e\x8f\x47\x9c\x66\x1f\xfe\x5f\x25\xfc\x75\x0c\x9e\xfa\xe1\x30\x5e\xd1\x53\x8c\xd3\x7c\x55\x96\xdf\xfb\xf8\x74\x7a\x44\x37\x3e\x97\x5d\x68\x7f\xbd\x16\xcf\xed\x4b\xf9\xd0\x0f\xfb\xf1\x3c\xdf\x4d\xaf\x1f\x8f\x63\xf7\xd3\x87\xd5\x6a\x4d\x7e\x38\x8c\xa1\xf3\x14\xc6\x53\xf4\x81\x36\x37\x77\xab\x7e\x8a\xed\xe3\xd1\xcf\x54\x44\x1a\xda\x48\xc5\x96\x6e\x9b\xeb\x66\xf7\xed\x7e\x7b\xf3\x85\x8a\x89\x62\x37\x51\x51\xec\xa7\x31\x44\x32\x8a\x8a\x1f\xd4\x5c\x6f\xb6\xcd\xf5\xa7\x7b\x2a\x8a\x38\x16\xe9\xc1\x4c\x46\xe5\x27\x9d\xf6\x0b\x27\xad\xd6\x14\x4e\x47\x3f\xff\x35\x72\x4b\x9f\x77\xcd\xc3\x87\x66\x93\x5e\xdb\x34\xbb\x5b\x2a\xf6\xc4\x0a\xae\x86\x54\x35\x6c\xbd\xc0\x56\x02\x2c\x61\x74\x8e\x6a\x01\xe6\x0a\x2c\x14\xdc\x62\x6b\xc1\x4a\xe4\xb4\x61\xb0\x16\xb0\x06\x55\x36\xc5\x9b\x65\xe9\xc0\x75\x36\xc7\x45\x33\x94\x84\xe1\xac\x95\x60\x6b\xc1\x2c\x60\xf3\x31\xde\xb0\x14\x70\xf9\x14\x09\xd7\x70\x0c\x36\xf9\x32\x24\xd8\x55\x60\xcb\xd0\x8b\x32\x5f\xb0\x42\x65\x16\x60\xa9\x52\x94\x65\x91\xa5\x52\xe0\xba\x86\xd4\xd9\x2d\xb2\x1a\x1a\x52\x41\x94\x32\xdb\xdc\xc5\x1a\x0d\xf9\xcf\x6d\x64\x68\x7e\xaa\x41\xea\x42\x54\x90\xf9\xb4\x7f\xac\x79\x87\xe5\x7c\x5e\x16\x1a\xda\x20\x2d\x7e\xbe\x61\x56\x9c\x3a\x80\xe5\x45\xb5\xb1\x72\x60\x76\x90\xca\x80\x6d\x56\x1b\x07\x63\xc0\x4a\xa7\x6b\x59\xac\x0d\x58\x56\xef\xd1\xf9\xdb\xe6\x9a\x21\x95\x83\x4c\x15\xca\x6c\x70\x29\x74\xfa\x79\x71\xed\x16\xb5\x22\x85\x83\xb6\xe0\x3a\x7d\xe7\xef\x00\x00\x00\xff\xff\x23\x7b\x1e\xa4\x35\x06\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 1589, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xcf\x8e\x9b\x30\x10\x06\xf0\x7b\x9e\x02\x29\x97\xf6\x10\x83\x0d\x49\x9c\x95\x7a\xe9\xbd\xa7\x1e\x7a\x9e\x9a\x81\x58\x8b\xff\xac\x3d\x84\xd0\xa7\xaf\xd8\x4a\x55\x53\xad\x27\x57\x7e\x1f\x30\x7c\x23\xe1\xfd\x7e\x5f\x85\x88\x7e\x49\x54\x2d\xd6\x6b\x59\xe5\xb8\x56\x9f\x6a\x24\x53\xf7\x3e\x3b\xc8\x6f\xc2\x04\x3f\x7c\xde\x6d\xc9\x6f\x21\x61\x65\xfd\x10\x5e\xaa\x2b\x51\xcc\x2f\x75\x3d\x5a\xba\xce\x3f\x85\x09\xae\x36\x09\x7e\xad\x07\x07\xf7\xfa\x87\xf5\x7d\x58\xf2\xf7\xb8\x7e\x9d\x82\x79\xc5\xb4\xdb\x65\x4c\x37\x4c\x5f\x6a\x38\x34\x4d\x23\x05\x1c\x5c\xc6\x7e\x44\xe1\x91\xea\x47\x54\x1c\xb6\x1c\x76\x1c\x1e\x39\x3c\x71\x78\xe6\x50\x73\x78\x61\x50\x36\x1c\x72\x0d\xc9\x72\x43\x1f\x5d\x35\x7d\x96\x4a\x5e\xc4\x14\xbc\x98\x26\xbf\x7c\xa0\x4a\x73\xda\x75\x9c\x9e\x8e\x9c\x9e\x5b\x4e\x35\x7b\xaf\x3e\x97\x55\xbd\x6f\x34\x53\x91\xbb\xa6\x13\x93\x59\x8b\x7c\x54\x2c\x6b\x8e\xa5\x52\xcc\xe0\x1b\x33\x6d\x2b\xa9\x8e\x27\x96\xcf\xcc\x36\x94\x54\x5a\xb2\x7c\x61\x1a\x6f\x65\x53\xfe\xac\xb6\xbd\x94\x51\x4b\x66\x28\xdd\x2a\x06\xbb\xa6\x84\xc1\x45\x20\xbc\x9b\x2b\xf8\x11\xa5\xa0\x04\xc3\x60\x8d\x03\x0f\x23\xa6\xc7\x2c\xce\xe2\x16\x12\xe1\x5d\xf4\x40\x20\x9c\x35\x29\xe4\x30\xd0\xfb\x8f\xe7\x6f\x2a\x23\x91\xf5\x63\x3e\x2c\xd6\xf3\xc1\xb8\x7a\x24\xc5\x33\x4c\xc4\x07\x70\x4e\x21\xe2\x3f\x19\x78\x85\xde\xe7\xc7\xc9\xf3\x9b\x13\x84\x13\x3a\xa4\xb4\x16\x9f\x47\x40\x79\x40\x25\xe6\xd8\x03\xe1\xd3\xd8\x92\x4b\x91\xed\x55\x6c\x93\x5b\xc0\x04\xe7\xc0\xf7\xcf\xe7\xfa\xd3\xf9\xd3\x3a\xb7\x93\x43\xd8\x78\x3b\xfd\x17\xf8\x1d\x00\x00\xff\xff\xeb\xd7\x16\x02\x5e\x06\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1630, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x41\x53\xdb\x3c\x10\x06\xe0\x7b\x7e\xc5\xce\xe4\xf2\x7d\x07\xbf\xd1\xae\x24\xcb\xe2\xd6\x36\xb4\x93\x43\x81\x09\x74\x38\x87\xc4\x94\xb4\x21\xf6\xd8\xce\xa4\xf4\xd7\x77\x44\x0b\xb8\x97\xae\x72\xe0\xc4\x93\x9d\x7d\x25\xed\x7a\x3a\x9d\x52\xd3\xd6\xfb\x63\x37\xd0\x71\xbb\xaf\x98\xfa\xf6\x89\xfe\x9b\xd5\xc3\x7a\x76\xbf\xed\xea\xe3\x6a\xb7\xc3\xa1\xaf\xbb\xff\x27\x89\x7e\x6e\xba\x9a\xb6\xfb\xfb\xe6\x8c\x1e\x86\xa1\xed\xcf\x66\xb3\xaf\xdb\xe1\xe1\x70\x87\x75\xf3\x38\x5b\x77\xab\x9f\x4f\xc5\xe3\xea\xc7\xec\x76\xbb\xdf\x34\xc7\xfe\xba\x7d\x7a\xbf\x6b\xd6\xdf\xeb\x6e\x32\x99\x52\xbd\xbf\x6f\xba\x75\x4d\x5d\x73\x18\xea\x8e\xe6\x17\xd7\x93\x6d\x3b\xac\xee\x76\x75\x4f\xc5\x40\xfb\xd5\x40\xc5\x82\xae\x96\xe7\xcb\xcb\x2f\x37\x8b\x8b\x4f\x54\xb4\x34\xac\x5b\x2a\x8a\x4d\xdb\x74\x03\x79\x4b\xc5\x37\x5a\x9e\xcf\x17\xcb\xf3\x0f\x37\x54\x14\x43\x53\xa4\x7f\xf4\xe4\xad\x5e\xe9\xb0\xc9\xac\x34\x99\x52\x77\xd8\xd5\xfd\xa8\xe4\x82\x3e\x5e\x2e\x6f\xdf\x2d\xe7\xe9\x67\xf3\xe5\xe5\x15\x15\x1b\x62\x8b\x50\x41\xac\x07\x4b\x99\x81\x2b\x86\xc7\x5f\x9d\xfe\x4b\x46\x88\x13\xcd\x8a\x45\xac\xe0\x22\xd8\xe5\xd0\xf8\x4c\x85\x35\xeb\x0c\x42\x80\x48\x09\x71\xf1\x04\xec\x4d\x2e\xae\x10\xd5\x70\xc9\x46\x54\xe9\x78\xbd\x66\xbd\x80\x6d\x05\x76\x15\xaa\x70\x0a\x56\xe3\x8d\x30\xfb\x2c\x5d\x3a\x88\x65\xe4\x35\x9d\xb0\x33\xc8\xaf\xec\x18\x62\xb2\x4b\x7b\x86\x53\x9f\x46\xc2\x21\x45\x0c\xa9\x97\x5c\xed\x19\xc2\xea\x25\xbe\xe8\xf4\xa7\x0e\xc9\x0b\x8e\x16\x9c\xad\x45\x2c\x44\x9d\xaa\x84\xab\x54\xd6\x81\x43\x9e\x0e\x28\x0d\xd8\xa8\xcf\xa9\xf4\xf0\x1e\xce\x81\x4d\x95\x67\x99\x53\x27\x27\x58\xf5\x98\x47\x56\x0d\xf7\xdb\x8a\x17\xb8\x13\x6c\x3c\xc1\x72\x54\x5f\xd1\x1b\x16\xa3\xa6\x63\xe3\xe0\x52\xb4\x80\x52\xdf\xb4\x2f\x38\x42\xdf\x74\x7f\x70\x5a\x48\x19\x9b\xf9\x0d\xe7\x37\x2d\x36\x80\x4b\x75\xbc\x99\x19\x22\x0c\x89\x60\xab\x4e\xec\x48\x8b\xd7\xf5\xf3\x36\xb2\x48\x6f\x3f\xe7\xfb\x93\x46\xc4\xc0\x9a\xac\x94\x63\x7d\x5a\xed\x8c\xbe\xdf\x74\xc6\x55\xa6\x83\xe6\xf2\xf9\xe2\x59\xff\x1e\xb2\x0f\xf0\x25\x38\x3a\x04\x3d\xe5\x08\xeb\x21\x47\x58\x6f\x23\x32\xc4\x46\x78\x03\x56\xb7\xc7\x08\x07\x75\x2d\xbd\x62\x01\x1b\x75\x1e\x5f\xb5\x83\x97\x5f\x01\x00\x00\xff\xff\x85\x99\xe2\x94\x15\x0a\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2581, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\x3b\x6f\xdb\x30\x10\x07\xf0\xdd\x9f\x42\x80\x97\x76\x08\x29\x3e\x2c\x4b\x01\xba\x74\xef\xd4\xa1\x33\x9f\x8e\x50\x89\x74\x48\x3a\x6a\xfa\xe9\x0b\x37\x41\x1f\x40\xe2\xff\xad\xe6\xcf\xff\x3b\x52\x77\xfb\xfd\xbe\xcb\xe7\x90\xb6\xd2\xba\x6d\x4e\xa3\xe8\x2e\x67\x6f\x5a\xe8\x3e\xf0\xd0\x1c\xf7\xa9\xae\xa6\x3e\x32\x97\x53\xfc\xb8\xbb\xe2\x2f\xb9\x84\x6e\x4e\x31\xdf\x77\x0f\xad\x9d\xeb\x3d\xe7\xa7\xb9\x3d\x5c\x2c\x73\x79\xe5\xae\x98\x9f\xcf\x77\xab\xf9\xc1\xbf\xcd\xc9\xe7\xad\x7e\x3d\x3f\x7f\x5e\xb2\xfb\x1e\xca\x6e\x57\x43\x79\x0a\xe5\x13\x17\x7d\x7f\xbc\x13\x6c\x61\xdb\x8b\x79\xa9\xf8\xfb\xff\xff\x18\x6f\xa0\x11\xc2\x41\x23\x95\x82\x46\x4d\x3d\x34\x47\x77\x80\x66\xf2\x23\x34\x46\x49\x6c\x46\xdc\xb3\xf3\xf8\xee\xbe\x9f\xb0\x11\x11\x1b\x4d\xc8\x71\xf8\x5e\xa1\xc7\x6f\x18\xad\x45\x46\x8a\x11\xd6\x92\x32\x0c\x04\x83\x6b\xa9\x49\x43\x73\xb0\x01\x9a\xc1\xc2\xef\xa5\x22\x24\x1a\x0e\x86\x36\x1e\x91\x41\x20\x71\x0c\xf0\xd2\xd3\x08\x67\xc2\x0c\x70\xad\xcc\x85\xf9\xbc\xa5\x25\x1b\x0f\xd8\x93\x26\x49\x2b\xe1\x88\xd9\x01\x4e\x8f\x0d\xb0\x73\x7b\xba\xb6\x64\x98\x5f\xd8\x56\xd9\x3a\xbb\x92\x6b\x8e\xed\x2d\x14\x56\x80\x04\x29\x4a\x90\xb2\x24\x29\x4b\x92\xb2\x14\x29\x4b\x91\xb2\x34\x29\x4b\x93\xb2\x0e\xa4\xac\x03\x21\xcb\xf5\x70\xe5\x5c\x5b\xfc\x4d\xe0\x25\xdc\x04\xaf\xe1\x3c\x51\x86\x3b\xc2\xc1\x8d\xb0\x95\x18\x24\x7b\xfd\xfd\x9d\x37\xb9\x8a\xed\xf1\xe6\xe9\xbb\xef\x19\x4f\xd4\x45\xfd\x13\xf0\xbf\x49\xa1\xfd\x35\x75\xa9\xa0\x57\x62\x31\x78\xf4\x7a\x92\xcb\x89\xff\x0a\x00\x00\xff\xff\xd7\x4b\x52\x50\x12\x09\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 2322, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xc1\x6e\xdb\x30\x0c\x06\xe0\x7b\x9e\x42\x40\x2e\xdb\xc1\xb4\x49\x49\x96\xdc\xdb\xb6\x74\x43\x0e\x6b\x0b\xb7\x43\xcf\x69\xe2\xac\xd9\xd2\xd8\x70\x14\x64\xdd\xd3\x0f\xb6\xb3\x4e\x06\x06\x90\x3e\xf7\xab\xf0\x87\x22\x29\xcf\xe7\x73\x55\x37\xd5\xe1\xdc\x06\x75\xde\x1d\x3c\xaa\x53\xb3\x59\x85\x4a\xbd\x4b\xab\xb0\x4e\xb7\xbb\xb6\x3a\xaf\xf6\x7b\x38\x1d\xab\xf6\xfd\xac\xd3\x5f\xeb\xb6\x52\xbb\xc3\xb6\xbe\x52\xcf\x21\x34\xc7\xab\x34\xfd\xbe\x0b\xcf\xa7\x27\x58\xd7\x2f\xe9\xba\x5d\xfd\x7e\x4d\x5e\x56\xbf\xd2\xc7\xdd\x61\x53\x9f\x8f\xf7\xcd\xeb\xc7\x7d\xbd\xfe\x59\xb5\xb3\xd9\x5c\x55\x87\x6d\xdd\xae\x2b\xd5\xd6\xa7\x50\xb5\x6a\x71\x73\x3f\xdb\x35\x61\xf5\xb4\xaf\x8e\x2a\x09\xea\xb0\x0a\x2a\x59\xaa\xbb\xf2\xba\xbc\xfd\xf6\xb0\xbc\xf9\xa2\x92\x46\x85\x75\xa3\x92\x64\xd3\xd4\x6d\x50\x56\xab\xe4\x87\x2a\xaf\x17\xcb\xf2\xfa\xd3\x83\x4a\x92\x50\x27\xdd\x1f\x8e\xca\x6a\xfe\xa4\xd3\x46\x78\xd2\x6c\xae\xda\xd3\xbe\x3a\x46\x47\x2e\xd5\xe7\xdb\xf2\xf1\x43\xb9\xe8\xfe\x6d\x51\xde\xde\xa9\x64\xa3\x50\x43\xee\xc1\x3b\x40\x67\x65\xb6\xd0\x80\x59\x21\xb0\xce\x00\xba\x02\x10\x9d\x04\x7b\xc0\xdc\x03\xe9\x4c\x88\xbd\x01\x63\x64\x96\x74\x06\xa8\x25\x18\x33\x07\x06\x2c\x9b\x81\x3a\xaa\x01\x7d\x01\x48\x6c\xdd\x46\x3a\x9f\xa2\x2d\x5b\xba\x91\xf6\x9c\x36\x19\x38\x07\x44\x05\x68\x36\x75\x64\x27\x9c\x3b\x6a\xe2\xff\x5a\x4b\x80\x5e\x83\xe9\x5a\x8e\x2d\xc6\x05\x23\x7a\x40\x87\x02\xdd\x65\x40\x87\x40\x19\x71\x3a\x37\x60\x80\x9c\xe0\xba\x73\x0b\xd6\x02\x6a\x0f\x59\x4a\x6c\x1f\x5d\x74\xae\x81\x90\x9d\x93\x08\x93\x34\x47\x8f\xd9\x62\xc4\x98\xaf\x45\x8f\xc9\x10\x90\xe5\x7f\x60\x0e\x88\x05\xa0\x31\x92\x0e\x1d\x69\xb6\x93\x62\xed\xf9\xea\x45\xba\x10\x6c\x8e\x6e\x23\x65\x60\x11\xd0\x0b\x96\x52\xa4\xd9\xdc\xb1\x9e\x94\x84\x0c\x3b\x04\x23\x3d\x25\x37\x19\x79\x6e\x0d\x24\x58\xea\x6f\x58\xb2\xa7\x2f\x58\x36\x35\x7f\x39\x62\xd7\x8a\x93\xb4\xb8\x80\x9d\xce\xc5\xc1\x7b\xcd\x4e\xce\x9b\xce\xed\x94\x7a\x0f\x5c\x5c\xf1\x9e\x5b\x76\xe6\xc7\x9c\x5d\xc5\x68\xdd\xb0\xd8\x34\x50\xc6\xdf\xd0\xa0\xc9\x64\xc0\x4f\x66\x84\x05\x6f\x5e\xa4\x05\x6b\xb0\xd7\x79\xf7\xe2\x20\xff\x34\xc5\x58\x96\x7a\xc0\x66\x4a\x0c\xc3\xdf\x4c\x84\xa7\x64\x16\xb4\xc8\x80\x8b\x1c\xf8\xcd\x1d\x59\x69\x88\x22\x07\x24\x59\x27\x0d\x98\x7f\x11\xb0\x40\x20\x4d\xe0\x33\xc1\xe7\x42\x8c\xf9\xcc\xff\xb0\x60\xce\x23\xcc\x8f\xf9\x05\xa3\x2e\x00\xfd\x24\x2e\x19\xc4\x11\xe7\xaf\xb1\xe7\x06\x5c\xff\x75\x34\x49\xf3\xa3\x18\x6b\x61\xc1\x07\xcd\x3f\x7b\xd4\x7d\x5e\x77\x4f\xb6\x11\xdc\x65\x84\x73\xfc\x13\x00\x00\xff\xff\x5a\x5e\x9c\xed\xe5\x0d\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 3557, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x97\xbf\x72\x1c\x37\x0c\x87\x7b\x3d\xc5\xcd\xa8\xc6\x4f\x04\xf8\x5f\x65\xfa\x54\x29\x52\x2b\x8a\x12\x6b\x12\xeb\x34\xb2\x32\xb6\xf3\xf4\x1e\x2c\xef\xf6\x08\x99\xe4\x15\x9a\xc1\x27\x7e\xcb\x23\x97\x24\x88\xbd\xbd\xbd\x3d\xfc\xfe\xfc\xf2\xe7\xf1\xeb\x97\xdf\x5e\xbf\xff\xf2\xef\xf1\xf1\x9f\xa7\xb7\xc3\xab\xbc\x1e\xbe\x3e\xbf\xb0\x3b\x3c\x7d\x7b\x7f\x7b\xb8\x51\xeb\xd7\xe3\xdb\xd3\xe1\xf9\xe5\xaf\xe3\xfd\xe1\xd3\xfb\xfb\xeb\x97\xfb\xbb\xbb\xbf\x9f\xdf\x3f\xfd\xf7\x07\x1e\x8f\x9f\xef\x1e\xdf\x1e\xfe\xff\x4e\x9f\x1f\xbe\xdd\xfd\xd4\xdb\xcd\xcd\x4f\xff\xba\x67\x8f\x5c\x21\xbe\x22\x55\xea\x61\xe9\x16\xa1\x1e\xc6\x6e\x71\x60\x41\x0c\xd4\xc5\x63\x93\x5d\x86\x07\x4b\xa1\x1e\xe6\x6e\x44\x71\xd4\xc5\x4b\xb3\x74\xe6\xa2\x4f\x1d\xe4\xae\x6e\x30\x77\x85\x21\x6e\x1f\x41\xa3\x81\x2d\x1e\x35\x21\x0a\xa2\xa7\x2e\x9e\x9a\xe2\x8a\xfe\x91\xa1\x89\x9d\xc1\xb9\x80\x73\xeb\x79\xa7\xb1\xcd\x4e\x5f\xbf\x80\x73\x24\x8b\x03\x3f\x38\x64\x07\x07\x76\x85\xba\x78\x62\x66\x88\x04\x34\xf3\x14\x2f\x4d\x66\xea\x61\xed\x86\x48\x86\x96\xb6\xc4\x40\x86\x16\x76\x84\x84\xcb\x98\x37\x5a\xd8\x09\x12\x12\x19\xba\x62\x67\x63\xe7\x2b\x76\x31\xf6\xb5\x91\x54\x63\x8f\xce\x69\xd7\x1e\x1d\x19\x9a\xdb\xde\xe1\xf2\xba\x37\x18\xbb\x45\xcf\x66\x46\xdc\xd6\x71\x87\xb1\x5b\x1d\xd8\x27\x6c\xea\x39\x5e\x9b\xb5\x57\x27\x73\x3b\x35\x8b\xa3\x1e\xc6\x2e\x3b\x46\x48\x7a\x3a\xc8\xd0\xc4\xe6\x00\x09\x0c\x0e\xdb\x90\x3b\x9c\xf9\x19\x5c\x1d\xb2\x90\xa1\x99\x5d\xc0\xce\x23\x53\x0f\x13\x57\x93\x8a\xe6\x97\xb8\xbd\x91\x0e\x67\x7e\x06\x07\x41\x4e\x64\x68\x60\x47\x9d\x90\x43\x8a\x28\x81\x7a\x98\xbb\xb5\xe8\xed\xd0\xc3\xdc\xdd\x7e\xbb\x66\xb2\x38\xf3\x19\xba\x2f\xe5\xd4\xf9\x99\xe6\xb6\x17\xdd\x79\x3d\x8c\x5c\x01\xa7\x00\xae\x8c\x18\xc9\xd0\xdc\x16\xc9\x5b\xf2\xb5\x38\xf3\x13\x98\x1d\x52\x20\x43\x0b\x5b\xf4\x60\x91\xa1\x99\x5d\x91\x19\x1c\x1d\x19\x9a\xd8\xd9\x81\x6b\x38\xf7\xbd\xd3\xcc\xe6\xd3\x69\x69\x9d\x5f\x70\xe6\x17\x70\x62\x04\x26\x43\x2b\xdb\xa3\x44\x32\x34\xb6\x35\xc7\xb0\x03\x17\x4f\x86\x66\xb6\xbe\x8b\xd3\x34\x77\x58\xb8\x55\x8f\x42\x0f\x73\x37\xd5\xf3\xdb\xbe\xd0\xcc\xf6\xe0\x5a\xb7\x24\x6c\x71\xe0\xa7\x80\x00\xf1\x70\x74\x8e\x64\xb8\xff\xb6\xd6\xa8\x37\x96\xa7\x2e\x5e\x9a\xa1\x33\x47\xbb\x2e\x45\x2d\x35\xb6\x7b\x9e\xa9\x87\xa5\x5b\x3d\xf5\xb0\x70\x0b\xa4\x52\x0f\x4b\x37\xf6\xee\x30\x83\x5d\x9a\xab\xa3\x1e\x96\x2e\x97\x48\x86\x26\x76\x6c\x83\x6c\xb3\x3b\xc3\xd4\x95\xb6\x66\x7b\x3c\x59\xb5\xd6\x1e\x05\xe1\xdc\x6f\x83\x51\xd5\xe8\x02\x82\x83\xb0\x83\x17\x32\xb4\xb2\x19\x3e\x92\xa1\x99\x1d\xb6\xfa\x3a\x9f\xfa\x3e\xd3\xc2\x2e\x90\x40\x3d\xac\xdd\xd2\xbb\xc3\xba\x78\x6f\x66\xe7\xc9\xd0\xcc\x8e\xd0\x1b\x30\x67\x32\x34\xb1\x85\x43\x2b\x62\x98\x2c\x4e\xfd\x08\x0e\x2d\xd1\x7d\xe0\x61\x55\xcf\x7a\xe2\x90\x18\x5a\xd4\xef\x30\x5e\x79\xf6\xa1\x25\xda\x12\x91\xd5\xef\x71\xe9\x97\xad\xd6\xfb\xc0\xa3\x27\x62\xd6\xfd\x14\x93\x0e\x67\x8f\x27\xa3\x69\xed\xec\x2a\x32\xf5\xb0\x76\x45\xd7\xdf\xe0\x35\x3f\x59\x7f\x94\x4f\x8d\x50\xac\xbf\x98\xe7\x26\x78\x47\x16\xaf\xf9\x62\xfd\xe1\x6e\x3f\x09\x52\xa1\x1b\xa7\xa7\x85\xad\xcb\xe3\x2f\xb3\x6d\x78\xcd\x2f\xd6\x5f\xcd\x56\x85\xe0\xc8\xe2\xca\x8f\xed\xcb\xd8\xe0\xc8\x4f\x05\xc9\xeb\x39\xca\x95\x7a\x18\xb9\x95\xdb\xcd\xe8\x2b\x84\x0c\x4d\xed\xad\x1e\x02\xeb\x46\xb0\x3c\x7d\xa2\xb6\x9a\xb5\x66\xfa\xc0\xa3\xaf\x54\x17\x90\xab\x36\xc2\x51\x07\xe3\x5d\xaf\x02\x6b\xde\xd7\x92\x31\x04\xfa\xc0\xc3\x27\xb2\x96\xfe\xda\xa1\x50\x0f\x73\x57\xbf\x16\xa4\x92\xa1\x85\x1d\xb5\x3c\x8f\x64\x71\xe1\x57\x5d\x78\x32\xb4\xb6\x25\x92\xa1\xb5\xed\x3d\x19\x5a\xdb\xc1\x91\xa1\xb9\xad\x57\x62\xdd\xc7\xdd\x68\x62\xa7\xb2\x55\xbb\x5a\xae\x58\xfc\x11\x00\x00\xff\xff\x81\x45\xdb\xc4\xec\x12\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 4844, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x9a\xbd\x92\x1c\xb9\x0d\x80\xf3\x7b\x8a\xad\x52\x0c\x88\x00\xff\x15\x3a\x77\xe4\xc0\xf1\x59\x3e\xfb\x54\xf6\x69\xb7\x24\xb9\xce\xf2\xd3\xbb\xc0\xee\xe9\x01\x74\x04\x3a\x58\x15\x3f\xf1\x1b\x0e\x9a\xff\x64\xcf\xbb\x77\xef\x5e\xfe\xfa\xe9\xf3\xdf\x5f\x7f\xff\xfa\x97\xb7\xef\x7f\xfa\xf7\xeb\xc7\x7f\xfd\xf2\xe5\xe5\x8d\xdf\x5e\x7e\xff\xf4\x99\xd2\xcb\xd7\xb7\xef\x3f\x89\xf3\xe7\xd7\x2f\xbf\xbc\x7c\xfa\xfc\x8f\xd7\x0f\x2f\xbf\x7e\xfb\xf6\xf6\xf5\xc3\xfb\xf7\xff\xfc\xf4\xed\xd7\xff\xfc\x0d\x3f\xbe\xfe\xf6\xfe\xe3\x97\x9f\xff\xf7\x1d\x7e\xfb\xf9\xbf\xef\xff\x50\xd6\x4f\x3f\xfd\xe1\xbf\x3e\x50\xc6\x36\x70\x30\x0e\x78\x26\x7d\x6f\x20\xf1\x04\x0d\x7b\xb7\x37\x64\x1a\x48\xd4\xc1\x50\x60\x4f\xa4\x49\x60\x28\xb4\x99\x12\x18\x72\xec\x81\xd4\x3b\x52\x29\x60\x28\xb0\xe5\xbb\x27\x18\xf2\xed\x91\xb0\x26\xd0\x10\xba\x53\xbb\x33\x72\x0b\xd2\x68\x60\x28\xb0\x1b\x72\xbd\x9e\xf0\xa0\xc0\xee\x58\x07\x68\x70\x5d\xce\x15\x89\x1f\x71\x9c\x14\xda\x5c\x3a\x18\xda\xdb\x83\xb0\x62\xcd\xf0\x4c\xfa\xde\x44\x2e\x0c\x1a\xf6\x2e\xa5\x8e\x57\x45\x5c\xe0\xbb\x85\xb5\x7c\xd0\xc6\xe6\x8c\xb3\x63\x23\xa4\xdc\x41\x83\xeb\x72\x9a\x38\x1f\xee\x01\x8e\x3b\x91\x12\x12\x81\x4a\x07\xe6\xc4\x52\x40\x43\xe8\x36\xed\xb6\xc0\xa5\x26\x7f\x60\xc8\xb7\x99\x90\x53\x07\x43\x7b\x9b\x12\x63\x41\xae\x19\x34\xf8\x2e\x13\x16\x50\x69\xdf\xa4\x5a\x91\x4a\x02\x8b\x9e\x9f\x91\x06\xaf\x6e\x6c\x71\xe3\x97\x24\x53\x1b\xb3\x04\xc0\x60\xc8\xb1\x65\xee\x69\xd8\x33\x68\x08\x5d\x99\x42\x0d\x85\x36\x57\x02\x43\x81\x3d\xb0\x31\x68\x08\x5c\x99\xd7\x3a\x18\xf2\x6d\x4e\x58\x1a\x68\x08\x5c\x42\xce\xd7\x13\x1e\x14\xd8\x2c\xdd\x13\x0c\x05\x76\x46\x55\xb4\x40\xe8\xd2\x1c\x60\x68\x6f\xf7\xb4\x1e\x8a\xcb\xb2\x9f\xe4\xd8\x0d\x09\xa9\xaf\xea\x78\xa4\x7d\x93\xb1\xc0\x33\x19\x79\x74\xb4\xdd\x05\x8e\xdb\x91\x79\x60\x59\x4d\x77\x41\xe8\x0e\xed\x8e\xd8\x9d\x0c\x1a\x7c\x37\x4b\x4b\x11\x18\x72\xec\x89\x43\x96\x8d\x0a\x1a\xf6\xee\x90\xb1\x39\xb1\xac\x36\xbe\x60\xef\x92\x2c\x08\xc8\x75\x95\x7b\x81\xef\x52\xc2\x3e\x40\x43\xe0\x12\xce\x0c\x1a\x02\xb7\x20\xd5\x09\x86\x7c\x9b\xf9\x6c\xbb\x0b\x82\xa7\x2b\xb2\x42\x6a\xf0\xdc\x82\x54\xd6\xc8\x04\x8b\x9e\x5f\x91\x64\x29\x51\x69\xcf\x5c\x9b\x25\xe4\x72\x96\x7c\x61\xe0\x57\x42\x9e\x60\xc8\xb1\x99\x56\x71\x34\x56\xaf\x53\xb8\xf1\xab\x64\xca\xb2\x8b\xd4\x0a\x18\xda\xd9\x6b\x22\xc1\x81\x34\x41\xa5\x23\x93\x13\xa8\x74\x68\x92\x32\x77\xbd\xfe\xcc\x95\x71\x3c\x40\x43\xe8\x3e\x03\x58\xe0\xbb\xbd\x61\xbe\xdc\x05\xb1\x4b\xda\x0d\xe2\x95\x6c\xd6\xee\xb6\x1d\xce\x27\x1f\x98\x0b\x68\x88\xdd\xaa\xdd\xdd\x28\x55\xd9\x4d\xbb\xbb\xb9\xf5\xaa\xa6\x84\xd4\xc1\xd0\x8d\x3d\x8c\x1d\xb6\x47\x52\x7d\xe7\xa0\xc8\x2e\xa6\xec\x72\x53\x76\x31\x65\x97\xdb\xb2\x75\xd7\x28\x7e\xdf\xc8\x03\xa9\xac\x09\xdf\xd0\x8d\x3d\x8d\xed\x45\x72\xe6\xcb\x54\x67\xd1\xf1\x65\x8b\x2c\xfb\xff\xa3\x31\x2f\xf2\xec\x35\xa9\x60\xce\x60\x28\xb6\xcf\x50\x2e\x8a\x6c\xd9\xa6\x56\xb0\x18\xf8\x75\xcd\x8f\x86\x3c\xbb\xaf\x6d\xcb\x38\x06\xce\x45\xb1\x4d\xa5\x83\xc5\xc8\xcf\x48\xe7\xf8\x79\xa2\xe7\x0f\x94\xee\xd4\xcf\xd8\x1f\xe4\xd9\x53\xce\xfb\x74\x4e\x10\x17\x05\x76\xc6\x0c\x2a\x1d\x98\x72\xa0\x02\x0d\xbe\x4b\x9c\xb1\x0c\x30\x14\xd8\x43\xbe\x1b\x0c\x39\x76\x3f\x36\x11\x47\x37\x79\x80\xe7\x16\x59\x8e\x1f\xfd\xf5\x22\xcf\xae\xc8\x19\xfb\x59\xf2\x09\x9e\x2b\x43\xa5\xaf\x35\xd4\x62\xe0\xcb\xaa\x49\x0c\x16\x03\x5f\xfe\x1a\x18\x0a\xec\x29\x5d\xee\xa9\x1f\x18\xf9\x79\x1d\x10\x2d\xfa\xbe\x74\x51\xce\x60\xc8\xb1\xa5\x45\x64\xbb\xd2\x0f\xfd\x89\x9e\x2f\xdb\x2b\xe9\xa4\x47\x34\x4f\x8c\xfc\x8a\x9c\x94\xbf\xd0\xf3\x3b\xb6\x84\x94\x8e\xe1\x79\xd1\xde\x66\x9e\xab\x5b\x51\x5f\x03\x48\x61\xec\x33\x17\xb0\x18\xf9\xeb\x78\x0b\x16\x23\xbf\xc8\xee\xcb\x50\x6c\x53\x67\xb0\x78\x53\xfa\x31\x49\x2b\x8c\xfc\x7a\x0e\x92\x27\x39\x76\x6e\xeb\x06\x26\x1f\xf6\x45\x81\x9d\x91\x13\x83\xa1\x8d\xdd\x0a\x16\x6c\x48\x29\xc1\x33\xb9\xf3\x2a\x4a\x51\x0d\x79\x80\x4a\xbb\x26\xa5\x84\x1d\x54\x3a\x34\xa7\x32\x77\xcf\xf4\xcc\x25\x02\x0d\x71\xa9\xda\xdd\xde\x97\xaa\x6c\xd6\xee\xb6\xa6\x9e\xd9\x59\xbb\xbb\xf6\x55\xd9\x45\xbb\xbb\x9e\x7c\x66\x37\xc2\x76\xb9\x0b\xfc\x56\xa0\xb9\xee\x98\x0c\x39\x76\x45\x9e\xc8\xf9\x68\xb4\x07\xb8\x6e\x9e\x48\x09\x54\xda\x35\x4b\xc1\x4a\xa0\xd2\xa1\x59\x94\xe9\x3d\xd7\xca\xa5\x34\x40\x43\xec\x4e\xed\x7a\xfd\xa6\xae\x75\x8d\x1f\x8f\x75\x80\xeb\x1e\x27\x5a\xd0\x10\xbb\xac\x5d\xaf\xdf\x9c\xd9\x59\xbb\x5e\xbf\xa9\x48\x79\xdd\x9a\x6b\xf0\xdd\xde\x70\x5e\xee\x02\xbf\x27\x54\xc6\xf2\x88\xe1\x80\xd0\x6d\xda\x6d\xb1\xdb\x13\x68\x88\x5d\xd2\xae\x5f\xbf\x2b\x9b\xb5\xeb\xd7\xaf\x64\x4f\x1d\xaf\x3b\x2e\x8f\x6c\x9a\x3a\x60\xba\xa9\x35\x99\x49\x0d\xed\xec\x86\x44\x73\x6d\x5e\x64\xcb\x68\x71\xe3\x53\x2a\xb8\x36\xda\x1d\x7b\x06\x43\x9e\x2d\xbd\xa6\x63\x6b\x60\x28\xb2\xa7\x9c\xc6\x0d\x05\x76\x91\xc5\x36\x83\x45\xdf\x67\x1e\xeb\x15\x85\xa6\xd8\x96\x6a\xb4\x18\xf8\xb9\xcb\x0e\x16\x2c\x7a\xbe\x8c\x29\xa4\x59\xc1\x90\x6f\xb3\x6c\xa3\x88\xc1\xa2\xe7\x37\x94\x0d\xe6\x59\x91\x27\xf8\x6e\x1e\x32\x93\x6b\xf0\xdd\x9a\xd6\xd5\x9f\x21\xc7\x66\x4a\x58\xb0\x77\xd0\x10\xb9\x49\x4e\xba\x86\x02\x9b\x49\xf6\xf3\x19\x7e\x60\xf7\x13\x05\xd7\xeb\xab\x02\x16\x77\x3e\xd1\x71\xcf\x3d\x65\x62\x35\x74\x63\x67\x63\x6f\x63\xd1\xf9\xc5\xea\x37\xb1\x70\x35\xc5\xef\xdf\xbc\x50\x26\xc9\xc1\xb6\xaa\x52\x41\xe8\x52\xca\x60\x28\xb0\xd7\x85\xe8\x53\x3f\x30\xf6\x39\x13\x58\x0c\xfc\x2c\x42\x02\x8b\x77\x7e\xb1\xfe\xfe\x1d\xa1\x12\xba\xf5\xa3\xda\x11\xa1\x64\xb0\x78\xe7\x37\xeb\xef\xdf\xb0\x2a\xc1\xc6\xe3\xbc\x63\x55\xc2\xb4\xfe\xfe\x7d\xf6\x53\xa8\x0c\x16\xef\xfc\x6a\xfd\xed\x08\x3f\x85\x92\x50\x55\xe7\xa2\xad\x5d\xd6\xd9\x28\xa7\x63\x4e\x35\x78\xe3\xcb\x82\x60\x30\xf0\x65\x69\xac\x4f\xff\xc0\xc0\xa7\x24\x27\x77\xb0\x78\xe3\x97\x01\x16\x6f\xfc\xd9\xc0\x62\xe8\x0f\x1b\xcf\xb8\x8b\x67\xd8\x78\xc6\x5d\x3c\x43\x76\x28\x16\xef\xe2\xf9\x31\xa0\x38\xa2\xf5\xae\x0d\x2c\xde\xf8\xfa\x09\x16\xde\xf8\xfa\x09\x16\xde\xf8\xba\x05\x16\x46\x7e\x1f\x38\x3b\x58\x0c\xfc\xf5\x1b\x8a\x67\xf9\x07\x6e\xfd\xbe\xde\xc5\x0f\x3a\xaa\x47\xd1\xce\xae\x1d\x6b\x43\xf9\x17\x54\xda\x37\xe5\xe4\x5e\x13\x18\xf2\xed\x49\x6b\x5d\x56\xe0\xbb\x94\x1a\xd2\x28\x60\xf1\xce\xaf\xd6\x0f\x22\x3f\x84\x69\xfd\xed\x8c\x76\x0a\x94\x91\xe9\x8a\xfe\xc4\xc0\x67\x42\x55\xfc\xa2\xc8\x2e\x6b\xe9\xd4\x14\xd8\x65\xea\x6a\x3f\x71\xe7\xb7\x81\x8d\xd6\xed\x6d\x21\x30\xe4\xdb\x54\x1a\xca\x5e\x4b\x53\x64\x4f\x94\x6a\xd1\x14\xd8\x7d\x1d\x6b\x0c\x79\xf6\x71\x73\x26\xbb\x1b\x4d\x9e\x9d\xd7\xcd\x41\x3b\xcb\x7e\x50\x64\x8f\x75\x07\x65\x71\xe7\x4f\x5a\x57\x43\x24\x87\xe2\x04\x16\x5d\xbf\xaf\x9f\x4e\x70\x9e\xf0\x03\xbb\x9f\x98\x58\x0b\xca\x92\xa9\x69\x63\xcb\xd1\xa7\xb4\xe3\x10\xc4\x60\xc8\xb7\xe9\x5c\x5f\x2d\x3a\x7e\x1b\x48\xed\xf8\x05\x94\xc5\xff\x07\x00\x00\xff\xff\x81\x0c\x02\x51\x5c\x28\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 10332, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x97\xcb\x52\xab\x37\x0c\x80\xf7\x3c\x45\x66\x58\x4b\xb1\xe4\x3b\xcb\xee\xbb\xea\xa2\x6b\x0a\xb4\x64\x5a\x48\x06\xc2\x50\xce\xd3\x9f\x71\x2e\xe7\x97\x82\x22\xef\xfc\xa1\xcf\x41\xb6\x2c\x3b\xb9\xbd\xbd\x5d\xfd\xb9\x79\x7d\xdc\x7e\xbe\xff\xb1\xfb\xfa\xed\xbf\xed\xc3\xbf\x4f\x6f\xab\x1d\xef\x56\x9f\x9b\x57\x0a\xab\x8f\xdd\xe3\xfd\xfe\xe9\x66\x68\xbf\x6f\xdf\x9e\x56\x9b\xd7\xbf\xb7\x77\xab\xe7\xfd\x7e\xf7\x7e\xb7\x5e\xff\xb3\xd9\x3f\x7f\xfc\x85\x0f\xdb\x97\xf5\xc3\xdb\xfd\x8f\x2f\x78\xb9\xff\x7f\xfd\xed\xe3\x6e\x6e\xbe\xfd\xe9\x8e\x22\x96\x86\xad\x62\xaa\x20\xc6\x9e\x49\x35\x83\x84\xab\x6e\x8f\x48\xa1\x83\x04\xdb\xad\x09\xa9\x76\x24\x3a\xe4\xb0\xd0\x15\xbb\x21\x95\x86\x1c\x03\x28\xba\x6a\x73\x0c\x48\x31\x81\x22\xdb\xa6\x50\x31\x61\x3e\x7c\xf2\x79\xec\x9a\x2c\x4c\x36\x4c\x1e\xd1\x88\xd4\x3a\x12\x17\xd0\x38\xf1\x73\x05\x8d\x33\xbf\x69\xbf\x19\x7e\x0a\x58\x2b\x32\x77\xec\x20\xc6\xae\x49\x0c\x12\x7c\x37\x4a\x37\xfa\x6e\x91\xae\xb5\x1b\x4b\x98\x65\x0e\xec\xe7\xc0\x49\xba\x56\xa5\x45\x58\xe6\x60\x56\x64\x09\xc7\x00\x12\x7c\x37\x4b\xd7\xea\x11\x11\x6e\xd2\xf5\xab\x96\xe4\xda\x92\xbf\xb6\x24\x73\x48\x7e\x0e\x59\xae\xcd\x3c\xf3\x22\x2c\x6b\x9c\xfd\x1a\x17\x99\x43\xf1\x73\x28\x55\xba\xd6\x69\x17\x61\x79\x7c\x8b\x7f\x7e\xab\x5c\x5b\xf5\xd7\x56\x49\xba\xe4\xbb\xf2\xec\x54\xff\xec\x34\x99\x43\xf3\x73\x68\x32\x87\xe6\xe7\xd0\x64\x5f\xb4\x59\x6f\xea\xe6\x9c\x74\x67\x92\x69\x50\xf2\xf3\xa0\x2e\x0b\x42\xdd\xaa\x48\xe6\x63\xb0\x12\xb6\x02\x8a\x7c\x9b\x03\x83\x46\xc3\x2f\x69\xdc\xc1\x09\xa9\xc1\x32\x74\x3c\x66\x58\x86\x96\x97\x31\x67\xa4\xd8\x30\xc0\x32\xe6\x6c\x9d\xe1\x53\xbc\x44\x64\xea\xa0\xc8\xb7\x39\x80\xa2\x89\x4d\xca\xb6\x2a\x22\xe3\xac\x6c\x73\x8d\x05\x89\x46\x71\xd3\xe1\xb5\xd1\x38\xf3\x9b\xf6\xcd\xbd\x16\x42\xeb\xa0\x71\xe2\xf7\x00\x1a\xad\x77\x98\x68\xec\x03\x8e\xfb\x2d\x80\x22\xf3\xd5\x26\xe4\x1c\x31\xc6\xe3\x0b\x2f\xc8\xb7\x39\x44\xd0\x38\xf1\x73\x02\x8d\xa6\x3f\xbe\xe7\x04\xcc\x84\xd4\xc6\x17\x1f\x89\x33\xbf\x69\xdf\xda\x7b\x29\xf4\x00\x1a\x7d\x9f\x53\x01\x8d\x33\xbf\x6a\x7f\x92\x3f\xa7\xa6\x7d\x37\xff\x88\xdc\x41\x91\x6f\xc7\x00\x8a\x3c\x7b\x34\xb7\x00\xbb\xbb\xcf\x02\xd1\x68\x27\xd0\x38\xf3\x8b\xf6\xbd\x9d\x1c\x42\x09\xa0\x71\xe6\xb3\xf6\xad\x2e\xff\x25\x94\xac\xb6\xfe\xc4\xd3\x19\xfd\x62\x86\xb7\xff\x07\x23\x13\x5c\xf0\x74\x46\xbc\x98\x61\x76\x58\xae\xc7\x6b\x78\xb4\x60\x02\x8d\xd7\x7d\x4e\x01\x5b\x07\x45\xbe\x3d\xae\x65\x8d\xd7\xfc\x32\x5e\x3c\x8a\x0d\x14\x4d\xec\xae\xec\xab\xb9\x1c\xe3\x29\x80\xa2\x89\x4d\xca\x36\xf7\x5d\xc4\x55\xde\xf6\x49\x10\x71\x95\xb7\x7d\x0a\x8e\xf1\x5e\x30\x27\x90\xe0\xbb\x4d\xba\x4e\x16\xbd\x20\x71\x04\x45\x96\xdd\x09\x39\x32\xb6\x71\x01\x80\xa2\x89\xdd\x94\x6d\x66\xb2\xc4\x47\xab\x4a\x9a\xd8\xac\x6c\xb3\x4f\x4f\x71\x8a\x1d\xa9\x2d\xfe\x89\x27\x33\x58\xac\xf5\xc4\xd3\x19\xe9\x62\x86\x59\xa7\x83\x91\xb0\x32\x52\x3b\xff\x8b\x33\xce\xfc\xa2\x7d\xf3\xf6\x93\x42\xd3\xfe\xf5\x0a\x1c\x85\x1e\x40\xa3\xf5\x0b\x79\xfc\x38\x1f\x5f\x24\xd2\xa8\xaf\x22\xdf\x2e\x04\x8a\x7e\x06\x00\x00\xff\xff\x6c\xf0\x8d\x98\xa3\x11\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 4515, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd3\x31\x6f\xf2\x30\x10\xc6\xf1\x9d\x4f\x11\x89\xf9\x9e\xf8\xce\x67\x3b\x66\x7c\xf7\x77\xea\xd0\x99\x52\x5a\xa2\x16\x12\x85\x54\x40\x3f\x7d\x15\xd4\x56\x76\x71\xd8\xee\x9f\xfc\x72\xb1\x14\x65\xb9\x5c\x56\x8f\xed\xe1\xb9\x3b\x1d\x1f\xfa\xcb\xbf\xf7\x6e\xf3\xb6\x1d\xaa\x5e\xfa\xea\xd4\x1e\x42\xb5\x3d\x8f\xc3\x7a\x31\xa1\xff\xdd\xb0\xad\xda\xc3\x4b\xb7\xaa\x76\xe3\xd8\x1f\x57\x75\xfd\xda\x8e\xbb\x8f\x27\x6c\xba\x7d\xbd\x19\xd6\x9f\x17\xda\xaf\xcf\xf5\xcd\xb2\xc5\xe2\xe6\xd2\x8a\x2d\x42\x84\xd8\x08\x1f\x29\x8d\xb2\x6d\x0c\x58\xe0\x94\x92\xb9\x20\xd5\x80\xb9\x01\x1b\x8b\x40\x69\xcc\x58\x09\x60\x15\x04\x4f\x59\x15\xb4\x63\xb0\x1a\x78\x87\x46\x29\x8d\x79\x7b\xdd\x17\x03\xe5\x39\xe7\x19\x56\xe0\x98\xd2\x28\x59\x01\x7b\x0f\x66\x03\xaf\x94\xd5\x1d\x2d\x06\x21\x50\x56\x73\x3a\x22\x30\xd8\x19\xca\x6a\x46\x87\x06\xec\x19\xca\x94\xd5\x3d\x6d\xd1\x38\xca\xaa\xac\xc5\x4e\xef\xff\x3e\xf6\x6f\xcc\x59\x0b\x8e\x11\xa2\x91\xf2\x2c\x78\xaf\x50\x88\x85\xa1\x9f\x49\x5c\xe9\x0c\xd7\xbb\x4e\x21\xce\x52\x32\xdf\x95\x9a\xc8\xd2\xf7\xf0\x0e\x4e\x10\x1b\x88\x65\x4a\x63\xd6\xb2\x69\xc0\xd3\xde\xb4\x8a\xff\x48\x00\x73\x80\x58\x07\xf6\x94\x67\xc9\x47\x86\xd8\x00\x99\x36\x8a\xa7\x3f\x5d\x78\x42\x4c\x80\x7a\x70\x54\xb0\x52\x56\x5f\x01\x00\x00\xff\xff\xc3\x85\x35\x8e\x43\x04\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 1091, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xcf\x8e\xda\x30\x10\xc7\xf1\x3b\x4f\x11\x89\xf3\xfc\xf0\x8c\xff\x73\xec\xbd\xa7\x1e\x7a\xde\xd2\x6d\x17\xb5\x4b\x22\xa0\xda\xd2\xa7\xaf\x92\xac\x90\x47\x6b\x9b\x03\x12\x5f\xfc\x91\xe5\x28\x61\xb2\xdd\x6e\x87\xaf\xc7\xd3\xf7\xf1\xed\xf2\x65\xba\x7d\xfa\x3d\x1e\x7e\x3d\x9f\x87\x49\xa6\xe1\xed\x78\x8a\xc3\x65\xba\x6d\x66\xf2\x79\x3c\x3f\x0f\xc7\xd3\x8f\x71\x3f\xbc\x5c\xaf\xd3\x65\xbf\xdb\xfd\x3c\x5e\x5f\xfe\x7c\xc3\x61\x7c\xdd\x1d\xce\x4f\xff\x6e\xf4\xfa\xf4\x77\xf7\x61\xab\xcd\xe6\xc3\x4f\x7b\xb6\x88\x09\x62\x2d\xd8\x5a\x52\x55\xd7\x89\xe1\xe1\x17\xfa\xfe\xb5\xed\x32\xc4\x09\x95\x51\xb1\xce\x20\x24\x88\x08\x84\x85\x54\xd5\x75\x34\x10\x31\x10\x97\x48\x55\x47\x33\xc4\x65\x52\xd5\xd0\x11\x22\xe1\xae\xef\xd5\xd7\xde\x90\xaa\xba\x66\x4e\x60\x13\xc0\x76\xe1\x45\x56\xbc\x17\xb0\x4d\x60\x97\x90\x22\xa9\x7a\xa0\xb3\xd2\xb5\x93\x17\xeb\xec\x15\x67\xdf\xf1\xc2\x01\xc9\x92\xaa\x86\x0e\x0e\xe2\x0c\xde\x37\xbf\x57\x4f\x33\xc4\x78\xd2\xd9\xf1\x9e\xe1\x1c\xa9\x6a\xe8\x98\x30\x5f\x9d\x67\x52\xd5\xd6\xec\xe2\x7c\x5e\xd2\xd9\xf1\x9e\x97\x47\x57\x67\xc7\xcf\x9f\x40\xaa\x3a\x3a\x5b\x70\xc1\xd7\x6c\x7b\x11\x0b\xb1\xa4\xaa\xa1\x53\x44\x30\x60\xb3\x3e\x5f\xf7\xaa\xe8\xe0\xe1\x3d\x9c\x03\x9b\x44\x65\xf4\x6d\x2e\x6d\xed\xee\xaf\xcb\xcc\x16\x2c\x54\x46\xdf\xda\xd2\xd6\xae\x6e\x5d\x16\x2f\x88\x4c\x65\x74\x6d\xb6\x54\x46\xd7\x72\x36\xa4\xaa\x36\x05\x8d\x83\x9b\x4f\x18\x11\x02\xa9\xea\xe9\x0c\x61\x52\xd5\xd6\x22\x69\x19\xc6\x65\xf5\xb5\x18\x21\x9d\x1d\x6f\x23\x38\x64\xd2\x59\xf3\xcc\xeb\x5c\xcd\xf3\xcd\x51\xf5\x48\x3b\xcd\x6b\xff\xe2\x02\x88\x57\xdb\x4b\xe3\xed\xe3\xc0\xd1\xc0\x2e\xc3\x9e\x74\xfe\x0f\x00\x00\xff\xff\x05\xe3\xf8\x29\x65\x07\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 1893, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x72\xda\x40\x10\xc7\xf1\x9e\xa7\xd0\x0c\xf5\x2e\xb7\x7b\xff\x29\xd3\xa7\x4a\x91\x9a\x60\x12\x6b\x12\x23\x0d\x96\xc7\x71\x9e\x3e\x23\x30\x19\xfd\xe4\xcb\x5d\xc7\x17\x7d\x4e\x8c\x56\xe8\xb4\xdd\x6e\xbb\xaf\xfd\xf9\x61\x78\x7d\xfe\x32\xbe\x7d\xfa\x35\x1c\x7f\x9e\x2e\xdd\xa8\x63\xf7\xda\x9f\x63\xf7\x32\x3e\x1c\xa6\xd3\x66\x56\x9f\x87\xcb\xa9\xeb\xcf\xdf\x87\x7d\xf7\x38\x4d\xe3\xf3\x7e\xb7\xfb\xd1\x4f\x8f\x2f\xdf\xf8\x38\x3c\xed\x8e\x97\xc3\x9f\x37\x7a\x3a\xfc\xde\x7d\x38\xdb\x66\xf3\xe1\xab\xbd\x58\x16\x13\xd9\xb1\x37\xb4\xf8\x5c\x90\x3a\x1f\xb5\x2c\x29\xb3\xa8\x27\xcc\x96\x0f\xe8\x43\xc3\xfb\x48\x98\x2d\x9f\xd0\xa7\x82\x77\x86\x63\x64\xd5\xcc\xd6\xd3\x32\xea\x36\x2d\x6d\xfd\xbc\xde\xd2\x32\x0a\x36\x78\xf6\x9e\xc5\x26\x16\x51\x82\x6a\x68\x07\xda\xd5\xb5\x06\x82\xaa\xeb\x04\x3a\x55\x74\xb0\xac\x92\x09\xaa\xae\xd5\x10\x54\x43\x0b\x68\x69\x68\x05\x5d\x9c\x60\x60\x91\xcc\xe2\xdc\xf5\x3f\x85\xd9\xf2\x09\x7d\xe9\xde\x2f\x41\xca\x84\xd9\xf0\xd9\x10\x66\xf1\xe9\x74\x2c\xd1\xb0\x97\xab\xc7\xac\x7b\x75\x81\x30\x5b\x3e\xa2\x2f\xcd\x07\x40\x42\x5f\x9a\xcf\x3f\x60\x59\x33\x41\xd5\xb5\x35\x04\x55\xd3\x89\x17\x38\xb1\xfa\xd2\x13\x7d\x07\x22\x9e\x83\x12\x66\xcd\x07\x0f\x97\xfa\xde\xcd\x15\x79\xb5\xa2\x76\xbd\x57\xe1\x85\x56\xdd\x5c\x61\x57\x2b\x4a\x3b\x8e\xf8\xc8\x3e\x70\x0e\x2c\x6a\x09\xaa\xa4\xb3\xb0\x5a\xe5\x34\x4f\x92\xa0\xea\x3a\x18\x82\x6a\x68\x05\x5d\x9c\xff\xfb\x71\xb1\xf9\x76\xa5\xd8\xcd\x15\x6e\xb5\xa2\xb4\x63\xde\x84\xe3\xa8\x2c\xe9\xfe\x13\xf7\x6c\xf9\x80\xbe\xf8\x74\x2d\x41\x42\xff\xff\x79\xde\x40\x36\x84\x59\x7a\x03\xce\x2f\xeb\x79\x0b\x71\xf3\xdd\x82\xfa\x1b\x00\x00\xff\xff\x4e\x2f\xfe\xc8\x4e\x08\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 2126, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xb1\x92\xd3\x30\x14\x85\xe1\x3e\x4f\xe1\x99\xd4\xf7\x44\xe7\x4a\x57\xb2\x52\xd2\x53\x51\x50\x87\x10\xd8\x0c\x6c\x9c\xc9\x9a\xd9\x5d\x9e\x9e\x11\x03\x8c\x44\x64\x6f\xa7\x3f\xf9\x12\x4b\xb2\xe5\xed\x76\x3b\x7c\x3c\x5f\x3e\x4f\xcf\x4f\x1f\xae\xaf\xef\xbe\x4f\xc7\x6f\xa7\xdb\x70\xd5\xeb\xf0\x7c\xbe\x8c\x1c\x4e\x2f\xf3\xed\xb0\x29\xea\xfd\x74\x3b\x0d\xe7\xcb\x97\x69\x3f\x3c\xcc\xf3\xf5\x69\xbf\xdb\x7d\x3d\xcf\x0f\x3f\x3e\xe1\x38\x3d\xee\x8e\xb7\xc3\xcf\x57\x79\x3c\xbc\xec\xee\xfe\x6d\xb3\xb9\xfb\x68\x4f\x8f\x94\xa1\x3e\x23\x66\xa9\xa3\x6f\x47\x07\x2a\x2c\x48\x35\xee\xc8\xe0\x40\x8e\xa0\xf3\x48\x52\xc7\x9a\x8d\xa0\x77\xd2\x66\xc7\x1b\xc1\xe0\x10\x0d\x63\x90\x3a\x96\x2d\x35\x81\x39\x49\x9b\x4b\x9e\xf0\x0a\xa3\xd4\xd1\xb3\x0a\xc6\x08\xd2\x21\x06\x69\x6a\x45\xab\x43\x4a\xd2\xd4\x92\xce\x48\x04\xcd\x49\x53\x0b\x3a\x8d\x60\x24\x02\xa5\xa9\x35\xed\x31\x9a\x34\xd5\xd7\xea\xcb\xf5\xff\x4c\xfb\x5f\x2c\x59\x0f\xe6\x0c\x0d\x59\xda\xec\xf8\x18\x10\xa0\x1e\x4e\xfe\x8e\xd4\x7a\x73\xf8\xfd\xad\x05\xa8\x79\xa9\xc6\xab\x32\x54\xb2\x77\x3f\xa2\xa1\x2c\xdd\x8d\xd0\x2c\x75\xac\x5a\xab\xad\xad\x5b\x96\xd9\xd6\xd5\x3b\x51\x2e\x20\x18\xca\xf3\x9e\x92\x34\xd5\x3d\x7f\x2c\xeb\x46\x24\x9c\x54\xd1\xdf\x35\xfa\x04\x32\x41\xbd\x81\x51\xda\xec\x79\x4b\x30\x03\x7d\x28\x87\x44\xda\x5c\xf3\x06\xea\x28\x6d\xbe\xe1\xbd\x93\x36\x7b\x3e\x13\xea\x13\xb4\xec\x9e\x46\xf9\xaf\x3b\xbf\x50\x17\xca\xfb\x8b\x39\xc1\x49\x15\xfd\xfd\x51\x97\x10\x22\x98\xcb\x02\xa5\xa9\x5f\x01\x00\x00\xff\xff\x55\xe9\xa0\x75\x8c\x05\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 1420, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xb1\x6e\xdb\x30\x10\xc6\xf1\x3d\x4f\x21\xc0\xf3\x7d\xe6\x1d\x79\x22\xe9\xb1\x7b\xa7\x0e\x9d\x53\x37\x6d\x8c\x36\xb6\x60\xbb\x48\xdd\xa7\x2f\x68\xb5\x31\x0f\xa1\xe8\x21\x80\xff\xe1\x2f\x14\x29\x29\xf4\x6a\xb5\x1a\x3e\xef\xf6\x5f\x0f\xaf\xa7\x4f\xd3\xe5\xc3\xcf\xc3\xf6\xc7\xd3\x71\x98\x64\x1a\x5e\x77\xfb\xc4\xc3\x69\xba\x3c\x14\xf3\xf1\x70\x7c\x1a\x76\xfb\x6f\x87\xcd\xf0\x7c\x3e\x4f\xa7\xcd\x7a\xfd\x7d\x77\x7e\xfe\xf5\x05\xdb\xc3\xcb\x7a\x7b\x7c\xfc\x73\xa1\x97\xc7\xdf\xeb\x77\x73\x3d\x3c\xbc\xfb\xd5\x86\x3d\x62\x82\x78\x05\xcb\x48\xa6\xda\x3a\x31\x14\xea\xe9\xf6\x71\xd9\x65\x48\x10\xaa\xa3\x61\xc5\x23\x27\x84\x0c\x0e\x54\x7d\x5e\x90\xf9\x3a\x2a\x4c\x75\x34\x6c\x70\x88\x11\x22\x23\x24\x64\x32\xd5\xd7\xea\xc8\x54\x47\x27\x64\xa1\x3a\x16\x6c\x46\x2a\x37\x54\xa9\x8e\x86\x55\x01\xfb\x04\x0e\x09\x29\x92\xa9\x3b\x3a\x1b\xdd\xda\x61\x35\xce\x6a\x38\xeb\x92\x1f\x03\xc4\x33\x44\xc9\x54\x47\x07\x87\x7f\x93\xbf\x55\x4f\x33\xc4\xdd\x26\x9f\xb3\xe3\x95\x11\x02\x99\x5a\xd0\xb1\x6c\x2d\x96\x15\x90\xcd\x8e\x57\x86\xb0\x90\xcd\x8e\x2f\x3f\x23\x99\xea\xe8\xec\xc1\x15\x9f\x73\xd9\x8b\x78\x88\x27\x53\x0b\x3a\x95\xa9\x02\x38\xce\xfc\x96\x4b\x3e\x62\x74\x60\x37\xbf\x61\x6f\xd5\xd0\xa3\x42\x15\x21\x80\x5d\xa2\x3a\x16\x2d\x73\xb9\x3a\xd5\xd1\xb7\x52\xdb\xd6\xdd\xae\x86\x7d\x6d\x5b\xbb\x9b\x87\x45\x05\xe1\xbf\x9d\xa3\x6b\x73\x6d\x73\xdf\x72\x76\x64\xaa\xab\xc5\x09\x99\x6a\x9d\x94\x2e\x20\x94\xfd\x44\x8c\x23\x99\xea\xe9\x0c\x61\x32\xb5\xac\xcb\xd9\x54\x0e\xec\xba\xfa\xba\x2c\xdc\x66\xc7\xfb\x08\x1e\x33\xd9\x6c\x79\x66\x88\x30\x24\x83\x7d\x20\x9b\x7d\x2f\x6a\xbc\x68\xd3\x5f\x0f\x27\x8f\xf2\xf2\x5f\xbf\x9f\xea\x6c\xfa\xf2\x5f\xe2\xe0\xdd\xbc\x5f\x93\xf7\xbc\xb7\xfe\xee\xfc\xc1\xfa\xf6\xfa\x6f\xa0\x3c\x5c\x93\x4d\x1f\xcb\x19\x72\x7d\xfc\xcc\xe5\x02\xa6\x5b\x7f\xa1\x11\x3a\x82\x73\x40\x14\x32\x75\x47\x7b\xa3\x9b\xbb\xad\xc6\x83\xd1\xcd\x95\x64\x86\xf8\x0c\x75\xe0\x44\xa6\xfa\x3a\x46\x32\xd5\xd3\x02\x76\x8e\x6c\xf6\x7c\x80\x0a\x99\xfa\x1b\x00\x00\xff\xff\x9b\x8d\x49\x38\x92\x09\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2450, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\xcf\x52\x1b\x39\x10\xc7\xf1\x3b\x4f\xe1\x2a\xce\xdd\x56\xb7\xfe\x73\xdc\xfb\x9e\xf6\xb0\x67\x16\xd8\xe0\x4a\xc0\x2e\x30\x45\xc8\xd3\xa7\x64\x9b\x58\x3f\xd3\x23\xdd\xfc\x8d\x3e\x72\xc4\x8c\x46\x9e\xeb\xeb\xeb\xd5\xbf\x9b\xe7\xfb\xed\xfb\xeb\x3f\xbb\x8f\xbf\x7e\x6c\xef\xbe\x3f\xbc\xac\x76\xba\x5b\xbd\x6f\x9e\x8b\xac\xde\x76\xf7\xb7\xfb\x87\xab\xc6\xfe\xde\xbe\x3c\xac\x36\xcf\xff\x6f\x6f\x56\x8f\xfb\xfd\xee\xf5\x66\xbd\xfe\xb6\xd9\x3f\xbe\xfd\xc7\x77\xdb\xa7\xf5\xdd\xcb\xed\xaf\x0f\x7a\xba\xfd\xb9\xfe\xf2\x75\x57\x57\x5f\xfe\xe9\x46\x3c\xa7\xc2\x25\xb3\xe4\x48\x7d\x2c\xda\xea\x59\x5c\xa5\x3e\x6c\x9b\x03\x4b\xae\x2c\x92\x09\x6a\x41\x17\x96\x54\x58\xbd\x23\xa8\x65\x5d\x02\x87\x40\x7d\x2c\x5a\xf5\x8e\xc5\x7f\xe2\x53\xd9\x5a\x5c\xe6\xc0\xf1\xb0\x8a\xcf\xcf\x86\xd4\x36\xea\x59\x4a\x65\xd1\x48\x98\x33\x9f\xd0\xa7\x89\x8f\x99\x30\x67\xbe\xa0\x2f\x86\x0f\x8e\x73\x66\xd5\xca\x3e\x52\x1f\x63\x5b\x7a\x3b\xfe\xde\xe8\xa9\x0f\xc3\x46\x65\x29\x9e\x43\xdb\x6f\x89\xa0\x96\xb5\x48\x61\xc9\x42\x98\xb6\x6f\xff\xb3\x64\x61\x75\x4a\x98\x86\x4f\x81\x03\x6b\x6e\xb7\xfe\xfc\xd1\x72\x91\x63\x64\xf1\x85\x1d\x9d\x3f\x6b\xb4\xae\xdc\x69\x3c\x79\x56\xa9\x04\x35\xd6\xea\x08\x6a\xa2\x05\xb4\x75\x35\xfa\x71\x05\x6d\x5e\x8b\xc3\xb8\x06\x65\x8d\x81\xa0\x2c\x9d\x58\xa4\xb2\x84\x70\xd8\xab\x98\x33\x5f\xd0\x5b\x7b\xaa\x07\xa5\x12\xe6\xc4\x57\x47\x98\xe6\x53\xdf\xce\x26\xc7\x51\x58\x4a\x3b\xac\xfa\x9c\xf9\x82\xde\x5a\x7f\x0f\xaa\x23\xcc\xb1\xd7\x90\x08\x73\xe6\x33\xfa\xc9\xfa\x35\x14\xf4\xc3\xf5\x7b\xd6\x4a\x50\x63\xed\x1d\x41\x8d\x74\x7b\x9c\xba\xb0\x9f\xa7\x4f\x20\xd2\xb6\x24\x61\xce\x7c\x42\x3f\xba\x92\x0d\x24\x47\x98\x33\xaf\xe8\xad\xe7\xea\x0f\x48\x11\x2e\xfd\xa9\xa7\x33\xea\xc5\x8c\xd1\xf5\x3f\x88\x28\x74\xd1\xd3\x19\xfe\x62\x86\x75\x72\x4b\xcc\xc7\x83\xcf\xb3\xba\x40\x98\xcb\x5e\x83\xe3\x52\x09\x6a\xac\xdb\x6f\x25\xe6\xd8\xb7\x83\x13\x73\xc9\xa7\xf6\xd3\x24\xbe\x10\xd4\x44\x57\xd0\x8b\x6b\x3f\x8e\x07\x47\x50\x13\x2d\xa0\xcd\xfb\xd4\x8d\xc3\xba\xed\x9d\xd3\x8d\xc3\xba\xed\x5d\x73\x1c\xaf\x89\x63\xa0\x3e\xc6\xb6\xf4\x76\xb0\x8a\x9a\x58\xd4\x13\xd4\x58\xc7\x4c\x50\x96\xae\xc2\xea\x95\x4b\x3b\x5e\x08\x6a\xa2\x0b\x68\x73\xdd\xe7\xf1\x76\x10\xf4\x35\xd1\x0a\xda\x3c\x05\x4e\xe3\xe2\x2b\x4b\x39\xfb\x53\x4f\x66\x68\xf7\xb7\x9e\x7a\x3a\x23\x5c\xcc\x30\xef\xea\x41\x04\xce\x87\x17\x2b\xc2\x9c\xf9\x84\xde\x7c\x4a\x7b\x50\xd0\x2f\xdf\x81\x23\xa8\x8e\x30\xad\x37\xe0\xf6\xb2\xde\x7e\xea\x43\xbb\xbf\x50\x63\x9d\x84\xa0\x7e\x07\x00\x00\xff\xff\xd6\xdd\x3f\x0b\x8b\x0d\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 3467, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x72\xab\x4c\x0c\xdc\xe7\x28\xa9\x42\x8b\x6c\x73\x1a\x45\x23\x06\x95\x19\x69\xbe\x91\x6c\xec\xef\xf4\xaf\xc0\xf0\x8c\x21\x6f\x89\x5a\xad\xbf\xee\xe1\x13\xbe\x4a\x52\x50\x8e\xef\x8f\x4f\x28\xec\xce\x9a\xb9\xc1\x28\x37\x06\xb2\xb2\x44\x9d\x53\xe6\xbf\x39\xde\x87\x92\xcb\x86\x7a\xc1\x16\x4e\x8d\x59\xa1\x08\x35\x73\xeb\x63\x03\x6f\x36\xb3\x49\xd3\xc6\x9e\x18\x63\xe0\x76\xce\xbc\xff\xd8\xfd\xd5\x14\xd5\x27\x6e\x7e\x4c\xc3\x5a\x1d\xfc\xf2\xa8\x6b\x1a\xa1\xa6\x07\xb5\xab\x0f\x6e\x09\xe1\x22\x9a\x57\x20\x29\x90\x69\xb0\x06\xd4\x66\x09\xa8\x38\x14\xd7\x17\x6a\xca\x6a\xb1\x6e\x45\x83\x09\xf1\xb1\xdb\x6f\x51\x50\xc7\xa0\x95\x35\xca\x5c\x7f\x52\x87\x49\x34\xd9\xe4\x2b\x6f\x89\x93\x69\x2f\x19\x2a\xba\x57\x6b\xf1\xa4\x24\xae\xa3\x3d\xc0\x03\x43\x08\xf0\x82\x05\x25\x98\x06\xb5\xd1\xb2\xf0\x5a\x20\x95\x04\x85\x03\x9d\xdb\x4d\x88\x4f\x67\xe8\x99\xd3\x0f\xd2\xe5\x15\xef\x06\x1b\xca\x01\x74\xc6\x46\xc3\x3f\xb9\x6f\x23\xe7\x9d\xe0\xc2\x74\x1b\xc5\xe3\xc8\x94\x92\x3b\xef\x8a\x6b\x37\xdf\xe1\x39\xfb\xff\xbc\x2a\x2b\xea\x92\xb8\xd5\x59\x99\xd1\xae\x09\x6b\x7d\x03\xd6\x55\x8e\x35\x47\x21\x56\x9f\x65\x2b\xf5\x84\x59\x16\xdd\xcd\x55\x60\xb0\x28\x28\xe3\xfa\xc9\x49\xb0\x71\x92\xc6\x74\x9a\xf5\xdd\xa4\xd6\xf7\x42\xbc\xca\x75\xc8\x34\xdd\x00\xef\xef\x50\xfc\xfb\xa3\x36\x21\x5e\x0e\xb0\x73\x5a\x0d\x01\x0f\x6b\xa7\x0d\xfe\xbb\x72\x7b\xbc\x3c\xd6\x4e\x0d\x1a\x67\xf1\xe0\x06\x94\x2a\x9d\xa4\xdc\x44\xda\xac\x39\xf7\xc0\xcc\xbb\xb5\x97\xae\x9d\x14\xcc\xec\xe0\xdd\x91\x3f\xa3\xf3\xf3\xec\x13\x24\xbf\xff\x72\x46\xbf\xd6\xc5\x7f\x87\x70\x48\xe1\x77\x0f\xc4\xe5\x0b\xea\x18\xaf\x59\xae\xb2\xbf\xc0\x94\xe8\x54\x7b\x8e\xe1\x78\xaa\x3d\xf9\xfc\xf6\x60\x79\xad\x47\x68\x9a\x96\x3f\x08\x99\x2a\x53\x04\xfb\x13\xf8\x13\x00\x00\xff\xff\x6e\xd5\x0d\xa2\x88\x04\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 1160, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd4\x4d\x8e\xc3\x20\x0c\x05\xe0\x7d\xef\x32\x4f\x7e\xfe\x01\xac\xde\xff\x5e\x23\x03\x49\x48\x17\x95\xf2\x95\x40\xb0\xb1\xa1\xa1\x27\xd4\x12\x2d\xbf\x9f\x47\x43\xa7\x86\x80\x8a\xf0\x09\x4a\x87\x81\x3a\x6e\x05\x86\x9c\x78\x46\x6a\xee\x23\x25\x54\xe4\xfb\x51\x43\x36\x84\x22\xec\x82\xca\xa8\xdf\x62\x07\xfb\x00\xfb\x1a\xa5\xd4\xd7\x15\xec\xf1\xfd\xb8\xa0\x0b\x04\xac\x77\x0b\x1d\xaa\x8e\x17\xc8\x97\x3c\x4e\x6a\x45\x71\x31\xa0\x7e\x4c\x6d\x50\x6f\x6f\xf6\x37\x7f\x5e\xce\x17\x43\x6e\x9a\x60\x7f\x76\x54\xaa\x3a\x62\xed\x29\x05\xb4\x86\x37\xf2\x94\xae\x45\x28\x84\xb7\xca\xc3\x22\x1d\xea\x04\x9d\xdb\x1d\x4c\x41\xd7\xcd\x01\x8a\x61\xed\x96\x95\xe7\x4a\x79\xe4\x76\x07\x5d\xd1\xdb\xf7\x13\xb5\x86\xa0\x05\x86\xdf\xca\x31\x8f\x7d\x6b\xbe\x9e\x7d\x9b\xa8\xd0\x34\x6f\x9a\xce\x60\x42\xc1\xe6\x60\x12\x11\x37\x55\xfb\x3a\xc6\xe9\x06\x52\xd0\xfc\xa1\x56\x7a\x36\x13\x9d\x60\x25\xad\xd8\x05\x4c\xbf\x47\x6b\x68\x66\xe3\x1a\x1e\x60\x23\x9c\x07\x0d\x63\x7d\xb9\xd2\x4d\x01\x87\x6d\xd6\xf2\xd7\x52\x53\xb9\x82\x5f\x6a\x79\x7f\x56\xcd\xc0\xcc\x75\x94\xcd\xe1\x50\x83\xfc\x5d\x4f\x5a\xa1\x4d\x44\x55\x8e\x9d\xf0\xef\xa7\x45\x15\xf1\xac\x4f\x9e\x4a\x7b\x34\x50\xb9\x7b\x14\x2f\xa5\x9c\x62\xc5\x53\x8c\x35\xd1\x2e\xe9\xda\xd5\xfd\xbc\xf6\xb5\x18\x0a\xb7\xef\x87\xe2\x70\x81\x52\x60\x7a\x90\xb0\xd8\xf4\xd9\xc7\x5d\x1f\x0e\xa8\xbf\x34\x4e\x51\xae\x75\x03\x55\x60\x95\xd0\xa2\xd2\x57\xcd\xf3\x72\x80\xbe\x0f\x8b\xc6\xca\x14\x1a\x21\x7f\x07\xe6\x96\x69\xbe\x4e\x7a\x04\xba\x9c\x1e\xab\xb9\x18\xbd\x82\x8a\x56\x93\xef\xe7\x35\x77\x91\x92\x55\xe6\x87\x74\xc6\x70\xba\xfd\x78\xbc\x6d\xf2\x63\x7d\xac\x89\x19\xd6\x66\xed\xcf\xda\x8f\xc7\xdb\x7e\x2c\x67\xb1\x2f\xc6\x36\xd0\xac\xb2\xd6\xeb\x3e\x4d\xae\x32\xb4\x84\x5e\x9c\x8d\x02\xce\xcd\xce\x3f\x72\x35\x6d\x75\x9e\x8a\xd7\x0d\xcc\xec\x90\xbf\x03\x33\x11\x65\x56\xc5\x54\x6f\xba\xd7\x1f\xbd\xee\x8a\x1a\xd6\x5b\x75\x81\x54\xe5\x5d\x8c\xba\x0f\xe2\x71\xd6\xce\x5f\xd4\xf7\xa8\xd9\x8b\x15\xe5\x66\x55\x60\xee\xb9\x6d\xcc\xc6\xae\x76\xf8\x0f\x00\x00\xff\xff\x4d\x7c\x05\x58\x44\x06\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 1604, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9b\xdd\x92\xab\x2c\xb3\xc7\xcf\xdf\x4b\x99\xaa\x58\x34\xa8\xd1\x7a\xae\x86\x28\x93\x58\x93\xa8\x5b\x4c\x32\xb9\xfb\x5d\x98\xcc\x04\xc6\xb6\xff\x6b\x1d\xad\x81\x5f\xa0\xbf\xa0\x01\xe1\x23\xb3\xbb\x8b\x77\xed\xd1\x65\xbd\x9b\xff\xfb\xdf\x47\x66\xdb\xfe\xdb\x67\xcd\x70\x79\xfe\xe1\x3f\xb2\x8b\xb7\xad\x7f\x57\x2f\x25\xfd\x2f\x71\x59\xfe\x76\x4d\xff\x4b\xcc\xed\x65\xfe\xa9\x6e\x9b\x3f\xcd\x1f\xcf\x87\xb6\xf7\x3a\xbb\x74\xcd\x34\xf8\xe1\xf3\x97\x3c\x0f\x8d\x9d\xbb\xa1\xcf\xce\xdd\xed\x97\x4e\x7f\x3b\xd9\x36\xee\x7a\x0a\x62\x45\x7f\x7b\x37\xdd\xba\xc6\xf9\xcc\x0f\x4d\x67\xcf\xeb\x2e\x66\x77\x76\x17\x37\x4f\x0f\xa6\x6a\xb2\x9f\x9f\x5d\x73\xb1\xbd\x3d\xba\xe9\xa7\xc3\x5b\x37\xcd\x57\x7b\x76\x76\x9a\x4f\xbf\x65\xc3\x34\xbb\xef\x8f\xac\xb5\xb3\xcd\x42\x6b\x3f\x22\x37\xc3\x25\xeb\xbd\x9d\x1b\x9e\xfc\xdb\xe3\xb3\x96\xad\x4c\x5d\x62\x1b\xf3\xd6\xd2\x36\x73\x77\xeb\xe6\x47\x76\xef\xfa\x76\xb8\xbf\x1c\x65\xdb\xde\x7d\x5f\x5f\x3e\x8a\x1c\x98\x18\xc8\xb6\x9e\x62\x5f\xbe\xfe\xfe\xa9\xfd\xb2\xbb\xa6\xed\x77\xbd\xcf\x6c\x3b\xbb\xe6\x94\xb5\xee\xbf\xff\xd9\x69\xb2\x8f\x8f\xdd\x38\x0d\x6d\xd6\x0e\x59\xeb\xc7\xec\x32\xfe\x15\xf7\xd0\xf5\xc7\xa5\xa7\x3f\xc5\x67\x63\x14\xed\x6c\x46\xed\x74\x4b\x8a\x9a\x75\xd1\x31\x2e\xea\xc9\xa8\x7c\xe7\xfe\x16\x95\x69\x5b\xcf\x22\x86\x4a\xdb\xd2\x87\x5d\x33\x4c\x4a\x51\x66\xc7\x2e\x1b\xc3\x7f\xb8\x6a\x2d\x57\x1b\xb9\x3a\xdf\xa8\xbe\xf7\x9e\xb2\x7b\xef\x53\x77\x1d\x7a\x33\x8a\x42\x19\xdf\x9c\x94\x56\x8a\x54\x51\x54\xec\xef\xdf\x40\xa9\x64\xa0\x24\xd0\x42\xa9\x6b\x00\x18\x5e\x87\x08\x28\x10\x50\x02\xa0\x90\xb5\xa0\xbd\xde\x8b\x80\xae\xe4\x16\xb4\x32\x5a\xcb\xc0\x3e\x17\xed\xa0\xb5\xd1\xa2\x25\xb5\x36\xb2\x1d\xb4\x36\x25\x6b\xc9\xdc\x37\x27\x52\x44\x5a\x55\x94\x23\x80\x95\xe1\x0d\xd4\x04\xba\xa8\xc9\x88\x00\x29\x62\xed\xf0\x06\x48\x21\x00\x08\x49\x5a\x03\x19\x72\xc5\xba\xfb\x0d\x6c\x44\xf5\x1b\xd8\x2b\xd9\x92\xb4\x47\x5a\xec\x81\x2f\xa8\x56\xb2\x0c\x9a\x48\xd6\x42\x1b\x62\x83\x36\x06\xd8\xa0\x7d\x03\xb9\x96\xdd\x6d\x08\x08\x69\x08\xc8\x60\xb4\x12\x64\x08\xd1\x40\x9a\x33\x94\x7f\xe6\xe3\xfe\xb8\xf3\x8f\x9f\xb2\xc7\x3a\x23\x3c\xd6\x19\xe1\x59\x14\x4f\xec\xcd\x3b\x4f\x35\xb6\x39\xb9\x25\x6b\x5e\xec\x34\xa7\x7d\x36\xad\x27\xad\xf2\xec\x1c\x52\xf2\xb9\xbf\x3f\xf3\xdc\x52\x5a\xd5\x5c\x69\x6d\x98\x52\xa3\xf7\xeb\x52\xad\x72\xda\x67\xe7\xe6\xb1\x2a\x36\xc4\x16\x17\x8a\x2f\xe6\x1b\xd9\x17\x4c\x31\xe9\x9c\xd1\x45\xd7\xf5\x9a\xcd\x15\xd3\x40\xae\xb9\xc2\x82\xfb\x79\x9d\xaf\x0b\xeb\xb2\xf8\xdb\xfb\x89\x84\xb4\xf5\x5b\xcb\xa6\xd2\xe6\xb4\x72\xf4\xab\xc8\xad\x8b\x8e\x7f\x8b\xf4\xfa\x87\x3a\xfd\xe1\x70\x19\xed\xec\xbe\x9b\x93\xed\x8f\x2e\x6b\xce\xc3\xb5\xb5\xe3\xf8\x92\x7b\xe8\xe7\xae\xbf\x5e\x2f\x59\xbb\x5e\xa6\x34\xc3\x34\x66\x7e\x5e\x97\x8f\xa4\x08\xac\x7c\x9a\x51\xff\x03\x93\x63\x26\xac\x12\xc6\x26\xbb\xa9\xa6\x7d\xad\xa3\xdb\x83\xb9\xf7\x5e\x2b\x0a\xff\xd6\xc3\xab\x3d\x30\xa9\xa6\x3d\x14\xaf\x51\x1b\x32\x22\x33\x6a\x53\x80\x99\x9c\x62\xa0\xe2\xd2\x7e\x0a\x00\x19\x6a\x6e\xfe\x4b\x00\x8d\x5a\xe0\x52\x6e\x02\x18\x19\x08\x8a\x02\x00\x18\x8a\x14\x37\xbd\x25\x00\x30\x14\x29\x83\x5a\xc8\x91\x0c\x39\x68\x01\xb9\x3b\x4c\xe4\x08\x90\x7d\x41\x04\x7c\x41\xc4\x2d\x24\x13\xc0\x20\x19\x72\x20\x83\xe6\x92\x76\x02\x70\xf9\x30\x05\x80\x16\x1a\x79\x53\x1b\x39\xaa\xc9\x80\xb0\x27\x83\x22\xca\x20\x4b\x1a\x64\x49\x83\x42\xce\xa0\x81\x93\x73\xcb\xc0\x04\x40\x5a\xe4\x9a\x59\xf5\xa7\x00\x30\x54\x6e\x98\xb5\x49\x02\xa0\x80\x29\x36\x26\xcf\x08\x00\x6a\x16\xc8\x17\x05\x98\x06\xa9\xc8\x91\x0c\x39\xf0\x66\xc9\x2d\xe2\x12\x80\x5b\x0e\x27\x00\xd2\x82\xdd\xe4\xa5\x00\x12\x32\x07\xce\xda\x23\x5f\xec\xd1\x24\xb6\x37\x40\x8b\x3d\x8a\x87\x8a\xdb\xfd\x24\x80\x06\x5a\x54\x28\xaa\x2b\x34\xc3\xa0\xbc\x49\x15\x9a\x61\x2a\x94\x0e\x6a\x6e\xcd\x9e\x02\xa0\x8b\x9a\xdb\x16\xa4\x00\x92\x01\x85\x5c\x8d\xbc\x59\x83\x81\xa3\x15\xc9\x96\xd4\x0a\x4c\xc5\x9a\xdd\xec\x26\x00\xc8\x9b\x5a\x81\xbc\xa9\x95\x91\x7d\xa1\x95\x3c\xb2\x42\xfa\x17\x23\x2a\x00\xa2\x16\x4b\x66\x05\x80\x1c\x93\xcb\x64\x2d\x03\x9a\xdb\x70\xa7\x80\x38\x70\xc2\x5e\x12\xb5\x20\x9b\x9a\x94\x96\x4d\x1d\x96\x72\xa0\x05\x23\x47\x14\x29\x23\xc7\x43\x00\x60\x0b\xc0\x9b\x46\x9e\x8a\xc3\x72\x12\x02\x48\x48\x64\x87\x5c\x81\x16\xc0\xf2\x20\x2c\x69\x81\x9a\x39\x0a\xb9\x5c\x5e\xa2\x84\x45\x31\x70\x77\x21\x2f\xfe\x49\x15\xf2\x2c\x17\x00\x20\x43\x21\xaf\x61\x48\x15\x68\x74\x83\xdc\x4d\xaa\x94\xd7\xb4\x01\x00\x76\x28\xe5\xa5\x5a\x00\xc0\xd8\x2c\xe5\xf5\x24\xa9\xbd\x02\xde\xdc\xcb\x99\x97\xd4\x1e\x09\xb9\x97\x13\x0a\xa9\xbd\xbc\x02\x21\x55\x21\x77\x57\x04\xec\x50\x21\x5f\x54\xc8\x17\x15\x9a\x1f\xc0\xfa\x21\x00\xc0\x0e\x60\xe7\x4e\x68\xe7\x4e\xaa\x46\xa3\xbb\x46\x76\xa8\xd1\x3c\x29\x2e\x0f\x8c\xaa\x88\x3d\x0b\x8f\x01\xf6\x24\x3b\x02\xb4\x92\x16\x9c\x01\xd8\x3a\x5a\xf9\x05\x8c\x94\x79\x03\x90\x4b\x49\xed\x09\xc8\x6a\xea\x12\x02\x48\x48\xf6\x24\x3b\x01\xb8\x53\xe4\x18\xa8\x64\x2d\x6a\x45\x52\x5a\x0c\x80\x96\x46\x56\x00\x72\xd9\x9b\x01\x00\x5d\x14\xb2\xbb\x03\x00\x5a\x10\xb7\x51\x01\x80\x76\x00\x31\x59\x87\x4e\x44\x80\x40\x4c\x06\x40\x74\x56\x1d\x26\x63\x04\xc8\x6a\x92\x46\x5d\x18\x24\xa4\x01\xbe\x20\xe4\x6e\x79\x63\x1e\x00\x30\x2e\x6a\x2a\xa5\xb5\x7d\x00\xf6\x20\x1e\xa8\x42\x2d\xb0\x5f\x78\x12\x00\x68\xa1\x15\x18\x17\x1a\x39\x4b\x8b\x6b\xfb\x00\x88\x67\x62\x0b\x80\x64\x28\xc4\x16\x68\xf9\xfe\x0a\x00\x29\x1d\x04\x40\x3c\x97\x0b\x80\x1c\x51\x0b\x20\x45\x14\x29\x95\x8b\x51\x4d\x4a\x5e\xec\x3d\x01\x20\xa4\x3c\x15\x93\x52\xf2\x4c\xbb\x6c\xf7\xa4\x98\x5c\x4e\x38\xa5\x78\x08\x00\xea\x02\x19\x8a\x72\xa0\x05\xe5\xc0\x17\x24\x4f\xc5\xcb\x79\x94\x6c\x6a\x42\x96\x24\x71\x3d\x69\xd0\x69\x92\x41\x47\x3d\x66\x39\x03\x91\xc3\x5e\x3e\xe2\x30\x61\x47\x0b\x5a\xd0\x04\x9c\xa5\xb5\xb4\xcf\x7a\x02\xa0\x0b\xf6\x1b\x72\x0c\xe4\xd2\xc6\x7c\x01\x50\x0b\xf2\x54\x1c\x00\xd4\xc2\x1e\x03\xb2\x37\x75\xb5\x11\x0f\xf7\xde\x53\xcb\xd5\x94\xcb\x4f\x75\x58\xbc\xf0\x06\x88\x01\x56\xbf\x08\xe0\xdd\x18\x03\x6c\x4e\x8e\x00\x7e\x5b\xf0\x06\x36\x02\x21\x06\x40\x17\x1b\x33\x47\x0c\x00\x35\x37\x12\x45\x0c\xb0\x5e\x8a\x01\xa0\xa6\xe1\xdd\x18\x03\x40\xcd\x8d\x25\x79\x04\x20\x21\x37\x52\xcd\x1b\xd8\x18\x10\x31\x00\xd4\x2c\x50\xc8\x6d\xe4\xa2\x18\x40\x5d\x20\x2d\x0a\x7e\xf6\x8a\x01\x10\x0f\x25\xea\xa2\x44\x2d\x6c\x6c\xb8\x63\x00\x38\x6b\xe3\x24\x3b\x06\x40\x44\x6d\x1c\x75\xc7\x00\x88\xa8\x8d\xb3\xf0\x18\x90\xb5\x08\xcb\x17\x04\xc8\x42\x92\x02\x42\xd2\x46\x2e\x8a\x00\x24\x24\x21\x21\x37\x16\x2f\x6f\x60\xe3\x0c\x38\x06\x60\x0b\x40\x0b\x34\x81\x90\x41\x96\x44\x13\x08\x19\x28\x03\x18\x59\x84\xe6\x07\x2a\x90\xa9\x0b\xa4\x45\x81\xb4\x28\xc1\xc0\xa1\x12\xc9\x50\x82\xa9\x98\x4a\x56\xc8\xce\x1e\xfb\xc1\xcf\x5d\xe3\x33\x7f\x1d\xc7\x61\x9a\xff\x5e\x77\x69\x3b\xdf\xe0\xcb\x35\x81\xc2\xd7\x6b\x02\x85\x2f\xd8\x7c\x9e\xdd\xf7\xfb\x0e\xd9\xe7\xea\xb2\xcf\xf1\x5d\x79\x74\x03\x68\xec\xe8\x86\x9b\x9b\x00\x74\x8a\xee\x56\x9f\x74\xf4\xff\x2f\xc6\x2d\xa7\x2f\x1d\x8c\x6a\x96\x6b\xa8\xdc\x4e\x29\x05\x18\xbf\xa5\x00\xe3\xb7\x14\x60\x02\x3c\x01\xb8\xef\x28\x31\x50\x71\x67\xb5\x09\xc0\x7d\x81\x48\x80\x02\xa8\x59\x15\xa8\x8b\x82\x99\x09\x62\xa0\x46\x42\xd6\xdc\xb5\xe4\x04\xe0\x0e\x94\x13\xa0\x40\x2d\x70\xf7\xb7\x13\x80\xbb\x12\x1c\x01\xc4\x7e\xc2\x4c\x00\xe0\x4d\x52\xdc\x69\x6f\x0c\x10\xf7\xbd\x39\x01\xb8\x0f\x2d\x09\x50\xc8\xee\x26\x8d\xb4\xd0\xb9\x6c\x49\xd2\xdc\xf5\xec\x04\xe0\x6e\xc2\xa7\x80\x1c\x0f\xc4\x5e\x11\x4f\x01\xa0\x26\x7b\x71\x27\x01\xb8\xef\x28\x09\x80\xb4\xc8\xc1\xd8\xa4\x9c\xfb\xe0\x94\x02\x20\x1e\x72\x14\x0f\x39\x18\x17\x94\x73\xb7\xf1\x63\x80\xfd\xae\x96\x00\xc8\xd4\x05\x98\xe5\x88\xfd\x32\x97\x00\xdc\x2d\x8a\x04\x00\x53\x10\x7f\xed\x26\x01\x90\xbb\x4b\xee\x1b\x67\x02\xa0\x71\x51\x16\x20\x1e\x4a\xa8\x45\x01\x0c\x85\x32\x0e\xa1\x8c\xc3\x3f\xdf\x48\x00\xee\xa6\x57\x0a\x80\x79\x72\x8f\xd4\x64\x3f\x9b\x25\x00\x92\xa1\x42\x23\xab\x42\xe3\xa2\x42\x13\x29\x4a\x8b\x54\x21\x77\xd7\xc8\xd4\xec\x9d\xda\x14\x00\x86\x42\x49\x4d\xa3\x8c\xa3\x15\x77\x83\x21\x05\x64\x19\x34\x7b\x61\xe5\xf4\xb5\xf1\xe2\xea\x55\x71\x58\xd7\x74\xbb\xc3\xb9\x94\x5e\x63\xc5\x00\x7b\xb3\xbd\xdb\x81\xf7\x5c\xdd\xee\xf0\xf8\x67\x60\xa3\x0b\xf9\xea\x7d\x54\xbf\xf1\x7b\xdf\x6b\xf1\xf7\xbf\xf5\xec\xef\xbf\x6e\x78\xb9\xfe\x75\xc3\x8b\xf5\xaf\x1b\x5e\xaa\x9f\x0f\x94\xdd\xef\xf7\xec\xe2\x33\xfb\x65\xdb\xfe\xf5\x5a\xf1\xec\xf5\xdd\x1d\xb2\xc9\xb5\x97\xa1\x6f\xb3\xe5\xd6\xfe\x9f\x5f\x5e\x86\x43\x77\x76\xd9\xd8\x8d\x2e\xb3\x53\xb7\x7a\x56\x19\x3f\xaa\xbc\xf8\x7e\x76\x7e\x5e\xbf\x51\x79\x3e\xa4\x1c\x3e\x3f\xbb\xc6\xd9\x71\xf4\xbf\x6f\x3b\x5f\x55\xd3\xf5\xec\x36\xea\x87\xde\x79\x37\xcf\x5d\x7f\xf4\xbb\x43\xaf\xa5\xc7\xa1\x31\xda\x3c\xfe\x19\x6d\x0f\xc5\xbf\xa2\x61\x9f\x21\xa0\xe3\xe4\xb2\xcf\x61\x98\xc7\xa9\xeb\xe7\x71\x72\x6d\xd7\xbc\xac\x34\x4e\xee\xd6\xb9\xfb\x7b\xc7\x32\xd9\x36\x52\x32\x79\x83\x1b\x7e\x37\x85\x6e\xec\xef\xdb\xdb\x3f\x36\xf7\xcd\xc9\x5d\x6c\x5c\x1c\x3b\xd5\xbb\xe6\x1a\x04\x39\x5b\x7f\x9a\xed\xf9\xab\xeb\x8f\xaf\x9f\xfd\xa8\xe1\x6d\xdf\x1e\x06\xfe\x99\xec\x2f\x74\xef\xfa\xdd\x38\x3a\x08\x89\x00\x5f\xd9\xaf\x5e\xad\xbc\x8a\xdc\xba\x28\x7e\xb5\xe2\xc7\x47\xef\xe6\xd5\x33\xe7\x67\xb1\x3d\xaf\xb6\xc4\xcf\x0a\x77\x9d\x86\xd1\x6d\x19\xcb\xdf\x23\x3f\xf8\x79\x98\x5c\x63\x67\x7b\x1e\x8e\x93\xbb\xfd\x3c\x9e\x5e\x8a\xff\xef\x6a\xcf\xdd\xbc\x7a\xe5\xec\xaf\xd3\xcd\x3d\xb2\xbb\x9d\xfd\xd0\xff\xad\x7c\xbf\x8d\xb6\xe3\xe8\xbe\xb3\x43\xf0\xc5\xd2\xef\xe6\xab\xe9\x77\xc5\x75\x5a\x39\x7e\x19\x5d\xfc\x6b\xe5\xd9\x7f\xba\x9f\x07\xd7\xfe\x64\xc7\xd0\x13\x3f\x17\xdc\xdc\xe4\x83\x56\xa7\xc7\x61\xea\xda\x65\x66\x3a\xb9\xe9\x65\x81\xe7\x03\xea\xdd\x87\x14\xe6\x2f\x46\x8a\xa2\x17\xb2\x15\x1e\xc9\x33\x6d\xd4\x11\xdb\xc2\xcb\xde\x6f\xd7\xf1\x0e\xb8\x77\x3d\xa9\xac\x1b\x6f\x25\x57\xb3\xe7\xeb\xfe\x3f\x00\x00\xff\xff\xd7\x6b\xaa\x63\xbf\x3f\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 16319, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd7\xdd\xb2\x25\x11\x0c\x05\xe0\xfb\x79\x98\x55\x56\x84\x44\x9d\xf7\x7f\xaf\xa9\x04\x8d\x7d\x71\xa6\xfa\xdb\xb4\xf6\x13\x61\x58\xd1\x1d\x2e\xf0\xbf\x7f\xeb\xd9\x41\x19\x29\xeb\x10\x3a\x48\x3b\x1c\xe0\xe0\x4d\x61\x99\x74\xd0\x0c\x54\x3d\x8c\xca\xe3\xa3\x17\xb4\x72\x6b\x5c\x52\xd0\xfb\x61\x87\xb4\xd3\x90\x1b\x9a\x6f\x49\x6d\xa0\xf4\x9b\xa2\xb3\x87\x4e\x34\xb4\xfa\x3d\x0f\x88\x4a\x8a\xc5\x70\xda\x0c\xa9\x4c\x4a\xc5\x30\x74\x82\xd5\xb6\xa4\x0c\x8c\xa5\x01\x16\x90\x07\x03\xaa\xb7\xfa\x11\x7b\xfc\x7d\x14\x42\xca\x6c\x86\x45\xa0\x90\xe8\xdb\x92\x10\xfa\x81\xad\x81\x5a\x96\x2b\xe8\x32\xc7\xa8\x25\xd6\x44\x24\xea\xcb\x64\x4c\x79\x87\xd5\x5b\xb9\x62\x87\xd2\x78\xe8\xe8\xd7\x9b\xb1\x24\xf6\x51\x0a\xb4\x1f\x11\x52\x4f\x43\x22\x31\xbe\xc3\x8a\xfa\x88\xc3\x93\x56\xb2\x21\xd1\xc5\x0e\x82\xd6\x3f\x48\x0c\xf4\x7b\xe6\xea\x8d\x19\x44\x1c\x6a\xb7\xfc\xd1\x38\x35\x6b\xf4\x65\x0e\xca\x06\x3c\x22\xa0\xa5\x3c\x26\x6b\x40\x67\xcf\x18\x0b\x0f\x69\xed\x13\x0b\xcc\x8f\x88\x51\x8f\x14\x6c\xe7\x45\x91\xdd\x9b\x6c\x46\x33\x92\x52\x0a\x6a\xce\xd6\x72\x03\x33\x08\x12\x19\xf3\x10\x2d\xc7\x8d\x58\x0b\x12\x31\x10\xc5\x74\xf9\xfb\xd7\xe2\x39\x02\x0d\x8c\xa0\x69\x39\xbf\x70\x70\x5c\x88\x8f\x1c\xf0\x43\x4c\x9d\xdf\xba\x2a\x5a\x47\x7d\xc5\x47\x72\x9a\x74\x54\x7d\xd4\x1e\xf5\xeb\x0b\x05\xb1\xf1\x6f\xfa\xcb\x71\x51\xdf\x52\xfd\x2d\xdd\xbd\xad\x0e\xea\x5c\xe8\x9b\xe3\x61\xae\x4a\x38\xb6\x65\x6c\xef\xd5\xad\x9e\xf3\x8c\x5a\x1f\x7e\x95\x83\xb1\xe5\xda\x71\x9b\x0b\x95\xb4\x0c\x69\x97\x87\x54\xbb\x5c\xc1\x3d\x21\xb1\xed\x14\xb4\xfd\xf6\x88\x2c\xc9\x3d\xb1\xc1\x8a\x7a\x10\x09\xe5\x13\xa5\x42\xfd\xd0\xa3\xf6\xa4\xcd\x90\x5d\x5d\x36\x8d\xa8\xfb\xc6\x67\x0d\x52\x61\xbb\x30\x26\xc3\x66\x64\x6d\x47\x64\x51\x8e\xe3\xaf\x1f\x8e\x18\xd0\xed\x3a\x13\xd2\x72\x0c\x50\x56\x47\xa2\x17\x11\xd8\xb6\x1d\x9b\x21\x46\xd8\x2f\x37\x48\xd9\x36\xf4\x12\x99\x33\x29\x32\x72\x2c\x34\x3e\x16\xd1\xcb\x99\xd8\x2e\x6b\x6e\x8b\x8b\x34\x79\x8b\xd7\xd2\x4e\xb7\x3d\x15\x52\x7b\xe6\xeb\x7a\xb1\x42\x8a\xfc\xfd\xeb\x0a\x45\x07\x4b\xf9\xfb\xd7\x1b\xa2\xb4\x43\x7c\x83\xa5\xc0\x6e\x8c\x1b\x91\xd6\xaf\xa2\x57\xf2\xa8\x3e\xd2\x4f\x9d\x79\x00\xac\x4f\xc7\x79\x58\xd6\xf7\x1a\x64\x40\xaa\x6f\xd5\x38\x2e\x36\x54\xd1\x78\x43\x2f\xb0\xf8\xa3\xb1\x15\x6b\x26\x5f\x1b\x33\xa1\x3d\x92\x47\xf5\x53\x9d\x47\xef\x92\xf5\x3c\x7a\x57\x27\x9b\x40\xeb\xad\xfe\xc8\x9e\x9a\xc6\x47\x72\x6b\x3c\xef\xf1\xfd\xc4\x5c\xac\x38\x1f\x47\x46\x75\xee\x24\x16\x45\xee\x58\xcb\xf3\x2c\x19\xfd\x36\xf4\x7e\x71\x64\x1e\xdc\xd4\x88\xb2\x53\x3b\x0e\x8a\xf6\x32\xbf\xb5\x5d\x2d\xf6\xe0\x72\x4c\x0c\x38\xda\x47\x89\x2d\xc0\x5d\x3d\x4e\x2e\x21\x3f\x55\xcf\xc5\x5d\x6a\x65\x9e\x3a\x41\x61\x81\xc2\xec\x52\xc9\xa4\xb6\x29\x91\xa1\xb5\xee\x1f\x14\x79\x4d\x89\xc6\xc8\x79\xd2\x8e\x5c\xbc\x9b\xf5\x87\x6f\x6d\x99\x17\x1b\xc6\x03\xfa\xfc\xd8\x27\x96\xab\x30\xcf\xb5\xd7\x92\xd3\xbd\x5c\xc3\xe5\xc7\xfa\x63\x7b\xad\xf5\xc7\xfd\xc7\xbf\xf5\xc7\xeb\x26\x3f\x6e\xc7\x91\xd2\xf3\x75\xcd\x1c\x52\xcb\x5a\xc1\xcb\x19\x00\xcb\x11\x5c\xed\x72\xdc\xe6\x44\x5f\xab\xbf\x1e\xfd\xb6\xff\xd4\xf7\x9f\xfa\x9e\x91\xfd\xd4\x7f\x5e\xc8\xdb\xce\xeb\xa7\x01\x29\x6f\x03\x52\xde\x0e\x98\xe7\xf5\x72\x3b\x6f\xb4\x59\x6e\x79\x87\x74\xce\xe6\x9b\xa1\x75\xc4\xbf\x1f\x22\x47\xe6\x25\x7a\x72\x70\xc6\xe0\x14\x4b\x8f\xbc\xfd\xe3\xf6\xe3\x71\x1c\x97\x1e\x5e\xef\x0b\x71\x17\x8b\xce\x28\x5b\x8c\x2b\x50\x7e\xbb\x7b\xdc\x97\xe3\x74\x54\x7e\xa4\xc6\xbd\xf3\xe2\xc8\xeb\xc3\xa6\xcd\xdc\x91\x9c\xa7\x49\x86\x7b\xb0\x66\x4e\xed\xbc\xe8\xf3\x24\xe0\x60\x26\xfb\x38\x88\xbc\x6c\x5b\x5e\x6a\xf3\x30\x98\x3f\x0c\x34\x45\x04\x58\x24\x12\xed\x33\xa5\x1c\x72\xc7\x5b\xb8\xc7\x81\x39\xff\x27\xf0\x3f\x00\x00\xff\xff\x31\x66\x43\x60\xfc\x0c\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 3324, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1523292015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd4\x41\x92\xed\x20\x08\x05\xd0\x79\xf6\xf2\x29\x2f\x02\x62\x65\xff\xfb\xfa\x85\xe9\x97\x78\x9d\xe5\xd0\x48\x13\x24\x0f\x5d\x22\x25\x87\xd8\xb8\xaf\x17\x18\xfe\xd3\xec\x82\x36\x97\x86\x09\xc6\x14\xe0\x49\x1d\x29\x88\x14\xed\xed\x47\xed\x4d\xd0\x6d\x11\x6d\x88\x89\xb7\x1d\x7a\x5f\x5a\xe8\x82\x9c\x02\x0d\xb6\x8f\xc3\x79\x5f\xd6\x64\x0c\x51\x9d\x32\x77\x40\x49\x9d\x14\xbb\x94\x32\xd5\x48\x94\x59\xef\xb1\xc9\x49\xd4\x8a\x51\x15\xa3\x4c\xa7\x2a\x4e\x9d\x05\x65\xc6\x20\xd1\xfb\x0d\xaa\x32\x40\xa2\xae\x93\x32\x93\x32\xf3\x98\x12\x8f\xc9\x28\x17\x73\xde\x97\xeb\xf3\x3c\x20\x19\x44\x6d\x7a\x5f\x61\x75\x8b\x26\xc8\xef\xb9\xe6\x1b\x2e\xee\x82\x9e\xd2\xfe\x7d\xcf\xea\xfe\xfe\x29\xba\x28\x26\x51\x1b\x13\xcc\x2a\x1b\x02\x54\xa3\xf6\xec\x06\x39\xd9\x39\xd9\xb3\x16\x0f\xa8\xba\x52\x77\xb4\xf6\x10\xa2\xde\xa5\xf7\xbf\xb5\x7c\xa9\xad\xb3\x7d\xed\x70\xad\x7b\x13\x87\x20\xc7\xe1\x64\xaf\xff\xf6\x59\x2d\x0e\x8f\xc3\xfb\xf9\x2e\x3a\x89\x7d\xaf\x56\x33\xdd\xb0\x86\xfa\x33\x50\x03\x3b\x1c\xec\x68\x87\x75\x73\x38\xf7\xf2\x04\xe6\x11\x70\x9c\x81\x1a\x97\x8f\xe7\xa2\x6b\x7c\xf6\x5a\xad\x49\xdd\xc5\xc6\x75\xd3\xcb\x51\xcb\x86\xfa\x96\x76\x4e\xa2\x71\x72\x2d\xe9\x4e\x3e\x6b\xdf\xd9\x19\xe2\x46\xca\x5d\xd0\xea\x79\x42\xb4\xab\x64\x5b\x1f\xe6\xce\x24\xae\xa1\x6d\xd4\x8f\xe8\x53\x90\x47\x40\xf7\x72\x4f\xc0\x7e\x01\x93\xa1\x82\xec\x87\xe3\x70\xb2\x6b\xa3\xb4\x7e\x35\x6b\xa7\x6d\xf5\xb7\x31\x70\xff\x0f\x00\x00\xff\xff\xd1\xe7\xd8\x37\xb9\x05\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 1465, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6e\xc4\x20\x0c\x45\xf7\x3d\x4a\x17\x56\x3b\x5d\xce\x69\x18\xe3\x50\x57\x36\x8e\xb0\x03\xd7\xef\x22\x23\x75\x1a\x92\x1d\x3c\xfb\x3f\xf1\x79\x07\xf5\x25\x2a\x3a\x03\x9a\xde\xdf\x12\x06\xf7\x14\x6c\x15\x5c\x1c\x94\xb1\x99\xdb\x12\xcf\xe9\xca\xf0\xe0\x5a\xf6\x1b\xda\xed\x6c\x09\x9b\x1c\x51\xd6\x0c\x4a\x91\x9c\x5a\x67\xa4\x29\x52\x5e\xac\x05\x84\x3b\x3d\xcf\x62\x8f\x24\xe0\x49\x41\xbd\xee\x8c\x09\xbb\xb0\xc7\xd1\x21\x56\xb8\xbe\x64\xff\xf7\xb2\x58\xfe\x14\xed\xf6\xe1\xe3\xe7\xf3\x4b\xdb\x51\x12\xb0\xb5\xe9\x75\xc1\x4a\x30\xb8\x66\x1b\xbe\x93\xed\x7b\x39\x2e\x9d\xe4\x7a\x12\xce\x97\x7f\x39\x32\xae\x67\x2c\xc9\x54\x6d\x38\x5a\x0d\x48\xeb\x3a\x5b\xae\x46\x40\xb9\x90\x6f\x1c\x04\x95\xe2\xfe\x1b\x00\x00\xff\xff\xf7\xed\xef\x11\xe8\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 488, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\xc9\x6d\x04\x30\x0c\x43\xd1\xbb\x7b\xc9\x87\xa9\xd5\x82\xfb\xef\x2b\x98\x2d\x99\x9b\x9e\x48\xca\xe9\xc1\x7c\xa8\xb9\x4b\xce\xd9\xc8\xc8\xb8\x2b\x36\xd2\x41\xdb\xe9\x97\xac\x51\x18\x5d\x77\xa5\x50\x6c\x2a\x39\xf1\xa7\x67\x61\xfa\x6d\xe1\x46\xea\xae\x34\x54\x85\xb4\xa9\xf8\xa7\x6d\xba\xdf\x1c\x5a\x28\xf7\x8b\x7d\x50\x89\xd0\x17\x9d\x93\x4f\x9a\x3f\x06\x9f\xa9\xb9\xa3\x19\x2c\xe6\xae\x0a\x02\x73\xf6\xcf\xe7\xb2\xcc\xf7\x3b\x03\x4b\xff\x46\xdc\x55\x49\x1a\x73\x30\xd7\x47\xda\x07\x3d\x42\x79\x23\x35\xe6\x89\xea\x2e\x8d\x30\x6f\xec\x51\xb0\xba\xcb\x76\x13\x85\x26\x50\xdc\xdf\x00\x00\x00\xff\xff\x83\x36\xf8\xcb\x4a\x01\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 330, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xdf\x8a\xea\x30\x10\x06\xf0\xfb\xf3\x28\x82\x43\xf3\xa7\xad\x72\x9e\x26\xdb\x4c\x4b\xd8\x34\x91\x24\x1a\xfb\xf6\x8b\x5b\x04\x6d\xbf\x05\x6f\x7f\xf9\x66\x46\x87\xce\x81\xcc\x71\xce\x6c\x27\xa6\xc0\xe5\xff\xbf\x03\xd9\x61\x03\x85\x3d\xcf\x5c\xd2\x42\xb3\x1b\x52\xcc\x71\x2c\x34\xc4\xf9\xf7\x29\x99\x71\x74\xc3\x6c\x82\x99\x38\x3d\x0b\x6e\x31\x15\xbe\x93\x35\xc5\x6c\x4b\x8c\xf5\x54\x5d\xb0\xb1\xe6\x15\x06\x9b\x85\xd0\x8a\x7c\x0c\xe4\x7d\xa8\x6b\x8f\x87\xca\x06\xeb\x19\xa9\xd6\x48\xdb\x1e\x69\x07\x3b\x9c\x50\xb6\xef\xc9\x5e\xf3\x3b\xca\x46\x0b\x41\x7e\x58\x76\x2c\x35\xe6\x16\xb2\xc2\xac\x31\x77\x78\xe4\x19\xa5\x85\x54\x60\x75\x52\xc8\x47\x13\xc4\xe0\xaf\x4b\xa1\xd0\xa6\xa5\x50\x12\x34\x51\xcd\x69\xff\x3b\x94\x3a\x03\xd4\x60\x49\xba\xe9\x10\xf6\x34\x26\xb3\x41\xdd\x83\x64\x0b\xa6\xc3\x8d\xe9\x7e\x87\x8b\xa4\xcc\xa5\xb8\x30\x65\xf0\xc5\x92\xf9\x36\x36\xe4\x35\x6b\xbf\xda\x8f\xb3\x13\xc7\xcf\xb3\xf5\xfe\x7e\x14\xcf\xc2\x63\x75\x01\x9e\x51\xbe\x2c\x81\x8b\xc4\xcc\xd7\x14\x2f\xfc\xf2\xf6\x3a\xab\x70\x62\x1b\xc9\x5d\x6e\xdd\xb6\x7a\x3d\xdb\x3f\x67\x56\x53\x72\x0c\x1b\xfd\x09\x00\x00\xff\xff\xa2\x86\xf2\xc0\x3f\x04\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 1087, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x51\xaa\xee\x20\x0c\x04\xe0\xf7\x2e\x66\xc8\x4c\x12\x8d\xb8\xff\x7d\x5d\x5a\x6f\x7f\x2b\xe7\x41\xf0\x23\x18\x23\x23\x1d\xbd\x20\x77\xd0\x7d\x5e\x74\x14\x91\xc8\xbd\x1f\x50\x68\x5e\x61\x68\x05\x49\x10\x17\xbb\x41\x32\x28\x6a\x93\x50\x8c\xc5\x0e\xa9\xfd\x61\xda\x43\xb2\x40\x6b\xa0\xdb\xbc\x52\xa0\x17\x18\x85\xea\x27\xc7\x41\xe6\xb6\xd8\x50\xbe\xd8\x02\x0a\xc3\x5b\x7d\x48\xc8\x72\x3b\x89\x88\xc5\x5e\xb8\xfb\x25\x7f\x64\xf4\xbb\xc1\x76\x72\xbd\xf2\xf5\xbd\xda\xe6\x70\xf0\x63\xc9\xa1\xff\xa3\x54\x47\x33\xd0\xfa\xbc\x5a\x22\x13\x11\xa0\xd5\xa1\xf1\x8a\x74\xdc\xd7\x7c\xe4\xaf\x94\x42\xe7\x57\xe3\xa8\x71\xd8\xbc\x68\x81\xb8\x4f\x75\xb4\xf6\xe1\x80\xf8\xa3\x54\x2b\xcf\x4d\x99\xb6\xbd\x83\x6d\xcc\x8b\xe4\x4a\x70\x3c\x63\x1c\x8c\xc3\x5a\xdf\x23\xc0\x6e\xf0\x27\xf7\xf9\x2f\x00\x00\xff\xff\xd3\x7a\xe6\x6a\x49\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 585, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x4d\x6e\xc5\x20\x0c\x04\xe0\x7d\xee\xd2\x11\xe3\x3f\x6c\x71\xff\x7b\x55\xe8\xb5\x0a\xe6\x2d\xbf\xb1\xe4\x49\x00\x2a\x38\x26\x0c\x3e\xd6\x23\x1b\x0a\x66\x81\xe2\x97\xa3\xdb\xe7\xe5\x5c\x8f\x0d\xcc\x09\x91\x82\x7a\x53\x9b\xb9\xae\x27\x1c\xee\xa0\x26\x48\xe9\xb4\xc6\x5d\x7b\x30\x5f\x86\x42\x58\x8d\x32\x3a\xd9\xb9\x8b\x02\x64\x81\x66\x9f\x3f\x68\xce\xee\xac\xee\x1a\xeb\xa1\x1a\x38\x07\x9c\x5f\x16\x8b\xcb\xf3\x72\x1e\x56\x48\x35\xea\xb9\x2d\x31\x7e\x0e\x88\xfb\x3b\x24\x1d\x21\x87\xc3\xfb\xee\x4f\x50\x57\xe0\xbc\x03\x5d\x0f\x7d\xc2\x03\x15\xa0\x6c\x16\x21\x2a\xc8\xdd\xda\x18\xa3\x53\x5e\x52\xeb\x6f\x59\x0b\xec\x3f\x30\x4c\x01\x53\x2f\xc7\xe5\xec\xde\x87\x2b\xfb\x61\xee\x0b\xb0\xfd\x39\xbf\x01\x00\x00\xff\xff\xa5\x13\xd7\xd1\xaa\x02\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 682, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\x4b\x6e\x03\x31\x0c\x03\xd0\xbd\xef\x12\x42\xd4\xd7\x82\xef\x7f\xaf\x42\xe9\xa4\x75\x76\xf3\x06\xa0\x08\xd0\x34\x54\x43\xad\x91\x7d\x16\x0d\x5b\x40\x45\xf8\x59\x2e\x20\x37\x28\x86\xba\x94\xa0\xc9\x59\x41\xd0\x05\x19\xd8\xfe\x27\x6a\x81\x5d\x8f\x09\x53\x04\xcf\x0a\x05\x33\x41\x0a\xd2\xff\xa9\x82\xaa\x87\x8d\x22\x18\xf2\xcb\xda\x60\x12\xce\x8b\x86\x1d\x6f\xaa\x4d\xe0\x13\x55\x33\xb0\x1b\xea\x7d\x56\x3a\x1c\x6a\x90\xd7\xe7\x4b\x23\x9e\xdf\xe1\xd0\xb0\x1b\x7e\x56\x06\xa6\x40\x36\xb4\x6f\xc5\x97\x38\x39\x8a\xc3\x03\xb3\xc1\x54\xd3\x38\xf7\x90\x84\xbc\x2e\xbc\x0b\x69\x05\xb2\xa0\x16\x60\x9e\xc5\x28\x44\x80\xe6\x33\xd3\xe5\x00\x75\x7f\x7b\xc6\x65\x13\x6a\x05\x9d\x72\xcd\xb3\x54\x7c\xde\x89\x5d\x90\xd7\x85\x77\x9b\x4a\xc1\x13\xec\xb9\x7e\x7e\x02\x00\x00\xff\xff\xb8\x2c\x1f\x17\xd2\x01\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 466, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x51\x6a\xc3\x30\x0c\x06\xe0\xf7\x1d\xa5\x50\x61\x2b\x49\xe3\xb0\xd3\x88\x44\x09\x66\x8e\x1d\x6c\xb5\x59\x6e\x3f\xb6\x32\xe8\x62\xed\xf5\xfb\x6d\x24\xc4\x7f\x01\xba\xae\x85\xa7\x85\x21\xb2\xbc\xbf\x5d\x40\x38\xf0\xca\x92\x0f\x58\xfd\x98\x53\x49\xb3\xc0\x98\xd6\x9f\x28\xd3\x3c\xfb\x71\xa5\x48\x0b\xe7\xdf\x0f\xf7\x6d\x22\xe1\xfa\xf5\x23\x65\xe1\x4f\x98\x48\xa8\x0e\xf7\x72\xb6\xbf\x7b\x8c\x53\xb1\x68\x07\x08\x29\x42\x08\x71\x7f\x51\x74\x9a\xb6\xad\xa6\xb7\x4e\xd3\xbe\xd1\xd4\xa9\x6f\x5d\x5f\x2b\x1a\x63\x3a\x28\x52\x71\x6b\x5a\x08\xe3\x51\x71\x87\x2a\x3b\x8d\x2d\xa2\xb2\xc8\x37\x2b\xd7\x40\x8b\xdd\x4d\xe5\x5e\xb9\x12\x5a\x74\x56\xe5\x41\xb9\x48\x63\x4d\xbd\x5e\xd3\x0c\x35\x3a\xab\x0c\x73\x0d\x2a\xd8\x9a\x13\x16\x16\xf1\x71\x29\xd7\xdd\x47\xb5\x2b\x65\x3b\x22\x0b\xea\x4c\x41\xf4\x80\xef\x39\x6d\xaf\xa5\xa4\x0f\x9a\x62\x79\xce\x7c\x36\xf3\xdf\x89\xbb\x8f\x0e\xfc\xf6\xb8\x9d\x82\xaf\x00\x00\x00\xff\xff\x50\x1a\xd4\xdb\x2c\x03\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 812, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x51\xae\xae\x20\x0c\x04\xe0\x77\x17\x33\x61\xa6\x2d\xd0\xb0\xff\x7d\xdd\x54\x7f\xaf\x70\x1e\x4c\xfc\x52\x5a\xd0\x81\x86\x31\x21\x0b\x50\x7d\x5d\x34\x4c\x22\x10\xf6\xff\x3d\x21\xd7\xba\x64\xc8\x09\x4f\xd0\x1f\xe4\x0d\x71\x5d\xde\x30\x06\xa4\x0e\x79\x1e\x8c\xf6\x71\x22\xf5\x28\x31\x6b\xbb\x58\x57\x08\xb4\x09\xfa\xc4\x1c\x27\xf3\x20\xe3\xe7\xee\x90\x11\x6f\x73\xd1\x1b\xf6\xaa\x13\x6a\x5b\x39\x08\xf7\x87\xa3\x86\x8d\xea\xf8\x1c\x84\xa8\xcf\xf5\xf4\x8f\x69\xe0\x66\xc9\x20\x7b\x38\xab\xe4\xe0\x78\x3d\xd0\x1b\xd8\xc6\xba\x7a\x20\x02\xee\x60\x9b\xaf\xc8\x5a\x7f\x48\x87\xec\x95\x42\xf0\x43\x79\x88\xd9\x76\xaa\x69\x5d\x6c\x0e\xaf\x21\x03\xbd\x6f\x4c\x54\x42\x3f\x56\x08\x77\xb2\x1f\xf7\x66\xd9\x00\x7b\xae\x8b\x24\x24\x42\x09\x9a\x1f\x56\x94\xef\x04\x0c\xf5\xf5\xcf\x4d\xa9\xdf\xd0\x60\xed\x37\x6f\xf7\xdf\xba\x9f\xbe\x8f\x57\x1b\xb3\xdf\xc7\x65\xdd\x2f\xc6\x40\x74\x30\x1d\x43\x27\xed\x64\x2d\x4e\x42\x96\x88\x06\xce\x83\x63\x6c\x14\xd8\xda\x66\x47\x68\xfd\x0b\x00\x00\xff\xff\x20\xb1\x74\x48\xff\x02\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 767, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x4b\x8e\xc4\x20\x0c\x04\xd0\x7d\xee\x32\x25\xca\x3f\x8c\xb8\xff\xbd\x46\x10\x75\x37\x66\x97\xe7\x00\x02\x53\x50\x11\x89\xec\x60\xf7\xf9\xbc\x1a\x0a\xb6\xb1\xd5\x0d\xec\x03\x64\x7f\x99\x60\x24\x44\xdb\x97\x69\x30\xfb\x48\xb4\x81\xfa\x92\xad\xc3\xe0\x6d\x3e\xb2\xa0\x60\x0e\x50\xfc\x72\x54\x7b\xbf\x9c\xf3\xb1\x86\xde\x21\x32\xa0\x5e\x54\xfe\xb9\xce\xc7\x05\x4c\x85\xad\xe3\xc4\x97\x64\x82\x9d\xdb\x6b\x24\x3b\x21\x4d\xe6\x13\x06\x83\xf4\xbd\xc9\x70\xb8\x83\x9a\x68\x7f\xbf\x6f\x71\xff\xfe\x0a\x85\x70\x14\x4a\xab\x64\xa5\x7c\x28\x26\x10\xb7\xf9\x44\x80\x1c\xa0\xd9\x7b\xd4\xe2\xac\xce\x51\x3d\x76\xd3\xd7\x85\x34\x38\xc1\xec\x97\xb3\xfa\x1a\x2f\x16\x97\xfb\xe5\x73\xbe\x42\x46\xa1\x9e\xab\xad\x26\x1d\xd8\x5d\xfa\x98\x5c\x47\xbe\x1c\xd5\xd1\x2e\xcb\xe1\xf0\xba\x97\xb7\x30\xae\x82\xf3\x2e\xe8\x7c\xe8\xfd\xbd\x39\x85\x34\xfb\x5a\xac\x61\x75\xf3\xe0\x0e\xde\xe1\x7d\x95\xdb\xb1\x02\xc5\x95\xad\x93\xa3\xd0\xea\x60\x63\x65\x9d\x6b\xbf\xb9\x23\xe0\x56\x94\xa7\x28\x5a\xb8\x12\xc2\x41\x88\x0a\xb2\xed\x84\x9f\xcc\xc2\xdd\xd3\x83\xf2\x23\x75\x80\x79\x15\xe4\x5c\xee\x2d\xd8\xa7\x60\xe8\xfb\xe9\x5c\x8e\xcb\x59\xbd\x02\x27\xeb\xd5\xaf\xd0\xda\xde\xdf\xc1\xe0\xfc\x0f\x00\x00\xff\xff\x29\xde\x9f\xcf\x6d\x04\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 1133, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9b\xcd\x6e\xe3\x36\x10\x80\xcf\xcd\x53\xa8\xbe\xb6\x1e\x73\x86\xff\x41\xb2\x8b\xf6\xdc\x3d\xed\xa1\xc7\xc0\x49\xdc\xae\xd1\xc4\x0a\x6c\xa7\x9b\xed\xd3\x17\x94\x64\x71\x48\x29\x8b\x02\xc5\xe8\x10\xc0\xfa\x22\xe7\xe3\x9f\x38\x43\x52\xb9\xf9\x71\xbd\x6e\x7e\xdf\x1f\x1e\xdb\xaf\xa7\xcf\x2f\xdf\x7e\x7d\x6a\x1f\xfe\xda\x1d\x9b\xaf\xfb\x03\xaa\x66\xf7\x76\x3e\x6e\x9b\xf5\xfa\xc3\x55\x77\xdb\xe7\xf6\xf5\xf8\xb0\xbb\x6e\xbe\x9c\xcf\x2f\xa7\xeb\xcd\xe6\xcf\xfd\xf9\xcb\xeb\x3d\x3c\xb4\xcf\x9b\x87\xe3\xf6\x9f\x6f\xeb\xe7\xed\xdb\x66\xfa\xb7\xc6\xef\xff\xb6\x3d\x9d\xd7\x9f\xda\xc7\xfd\x1f\xfb\xdd\xe3\x75\xf3\xa9\x3d\xfc\xdc\xa8\xd8\xfc\xf2\x72\x6c\x48\x61\x68\x30\x5c\x6b\x7f\x6d\x5d\xf3\x93\x22\xa5\xba\xef\x5d\xdd\x7c\x7c\x7b\x7e\x6a\xfe\xde\x1d\x4f\xfb\xf6\x70\xbb\x42\x50\xab\x8f\x1f\xae\x6e\x8e\x6d\x7b\xfe\x70\xf5\xc3\xcd\xfe\xbc\x7b\x6e\x0e\xdb\xe7\xdd\xed\xaa\x2b\xf2\x5d\x57\xe4\x3b\xd4\xe0\x23\x90\x8e\xe0\xe2\xaa\x39\xbe\x3e\xed\x6e\x57\x25\x7b\xdc\x1f\x6f\x57\x6a\xd5\xbc\x1c\xdb\x73\xfb\xd0\x3e\x75\x17\xa3\x46\xad\x9a\xfd\xe9\xee\x3e\x55\xe0\x76\x85\xdd\xc5\xee\xb0\xbd\x7f\xda\x3d\x76\x97\x9b\xff\xa4\x0e\x34\x55\x27\x26\xa9\x0e\x0a\x90\xc0\x1a\x66\xce\x48\x52\x8c\xca\x83\x06\xa4\xc0\xcc\x8c\x49\xab\x2d\x04\x55\x99\x7b\xb4\x80\xb8\xae\x72\x8f\xa4\xc5\xa9\x67\x6b\xf3\xc0\xa4\xd5\x84\x40\xaa\x6e\xee\x0b\x14\x93\x93\x86\xe8\xc0\x12\x58\x7d\x51\x17\x48\x58\x4c\x2a\xa4\x9f\x52\x3d\x42\x51\xb9\x07\xf4\x01\xd0\x17\xf5\x66\x50\x52\x8e\x2a\x4d\x1f\x04\xe8\x2d\xb3\x17\x54\x4c\x6f\x14\x78\x05\x0a\x30\x37\x7b\x81\x44\xc5\x1e\x88\x0c\x14\xe2\x11\x2d\x20\x46\x9c\x9a\x13\x5b\x42\x6d\xec\x8c\xdb\x48\xf7\x74\xef\xa1\x1c\xbb\x2a\x28\x2e\xb7\x40\x66\xd2\xdf\x03\x14\x97\x3b\x20\xe3\x6a\xf9\x00\x17\x91\xfb\x39\xb9\x5f\x48\x3e\x69\x76\xb7\x60\xb3\xc7\x39\xb9\x64\x8a\xc8\x3c\x56\xcd\xc8\xad\x64\x18\x1d\x3c\x5a\xc1\xe4\x31\x1f\x98\xa4\x3a\xa4\x7c\xd0\x83\xe5\xb3\x1b\x63\x92\xea\xa8\x00\xb5\x03\x6e\xce\x68\x09\x71\x9c\x31\x0b\x0f\xb3\x41\x43\x6a\xaa\x26\xe1\x41\x86\x0a\xc1\xb8\x94\xa4\x30\x37\x87\xa2\x72\x34\x40\x06\x01\x0d\xef\xee\x82\xca\xea\x3d\x60\x54\xe0\xa9\xb0\x67\x28\x2b\x0f\x80\x4a\x83\x2f\xdc\x23\x13\x55\xa7\x45\x40\x5a\x0f\x58\x3e\xd6\x0b\x2a\xab\xf7\x80\x86\xc0\xbb\xc2\x9e\xa1\x98\xdc\xa6\x41\xa5\xc0\x59\x08\x63\xfa\x52\x32\x69\x75\x0c\x6c\xab\xa3\x64\xd2\xea\xae\x85\xa3\xaf\xe4\x23\x95\xd5\x23\xa4\x88\x49\x65\xd5\x33\x94\x96\x6b\x62\xb1\xac\x64\x72\x6a\x02\x74\x06\x30\x22\xd8\x31\x84\x57\x50\x5a\x4e\xe4\xf9\x6a\xb8\xa6\xb2\x7a\x07\x88\x0a\x9c\x29\xec\x19\x8a\xcb\x29\xa5\x4b\xb5\x7c\x80\xb2\xf2\x08\x1e\x01\x73\xd2\x58\x41\x51\xb9\x57\x80\xd1\x54\x35\x67\x50\x56\x8e\x43\xd2\x52\x54\x9d\x53\x59\x7d\x00\x74\x08\x39\x9b\xa8\xa0\xbc\x5c\x43\xb0\x13\x79\x0f\x25\xe5\x69\x4d\x80\x0a\x30\x68\x26\xe7\x50\x56\x9e\x86\x77\x39\xe2\x18\x13\x57\x47\x96\x49\x94\x4c\x5a\xed\x62\xf5\x94\x73\x28\x2b\xd7\x80\x31\xf2\x55\x71\x4d\xc5\xf4\xce\x80\x01\xd2\xa0\xd6\x97\x4f\x94\xe3\xdb\x3b\xbf\x94\x2d\x8c\x35\x40\x79\xb7\xb9\x40\x0b\x88\xcd\x54\x2c\x19\xdd\x9c\x85\x34\xb1\x28\xc5\xf6\x1e\x4b\xb6\x80\x3a\xea\xa9\x3a\x8a\x36\xf7\xa0\x09\x90\x73\xc8\x92\x2d\xa0\xb6\x33\x6a\xd1\xc5\x52\xd6\x44\x35\x55\x47\xc9\x49\x26\x6b\x30\x47\xb4\x0a\x8a\xca\x6d\xdf\xb3\xc5\x40\xcb\x4c\x58\x4d\xfd\x14\x36\x7e\xe6\x33\xdc\xfb\x37\x48\x17\xca\x12\x98\xaa\x3d\x2e\x4c\xee\x2c\x51\x19\x30\x0a\x08\x15\xe8\x7c\x50\x5e\x42\x79\x39\x82\xb6\x13\x79\x0f\x65\xe5\xa6\x3b\x97\xf7\x65\xcd\x33\x14\x97\x07\x20\x53\xbb\x7b\xb6\x84\x3a\xcc\xa8\x45\x0f\xae\x47\x0d\x2a\x3d\x75\x77\x50\x56\x6e\x01\x03\x60\x4e\x65\x2b\x28\x2a\x27\x34\xfd\xd9\x02\x72\x3b\xa7\xc2\x7a\x0b\x68\x8a\xc5\xdb\x04\x0b\xbe\xb2\x80\x29\x61\x03\x87\xa0\xd6\xec\x82\x4d\xbc\xdf\xbd\x45\xb0\x60\xa6\x5f\x3e\x07\x0b\x9e\xbd\x4c\x51\xd2\x05\xf4\x81\x9f\xbf\x4d\xb0\x5c\x01\xac\x4f\x71\xc6\xba\xd4\xe8\xe3\x67\xde\x2d\xef\xdf\x20\x5d\x28\x54\x31\x6f\x9f\x97\x6c\x09\x35\xb1\xa9\xb9\xa2\xcb\xe8\xdd\xac\x5e\x72\xdd\x5b\x88\xc2\xac\x7e\x81\xc1\xd8\x89\xb4\x9a\xd3\x6b\xd1\x87\x91\x8b\x68\x56\x2f\x9a\x13\x0c\x22\x8a\xc0\x42\x44\x09\xc5\xe5\x69\xe2\xd1\x93\x81\x77\xa1\xcb\xe8\x27\x03\xef\x42\x17\xd1\x9b\xc9\xc0\xbb\x50\x79\xbd\x2d\x5e\xdd\xac\xa8\x9c\xde\x05\x70\x3a\x25\x41\x3e\xbf\xa6\x5b\x30\x39\x75\xc4\x7e\x43\x4f\x47\xc8\x4f\x5c\x09\x85\xe5\xdd\x59\x09\x20\x9b\x6d\x6b\x2c\x5c\x80\xd8\x1f\xcb\xe6\xa3\xbb\x09\x96\x7b\xb3\x50\x19\xf0\x31\x49\x40\xad\xd9\x05\x8b\xff\xdf\xbd\x45\xb4\x60\x68\xa9\x3f\x44\x34\x86\x17\xa6\xc0\x82\x05\xf0\x60\x1c\xa4\x7a\x52\xb6\x73\x26\xad\x46\x85\x6c\x33\xac\x82\xe2\x72\xab\x01\xf9\x20\x28\xa9\xb8\x3e\xa6\x29\xb7\xb6\x0f\x70\x09\x39\x4d\xaa\x3e\xc0\x25\xe4\x5a\xcf\xc8\xb5\xe8\x1b\xc6\xd9\x93\xc3\x5f\x05\xa5\xe5\x44\x1a\x62\xdd\xe7\x17\x28\x2a\x77\xa1\x3b\x3b\x66\x5b\xfd\x35\xfd\xbf\xfa\x9b\x4d\xf7\x9f\x32\xff\x06\x00\x00\xff\xff\xbb\x2f\x39\xde\xe6\x33\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 13286, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xdd\x4b\x6f\xdc\xc8\xd5\xc6\xf1\xf5\xeb\x4f\xd1\xaf\xb6\x89\x8e\xea\x9c\xba\x1b\xb6\x07\xc9\x3a\xb3\x9a\x45\x96\x86\x6d\x29\x19\x21\x92\x5a\x90\xe4\xcc\x38\x9f\x3e\x60\x35\x2f\xa7\x0e\x2b\xc8\x22\x78\xb8\xf0\x00\xfa\x63\xec\x9f\x59\xcd\x4b\x91\x4d\xd2\x1f\xfe\xff\xfa\xfa\xf4\xd7\xfb\xa7\xdb\xf3\x6f\xaf\xbf\x3c\xff\xf8\xf3\xc3\xf9\xdb\x3f\xee\x5e\x4e\xbf\xdd\x3f\xb1\x3b\xbd\x3e\xff\x38\x5d\x5f\x7f\x7a\xd7\xfe\xa7\x5f\xce\xdf\x5f\xbe\xdd\xbd\x3f\xfd\xfa\xf6\xf6\xfc\xfa\xfe\xe6\xe6\xef\xf7\x6f\xbf\x7e\xff\x4a\xdf\xce\x8f\x37\xdf\x5e\xbe\xfc\xeb\xc7\xf5\xe3\x97\xdf\x6f\xf6\x7f\xd2\xfa\xfb\xff\xf2\xe5\xf5\xed\xfa\xe7\xf3\xed\xfd\xdf\xee\xef\x6e\xdf\x9f\x7e\x3e\x3f\xfd\xf1\xe4\xea\xe9\x4f\xcf\x2f\x27\x71\x5c\x4e\x5c\xde\xfb\xfc\x3e\xa6\xd3\x1f\x9c\x38\xd7\x7e\xdf\xbb\x0f\x3f\xfd\xfe\xf8\x70\xfa\xe7\xdd\xcb\xeb\xfd\xf9\xe9\xe3\x15\x93\xbb\xfa\xe9\xd3\xbb\x0f\x2f\xe7\xf3\xdb\xa7\x77\xff\xf7\xe1\xfe\xed\xee\xf1\xf4\xf4\xe5\xf1\xee\xe3\x55\xfb\x0b\x7f\x7e\x7d\xfe\xf1\x99\x3d\xa5\x42\x45\xa8\x5c\x9d\x5e\xbe\x3f\xdc\x7d\xbc\xd2\xe5\xf6\xfe\xe5\xe3\x95\xbb\x3a\x3d\xbf\x9c\xdf\xce\xdf\xce\x0f\xed\x87\x15\x70\x57\xa7\xfb\xd7\xcf\x5f\xa7\xbf\xfa\xc7\x2b\x6e\x3f\xdc\x3d\x7d\xf9\xfa\x70\x77\xdb\x7e\xbc\xf9\x6f\x68\x21\x96\x6a\xd8\xb9\xe1\xe0\x9c\x48\xb8\x10\x73\x56\xb2\x8e\x60\xba\x12\x57\xb6\xf4\x1c\xe1\xb4\xb0\xdb\xd3\x2d\x02\xe9\x42\x9c\x33\x71\x08\x9a\x56\x11\x4c\x4f\x63\x5b\x2d\x3d\x47\x2c\x5d\x1c\x45\x67\xe4\xb9\xc1\xe1\x3a\x80\x2b\x1e\x0e\xc4\x25\x59\x79\x8e\x60\x3a\x91\x44\xbb\x8a\x2d\x11\x4c\x67\x8a\xc5\xca\x97\x06\x85\xc5\x47\x62\x31\xc3\xbd\x46\x38\x2d\x21\xef\xe9\x16\x71\x74\x61\x8a\x14\xbd\x72\xd7\x82\x45\x2b\x49\x10\xc3\xce\x0d\x07\xb3\xcb\x64\x57\x6b\xd5\xb0\x70\x90\x81\xbc\x44\x10\x2d\x9e\x6a\xa6\xc4\xc4\x7e\x5d\xb7\xfa\x06\x85\xc5\x55\xaa\x06\x5e\x1a\x10\xae\xc4\x8e\x98\xb5\xbb\x26\x30\x5b\x69\x3b\x2c\xf7\x0d\x0e\xa7\x01\x9c\xe0\x30\xa7\xe9\x97\x91\x97\x88\xa5\x85\x49\x5c\x36\xf4\x12\x71\x34\x3b\xa1\x40\xb2\xed\x34\xfb\x86\x85\x85\x29\x18\xf7\x92\xb0\x2c\xc7\x48\x1c\x9c\x91\xd7\x8a\xc4\x3d\x71\x11\x7d\x58\xb6\x15\x84\x07\x37\x9d\x3f\x89\x4c\x03\xbc\x1e\xa8\x4c\x04\xd2\xd3\x69\x44\xa2\xec\xb5\xbc\x35\x38\xac\x4e\x24\x4d\x84\xd3\x12\x79\x4f\xb7\x08\xa6\x0b\x25\xb1\xf2\xa5\x81\xe1\xe9\xe4\x29\x5b\x79\x8e\x58\x5a\x1c\x85\x64\xe4\xb9\x81\x61\x26\xf1\x76\x15\x5b\x22\x98\x96\xe9\xd0\x68\xe9\x39\x82\x69\x4f\xfb\x85\xbe\x34\x38\xcc\xb5\xec\xe5\x16\x71\x74\x76\x6d\x75\x92\xa0\x69\x1d\x81\x74\x22\x26\xce\x7a\xe5\xde\x12\x96\x95\xed\x10\xad\x0b\x1a\xe5\x6e\xef\xa5\x1a\x10\xce\x24\x52\x28\xe8\x9d\x97\x6a\x70\xb8\x0c\xe0\x72\x04\x5c\x65\x0f\x57\xf8\x50\xfb\x69\x27\xc5\x46\x5e\x22\x90\xae\x54\x22\xb1\x44\x2d\x6f\x0d\x07\x97\x69\x96\x57\x29\xe8\x5d\xa6\x6a\x38\x98\xd9\x53\x21\x89\x7a\x89\x55\xc3\xc2\xec\x28\x17\x03\xcf\x0d\x0c\x33\x55\x6f\xe1\x4b\x03\xc3\x81\x38\x56\x2b\xcf\x11\x4b\x8b\xf4\x7b\x2f\xd5\xc0\xab\x57\x50\x97\xdd\xfa\x86\x84\x03\x71\x68\x73\xbc\x8e\x56\x15\x89\x47\x62\x75\x79\xa4\x4b\x48\xb6\x7d\x2d\x42\x12\xfa\x65\x56\x15\x8c\x47\x26\xa9\xd6\x9e\x23\x90\x16\x6e\x4b\xc8\x45\x1f\xab\xba\x0a\xc2\xe3\x44\x30\x4d\xdb\xf0\x76\x4d\xca\x44\x14\xdd\xa6\xf1\x54\x88\xd7\x01\xef\x12\x9a\xdd\xb6\xab\x2e\xc1\x59\xde\xb3\xb8\x29\xc1\x6c\x4c\xd3\xcb\x62\xdc\xb9\xc1\xe1\xdd\x38\xcf\x0d\x0b\xe7\x44\xde\xc2\x73\xc3\xc3\xf6\x23\x9e\x1b\x1e\x96\x01\x0c\xdc\x79\xcc\x2b\x70\x21\x1f\xec\x4a\x7d\x69\x78\x38\x0e\x60\xdc\xb4\x4f\x21\x69\x00\xe3\x4e\x57\xd7\x4d\xc7\xd1\x76\xf3\x86\x89\x07\xd0\xfb\x7d\x88\x3b\x64\x27\xe2\xf6\x07\x89\x25\xa2\xe9\x30\x5a\xea\x70\xc8\x52\x87\xd1\x52\x87\x83\x96\x7a\xb0\xdb\x0e\xe8\xfd\xb6\x2f\xc4\x41\x5f\x2a\x30\xf1\x00\xba\x8e\x68\xec\x80\xcf\x8a\x3a\xad\xb2\x15\x88\x27\x26\x8e\x24\xa1\xdb\x9d\xa9\x88\xa4\xdb\x94\x9e\xbc\xef\xe8\x2d\xe2\xe9\x7e\xc4\x55\x44\xd3\x4c\xe2\xe2\xce\x9e\x2b\x18\x8f\xfa\xc4\xce\x44\x24\x9d\xdb\x95\xfb\xd2\x4d\x51\x54\xc4\xd3\x1c\xf2\xc0\x66\xe0\xf5\x83\x95\xf1\xc4\xfd\x4c\x45\x57\x24\x5e\x68\x3a\x60\xe4\xfe\xf3\xde\x22\x92\xae\x54\xa6\xdd\x58\x37\x17\x56\x11\x4c\x7b\xf2\x16\x6e\x09\xcc\x66\x0a\x62\xdd\x4b\xc3\xc2\x2c\x9e\x42\x31\xf2\x12\xc1\x74\x99\xc6\xd6\xd2\x73\x04\xd2\xf9\x72\x81\xb9\xdb\x85\x6f\x0d\x09\x07\x12\xb1\x87\x4c\x15\x91\x74\x24\xf1\x94\xfb\x65\x5e\x1b\x12\x9e\x66\x23\x59\x5f\x98\xb3\x15\x8c\x47\xd6\xf7\x76\xd8\x0a\xc6\xa7\x5f\xc9\xda\x73\x04\xd3\x75\x3a\x42\xed\xec\xa5\xa2\x71\xaf\x6f\x18\xb3\x15\x8b\x4f\x87\x47\xf1\xc6\x5e\x22\x90\x9e\xf6\x1f\x3c\x1d\x1e\x3b\x5b\x57\x24\x1e\x88\xdb\xe4\xbf\x1b\x74\x5d\xd1\x78\x24\x71\x7b\x7c\xae\x48\x3c\x53\x72\xc4\xae\x9b\xa2\xa9\x88\xa3\x45\x6a\x3b\x70\x70\xd6\x53\x95\xae\xe2\x71\x91\x30\xc0\x5b\x45\xe3\xed\xde\xc0\x1d\x3e\x57\x34\x1e\xd4\xd7\x2d\x26\xe2\x69\xce\x32\xb0\x5b\x3d\x60\xb9\xbb\xf3\xde\xae\xa2\xf1\xd8\xcf\x20\x74\x04\xd2\x3e\xb5\x3b\xe8\x7d\x47\xab\x08\xa6\x3d\x89\x13\x4b\xcf\x11\x44\xa7\x40\x81\x12\xb1\x5b\x27\x4d\xba\xa0\xd0\x48\xd3\xd2\x25\x92\xf5\x74\xa0\x4b\x50\x96\x9d\xa3\xdc\xb3\x73\x82\xb3\x75\xcf\xe2\x56\xaa\xcd\xd8\x1e\x5d\xe8\x1b\x7e\x79\x07\x30\xf0\x39\x4a\x85\xc8\x00\x06\x6e\x44\x1b\xe2\x07\x30\x6e\x77\xa9\x90\x30\x80\x71\x47\xe6\x19\x49\xac\x1e\x13\xe9\x1b\x76\xd7\xc1\x55\x3f\xab\x61\x22\x90\x8e\x24\x95\xc4\x77\xbb\xad\xad\x41\x61\x5f\x69\x7b\x3a\xb8\x4b\x50\x36\x04\x8a\xdc\xb3\x73\x82\xb3\x61\xcf\x62\x57\xac\x66\xb0\x2b\x3b\xb7\x35\x3c\x5c\x07\x30\xf6\x00\x11\xdb\xb5\x28\x31\xeb\xd5\xd2\xa0\xf0\xe5\x76\xc0\x1e\x5e\x1a\x1e\x96\x01\x8c\x3d\x40\xcc\x88\x1f\xc0\xd8\x03\x44\x24\xf6\xfa\x49\xf7\xbe\x61\xe1\x9c\xd4\x93\xee\x7d\xc3\xee\xa5\xa3\x50\x30\x43\xbd\x34\x38\x9c\x06\x70\x3a\x02\xce\x6e\x0f\xe7\x23\x86\x3a\xf3\x00\x46\x6f\xc7\x0d\x91\x01\x8c\xde\x8e\x27\xa4\x0e\x3e\x63\xf0\x44\xef\x82\xb0\xdd\x9e\xd6\x08\xa7\xd5\xc9\xa9\x89\x28\x3a\x11\x73\x6d\xd7\xef\xd5\x97\x74\xb6\x82\x70\x76\x81\xda\xd7\xdd\x59\x3d\x36\x69\x22\x92\x9e\x8e\x0b\x99\x52\xea\xe8\x2d\xa2\xe9\xaa\xee\x02\x35\x11\x4c\x07\x47\x22\xde\xda\x4b\xc5\xe2\x22\x45\xbf\xbe\xa2\x8f\x78\x5a\x6d\x61\xb6\x82\x71\x9f\x89\x53\xb5\xf8\x52\x91\xf8\x34\x07\x22\xae\xb1\xb3\xb7\x88\xa5\x85\x03\x31\x8b\xb1\xd7\x8a\xc4\x13\x31\x09\xf7\xdb\xd8\xda\xb0\xb0\x2f\xea\xb4\xbd\x6f\x58\x38\x3a\xfd\xdc\x97\x89\x40\x5a\xd8\x51\xa0\x9c\xb5\xbc\x35\x34\xec\xd4\xdd\x82\x26\x82\x69\x61\x21\x09\xde\xe2\x6b\x86\xf2\x81\xda\xfb\x86\x42\xaf\x6f\x15\x85\x33\x5f\x1e\xfd\xae\xea\xf4\xd2\xc4\x03\x68\x3f\xa2\x81\x43\xae\x95\x30\xb4\x0f\x19\x72\xf5\x1e\x13\x5b\x51\xb8\xe7\xe9\xcf\xa7\xa4\xb7\xb2\xae\xc1\x61\x76\x7e\x2f\xb7\x08\xa6\xdb\x43\x8d\x3b\x7b\xa9\x78\x5c\x3c\x0f\x70\x41\xce\xca\x67\xc6\x4f\x8c\xb3\xf8\x52\x8f\xc0\xc3\x10\x47\xbe\xf6\x4b\x31\xbb\x35\x7d\xa9\x07\xe0\x61\xb7\xc2\x2d\xf5\x08\x3c\x0d\x71\xe4\xfb\xf4\x14\x33\x1c\x76\xe8\x1b\xf5\x14\x53\x87\x38\xf2\x2d\x99\x1b\x13\x65\x84\x47\xe4\xdb\xf5\x14\x13\x87\x38\x70\xca\x38\x33\xc1\xd1\x7e\x4b\x9b\x23\x8c\x0e\xed\xb6\x1a\xef\xba\x93\x41\x53\x0f\xc0\xd5\xd9\xbf\xa9\x60\x3c\x0a\x71\xdc\xe1\x4b\x05\xe3\xec\x32\x49\xb0\xf8\x52\x0f\xc0\x43\x19\xe1\xc0\x3b\xa4\x35\x53\xd3\x08\xaf\xc8\x9d\xeb\xc2\x94\xe1\xb0\x97\x63\x86\xbd\x0c\x87\xbd\x1c\x33\xec\x45\x5d\xc4\xb6\xf5\x88\x61\xff\x0f\xe3\x7e\xc4\xc0\xb7\xd7\x36\xed\xf4\xb9\x1e\x80\x0f\x3e\xf5\xb9\x1e\x80\x0f\x3e\xf5\xb9\x1e\x80\x0f\xb6\xf4\xb9\xa2\xf1\x5c\xd4\x2b\x5c\x6d\x05\xe3\xed\xdd\xcb\xbb\x25\x5f\x2a\x0c\xcf\xed\x0d\xa6\x85\xbb\x95\xbd\x8b\x28\x3a\x66\x8a\x89\xa6\xff\xae\xb0\x4e\x58\x36\x4f\x93\x34\x67\xe0\x25\x62\xe9\xca\xfa\x62\x5f\xd7\xb0\x30\xbb\x44\x5c\x82\xa1\xd7\x7a\x04\x6e\x3f\xea\xb5\x1e\x81\xd7\x21\x0e\x3c\x47\x99\x19\xf6\x24\x6c\x3f\xf1\xb5\x82\x71\x61\xda\x2f\xf8\x1c\xd1\x74\xd0\x57\xbd\xfa\x08\xa6\x43\x1d\x6c\xde\x6b\x45\xe1\xa9\x50\xe2\xf6\x6c\x68\xd8\xce\x11\xfa\x88\xa5\x39\x24\x52\x5f\x61\xf4\x11\x4d\x57\xf5\x66\x0d\x13\xc1\x74\xd6\x37\x79\x98\x88\xa4\x2f\x4f\xd8\xa8\xab\xe9\x7d\x44\xd2\xbe\xdd\x44\x9b\xfa\xa5\xde\x22\x9a\x2e\xfa\xf1\x0b\x5b\x51\x78\xe5\xf6\xd0\x01\xc7\x48\x65\xdb\xb6\x4d\x85\xe2\xb9\xbd\x25\x59\x3d\x82\xb1\xcb\x50\xbe\x52\x0c\xa4\xae\x76\xf5\x11\x44\xcb\x74\x8a\x9f\x2e\x37\x96\xac\xb4\x89\x58\x9a\xfb\xeb\x6c\xb6\x02\xf1\x54\x88\x53\xf7\x8f\x68\xd8\xfa\xbf\xe2\x1f\x6e\xda\xbf\xb0\xf5\xef\x00\x00\x00\xff\xff\xe8\xa0\x67\x84\x1c\x6c\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 27676, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xda\xcd\x92\xda\x46\x10\x07\xf0\x73\xf6\x29\x14\xae\x09\xcd\x74\xcf\xa7\x28\x58\x57\x72\x8e\x4f\x3e\xe4\xb8\xc5\x82\x12\x53\x01\x44\x01\x1b\xdb\x79\xfa\x94\xc4\x22\x8d\xa4\x2e\x57\x0e\xe9\xbe\x99\x7f\x81\x7f\xe3\x66\xd4\xea\x11\x5e\xfd\x38\x9f\x17\xbf\xef\x4f\xbb\xfa\xcb\xf5\xd3\xf9\xdb\xaf\x87\x7a\xfb\x57\x75\x29\xbe\xec\x4f\x68\x8a\xb7\xf3\x6e\x73\xab\x8a\xf9\xfc\xf9\xa9\x7d\xdf\xa7\xfa\xed\xb2\xad\x96\xc5\xe7\xdb\xed\x7c\x5d\x2e\x16\x7f\xee\x6f\x9f\xdf\x5e\x61\x5b\x1f\x17\xdb\xcb\xe6\x9f\x6f\xf3\xe3\xe6\xeb\x62\xfa\x97\x75\x9f\xff\x6d\x73\xbd\xcd\x3f\xd6\xbb\xfd\x1f\xfb\x6a\xb7\x2c\x3e\xd6\xa7\x9f\x0b\x53\x16\xbf\x9c\x2f\x05\x19\x4c\x05\xa6\xa5\x8d\x4b\x1f\x8a\x9f\x0c\x19\xd3\x7e\xee\x69\xf5\xe1\xeb\xf1\x50\xfc\x5d\x5d\xae\xfb\xfa\xb4\x9e\x21\x98\xd9\x87\xe7\xa7\xd5\xa5\xae\x6f\xcf\x4f\x3f\xac\xf6\xb7\xea\x58\x9c\x36\xc7\x6a\x3d\x6b\xd7\xfc\x72\x5f\xf3\x0b\x5a\x08\x09\x52\x04\x17\x67\xc5\xe5\xed\x50\xad\x67\x83\x68\xb7\xbf\xac\x67\x66\x56\x9c\x2f\xf5\xad\xde\xd6\x87\xf6\x45\xa7\x98\x59\xb1\xbf\xbe\xbc\x36\xeb\x5f\xcf\xb0\x7d\x51\x9d\x36\xaf\x87\x6a\xd7\xbe\x5c\xfc\x27\x19\xa3\x9f\xd0\x6d\x26\x6d\x97\x16\xd0\x94\x43\xfb\x91\x89\xda\xd1\x01\xc6\x12\x10\xf3\x9a\xe7\xa1\xac\x9e\x00\x43\x02\xb2\x26\xd7\xb3\x50\x5a\x27\x6b\x00\xad\x1b\xea\x5d\x28\xaa\xa3\x89\xe0\xc0\xe7\xff\xf2\x3e\xd2\x90\x69\x2a\x93\xa4\x4c\x0d\x63\x01\x53\x09\x48\xe1\x81\x8f\x53\x1d\xdf\x47\xce\xf7\xa2\xfb\x7d\x20\x25\xd6\x4f\x92\xbe\x33\x10\x23\x10\x95\xd0\x35\x9a\x41\xa4\x21\x23\x4d\x69\x14\xdd\x75\x99\x63\x19\xdb\x2a\xd9\x81\xb1\x45\x77\x7b\xef\x10\x53\x73\x52\xaa\x39\x39\xc6\x16\xed\xac\x99\xc3\xd4\x5c\xb6\xc3\xf4\x4e\x7f\x43\x1b\x66\x2a\xb6\x67\x6c\xd1\x19\x26\x73\x12\x63\x2b\x75\x35\xc7\xec\x35\xa7\xb4\xd7\x1c\x53\x73\xa7\x54\x73\xcf\xec\x35\xd9\x19\x22\x73\x98\x9e\xea\x95\x7a\x6a\x60\x6a\x1e\x94\x6a\x1e\x22\x63\x8b\x4e\x0f\x99\xc3\xdc\xbe\x83\xd2\xfd\x3b\x32\x7b\x2d\x2a\xed\xb5\x88\x8c\x8d\x4a\x36\x73\x2f\x89\x4a\xf7\x92\xc4\xd4\x3c\x29\xd5\x3c\x31\x35\x4f\x4a\x35\x4f\xcc\xdc\x92\xd4\x66\x45\x76\x58\xd4\x9a\x16\x1d\x53\xf6\x36\x54\xd1\x4b\xa6\xc1\xb4\xa1\x9c\xee\xe9\xae\x44\x84\xd4\x5d\x6a\xa3\x50\x45\x27\x43\x0c\xdf\xa6\x72\x7e\x70\xcd\xe1\xdb\x01\x76\xd3\x53\x9e\xc8\xbb\xfd\x09\x21\x4f\x04\x5d\x0f\xde\x03\xda\x04\x66\xde\xff\x99\x7c\x77\x43\xff\xce\x1b\xc4\x57\x15\x2c\x10\x96\xa3\x95\x3c\x42\x15\x9d\x0c\xa3\x93\x68\xc7\xcf\x21\xe4\x74\xd1\xde\x93\x43\xc4\xe9\xb2\xbb\x31\x00\x62\xd3\x5f\x5d\xfe\x5c\x68\x9c\x2a\xf9\x89\xf5\x65\xbb\x40\x26\xa5\x92\xf3\x93\xec\xce\xcf\xa4\xd2\x70\x7e\x29\xfb\x44\x14\xb1\xd9\xe0\xd0\x1c\xd9\xfa\xa7\xb1\xc3\x50\xf2\x79\x2c\x02\x79\x0b\xd6\x0e\x9e\x05\x0f\x42\x15\x9d\x8c\x65\xf8\x36\xd5\xf1\xbd\xe3\x7c\x2f\xfc\x1c\xde\x01\x46\x03\x1e\x01\x53\xf6\x13\xc8\x30\x55\xf2\x13\xeb\x8b\x5e\xfb\xb9\x54\x1a\xce\x17\xbe\xf6\x7a\x89\x5c\x60\xfc\x36\x55\xf2\xb9\xef\x9f\xa4\x7f\x79\xcc\x24\xee\xfb\x6f\x53\x05\xdf\x02\x95\x13\xfe\x1e\xaa\xe8\x76\xba\xf9\xac\xf0\x13\xd3\x0e\x6a\xa6\xcc\xec\x45\x36\x87\x7e\xf7\x2d\xf2\x2b\x43\x6c\x66\xa0\xf1\x62\x1e\xa9\x92\x3f\xb9\x2a\x1f\xa9\x8e\x1f\x26\x1b\xe3\x91\x2a\xf9\xc4\xfa\xa2\x13\x69\x27\x05\xcf\xb5\x85\x2e\xd6\x5a\xc1\xa4\x33\x74\xb1\xd2\x0a\x3c\xb2\x2b\xf0\xa2\xa7\x92\x21\x65\xf9\x15\xc8\x4e\x47\x3e\xde\xcf\xbe\xcd\x1c\xd6\x4f\x47\xa3\x54\xdc\x27\x67\xa0\x3f\x18\x8c\x42\x15\x3d\x3b\x12\x8f\x53\x61\x3f\x40\x8c\x80\xfd\xcf\x5a\xa3\x50\x47\x2f\x39\x5d\xbe\xf6\x77\xc8\x19\x46\x17\x3e\x13\x65\x10\x72\xba\xec\x75\x9f\x41\xdc\xf7\x2e\xdc\x79\x33\x88\xfb\xde\x85\xbb\xee\x1d\x2a\x03\x78\x37\xc2\xdf\x33\x15\x7b\x5c\xf6\xf7\x4c\xc3\x46\xb2\x53\xbc\x0d\x05\xf5\x12\x81\x2c\x41\x32\xd9\x0f\xaa\xa3\x50\x47\x4f\x9c\x2e\x5b\xf9\x1e\xca\x46\xbd\x61\xa8\xa3\x13\xa7\xcb\xce\x79\xef\x10\xda\x12\x30\x4d\xfc\x2e\xd6\x59\x01\x4d\xf7\x5e\x17\x6b\xad\xc0\xf1\x2b\x90\xed\x3b\x2d\xe5\x20\x12\x60\x1a\x95\xa0\x4f\x95\xfc\xc0\xfa\xb2\xa7\xad\x5c\x4a\xac\xaf\xd0\x01\xee\x52\x69\x38\x5f\xf6\x19\x14\x99\x08\x2e\x00\xa2\xcb\xfa\xdf\x28\x54\xd1\x03\x32\x7a\xf8\x1f\x66\x9d\xd5\xa2\xfd\xbf\xf7\xff\x06\x00\x00\xff\xff\x5b\x7d\xde\x61\x39\x30\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 12345, mode: os.FileMode(438), modTime: time.Unix(1523292014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd6\x4f\x6f\xda\x30\x18\xc7\xf1\xf3\x78\x15\x5e\xae\x5b\x7e\xf1\xe3\xbf\x31\x02\xaa\xed\xbc\x9e\x7a\xd8\x11\x05\xc8\xd6\x68\x10\x23\x13\x56\xba\x57\x3f\x91\x8d\x10\x83\xb6\x4b\xe5\x5b\xfd\x2d\xe1\x63\x3f\x08\xe4\xd9\xfb\x3c\x67\x5f\x9b\x76\xe3\x5f\x0e\x4f\xfb\xd7\xcf\x5b\xbf\xfe\x51\x07\xf6\xd2\xb4\x96\xd5\xa7\x2e\x54\x2c\xcf\x17\x93\xfe\x55\x4f\xfe\x18\xd6\xf5\x94\x3d\x77\xdd\xfe\x30\x2d\x8a\xef\x4d\xf7\x7c\x5c\x61\xed\x77\xc5\x3a\x54\xbf\x5e\xf3\x5d\x75\x2a\xee\xdf\x6a\x78\xfe\x4b\x75\xe8\xf2\x47\xbf\x69\xbe\x35\xf5\x66\xca\x1e\x7d\xfb\x91\x71\xc7\x3e\xed\x03\x13\x9c\x4a\x46\xe5\x54\xda\xa9\x36\xec\x03\x17\x9c\xf7\xcf\x4d\x66\x0f\xa7\xdd\x96\xfd\xac\xc3\xa1\xf1\xed\x3c\x23\xf0\xec\x61\x31\x99\x05\xef\xbb\xc5\xe4\xdd\xac\xe9\xea\x1d\x6b\xab\x5d\x3d\xcf\xce\x3b\x5e\xf6\x3b\x5e\x92\x84\x75\x10\xd2\xc1\xb8\x8c\x85\xe3\xb6\x9e\x67\x71\xdb\x34\x61\x9e\xf1\x8c\xed\x83\xef\xfc\xda\x6f\xfb\xc5\xa0\xf0\x8c\x35\x87\xe5\xea\xbc\xff\x79\x46\xfd\xa2\x6e\xab\xd5\xb6\xde\xf4\xcb\xe2\xbf\x72\xc9\x41\x02\x5a\x8d\xe0\x6b\x4a\xe5\x2a\x0e\xa2\x12\xc4\x25\xec\x05\x8e\x5b\x4a\x59\x58\x90\x12\xb0\x66\x4c\x8f\x62\x2a\x5b\x13\x48\x71\x18\x8d\x72\x18\x77\xdc\x12\xcb\xfd\x21\x9d\xbd\xb1\x87\x9a\x54\x27\x48\x01\x4d\x91\x3d\xb4\x64\xb2\x00\x19\x03\x22\x0e\x73\x1d\x79\x1c\x53\xdb\x82\xc3\xda\x5b\xfb\x6f\x4c\x6a\x3b\x58\x02\x69\x1e\xd9\xd7\x98\xd2\xb6\x25\xc8\x10\x14\x8d\xed\x51\x4c\x6e\x4b\x94\xfa\xce\xfe\x13\x13\xda\x42\x9e\x47\x1c\x7f\xdc\xa3\x96\x54\x96\x20\xe7\x20\x94\x8b\xec\x51\x4d\xa5\x1b\x05\x05\x21\xc1\xf3\xcb\x5f\x42\x0f\xb3\xff\xc7\x3f\x93\xee\x45\x2b\x08\x2d\xa3\x1d\x5c\x52\x7a\x57\xdd\xbb\x09\x7f\x63\x8c\x86\x16\x70\x25\x84\x1c\xbe\x6a\x71\x4b\x2b\x13\x2f\x41\xa3\x33\xc7\x31\xdd\xad\xc5\x82\xc8\x42\x48\x0d\x32\xd7\x8b\x4b\x5c\x93\xe9\x8e\x20\xa4\x85\x38\x1f\x53\x5c\xf9\xdb\x9c\xca\x17\xdc\x42\x19\x90\x53\xa0\x61\xf2\x37\xf1\xad\xf6\xac\xe8\x6f\xac\xbf\x03\x00\x00\xff\xff\xbc\x72\x52\x92\x6d\x0b\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 2925, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\x41\x6f\xda\x30\x14\xc0\xf1\xf3\xf8\x14\x5e\xae\x1b\x0f\xbf\x67\x3b\xb6\x11\xb4\xda\xce\xeb\xa9\x87\x1d\x2b\x0a\xd9\x1a\x0d\x30\x4a\xd2\xb5\xec\xd3\x4f\x09\x90\x3a\x26\xda\x65\x7a\x3d\x70\xc8\x5f\x84\x5f\xa2\x04\x27\xf6\xe2\xe3\x74\x2a\xbe\x97\xfb\x4d\x78\xa9\xef\x0f\xc7\xaf\xdb\xb0\xfe\x55\x54\xe2\xa5\xdc\x5b\x51\x1f\x8e\x62\x3a\xbd\x99\x74\xdf\xb9\x0f\xcf\xd5\xba\x98\x8b\xa7\xa6\x39\xd4\xf3\xd9\xec\x67\xd9\x3c\x3d\x3f\xc2\x3a\xec\x66\xeb\x6a\xf5\xe7\x38\xdd\xad\x5e\x67\xd7\x3f\xd4\xef\xff\x6d\x55\x37\xd3\xbb\xb0\x29\x7f\x94\xc5\x66\x2e\xee\xc2\xfe\xb3\x90\x5e\x7c\x39\x54\x82\x24\x3a\x81\x6e\xae\xec\xdc\xe4\xe2\x93\x24\x29\xbb\xfd\x26\x8b\xdb\xd7\xdd\x56\xfc\x2e\xaa\xba\x0c\xfb\x65\x86\x20\xb3\xdb\x9b\xc9\xa2\x0a\xa1\xb9\x99\x7c\x58\x94\x4d\xb1\x13\xfb\xd5\xae\x58\x66\xed\xf1\x3e\xd4\x87\xe3\x03\x2a\xb0\x0e\x48\x29\x40\xa5\x32\x51\x3d\x6f\x8b\x65\x96\xc4\x4d\x59\x2d\x33\x99\x89\x43\x15\x9a\xb0\x0e\xdb\x6e\xa3\x57\x64\x26\xca\xfa\xe1\xb1\x3d\xfe\x65\x86\xdd\x46\xb1\x5f\x3d\x6e\x8b\x4d\xb7\x39\xfb\x87\xec\x10\x0c\x98\x98\xed\x0b\xab\xe9\x81\x34\x25\xea\xb9\xf1\xb8\x5a\x42\xee\x80\x88\x80\xb0\x87\x93\xc8\x26\x5b\x09\x44\x12\x48\xbb\x48\x8e\x23\xaf\x8c\x40\xda\xa7\xf2\x39\xf2\xc9\x16\x88\xf2\x54\x8e\x22\xbb\x6c\xe4\x88\xdc\x46\x36\x19\xd1\x01\xca\x1c\x50\xc5\xf4\xa0\xf2\xd8\x86\x00\x95\x03\xd4\x0e\x9c\xbd\xd0\x49\xe4\x97\xfd\x98\xcc\x76\xa5\x23\x04\xcd\x18\xdd\x55\x56\x9b\x30\x07\xa7\x12\xfa\x12\xf9\xe4\x5c\x03\x69\x09\xc3\x93\x8e\x22\xb3\x8c\x40\xd2\x5c\xd1\xe7\xca\x6b\x1b\x04\xad\x53\xfa\x1c\xf9\x64\xeb\xa0\xbd\xa5\x0c\xc6\x72\x14\x59\x65\xd4\xb6\xbd\xb0\x09\xdd\x57\x5e\xdb\x60\xfc\xb8\x4c\x2b\xaf\xdd\x7e\xf2\x94\x3e\x47\x5e\xd9\x2b\xc0\x6b\xfa\x52\x59\x6d\x22\x05\xa4\x12\xfa\x12\xf9\x64\x67\x21\x97\x80\x72\xf0\xec\x88\x22\x8f\x9c\x1b\x30\x06\xb4\x06\x94\xfd\x8b\xd1\xb0\xb1\xbb\x7e\xc4\x65\x1b\x41\x4f\x06\xa2\x82\xb7\xff\xd4\xb0\xb1\xbb\x6a\xc4\x65\xbb\xb3\x4e\x06\x19\x02\x8b\x43\xf7\xd2\xb8\x5d\xaf\xae\x5d\xff\x0e\xe7\x8b\x5e\x5e\xc3\x5d\x64\x9a\x55\x49\x0d\xba\xbd\x94\x16\xf2\x7e\xe0\x4a\x22\xb3\xec\x81\xf0\x4a\x3e\x45\x56\x99\xc8\xc5\x13\xd8\x61\x64\x97\x49\xd2\x08\xdd\x55\x5e\x5b\x59\xc0\xdc\xa7\xf6\xa5\x32\xd9\x88\xa7\x89\xa3\x8f\x06\x92\x24\xbe\x83\xac\x47\x69\xb6\x37\xc0\x48\x21\x33\x76\xda\xc4\xb9\x5a\xa2\x01\xad\x04\xd5\xcd\xd8\xdf\xd6\x4b\x86\xf5\x7f\xed\xc5\xac\x5b\x9f\xfa\x1b\x00\x00\xff\xff\xd2\xd8\xa5\xe7\x59\x13\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 4953, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xcd\x72\xda\x3c\x14\x06\xe0\xf5\xc7\x55\xe8\xf3\xb6\xf5\x41\x47\x7f\x96\x18\x48\xa6\x5d\x37\xab\x2c\xba\xcc\x10\xec\x36\x9e\x82\xc5\x18\xd3\x24\xbd\xfa\x8e\x4d\x31\xfe\x39\xd3\x4d\x47\x5a\xea\x1d\x3b\xcf\x9b\xe4\xc8\x16\xac\xff\x4f\x53\xf6\xb5\xac\x72\xff\x7a\x7a\x3c\xbe\x7f\xde\xfb\xdd\x8f\xa2\x66\xaf\x65\x95\xb1\xf3\x31\xdf\x36\x05\x4b\xd3\xbb\x45\x77\xd9\xa3\x3f\xd7\xbb\x62\xc5\x5e\x9a\xe6\x78\x5a\x2d\x97\xdf\xcb\xe6\xe5\xfc\x0c\x3b\x7f\x58\xee\xea\xed\xaf\xf7\xf4\xb0\x7d\x5b\xce\x7f\x56\x7f\xff\x97\xed\xa9\x49\x1f\x7c\x5e\x7e\x2b\x8b\x7c\xc5\x1e\x7c\xf5\x91\x71\xc7\x3e\x1d\x6b\x26\x38\x5a\x86\x76\x25\xb3\x95\x36\xec\x03\x17\x9c\x77\xf7\x2d\xd6\xf7\x6f\x87\x3d\xfb\x59\xd4\xa7\xd2\x57\x9b\x04\x81\x27\xf7\x77\x8b\x75\xed\x7d\x73\xb7\xf8\x6f\x5d\x36\xc5\x81\x55\xdb\x43\xb1\x49\xda\xca\x4f\x97\xca\x4f\x28\x01\x79\x06\x0a\x34\x4f\x58\x7d\xde\x17\x9b\x64\x14\xe5\x65\xbd\x49\x78\xc2\x8e\xb5\x6f\xfc\xce\xef\xbb\x45\x8f\xf0\x84\x95\xa7\xa7\xe7\xb6\xfe\x26\xc1\x6e\x51\x54\xdb\xe7\x7d\x91\x77\xcb\xe5\x5f\x60\xd1\x2a\x12\xd0\x3a\x40\xa1\xaf\xf6\x34\x8d\xc3\x1b\x92\x37\x91\x78\x9d\x51\x7c\x9b\xc6\xe1\x2d\xc9\xdb\x80\xbc\xe2\x90\x65\x20\x84\x03\xd9\xff\xe7\xc7\x59\x0c\xda\x12\x74\x9c\xdf\x5a\xcb\x39\xdd\x66\xc1\x68\xa3\x41\x6b\x40\x69\x01\x51\x5c\xed\x49\x18\x05\x57\x14\xae\xe2\xe0\xb7\x6d\x3e\x09\x63\xe0\x96\xc2\x6d\x04\xdc\x48\x10\xe8\x26\xf8\x35\x8c\x81\x0b\x4e\xe0\x22\xe4\xab\x65\xe8\x20\x85\x63\x24\x7c\xba\xd5\xae\x61\x38\xdc\x00\xa2\x03\x54\x6a\xf8\x5a\x99\xa6\x71\x78\x4b\xf2\x21\x1f\xb0\x43\xc8\x3a\x8a\xb7\x41\x67\x7e\x00\x39\x4e\xf1\x2e\xe4\xd4\xa3\x54\x80\x19\x07\x8d\x43\x7e\x9a\xc6\xe0\x85\x32\x04\xdf\xa5\x71\xf8\x8c\xe4\x43\x4e\xfe\x08\xb2\x24\x1f\x72\xf2\x7b\x48\x82\x70\x33\xfd\x12\xc6\xc0\xe5\x7c\xee\x2e\x61\x78\xdc\x02\x4f\x07\x0b\xa1\xf5\xac\x0a\x75\x49\xf0\x62\x88\x1a\x8c\x98\x76\xb9\xa6\xe1\x79\xa3\xa9\x89\xec\xe3\x48\x05\x66\x43\xd9\xc7\x71\x0a\x68\x24\x0b\xe8\x90\x27\x81\xb1\x24\xe9\x02\x21\x4f\xfd\xa8\x33\xd0\x06\x9c\x01\x14\x37\x7e\x1c\x86\xc3\x1d\x82\x90\x02\x6c\xbb\xd7\x7a\x7c\x1c\xc6\xc0\x0d\x27\x70\x13\xf4\x91\x34\x70\x04\x85\x07\xdd\xf7\x7f\x1c\x94\x6e\x34\x74\xd3\x38\x52\x01\x45\x17\x08\xf9\x89\xef\x22\x29\xc8\x04\xa0\x9d\xfc\x01\x6e\x69\x1c\xde\x90\x7c\xd0\x73\xd0\x10\xb2\x24\x1f\x7e\xe3\x5d\x20\xc7\x29\x3e\xe8\x21\x54\xf0\x0c\x54\x7b\xe0\x56\x83\x87\xce\x24\xfc\x57\x7c\xbd\xec\xbe\x52\xfd\x1d\x00\x00\xff\xff\xf9\x0d\xc3\xde\x0f\x16\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 5647, mode: os.FileMode(438), modTime: time.Unix(1523292011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x97\xcb\x72\xd3\x30\x14\x86\xd7\xe4\x29\x84\xb7\xe0\xdf\x3a\xba\x5a\x99\xa4\x1d\x58\xd3\x55\x17\x2c\x3b\x6e\x62\xa8\x87\xc4\xca\x38\x2e\x6d\x79\x7a\xc6\xa6\xb5\xad\x18\xb2\x61\x94\x5d\xce\x17\x39\xdf\x6f\x5d\x32\x47\xab\xf7\x69\xca\xbe\x56\xf5\xd6\x3f\x1d\x6f\x0f\x2f\x9f\x77\x7e\xf3\xa3\x6c\xd8\x53\x55\xe7\xc4\xca\xe7\xb6\x29\x58\x9a\x5e\x2d\xfa\x61\xb7\xfe\xb1\xd9\x94\x4b\xf6\xd0\xb6\x87\xe3\x32\xcb\xbe\x57\xed\xc3\xe3\x3d\x36\x7e\x9f\x6d\x9a\xe2\xd7\x4b\xba\x2f\x9e\xb3\xf9\x6f\x0d\xcf\x7f\x29\x8e\x6d\x7a\xe3\xb7\xd5\xb7\xaa\xdc\x2e\xd9\x8d\xaf\x3f\x32\xee\xd8\xa7\x43\xc3\x04\xa7\x9c\x51\xbe\x94\x76\xa9\x0d\xfb\xc0\x05\xe7\xfd\x73\x8b\xd5\xf5\xf3\x7e\xc7\x7e\x96\xcd\xb1\xf2\xf5\x3a\x21\xf0\xe4\xfa\x6a\xb1\x6a\xbc\x6f\xaf\x16\xef\x56\x55\x5b\xee\x59\x5d\xec\xcb\x75\xd2\x47\xbe\xeb\x23\xdf\x91\x84\x75\x10\xd2\xc1\xb8\x84\x35\x8f\xbb\x72\x9d\x84\x6c\x5b\x35\xeb\x84\x27\xec\xd0\xf8\xd6\x6f\xfc\xae\x2f\x06\x0d\x4f\x58\x75\xbc\xbb\xef\x5e\x60\x9d\x50\x5f\x94\x75\x71\xbf\x2b\xb7\x7d\x99\x9d\x57\xe7\x1c\x24\xa0\xd5\xc4\x3c\xa2\x68\x62\xc5\x41\x94\x83\xb8\x84\x7d\x33\x87\x2c\xbe\xda\x80\x24\x9f\xc9\x5f\x69\x34\xbd\x26\x90\xe2\x30\x1a\xf9\x30\xe7\x21\x8b\xad\x26\x61\x41\xce\x9e\xc8\x07\x1a\x57\x4f\x90\x02\x9a\x02\xf9\xc0\xe2\xa9\x05\xc8\x18\x10\x71\x98\x71\xd6\x43\x18\x5d\x2e\x38\xac\x3d\x95\xbf\xc2\xb8\x72\x07\x4b\x20\xcd\x03\xf9\x08\xa3\xca\x6d\x0e\x32\x04\x45\x53\xf9\x04\xc6\x97\x4b\xe4\x7a\x26\xff\x03\x63\xca\x85\xec\x66\x39\x5c\xf2\x09\x8b\xab\x96\x20\xe7\x20\x94\x0b\xe4\x13\x1a\x4d\x6f\x14\x14\x84\x04\x4f\xdf\x3e\x09\x3d\x4c\xff\x3f\xbe\x8c\x1b\x46\x2b\x08\x2d\x83\x08\x6f\xe8\x02\x62\x35\x17\xc7\xfc\xb3\x31\x1a\xdd\x1e\xe7\x39\xc4\xb0\xf6\x21\xbb\x80\x5a\xff\x45\xad\x2f\xa3\xa6\xc9\x4a\x87\x30\x5e\x13\xc5\x15\x94\x46\xd7\x3d\x8c\x87\xfd\x04\x46\xec\xe0\xa8\xdb\xca\x30\x04\x9e\x4e\x8a\xc9\xa1\x3b\x3b\x24\x62\x30\x0b\x22\x0b\x21\x35\xc8\x8c\x59\x42\x1a\x4f\xaf\x2d\xb4\x06\x49\xd5\x75\x37\x83\xfe\x84\xc6\xd7\x6b\x90\xc8\x67\xfa\x57\x7a\x11\xbd\x9c\xbf\xbd\x8e\xdc\xe3\x92\x23\x08\x69\x21\xba\xb3\x27\xc6\xc5\x3f\xc5\xd1\x02\x08\xae\xba\xfb\x13\x39\x0b\x9e\x4e\x8a\xc9\xa9\x38\x3b\x24\x62\x30\x0b\x65\x40\xae\xdb\x80\x63\x94\x00\xfe\xaf\x7c\x95\xf5\x17\xce\xdf\x01\x00\x00\xff\xff\xbc\x7f\xa1\x86\x2d\x0f\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 3885, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x41\x73\x9b\x38\x14\xc0\xf1\xf3\xfa\x53\x68\xb9\xee\xfa\x59\xef\x49\x42\xc8\x63\x27\xd3\x9e\x9b\x53\x0e\x3d\x66\x1c\x9b\x36\x4c\x6d\xe3\x01\xd2\xc4\xfd\xf4\x1d\x11\x63\x84\x60\x7a\xe9\x3c\x1f\x72\xe0\x3f\x71\x7e\x11\x08\x22\x91\xd5\xbf\xf3\xb9\xf8\x5a\x1c\x77\xe5\x5b\xfd\x78\x3a\x7f\xde\x97\xdb\x1f\x79\x25\xde\x8a\x63\x86\xa2\x3e\x9d\xc5\x7c\x7e\x37\x6b\xbf\xe9\xb1\x7c\xad\xb6\xf9\x52\xbc\x34\xcd\xa9\x5e\x2e\x16\xdf\x8b\xe6\xe5\xf5\x19\xb6\xe5\x61\xb1\xad\x36\xbf\xce\xf3\xc3\xe6\x7d\x31\xfe\x49\xd7\xcf\x7f\xd9\xd4\xcd\xfc\xa1\xdc\x15\xdf\x8a\x7c\xb7\x14\x0f\xe5\xf1\x7f\x21\x9d\xf8\x74\xaa\x04\x49\xcc\x04\x66\x4b\x65\x97\x26\x15\xff\x49\x92\xb2\xfd\xdc\x6c\x75\xff\x7e\xd8\x8b\x9f\x79\x55\x17\xe5\x71\x9d\x20\xc8\xe4\xfe\x6e\xb6\xaa\xca\xb2\xb9\x9b\xfd\xb3\x2a\x9a\xfc\x20\x8e\x9b\x43\xbe\x4e\xda\x5f\xf8\xa9\x3e\x9d\x9f\x50\x81\xcd\x80\x94\x01\xa4\x34\x11\xd5\xeb\x3e\x5f\x27\x51\xdc\x15\xd5\x3a\x91\x89\x38\x55\x65\x53\x6e\xcb\x7d\x7b\x70\x65\x64\x22\x8a\xfa\xe9\xd9\x0f\x60\x9d\x60\x7b\x90\x1f\x37\xcf\xfb\x7c\xd7\x1e\x2e\xfe\x44\x67\x08\x06\x8c\x0a\xdc\x6b\xe1\x45\x1d\x90\xa6\x88\xbd\x34\x26\x98\x14\xb8\x0c\xb4\x03\xd4\x9d\x3b\x48\x8c\xac\x6b\x0d\xc2\xd0\xed\x1b\x13\xac\x25\x58\x0b\x44\x29\x90\x76\x9d\x1c\x45\x7e\xda\xc8\x09\xda\x47\x66\x3a\x03\x47\xb1\xfc\xd1\x18\x61\x07\x99\xbf\x63\x4d\x08\xf7\x8d\x09\x36\x04\xa8\x32\x40\x9d\x41\x66\x3b\x39\x8a\x37\xa0\xdd\x14\xcd\x37\xc5\x02\x05\xcd\x94\xdd\x56\x46\x3c\xd5\x40\x0a\xa1\xbf\xd8\x51\x64\xa6\xb5\x84\xe1\xb0\x83\xc8\x4d\x23\x90\x1c\x0d\xbb\xab\xcc\xb8\x41\xd0\x3a\xb6\x2f\x91\x91\xb6\x7e\x52\x59\x7f\x86\x43\x3b\xac\xcc\xb8\x41\x20\xa4\x18\xef\x2a\x33\xee\xbf\xd2\xd8\xbe\x44\x66\xda\x29\xc0\xb1\xdd\x55\x5e\x9c\x48\x01\xa9\xc8\xee\x22\x23\x9d\xf9\xd1\x69\x40\x3b\xb0\xc3\xca\x89\x5b\x48\x25\xa0\x1c\xfc\x29\x09\x22\x13\x9d\x1a\x30\x06\xb4\x06\x94\x59\x27\x0f\x1b\x2b\x8c\xe8\xcf\xee\x10\xee\x1a\x3f\x4c\x13\x30\xdf\x5d\x1d\x20\x6a\x02\xe6\x9b\x5e\x1f\x08\x19\x02\x1d\xc1\x5d\x63\x87\xdd\x04\xec\x6e\x01\xa3\x93\x63\xb9\x8d\xec\x34\x49\x1a\xd3\x6d\xe4\xda\xe2\x49\x0d\xda\xcf\x24\x0b\x69\xbf\xa5\x1d\x46\x6e\xda\x41\xbf\xdd\x8a\x22\x2f\xed\xb7\x19\xc1\x86\x7a\x18\xf9\xe9\xe0\x62\xc7\x95\x19\x57\x16\x30\x75\x31\xde\x55\x2e\x1c\x11\x88\x10\xc8\x01\xaa\xeb\xba\x30\xae\xfc\x38\x99\x29\xbc\xad\x6c\xef\x51\xfc\x3e\x43\x81\x5f\x12\x84\x2f\x70\x86\x95\x0d\xf7\x0b\x11\x09\x4a\x0e\x26\x5c\x54\x6f\x81\xab\x49\xfc\x46\x23\xd7\x93\x38\xe7\x35\xef\x99\xe0\xf1\x16\x55\x36\xdc\xfa\x45\x77\xfb\x18\x45\x0c\x86\x1e\x65\x2e\xde\x58\x30\x29\xa0\xd3\x60\xfb\x19\x37\x8c\x37\xa0\xd5\x14\xcd\x38\xdd\x02\x45\x4f\xd1\x8c\x27\xdc\x21\x90\x72\x60\x24\xe0\x75\x49\x1e\x45\x7e\xda\xda\x09\xda\xf2\xed\x43\xae\x0a\x01\x4a\x39\xb2\x2f\x95\x1b\xd7\x60\x68\x64\x7f\xc4\xbf\xa5\x57\x8b\xf6\xdf\x11\xbf\x03\x00\x00\xff\xff\xc3\x9e\x99\x9c\x49\x19\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 6473, mode: os.FileMode(438), modTime: time.Unix(1523292012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xda\xcd\x92\xe2\x36\x10\x07\xf0\x73\xe6\x29\x14\x5f\x13\x1a\xb5\xbe\x45\xc1\x6c\x25\xe7\xec\x69\x0f\x39\x4e\x31\xe0\x64\x5d\x01\x4c\x19\x26\xbb\x9b\xa7\x4f\xd9\x0c\x46\x96\x55\x9b\x4b\xba\x6f\xe3\x7f\x99\xf9\x35\x96\x25\xb7\x3c\xb3\xfe\x71\xb1\x10\xbf\x37\xa7\x7d\xfb\xe5\xf2\xe9\xfc\xed\xd7\x43\xbb\xfb\xab\xee\xc4\x97\xe6\x14\x50\xbc\x9d\xf7\xdb\x6b\x2d\x16\x8b\xe7\xa7\xe1\xbc\x4f\xed\x5b\xb7\xab\x57\xe2\xf3\xf5\x7a\xbe\xac\x96\xcb\x3f\x9b\xeb\xe7\xb7\x57\xd8\xb5\xc7\xe5\xae\xdb\xfe\xf3\x6d\x71\xdc\x7e\x5d\xce\x7f\xd9\xf8\xf9\xdf\xb6\x97\xeb\xe2\x63\xbb\x6f\xfe\x68\xea\xfd\x4a\x7c\x6c\x4f\x3f\x0b\x19\xc5\x2f\xe7\x4e\x28\x89\x41\x60\x58\x69\xbf\xb2\x4e\xfc\x24\x95\x94\xc3\xe7\x9e\xd6\x1f\xbe\x1e\x0f\xe2\xef\xba\xbb\x34\xed\x69\x53\x21\xc8\xea\xc3\xf3\xd3\xba\x6b\xdb\xeb\xf3\xd3\x0f\xeb\xe6\x5a\x1f\xc5\x69\x7b\xac\x37\xd5\x50\xf3\xcb\xad\xe6\x17\xd4\xe0\x02\x04\x0f\xe8\x6d\x25\xba\xb7\x43\xbd\xa9\xa6\xd9\xbe\xe9\x36\x95\xac\xc4\xb9\x6b\xaf\xed\xae\x3d\x0c\x07\xa3\x23\x2b\xd1\x5c\x5e\x5e\xfb\x6f\xb0\xa9\x70\x38\xa8\x4f\xdb\xd7\x43\xbd\x1f\x0e\x97\xff\x6d\x47\x0d\x28\xe3\xd4\xbe\x67\xa4\xb6\x37\x80\x3e\x02\xa2\x4f\xf0\x34\xa4\xd5\x03\xa0\x0b\xa0\xb4\x4c\xf5\x24\x24\xd7\x83\x01\x63\x32\xfc\x3d\xa3\xb6\x95\x96\x80\x3a\xc3\xc7\x90\x54\x47\xe9\xc1\x80\x4d\xaf\xfa\x23\xa2\x93\x55\xcf\x68\xc0\x10\x01\xd5\x38\xd3\xf2\x94\xc9\x77\x45\xdf\x71\xf9\xd6\x97\x7c\x4b\x3a\xe3\x26\x52\x28\xfa\x81\xd2\x37\x12\xbc\x07\xa5\x22\xe8\x71\xf4\xa7\x19\x8b\x1d\x0a\x36\xd3\xf7\xb6\x7a\x6e\xf7\x19\x9d\x6d\x15\x60\xd0\x60\xfa\x07\xd9\x78\xcb\x67\x21\xb9\x8e\x18\x00\x3d\x66\xfc\x98\x92\xfa\xfd\x25\x46\x8f\xa0\xa4\x4a\xfc\x49\x4a\xe7\x3b\x03\x06\x94\x4f\x96\xda\x34\x21\x74\x2d\x58\x0b\xa8\x03\xc8\xc5\xe3\x67\x65\xc7\x69\xf7\x9d\x13\xc8\xab\x72\x1a\x14\xc6\xac\x92\x7b\xc8\xa2\x2b\x59\xd0\x15\xc7\x88\x0c\x10\x96\x74\xd2\x79\x90\x42\xaa\xa4\xd3\xce\x82\x01\x52\x46\x81\xb2\x66\xaa\x8f\x21\xa1\xee\x00\x31\x02\x1a\x93\x3e\x75\xf3\x94\xc9\x0f\x45\x9f\xf4\xe9\x93\x4a\x21\x96\xfc\x40\x3b\xef\x12\x29\xca\x92\x1f\x89\x3b\xfd\x7e\x3b\x23\xc1\x22\x60\x48\xb6\x39\xd3\x94\xc9\x0f\x45\x9f\x74\xfc\x53\x29\xca\x92\xcf\x76\xfd\x95\x71\x05\x7f\x48\x99\xfc\xd2\xf8\x0f\x29\x93\x5f\x1a\xff\x21\x65\xf0\x35\xa8\x38\xe3\x6f\x21\x8b\xae\xe7\x37\xdf\x2d\x64\xd0\xfb\x3e\x27\x39\x48\x3a\xa1\xef\x9e\x42\x5f\x19\x62\xff\x1c\xcc\x8b\xb9\xa7\x4c\xfe\x6c\x56\xde\x53\x1e\xdf\xcd\x6e\x8c\x7b\xca\xe4\xab\xa2\x4f\xda\x13\x8d\x92\xb3\xa5\x65\x61\x8c\xb9\x2a\x98\xad\x0c\x63\xcc\x54\x81\xc5\x62\x05\x96\xb4\x2f\x9e\x52\xba\x5c\x01\xe9\xfe\x1c\xad\xbf\xed\xbe\x34\x28\xf9\x78\x19\x98\xa5\xe4\xbe\x32\x12\x1e\xcd\x61\x16\xb2\xe8\xc9\x1b\xb9\x3c\x65\xf1\x93\x4d\x61\x9e\x12\xfb\x0e\xbc\xef\xb7\xdf\x13\xfe\x11\xf2\xe8\xb1\xa4\xd3\x8f\xfd\x0d\x32\xb2\xa0\x1b\xae\x2b\x6f\xb0\xa4\xd3\xae\x3b\x09\x54\x1a\x77\xe2\x95\x3f\x81\x4a\xe3\x4e\xbc\xea\xdf\xa0\xe8\xc0\x9a\x0c\x7f\xcf\x58\xec\xfc\xb2\xbf\x67\x1c\x36\x2a\x3d\xc7\x87\x90\x45\x7f\xbc\x04\xc9\x42\x42\x3d\x22\x28\xad\x20\xc8\xe4\x15\x78\x16\xf2\xe8\xa1\xa4\xd3\x8e\xfb\x03\x4a\x1a\xdd\x69\xc8\xa3\xab\x92\x4e\xdb\xe5\xbe\x43\xa8\x23\x60\x98\xf9\x63\xcc\x53\x81\x9a\xdf\x7b\x63\xcc\x55\x81\x29\x57\x40\xbb\xea\x0d\x94\x01\x3f\xfc\xdd\x65\x5a\xc0\x23\x65\xf2\x5d\xd1\xa7\xed\xf2\x52\x29\x14\x7d\x86\x15\xe0\x26\x45\x59\xf2\x69\xdf\xc0\x29\xe9\xc1\x38\x40\x34\xc9\xfa\x97\x85\x2c\xba\xc3\x82\xee\xfe\x87\x4e\x6b\xbd\x1c\xfe\xc7\xe7\xdf\x00\x00\x00\xff\xff\x35\x8a\x6a\x3b\xa1\x24\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 9377, mode: os.FileMode(438), modTime: time.Unix(1523292013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\xd7\x6e\xd2\xed\xfa\xda\xec\xa1\xb0\xdd\x06\xc2\x92\x43\xe9\x41\x91\xc7\x8e\xa8\xad\x11\x92\x9c\x07\x4b\xbe\xfb\x22\x25\xf1\x03\x7a\x28\xc2\xa0\xf9\xcd\xcc\x7f\x1e\xf2\xbf\x09\x00\xdb\xa3\x75\x8a\x34\xcb\x81\xcd\x79\x9a\xf1\x94\xdd\x05\x5c\xe0\xb6\xad\x58\x0e\xa5\xa8\x1d\x46\xd2\x3a\xfc\xd5\x6c\xb1\x28\xb0\x58\x0a\x2f\x58\x0e\xde\xb6\x17\x97\xb1\x74\x54\xa5\x42\xcb\x72\x08\xa2\x00\xac\xa6\x6a\x25\xfc\x2e\xc8\x3e\xe5\xc9\x5f\x87\xd6\x25\x6f\xad\x43\xab\x45\x83\xef\xc9\x92\x64\xdb\xa0\xf6\x2e\x59\xdd\x72\x93\xdf\x54\x71\x7f\xf4\x6c\x02\x70\x8e\xb2\xee\xe4\x9a\xd8\xd9\x55\x13\xf7\xfe\x38\x10\xdd\x3c\xff\x59\xbe\x6e\xd6\x89\x3b\x39\x8f\xcd\x7d\x96\x1c\x94\xc6\xbd\x0f\x3a\x2e\x79\x51\xd2\x92\xa3\xd2\xcf\x36\x4a\x17\x74\x70\xb3\x75\x54\xfb\x36\x7f\x35\x68\x85\x57\xa4\x45\xcd\x83\x62\x5f\xef\xa0\x2c\xba\x9d\xb0\x1f\x7d\x49\x23\x85\xd1\x5f\x9c\x64\x73\x4b\x4f\xa4\x30\xfc\x92\x19\x97\x09\xc0\xa4\x30\xbe\xb5\xd8\x09\x03\x30\xa5\x3d\xda\x52\xc8\x00\xd3\xbb\x1b\x2d\x55\xed\xe3\x1e\x99\x26\x0f\xc2\x1a\x10\xba\x00\x43\xd6\x43\x00\x8b\xfb\x68\x87\xab\x92\x8d\x19\x19\x0f\x9d\xb5\xb5\x24\x0a\x29\x5c\xdc\x25\xc0\xb9\x9b\x10\x8f\xb2\x6e\x8b\xbe\x0d\xa6\x8c\x63\x39\xbc\xdd\xaa\x7f\xe7\xf1\xb0\xae\x9d\x34\xfb\x11\x51\x3a\x40\x3f\x33\x9e\x3e\x3c\x06\x3c\xeb\xef\xd9\x62\xd1\x87\x3c\xf2\x78\xc6\x60\xce\xe7\x3d\xc8\x16\x0b\x3e\xf8\x2e\x7d\xbe\x5f\x97\xb5\x23\xe7\x47\x6d\xbd\x9c\x9e\xa8\x31\x6d\x58\x4c\xa7\x50\x93\x14\x75\x88\xfc\x04\xf1\x78\x2b\xa8\x11\x4a\xf7\xee\xe9\x05\xf7\xe0\x44\xad\x7d\x5e\xaf\xb8\xa4\x66\x18\xf5\x29\xee\xfe\x0d\x4e\xb6\x1a\x46\x8f\x1d\xa3\x39\xc8\x56\xa3\x31\xa6\xe1\xb5\xb7\x44\x1f\xd3\x6b\x5c\x78\x97\xc9\x79\xf2\x3f\x00\x00\xff\xff\xb9\xfa\x66\x56\x88\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 904, mode: os.FileMode(438), modTime: time.Unix(1523292077, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/settings.json": appSettingsJson,
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"settings.json": &bintree{appSettingsJson, map[string]*bintree{}},
	}},
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

