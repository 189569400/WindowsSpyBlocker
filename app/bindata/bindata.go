// Code generated by go-bindata.
// sources:
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x5b\x72\xa4\x30\x0c\xfc\xcf\x51\x52\x85\x3e\x72\x23\x47\x16\xa0\x1a\x4b\xf2\x5a\x9a\x61\x66\x4f\xbf\x65\x60\x5e\x64\xf3\x49\xb7\xba\xad\x47\xf3\x09\x5f\x92\x15\x94\xe2\xe3\x13\x84\xdc\x49\x27\x6a\x50\xf8\x42\x80\x26\x1d\x74\xca\x13\xdd\x2b\x7c\x0c\x45\xe7\x9d\x73\x49\x2d\x1c\x1b\x91\x82\x30\x36\x73\x1b\x63\xe7\x2e\xd6\xa5\xa8\x79\x97\x2e\x94\x62\xa6\xf6\xa3\xee\xfa\x6d\xd7\xc7\x73\x49\x7d\xa1\xe6\x87\xa2\x54\xab\x83\x9f\x6e\x75\x2b\xc2\xa4\xf9\x86\xed\xec\xb3\x5b\x4e\x70\x62\x9d\x36\x3c\x2b\xa0\x69\x90\x06\xd4\x66\x19\x50\x1c\xc4\xf5\x41\x9a\x92\x5a\x6c\xb3\xe0\x6c\x8c\x74\x78\xe8\x7f\x20\xa8\xa7\xc0\x4d\x53\xb8\x7b\x2f\xea\xb0\xb0\x66\x5b\x7c\x53\xad\x30\x9a\x8e\x3c\x41\x4d\xee\xd5\x5a\xac\x82\x4c\xb5\xd8\x0d\x3c\x52\x30\x42\x3a\x25\x49\x1c\x84\xb3\x5a\xb1\x89\x69\x93\x67\xc9\x20\x14\xc9\xa9\x5d\x18\xe9\x38\xfc\x48\x94\xbf\x13\x9e\x9e\xf0\x30\xdb\x2c\xef\x9c\x53\x6a\x38\xff\xa6\x7c\x6d\x76\x7a\xde\x96\x65\x1a\x7c\x10\xd7\xa1\x8f\xb9\x75\xf7\x97\xb6\x7b\xb1\x3a\x67\x6a\xb5\xaf\xbc\xd8\x39\xa7\x5a\x57\xbc\x30\x92\x7a\xdf\xb8\xd4\xc3\x73\x7d\x24\x7d\xba\x0b\xcc\x16\x92\xb8\x6c\x5f\xaf\xc1\xb1\x71\x64\xa4\x7d\x9b\xef\x26\xa6\x77\xdc\xc7\x2b\x88\x7f\xd4\xc6\x48\x85\x3d\x5e\x02\xf0\xe7\x4c\xed\xf6\x3c\x71\x3b\x9a\xdc\xb7\xb1\x9f\xde\xc3\x1a\x0d\x2c\x69\x22\x07\x1f\x0e\xb5\x9d\xec\x09\x1f\x33\x64\xbf\xfe\x1c\x2b\x58\xe8\x6d\x83\x71\xfa\x82\x5a\xe2\x61\x7f\xe6\x97\xd6\x96\x8c\x47\x83\x0e\xa5\x72\xec\x71\xf1\x1e\x55\x58\xa3\x7d\x60\x96\x65\xfd\xcf\xd0\x54\x09\x23\xc8\x57\xfc\x5f\x00\x00\x00\xff\xff\x95\x1f\x78\x00\xaa\x03\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 938, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x99\xeb\x92\xbb\x2c\x0f\xc0\xbf\x3f\x97\xb2\x33\x65\x38\xa8\xad\x97\x83\x40\x95\x59\x05\x5e\xa0\xba\xbd\xfb\x77\xa8\x3d\xd8\x4a\xc3\x7f\x3f\xd5\xfc\x08\x09\x49\x38\x2c\xfc\x20\x7e\x98\x82\x92\xbd\x42\x46\xc5\xff\x7e\x10\x97\xe6\x2f\x20\x61\xa7\xdb\xef\xf0\x83\xa6\xc0\x65\x78\xc2\x9b\xc0\x3c\xf8\x74\xfb\x54\xc2\x3c\x78\x94\x53\xbc\x43\x29\xde\x3b\xee\xc7\x4e\x9a\x40\xd1\xa4\x85\xb7\xc1\x9e\x1f\xed\x46\x2b\x78\xd4\xd6\xa0\x51\xcf\x8f\xb6\x6f\x8a\x9e\xcb\x8d\x4d\x9f\xbc\x79\x7d\x06\xe5\x67\x2d\x54\x40\xc1\x0a\xcd\xc7\x5d\xef\x51\x8d\x6a\x52\xd1\x5f\xf7\xc4\xf3\xf3\x59\x8b\x89\x1b\xde\x2b\x7f\xb7\x35\x6b\x1f\x2f\x7c\x54\xdc\xc7\xe1\x21\xb2\x3e\xaa\xbf\x1f\x24\x79\xe4\x28\x75\xf5\x70\x55\xd8\x09\x99\xc0\xa3\xc8\x36\xfc\xb0\xb6\xc2\x1c\x7b\x8b\x3f\x17\xec\x39\x38\x2e\xa2\x9e\x75\xbc\xa2\x45\x1b\x69\x97\x35\x29\x5c\x1a\xf5\x77\x59\xf3\xf1\x4a\xd5\x36\x26\x5c\x06\xb2\x49\xda\xfd\xf3\xce\x7e\xf9\x41\x48\x73\x30\x01\x71\x19\x95\x18\x90\x54\xff\x71\xef\xf9\xf5\xe7\xe0\xbc\x95\x48\x5a\x24\x83\x43\x93\xfb\x70\xb2\xd3\xa6\xbf\x19\x79\x97\x8e\x8c\x61\x72\xe0\x88\x48\x3f\x6f\x25\x62\x27\xe9\x37\x12\x43\x18\xae\x0e\xea\x43\xd2\xbc\xf5\xb3\x4a\xf6\x6d\xde\xfa\xa1\xdd\x41\x58\x8f\x31\x41\xdc\x69\xe4\xd2\x8f\x0c\x65\x20\xad\xf2\x74\x31\x81\xa0\xc5\x84\xb7\xe0\x77\x86\x39\xc8\x22\x0b\x62\xc0\x14\x63\x4a\x19\x3d\xed\xb5\xc3\x5a\xad\xa6\x3f\x84\xeb\x5d\x74\xdd\x05\xf0\xba\x0b\xe0\x2a\xd9\x84\x42\x3c\xf3\x29\xb8\x18\xd4\xad\xa8\x26\xee\xe3\x9b\x35\x21\x43\x55\xb7\x68\x14\x57\x34\x8e\x66\xb9\xd5\x82\x90\xa1\x6d\x6a\x34\xa6\x0a\x7e\xca\x06\xf2\x7d\x48\x4f\x48\xb3\xf0\xd3\xd5\xbb\x44\xed\x24\xfd\x87\x84\xee\xb4\xe8\x9b\x96\x9d\x1c\x8f\xea\x4f\x0c\xdc\xf4\x0a\x89\xd1\x5e\x24\x77\x6e\xf5\xd7\x9a\xa8\xcd\xe5\x32\x21\xb9\xab\x47\x61\xbd\x43\x21\xee\xc4\x8e\x60\x02\xd7\xb7\x70\xb4\xdc\xa4\x2a\x36\x49\x35\xe3\x04\x9a\xb1\x90\xeb\x92\x28\x3b\xb6\x98\x40\x31\x49\x7f\xbb\x8a\x90\x5d\x9d\x93\x05\x31\x10\x4c\x08\xc6\x84\xd2\x02\x3f\x82\xfc\xc4\xb2\x36\x37\x1c\xb6\xdf\x12\xb8\xff\x36\x53\xe5\x1b\x9e\x3c\x84\x39\x3c\x3e\x82\x69\x05\x73\x78\x7c\x04\xb3\x82\x7e\x55\xb0\x5f\xc1\xfa\xa4\x02\xe3\x47\x28\x6e\x61\x4e\x61\xff\x69\x61\x7c\x94\x81\xf9\x21\x0c\xce\x1f\x61\x85\xf8\x32\xc6\x0a\x1c\xd6\xaf\x08\x3c\xfe\x8a\x36\x30\x67\x18\xe4\x75\x7e\x4e\x6d\x38\x6c\xbf\x86\xeb\x9f\xd4\x15\xdc\x7f\x53\xc1\xfe\x1d\x0b\xfe\x1d\x19\xec\xdf\xb1\x50\x5f\x27\x02\xe7\xe7\x54\x88\x6f\x61\xfe\x93\x53\xa1\xbe\x4e\x85\xf9\xd1\x62\x58\xbf\x25\x05\x7d\x38\x3e\x14\x13\xd0\x7f\x8a\x69\x81\x33\x70\xfe\x53\x0c\xd6\x7f\x5a\x20\xa0\xf5\x2f\x71\xc8\xff\xdb\x02\x02\x72\x8a\x4b\x1c\xca\x6f\x5a\x5e\xa1\xf1\xa7\xe5\x15\xe6\x0c\x8c\x2f\xc1\x8c\xc2\xf1\x61\x05\xfb\xb9\x53\xd2\x1b\xaf\x0a\xfd\x17\xfc\xaf\x30\xac\x5f\x31\xd8\x7e\x05\xee\x0f\x04\xd7\xe0\xfe\x46\x70\x0d\xee\xcf\x04\xd7\x85\xfa\x6a\xc0\xfd\x31\x71\x38\xff\x0d\xb8\x3e\x13\x7c\xc4\x70\xfc\x8e\xe0\xfe\x40\xf0\x11\x5c\xff\x08\x3e\x91\x12\x87\xfd\x3f\x81\xfb\x63\xe2\x70\x7c\x4e\x85\xfa\x82\xd7\x3f\x82\xdb\x42\x7d\xb7\xf4\xfb\xfc\x66\xf8\x44\x4e\xc0\xfc\x66\x69\x74\xc0\xfe\x90\x38\x03\xd6\x97\xc4\x2b\x60\xfe\x27\xde\x00\xeb\xcf\x8d\x17\xec\x1f\x0b\xfa\x47\xf2\x3d\xfe\x89\x9f\x40\xff\x5a\xdc\xc2\x3c\x55\x30\xc8\x29\x68\xbf\x25\x0d\x70\xfe\x49\xfc\x08\xac\x6f\x89\xb7\x60\xfc\x5b\x0a\xad\xff\x2b\x87\xe2\xd7\x52\xe8\x7c\xc8\xd2\xe9\x19\xf2\x9f\x60\xcc\x80\xfd\x3f\xf1\x1a\x98\x7f\x2b\x07\xf2\x4f\x30\x06\xeb\xe3\x76\xbe\x04\xea\xfb\x76\xfe\x83\xf5\x6b\xd8\x7f\x52\xb2\x0f\xad\x5f\x8c\x60\x4a\xa0\xfa\x20\x18\x9e\x1f\x89\xe7\xe3\xb7\x98\x40\x64\x06\x34\x37\x45\x8a\xdb\x2f\xff\xb8\xbd\x38\xcd\x6e\x4c\x5b\x9e\x2b\xac\x2d\xcf\x39\xfe\xe2\x2c\x1b\x98\x0d\xcf\x06\x76\xcb\x61\xff\xaa\x6c\x60\xb6\x1c\x1e\x7f\x9d\x3d\xd8\x6c\x78\xa1\xff\xba\xd4\x7f\xc1\xff\x3a\x5b\xb8\x2f\xde\x14\xf4\x9b\xec\x3f\x16\x2f\x7e\x2a\xc4\xb7\xc5\xb0\xff\xf9\x83\xf3\x86\x17\xe2\xd3\xc2\xf6\x09\x86\xfb\x27\x18\xae\xbf\x74\x74\x01\x79\xa1\xfe\x08\x2b\xd8\x67\x70\x7d\x7f\x59\x78\x5e\xbc\x50\x7f\xa4\x81\xe7\x1f\x69\x72\xfe\x69\xde\x1b\x1b\xa2\x16\x01\x85\x8b\x73\xd6\xc7\x8f\xeb\x1f\xa9\x83\x28\xde\x34\xa5\x46\xc5\xbb\xa6\xd4\xa8\x78\xdb\x74\x1e\xd5\xdf\xf3\x26\xf0\xfc\x79\xe9\xd5\x3f\x51\xaf\x2c\xdc\x51\xaf\xec\xac\x3c\xdc\x66\x78\x5d\x22\x0f\xf4\xf9\x53\x1f\xba\xb1\x01\xae\x44\xf5\xa1\xbb\x42\x57\xa6\xfa\x00\x5e\x3f\x6e\x70\xee\x02\x52\x1f\x82\xa1\x90\xf6\x13\xe7\xb4\x7f\xe7\x62\xae\x7e\xe7\x62\xa6\x7e\xe7\x62\x9e\xc6\x8e\xa0\x65\x59\xd0\x14\x10\xff\xe5\xd2\xac\xf7\xf2\x63\xa0\x8b\xea\x90\x57\x72\xb2\x46\xa2\xdb\xd5\xe5\xbb\xde\x64\x3b\x3d\x2a\xe4\xb4\x53\x88\x7b\xfd\xf9\x6e\xb0\x79\x35\x98\x82\x89\x2a\xc4\xdd\xf5\xf2\xfa\x54\x60\xcf\x67\x2d\x14\x77\x2e\x3c\xdf\x2d\x56\xe2\x2f\xa3\xca\x63\x6b\x54\x50\x31\x6a\xd3\x87\x43\x67\x28\xf0\xec\xb1\x6d\x29\xae\xff\xda\x52\x76\xf5\x3f\xb6\x1c\x7e\xa1\x3e\x9d\x57\xe8\x6c\x6d\x74\x5e\x9b\xe8\xbc\x92\x5a\xac\xc1\x71\x5e\xcd\x5a\x2d\xcf\x42\xf5\x5c\xbe\x46\xb7\x7d\x50\x4a\x3a\x3e\x59\xe0\xcf\x97\xa4\xf7\x30\x07\x31\xa8\x89\x6f\xa5\x9b\x24\x06\x25\x2e\xc9\x85\x91\x87\x21\xf2\xf1\x57\x9b\x7e\x55\x7a\xb8\x1f\xb8\x91\x9d\xcd\xbe\xfb\x3c\xdb\x2c\xda\x40\x3c\xcb\xcc\xe7\xd5\xfb\x5d\xa2\x76\x92\xcd\xd5\x7b\x70\x57\xa3\xe2\xe7\x0b\xdc\x2a\xe5\xe3\xe7\x6a\xb6\xca\xd5\xc5\x5b\xa7\xbe\x8c\x3e\x2c\xaf\xa0\x86\x68\xbd\x12\x3c\xf2\xd1\xf6\x5e\xcd\x8f\x47\xbd\x9b\xf8\x7f\x17\x3e\xea\xf8\xf9\x04\x17\x2e\x7e\x56\x57\xb4\xf0\x18\xac\xf9\x60\xaf\x67\x3b\xee\x9c\xfa\x43\x5d\x8a\x6c\xb2\xf9\xed\x3d\xef\x25\xbf\xf8\xcf\x14\xc6\x70\x56\x8f\xe7\xbe\x30\x70\x97\xfa\xca\xce\xd4\x59\xf9\x90\x9c\x1e\xae\x9d\xd7\xf2\xb6\x66\x0c\xca\xaf\xe3\x5b\x1f\xf0\x0e\x3f\x40\x35\xde\x9b\x00\x39\xbf\xb7\xf8\x92\xf1\xb7\x37\xc2\x82\x95\x9c\xfe\x3d\x92\xcf\x94\x64\x23\xbb\x68\x43\x30\xd2\x6e\x6e\xde\xc1\xff\x03\x00\x00\xff\xff\xb8\xc4\xd5\x97\x09\x1e\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 7689, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1508198183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x0e\x02\x21\x0c\x45\xf7\x1e\xc5\x45\xa3\xe3\x89\xb0\x74\x48\x0d\xb4\x84\x56\xb8\xbe\xc9\xb8\x98\x88\x33\x3b\xfe\xfb\xf4\xa5\xbd\x42\xb1\xd5\x05\x8d\x01\xb5\x5c\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xd5\xbf\x65\x65\x78\xb2\xa4\x2d\xa0\x2e\x07\x5f\xb0\xe5\x89\xc4\x12\xa1\x90\x07\xa3\xd6\x19\x69\x1e\x48\xbb\x31\x41\xe6\x4e\xdb\x33\x6b\x62\xd9\xe3\xcf\x8a\x6d\xb9\xd9\x78\xdd\x1f\xa5\x4d\x2a\xe7\x42\x30\x58\xa2\x0e\xdb\x40\x0f\x99\xe3\xd9\x31\x23\x62\x3d\x40\x21\xfb\x4c\x0d\x55\x1c\x42\xad\x7f\x8a\xb3\x06\x28\x26\xb2\x37\x3b\x81\x90\x7f\x02\x00\x00\xff\xff\x48\xe0\xd8\x7d\x63\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 355, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6e\x83\x30\x0c\x86\xdf\x77\x94\x4a\xb5\x4a\x48\x99\x7a\x1c\x2f\x31\x28\x5a\x62\xa3\xc4\x6b\xca\xed\xa7\xb2\x4d\xa2\xc0\x24\x1e\xf3\xf9\xfb\x6d\xc5\x3e\x01\x9e\x53\x21\x3f\x10\x30\xe9\xdb\x09\x94\x22\x25\xd2\x3c\x41\x0a\x2e\x4b\x91\x5e\xc1\x49\x7a\x56\x32\xf6\x7d\x70\x09\x19\x07\xca\xbf\xfa\x5d\xb2\xd2\x03\x3c\x2a\xae\x02\xe8\x23\xd4\xc0\x5e\x6a\x99\xdf\xce\x97\xa6\xb1\x2d\x44\x61\x88\x91\xeb\xdc\xe0\x09\x4d\x77\xdb\x40\x73\xb1\xc6\x42\x74\xd3\x9a\xb6\xd7\x3d\xda\x35\x1b\xda\xb6\xb7\x2d\xb3\xdb\x9e\xf6\xf2\x0e\x7d\xc6\x05\x9b\x0c\x14\x52\x0d\x3c\x94\x9d\x7f\x01\x7e\xa2\xe7\x32\xab\xfe\xe3\x7a\x54\x1d\x48\x0e\xab\xf5\xf1\xb2\xb8\xbf\xd8\xb9\x06\xde\x5b\x74\x19\x27\x26\x35\xbb\x94\xbe\xb2\x8c\xb4\x28\x2d\xe6\x28\x65\xf2\x02\x61\xbc\x77\xab\xec\xcf\x51\xff\x9b\x57\x51\x8b\xf0\x2b\xfc\x0e\x00\x00\xff\xff\xed\x9f\x74\xd7\x47\x02\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 583, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd1\xdd\x6e\xc3\x20\x0c\x05\xe0\xfb\x3d\x4a\xa5\x5a\xc5\x49\x93\xf4\x71\x2c\x70\x22\x34\x30\x11\xb8\xcd\xf2\xf6\xd3\x7e\xa4\x2d\x85\xde\x7e\x3e\xe8\x58\xf8\x04\x74\x8e\x85\xdd\xc2\x20\xac\x6f\x27\x50\x0e\x1c\x59\xf3\x0e\xd1\xdb\x9c\x4a\x9a\x15\x6c\x8a\x5f\x93\x4c\xf3\xec\x6d\x24\xa1\x85\xf3\x6f\xfc\xbe\x3a\x52\xae\xb2\x8f\x94\x95\x3f\xc0\x91\x52\x35\xdb\xca\x13\x1d\x36\xb0\xae\x18\xc4\x09\x42\x12\x08\x41\xb6\x3f\xec\xfb\x06\x0e\xd7\x06\x8e\x5d\x03\xa7\xb1\x42\xbc\xf4\x97\x1e\x82\xdd\x8f\x6a\x10\x6f\x75\xd6\xe0\x75\x68\xe9\x58\xef\x8a\x06\x27\x53\x69\xd7\xdd\xaa\xae\xc9\x3c\xbd\x2e\xac\xea\x65\x29\xe7\xcd\x4b\xeb\xfb\xca\xba\x0b\x2b\x36\x95\x82\x36\x9d\xef\x39\xad\xff\x6f\x44\xef\xe4\xa4\x7c\xf7\xfd\x1c\xea\x55\xdb\xe6\x65\x02\xbf\x3e\x86\xa3\x7f\x06\x00\x00\xff\xff\xc1\x14\x44\x5c\x35\x02\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 565, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\xbd\x72\x1a\x4b\x10\x05\xe0\x7c\x9e\x62\xab\x48\xee\x0d\x38\xdb\xa7\xbb\xe7\x67\x09\x9d\x3b\x72\xe0\x18\x63\x64\x51\x46\xa0\x42\xb8\x90\xfc\xf4\xae\xde\x15\xb0\x64\xfd\xd1\x73\x86\xd9\x9e\x59\x2c\x16\xdd\xd3\xee\xb4\xbd\xac\xf7\xfb\xee\xb2\x3b\x50\xba\xed\xfb\xf9\xb4\xee\xfe\x63\xed\x29\xbd\x0a\x6b\x27\x5c\x59\xf9\x3f\xc5\xda\xaf\xc7\xd3\xb6\xdb\x1d\x9e\x8e\xab\xee\xf9\x7c\x7e\x7d\x5b\xf5\xfd\xaf\xdd\xf9\xf9\xcf\x0f\x6c\x8e\x2f\xfd\xe6\xb4\xfe\xfb\xb1\x7c\x59\xbf\xf7\xdf\x77\x87\x9f\xc7\xcb\xdb\xb7\xd7\x8f\x2f\xfb\xe3\xe6\xf7\xf6\x94\x12\x0d\x4d\x40\x45\xf6\xa8\x29\x15\x06\x6a\xbb\x42\x09\x15\x49\x6a\x18\x2a\x58\x1b\x58\x2d\xb9\xa0\x56\xa8\x3a\xda\xac\x26\x6f\xc8\x50\xbf\xb7\x0a\x64\x79\xaf\x35\xe7\xe8\x0c\x02\x5a\x81\x4a\x80\x42\x78\x89\xfd\x47\xd1\xa1\x4e\xd0\x39\xb1\x81\x62\xa8\x23\xb4\x82\xae\xa8\x25\x15\x87\x23\x3b\x64\x79\xad\x62\xeb\x92\x91\x15\x94\xc8\xcd\x30\xd8\x0d\x2d\x12\xb7\xfa\x9a\xc9\x93\xec\x13\x9a\x15\x6e\x89\xe2\x70\x81\x52\x60\x3a\xc9\xc7\x81\xd5\xbb\x1a\x62\x5c\x37\x50\xa6\x98\xd2\xa7\x4f\xe6\x27\x33\xe8\x65\x9c\x26\x8d\xd0\x6c\x30\x87\xda\x9d\x85\x90\xe5\x0c\x71\x34\x9a\x83\x55\xc0\x96\x51\x25\x31\xd7\xf1\xa8\xf1\xab\x95\x47\xb6\x07\xfa\x6c\x71\x9e\x6e\xb4\x34\x14\x03\x1b\xea\x90\x54\x1c\x75\x00\x87\x0a\x59\xce\x10\xff\x19\x64\x8c\xc7\x09\x75\x4f\x2a\x35\x6e\x27\x9a\x7a\x45\xdc\x98\x0e\x37\x65\x03\xc7\xe4\xc4\x21\x0e\x30\x97\x3e\xf4\xcc\xe6\x72\xb9\x4a\xe3\x99\x4d\xb9\xd2\xc0\x12\x8f\xc5\xff\x05\x00\x00\xff\xff\x40\x31\x27\x3e\x0d\x03\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 781, mode: os.FileMode(438), modTime: time.Unix(1508197932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x96\x3f\x53\x65\x37\x0c\xc5\xfb\xfb\x29\xde\xcc\x36\x49\xb1\xe7\xf9\xc8\xff\x29\xd3\xa7\x4a\x91\x9a\x10\x36\xcb\x84\x05\x06\xc8\x10\xf2\xe9\x33\xc7\xf6\xf5\xf5\x2d\x1e\xe8\x37\xb2\x74\x65\x59\x92\xfd\xe5\xcb\x97\xcb\xb7\x87\xd7\xfb\x8f\xdb\xc7\xc7\xcb\xc7\xc3\x13\xdd\xe5\xed\xe5\xf3\xf2\x13\xf3\x95\xee\x6a\x8e\xf9\xe2\x78\xe3\xd3\xcf\x9b\x56\xfe\xfa\xfc\x7a\x7f\x79\x78\xfa\xf6\x7c\x73\xf9\xfe\xfe\xfe\xf2\x76\x73\xbd\xfe\xf5\xf0\xfe\xfd\x9f\x3f\x70\xf7\xfc\xe3\x7a\xf7\x7a\xfb\xdf\xe7\xd7\x1f\xb7\xff\x5e\x7f\x7f\x78\xfa\xf3\xf9\xe3\xed\xb7\x97\xcf\x5f\x1e\x9f\xef\xfe\xbe\x7f\xdd\x36\x7a\xa4\x82\x62\x28\xbb\x98\x11\xf2\x2e\x17\xd0\xaa\x20\x27\x18\x0b\xc8\x3c\xa9\x82\x95\x0b\x19\x5d\xa3\x02\xe6\x0c\x86\xb0\x53\x71\xa8\x53\x55\x12\x2c\x76\x55\x85\xf9\x8a\xd4\xfc\x17\x22\x22\xfa\x5d\xac\xb0\x60\x02\xba\x8c\x88\xe2\x16\xb9\x6c\xe6\x51\x33\x12\x41\x9f\x07\x98\xab\xa8\x1d\x2a\xe8\x40\x4e\xb9\x22\x84\x05\xd2\x04\x26\xfd\x76\x32\xc2\x5c\xf3\x40\x67\x08\xb0\xe8\x77\x30\x22\xec\x32\x63\x04\x83\xeb\xe8\xc1\x62\xa0\xa5\x2d\x38\xa4\x8a\xe0\xc0\x98\x07\x18\x13\xb2\x5f\xc0\x22\x27\x15\x24\xdb\xc1\x4c\x81\x89\xb2\x83\x99\x83\x85\xd2\x28\x81\x60\x4e\xbb\x6c\x08\x87\xc8\x6e\x9f\x33\xcc\x0a\x6a\x83\xa2\x78\x2a\x42\xf3\xc5\x96\x31\xe4\x32\x21\x80\x71\xaa\xcc\x74\xcc\x0d\x02\x18\x14\x86\xeb\x18\x41\x65\xac\xc9\xed\x1c\x61\xc1\x4d\x8c\x84\x75\x27\xc6\xa6\x64\xb1\x2d\x4a\x24\xbc\x21\x72\x8b\x0a\x8e\x60\x84\x85\xd4\xa9\xb9\x80\xf7\x2b\xc5\x7a\x90\x52\x1f\x27\xc6\xf6\xfd\x46\xb9\x65\x47\x5f\x38\x88\x21\x1f\xe8\x41\x3f\x2c\x0b\x2c\x80\x79\x58\xea\x44\x3d\x42\x99\x54\x2a\x4a\x0f\x40\x65\x18\x72\xdb\xd5\x8e\xda\x15\x6d\xa2\x7e\x69\x52\xd5\x37\x17\xf4\xad\x6c\x06\x2a\x04\xeb\x7e\x8b\x12\x6c\xa0\x4f\x07\x46\x98\x1b\x98\x91\x9c\x6a\x58\x64\x3e\x21\xe8\x5f\xdd\x52\x40\x40\x02\x9d\xeb\xa2\x79\xb8\xaf\xbb\x64\x31\x6e\x29\xc2\xd7\x96\x7c\xf3\x4e\x24\xfb\x04\x2b\x43\xa6\x73\xb2\x98\xf2\xb0\x19\xc7\x90\xc2\x6e\xa2\x16\x75\xb9\x51\x84\xa9\xf9\xca\x00\xb9\x77\x43\x0e\x41\x67\x78\xc8\xe1\x90\xe9\xca\x0a\x75\x80\xaa\xce\x76\xf3\x56\x68\x5c\xc1\x56\xf0\x3b\x78\x87\x38\x6d\x72\xd2\x80\x18\x81\xf5\xfd\x4f\x79\xdf\x4d\x84\x45\x3b\x34\xda\x90\x34\x6a\xe1\xda\x8e\x93\x9e\x5b\xce\x50\x55\xd4\xd6\x35\x74\x01\xad\xb2\xb2\xda\xb0\x91\x22\xc8\x48\xe9\x20\xf5\xe2\xa4\xa0\xf6\x9b\x4b\xd5\x57\xf1\x44\xe6\x6c\xa2\xcf\x2a\xab\x8e\xda\x1c\x58\xe3\x4e\xa6\x96\xe2\x58\xab\x26\x36\x72\x07\x5f\x74\x24\x03\xa2\xda\xa8\x9b\x19\x1d\x02\x72\x3e\xc0\xa1\x1c\x64\x34\x58\xf0\x83\x03\xbc\xba\x2b\x6c\x24\x61\x9a\x5c\x9a\x3d\x2b\x51\x9e\x0e\xd4\x30\x3b\xe1\x61\x9a\x02\xdc\xd7\x05\x94\x56\x7a\xca\x04\xa9\x85\x30\x81\xce\x4f\x62\x33\x3b\x60\x35\x53\xaf\xcb\x4e\xed\xe8\xe0\x5d\x4f\xdc\x82\xca\xf9\x40\x95\x69\x3c\x90\x2e\x35\xbf\x07\x75\xc7\x3b\xab\x6d\x4f\x18\xca\x09\x6b\x5a\xb0\x9c\x17\x97\xf3\xe2\x82\x6c\xe7\xc5\xeb\x6a\x72\x8d\x43\xe9\x59\xe3\x68\x43\xfa\x84\xab\x6b\x73\x27\xd7\xe6\x4e\x61\xe5\xa2\x9b\xea\xc0\xda\x93\x3c\xb0\x94\x36\xfe\x77\x36\x1f\x35\x8a\x54\xb6\xba\xaf\x0a\xfb\x77\xf3\x98\x07\x5d\x19\xb3\x7a\xa2\xb5\xc7\x21\xb7\x78\x07\xa5\x45\x93\x56\x8d\x2e\xc4\xa9\x12\xac\x3a\xeb\xcd\x31\xc8\xbb\x65\xa5\x77\xeb\x4a\xc5\x31\x75\x82\x93\x2e\xad\xba\xe5\xeb\x09\xfa\xbb\xcb\x59\x25\xe4\x76\xaa\x6c\xad\xd0\x41\x55\xc0\x12\xce\x18\xcf\x58\x27\xea\x6e\xe3\x61\x6b\xc4\xa2\xb4\xd0\x92\x3d\x48\xb7\x9e\xbe\x99\x8a\x1e\x13\xba\x3d\x02\x77\x62\x50\xa8\x07\xa9\xa5\x26\x65\x43\x1e\x2b\xfb\x64\xa7\xef\xe4\xdb\x04\x4e\x3c\xa8\xc0\xbc\xdf\x58\xd9\x36\xaf\x0b\x41\x8f\x99\x86\x7a\xb5\x94\xf6\x7a\x98\xcc\xd2\xee\x84\xce\x15\x31\x20\xda\xc6\xaa\x8c\x17\x65\x4e\xa9\x5c\x48\xb9\xd4\x7c\x0b\xa9\x4f\x3a\x6b\x94\x74\x7b\xf5\x67\x96\x69\xe8\xea\x75\x93\x75\xce\x2b\x59\x8c\xff\x07\x00\x00\xff\xff\x61\x47\x2a\x29\x64\x0a\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 2660, mode: os.FileMode(438), modTime: time.Unix(1508197936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x3d\x73\xf2\x30\x0c\x00\xe0\xdd\xbf\x22\x77\x2c\xef\x3b\xa0\x58\x1f\xfe\x62\xec\xde\xa9\x43\xe7\x14\x42\xc9\x15\x08\x17\xc2\x51\xfa\xeb\x7b\x26\x07\xb1\xba\xe9\x39\x49\x60\xc9\xce\x62\xb1\xa8\xb6\xdd\xd0\x5e\x9b\xfd\xbe\xba\x76\x47\xb4\xd5\xe5\xb4\x69\xc6\xb6\xfa\x87\xa1\xb6\xa9\x26\x8b\xa1\x42\x59\x31\xfd\x37\xb9\xf8\xb5\x1f\xda\xaa\x3b\x6e\xfb\x55\xb5\x1b\xc7\xd3\x79\x55\xd7\x9f\xdd\xb8\xbb\x7c\xc0\xba\x3f\xd4\xeb\xa1\xf9\xb9\x2d\x0f\xcd\x77\xfd\xde\x1d\x37\xfd\xf5\xfc\x76\xba\xbd\xec\xfb\xf5\x57\x3b\x18\x83\x0c\x68\x03\x08\x38\x5b\xc4\x64\x28\xc7\x0c\x18\x13\x20\x79\x45\x17\x34\xa3\x11\x0b\x21\x00\x51\x02\xbb\x9c\x63\x72\xce\x78\x07\xce\x01\x72\x04\xbb\x9c\xe3\x22\xe3\x79\xce\x78\x9e\x32\x1e\x10\x13\xa0\xc8\xfd\xbf\x14\xa3\x62\x4c\x8a\x29\x8f\x80\x40\x8e\x81\x79\x1a\x48\x00\x83\x05\x87\x80\x31\x68\x46\xc5\xa4\x8a\x49\xbc\x66\xd0\x2c\x7a\x19\x28\x95\xe2\xe2\x87\xf2\xd0\x05\xf2\x6c\x0f\x22\xe6\x91\x35\xbd\xa2\xb7\x9a\x34\xd3\x3b\x75\x86\xc9\x49\xdb\xe1\x1f\xb3\x41\x17\xa6\x0b\x60\x20\x2b\x0f\x92\x58\x88\xa9\x14\x91\x9d\xe8\xf3\x4d\x22\x47\xa5\x54\x4a\x54\xa5\xa0\x92\xea\x93\x67\x5f\xf2\xe0\xa4\x44\x2c\x80\xc4\x06\x13\x02\x31\x41\xcc\x0b\x55\x8a\xa5\xf2\x82\x0a\xd1\x53\xc8\xf9\x1d\x96\xba\x6f\xfe\x6e\x81\x40\x80\x91\x35\xbd\x66\x54\x4c\xd6\x50\xfe\x2a\xf2\x43\x93\x7c\x86\x42\x1e\x7f\x03\x00\x00\xff\xff\x3c\xca\x01\x8f\xac\x03\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 940, mode: os.FileMode(438), modTime: time.Unix(1505651653, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbd\x4e\xc3\x30\x14\x47\xf1\xdd\x4f\x61\x29\x0b\x0c\xfc\x7d\xaf\x73\xfd\xd1\x8c\xec\x4c\x0c\xcc\x26\xb8\xd4\x22\x8d\x2b\xd7\x28\x0d\x4f\x8f\x90\x18\xba\x9d\x23\xfd\x86\x61\xd0\xc7\xd2\xf2\x96\x96\x45\x6f\x65\x0d\x3a\xdf\x7a\x4b\xfa\x81\x83\x21\x6f\x2c\x71\xd0\x96\x26\x17\x1e\xd5\x1f\x7d\xa9\x2d\xeb\xb2\x1e\xeb\xa4\x4f\xbd\x5f\xae\x93\x31\x9f\xa5\x9f\xbe\xdf\x31\xd7\xb3\x99\x5b\xfa\xd9\x9f\xce\xe9\x66\xde\xca\xfa\x51\xb7\xeb\xeb\x65\x7f\x5e\xea\xfc\x95\x9b\x52\x3c\x22\x12\xd8\xc2\x89\x12\x02\x73\x04\xd3\x88\xa0\xbc\x40\xe0\x04\xd6\x8d\x77\x2d\xca\x3b\x38\x8b\x43\x84\x1d\xf9\x7f\x98\x22\xd8\x89\xb2\x14\x20\x1e\x7c\x10\xb0\xfc\x06\x00\x00\xff\xff\x15\x4c\xc2\xac\xc3\x00\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 195, mode: os.FileMode(438), modTime: time.Unix(1497726486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\xbd\xae\x13\x31\x10\x05\xe0\xde\x4f\xb1\x52\x1a\x28\xee\xd9\x39\xe3\x9f\xb1\x53\xd2\x53\x51\x50\x87\x90\xcb\x8d\xc8\xcd\x46\x49\x50\x08\x4f\x8f\x6c\x92\xfd\xa1\x58\x69\x3e\xad\xc7\x1e\xf9\x78\xb5\x5a\x75\xaf\xfb\xf3\xee\xb6\x39\x1c\xba\xdb\xfe\x68\xdd\xe5\x74\xef\x3e\xd0\x7a\x4a\xaf\x42\xeb\x84\x6b\x9f\x3e\xba\xba\xf0\xf3\x70\xde\x75\xfb\xe3\xeb\xb0\xee\xde\xae\xd7\xd3\x65\xdd\xf7\x3f\xf6\xd7\xb7\x5f\xdf\xb0\x1d\xde\xfb\xed\x79\xf3\xe7\xfe\xf2\xbe\xf9\xdd\x7f\xdd\x1f\xbf\x0f\xb7\xcb\x97\xd3\xfd\xd3\x61\xd8\xfe\xdc\x9d\x9d\xa3\x87\x65\x30\x67\x30\x58\x53\x81\xfa\x82\x54\x2a\x32\x11\x11\xfd\xb3\x2c\xd0\xa0\x2e\x08\x4c\xa0\x4a\x68\x28\x4d\x06\xd5\xf4\xbf\xa2\x54\x91\x19\x94\x04\x7a\x71\x91\x60\x20\xbc\x22\xd2\x45\x05\x53\x80\x06\x41\x2c\x93\x08\x95\x38\x32\x12\x21\x34\x59\x86\xcf\xe0\xa3\xd1\xda\xb8\xb5\x79\x64\x24\x94\x3a\xb2\x7e\x69\x54\xf1\xe0\x44\x55\x0f\xf5\x4d\xd9\x90\x04\x14\x73\x29\x20\x40\x3d\xe4\xe5\x59\x69\x8c\x2e\x45\xc4\x88\x10\x40\xc9\x73\x94\x07\x48\x0f\xea\x1c\xfe\x01\x8d\x0a\xe3\x0c\x65\xfe\x87\x45\x5c\x4a\x20\x0b\x58\x37\x8c\xb6\x64\x5e\x30\x97\x05\x8b\x38\x4a\x40\xa8\xa7\x19\x52\x9a\x54\xa0\x7c\x4a\x35\xb7\xe8\x26\xa9\xe8\x48\x6f\x60\xcd\x98\xfc\x97\x64\xa9\x93\xcf\xa4\x2d\xf5\x00\x9a\xc0\xb7\xb4\x47\xd6\x9b\x0e\x69\x49\x5b\x32\x4f\xf4\xd0\xfa\x94\x0c\xa4\x41\x7d\xac\xb1\xb0\xb0\x4d\xa0\x92\x41\x4d\x7f\x03\x00\x00\xff\xff\x8c\xc8\xff\xde\xec\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 748, mode: os.FileMode(438), modTime: time.Unix(1508197018, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x3f\x6f\xc2\x40\x0c\x05\xf0\xfd\x3e\xc5\x49\x2c\xed\xc0\xcb\xd9\x3e\xdf\x1f\xc6\xee\x9d\x3a\x74\x4e\x21\x94\xa8\x40\x50\x08\xa2\xf4\xd3\x57\x51\xab\x90\x63\xfc\xe9\x59\xcf\x92\xbd\x58\x2c\xec\xb6\xed\x9b\x6b\xbd\xdf\xdb\x6b\x7b\x8c\xf6\x72\xda\xd4\x43\x63\x9f\x28\x56\xe4\x2a\x76\x14\xad\xa3\x95\x84\x67\x33\xce\xbe\x76\x7d\x63\xdb\xe3\xb6\x5b\xd9\xdd\x30\x9c\xce\xab\xaa\xfa\x6c\x87\xdd\xe5\x03\xeb\xee\x50\xad\xfb\xfa\xe7\xb6\x3c\xd4\xdf\xd5\x7b\x7b\xdc\x74\xd7\xf3\xdb\xe9\xf6\xb2\xef\xd6\x5f\x4d\x6f\x0c\x09\xc8\x45\x78\xa8\x33\xde\x21\x46\x30\x67\xa8\x18\x1e\x03\x01\xa5\x0c\x62\x2d\x19\x0a\x6a\x2c\x99\x4c\x50\xa8\x82\x24\x81\x88\x0b\xf9\xb9\x38\xcc\x95\x26\x05\x01\x33\x15\x62\x43\xe2\x41\xd1\x41\x09\x94\xdd\x9d\x02\x99\x29\xc1\x2d\x67\x60\xd5\x29\x23\x52\x84\x7b\x0f\x05\x05\xfb\xf4\xe0\x5c\x5a\xe9\xc1\x62\x48\x23\x34\x20\x07\x10\x8b\xa1\x4c\x60\x61\xa4\x71\xdd\x5c\xc1\x15\xe2\x49\x24\xf9\xaf\xa7\xb0\xff\xb7\x47\x64\x50\x92\x92\xa1\x64\x2a\x98\x9d\xe1\xf1\x83\x61\x3c\x2f\x34\xfd\x06\x00\x00\xff\xff\x61\x95\xb6\x68\x3d\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 573, mode: os.FileMode(438), modTime: time.Unix(1508197927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcb\xb1\x6e\x83\x30\x18\xc4\xf1\xdd\x4f\x61\x29\x4b\x3b\xe4\xfc\x9d\xed\xcf\x06\xc6\xee\x9d\x3a\x74\xa6\x94\x34\xa8\x04\x22\x42\x45\xd2\xa7\xaf\x98\xa0\xdb\xfd\xa4\xfb\x1f\x0e\x07\x7b\xea\xa6\x76\xa9\xfb\xde\x2e\xdd\x50\xd0\xb6\xf7\x79\xaa\xed\x13\xb3\xa3\x38\x2f\xcc\x56\x58\x85\xf4\x6c\xd6\xef\xeb\x38\xb5\xb6\x1b\x4e\x63\x65\xcf\xf3\x7c\xbd\x55\xce\x7d\x75\xf3\xf9\xe7\x03\xcd\x78\x71\xcd\x54\xff\x3e\x8e\x97\xfa\xee\xde\xbb\xe1\x73\x5c\x6e\x6f\xd7\xc7\x4b\x3f\x36\xdf\xed\x64\x0c\x03\x0a\x01\x3d\x34\x9a\x28\x20\x0b\x50\x02\xf2\x86\x04\x06\x31\x29\x22\x42\x23\xbc\xdf\xa6\x86\xdd\x8e\x26\x29\xd4\x83\x52\xc0\x97\x3b\xe8\x1e\xd4\x60\x18\xb8\xb6\x48\x84\x1c\x77\xf0\xaa\x86\x9a\xa1\x0a\x86\x08\x46\xd9\xa8\xa0\x2f\xfe\x31\x88\xf1\x12\x91\x4b\xb0\xcc\xf0\xb2\x32\x23\x26\xb0\x5c\xdb\xbf\x00\x00\x00\xff\xff\xa2\x64\xaa\x88\x43\x01\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 323, mode: os.FileMode(438), modTime: time.Unix(1508197942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\x3f\x93\xda\x30\x10\x05\xf0\x5e\x9f\xc2\x33\xd7\x24\xc5\x3d\xef\x5b\xed\xea\xcf\x95\xe9\x53\xa5\x48\x4d\x08\x97\x63\xc2\x01\x03\x64\x08\xf9\xf4\x19\xf9\x0c\xb6\x0b\x66\xf6\x87\x64\xe9\x79\xbd\x4f\x4f\x4f\xdd\xeb\xf6\xb4\xb9\xae\x76\xbb\xee\xba\xdd\x17\x76\xe7\xe3\xad\xfb\xc4\xdc\x53\x7a\x15\xe6\x4e\xf8\x12\xd3\xe7\xd0\x76\x7e\x3d\x9c\x36\xdd\x76\xff\x7a\x78\xe9\xde\x2e\x97\xe3\xf9\xa5\xef\x7f\x6d\x2f\x6f\x7f\x7e\x60\x7d\x78\xef\xd7\xa7\xd5\xbf\xdb\xf3\xfb\xea\x6f\xff\x7d\xbb\xff\x79\xb8\x9e\xbf\x1d\x6f\x5f\x76\x87\xf5\xef\xcd\x29\x04\x46\xe4\x02\x16\x83\xd9\x80\x0a\x8d\x15\xa9\x36\x14\xc2\xe1\xf1\x5e\x56\xa8\x69\xd0\x88\x5a\x60\x15\xb4\xa1\xae\x43\xad\x0c\x26\xc8\x19\xaa\x09\x6a\x75\x2e\x97\x87\x0a\xaa\x06\x27\x68\x44\x54\x38\x83\x2b\x98\x0c\x1a\x09\xf5\x87\x4c\xe0\x75\x12\xa1\x32\x2d\x3a\x5b\xd8\xa6\x16\xdd\x72\xdb\xfe\xa0\x13\x4a\x7d\xb0\xfd\xd2\x43\x35\x82\x13\x55\x23\x34\x0e\x2a\x19\x49\x40\xc9\x21\x19\x5a\x1a\xc8\xf3\xbd\x52\xf7\xf1\xdf\x0c\x97\x90\x1c\xee\x30\x03\xa5\x8c\x20\xdb\xb9\x73\xe8\x1c\x71\x84\xba\xc2\xe6\xa8\x73\xb0\xca\x4c\x2a\x1a\x52\x02\xd9\xfa\x6c\xa0\xe7\x25\xcb\x82\xa5\x2e\xd8\x4e\x6a\xd1\xe3\xd0\x2f\x96\x32\x31\x0d\xb1\x29\x06\x6b\xc9\x32\x52\x9a\x54\xa1\xbc\x4b\x63\x06\xdb\x18\x8c\xd4\x32\x4c\xc2\xa4\x96\x90\x24\x54\x09\xad\x50\x6f\xf3\x63\x60\x16\x44\xf9\x58\x9d\x33\x2e\xb9\xdc\xdc\xae\x6d\xf7\x31\x0d\x29\x48\x1b\x9d\xa1\xd1\xdb\x17\xa4\xe7\xa1\x9f\x31\x7e\x3c\xdc\x98\xc0\x6a\xc8\xba\x50\x5c\xc8\x02\x2b\x87\x77\x51\x29\xa0\xa6\xd1\x15\x2e\x60\x99\x2b\xe7\x49\x0a\x8a\x4c\x34\xb8\xfe\x0f\x00\x00\xff\xff\x0f\x54\x7d\xe2\x92\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 914, mode: os.FileMode(438), modTime: time.Unix(1508197993, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x31\x6f\xdb\x30\x10\x05\xe0\x9d\xbf\x42\x80\x97\x76\xf0\x89\xef\x8e\x47\x1e\x3d\x76\xef\xd4\xa1\xb3\xea\x28\x8d\x50\xc7\x32\x14\x05\x6e\xfa\xeb\x0b\xd6\x8d\x45\x66\xd3\x87\xe3\x13\xa5\x47\xee\x76\xbb\xee\x71\x5a\xc6\xeb\x70\x3a\x75\xd7\xe9\x6c\xe8\x5e\x2f\x0f\xc3\x3a\x76\x9f\x90\x7a\xf8\x9e\x3d\x52\xe7\x71\x90\xf8\xd9\x95\xc5\x5f\xe7\x65\xec\xa6\xf3\xe3\x7c\xe8\x9e\xd6\xf5\xf2\x72\xe8\xfb\x9f\xd3\xfa\xf4\xfa\x83\x8e\xf3\x73\x7f\x5c\x86\x3f\x6f\xfb\xe7\xe1\x77\xff\x7d\x3a\x3f\xcc\xd7\x97\x6f\x97\xb7\x2f\xa7\xf9\xf8\x6b\x5c\x9c\x83\x10\x7c\xa2\x40\xea\x5d\xf0\x94\x12\x31\x67\x52\x71\x5c\x06\x42\xb0\x4c\x60\x6d\x19\x1b\x6a\x6a\x69\x4e\x99\x60\x42\x21\x11\x52\x7c\x17\x60\x84\x04\x17\x95\x54\x09\x62\xe4\xf7\xdb\x33\xab\xbe\x4f\xa2\x6c\x93\x28\xd5\x84\x03\x13\x6b\x70\x10\x10\xab\x10\x02\x41\xc5\x41\x02\x21\x79\x52\x90\xdf\x57\x28\xc1\x3b\x85\x38\xd7\x12\xbf\xc9\xea\x9c\x35\x39\xa0\xec\xdc\x32\x36\x8c\xbe\x25\x6f\x8c\xe5\x93\xed\x83\x73\x6b\xc5\x07\x8b\x83\xa6\xdb\xdf\x7a\xb2\x5c\xab\x14\x5f\x91\xd9\xdf\x18\xcb\xb1\x41\xac\x51\xae\x15\x9a\x95\x01\x8d\x9a\x5c\xb8\xe7\x72\xa4\xd2\xf5\x06\xab\x00\x96\x5a\x9a\x1c\x32\x88\x85\xc9\x4a\xbd\x8d\xac\x56\xa9\xab\x12\xdf\x05\xc9\x04\x6b\xcd\xd5\x9b\x6e\x0e\xff\x1d\x28\xfd\xbb\x55\x2d\xcd\x71\xb9\xcb\x91\x80\x50\xf6\xad\x14\xf1\x37\x00\x00\xff\xff\x8d\x5b\x32\xf5\x56\x03\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 854, mode: os.FileMode(438), modTime: time.Unix(1508197996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x31\x73\xdb\x3c\x0c\xdd\xf3\x2b\x74\x97\xe5\xfb\x06\xc1\x96\xdd\x26\xbd\x8c\xdd\x7b\x1d\x3a\x74\xa6\x49\x48\xe2\x99\x04\x58\x02\x8a\xac\xfc\xfa\x1e\x1d\x27\xae\x6a\xe9\x9a\xd3\xc6\x07\xe0\x11\x0f\x8f\xd0\xfd\xfd\x7d\xd5\xb3\xa8\x54\xa3\xa7\x66\x5b\xe1\x49\xb3\xa9\xfe\x6b\x1e\x37\xcd\x76\xb3\xdb\x36\x8f\xd5\xb6\x79\xda\x3f\xfc\x7f\x57\x02\xbf\x71\xc6\xca\x53\xcb\x4f\x55\xaf\x9a\xe4\x69\xb3\xe9\xbc\xf6\xc3\x01\x2c\xc7\x8d\xcd\xe6\x65\xaa\xa3\x39\x6d\x7e\x7a\x72\x3c\xca\x8f\x34\x7d\x0d\x6c\x8f\x98\xef\xee\xb6\x70\xfe\x2a\x43\x32\x62\x16\x88\xde\x66\x16\x6e\xb5\xa4\x5e\xd1\x94\x04\xe4\x38\x25\x9c\x1f\x67\x01\x89\x26\xab\xd8\x8c\x48\x6b\xc9\x2f\xfb\x87\xe6\x4b\xf3\x00\xcf\x0c\x51\xd0\x92\x03\x42\xfd\x03\xfe\xdc\xec\xf6\xfb\x4f\x2b\xf0\x21\xf0\x01\x46\x34\xda\x63\x5e\x21\xb0\x86\xdc\x64\xf3\x20\xbd\xb0\x33\x70\xf4\xd4\xcd\x71\x47\x60\x99\x14\x49\x21\x65\x76\x60\xa3\x40\x14\xba\x09\x62\x42\x62\xc5\x19\xbf\xed\xd9\x5b\x5c\x63\x5e\x00\x81\xc4\xa8\x9d\xd7\x08\xbe\x70\x8f\x24\x30\xbe\x8e\x60\x5e\xe5\x0c\xd7\x02\x9d\x51\x1c\xcd\x04\x11\x45\x90\x3a\xcc\x10\xfc\x33\x2e\xc4\x5a\xa6\xd6\x77\x90\x8c\x48\xe2\xac\x33\x32\x87\x29\xf0\x04\xa2\x46\xbd\x05\x73\x34\xd1\x78\x45\xdb\x13\x07\xee\x3c\xce\xa9\x1d\x3e\x97\x06\xcc\xa0\x3d\x9c\x0e\x7c\xba\xe1\x73\xd1\x41\x44\x35\x82\xb9\x44\xae\x19\xc4\x51\x51\xb4\x55\xb2\xe2\x67\x40\x8b\xe8\x0e\xc6\x1e\xaf\x79\x75\xcf\x7d\x5c\x8e\x11\x34\xd9\xf6\x2b\x14\xef\x51\x4b\x12\x76\xb7\x4a\xf9\xd8\xd5\x52\x47\xa1\xba\x0c\xe5\x55\x87\x17\x9c\x9b\xcb\x93\x78\x87\x39\x15\x5f\x07\x1e\x9c\x49\x69\x86\x07\x6f\x91\xa4\xf8\x29\xa6\x95\x6b\x15\x51\xe9\x96\x3d\x42\xcf\x1a\x8d\x0f\xf3\xd3\x25\x89\xb8\x6d\xbd\xc5\x8b\x47\x96\x49\x98\xde\x70\x69\x4f\x10\xe5\x1d\x48\xd9\x5b\x0c\x5e\x74\xe1\x75\xfe\x1a\x30\x4f\x57\xc3\xe7\xb5\xe2\x1f\xf2\x9d\x6c\x61\x17\x1d\xcd\xd4\x91\xef\x0b\x67\x97\x11\xfe\xf5\xba\x04\x55\x3d\x75\x52\x8b\x84\x65\xa3\x5d\xfc\x7a\x5b\x50\x39\x63\xed\xa3\xe9\x50\x40\xea\x95\x16\x4a\x10\xba\x0e\x5b\x07\x4e\x4e\xeb\xd3\x52\x1f\xb0\xbe\x78\xf9\x1f\x5b\x45\x7d\xc4\x45\xaf\xe9\x71\x07\x29\xe8\x4d\x8f\x83\x5f\x18\xc2\xf0\xa1\x15\x39\x3a\xbb\x76\xe3\x02\x99\xb0\x36\xbb\xf3\xcf\xa1\xd6\x32\x5b\x29\xfd\xcf\xa4\x1b\xa5\x6c\x3d\x38\x2f\xef\x95\xf4\x71\x3c\x3f\x5b\xcb\x44\x68\x55\x51\x96\xf1\x37\xcf\xfe\x0e\x00\x00\xff\xff\x0c\xaf\xcc\x83\x96\x06\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1686, mode: os.FileMode(438), modTime: time.Unix(1508198005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9b\x4d\x73\xe2\x3c\x12\xc7\xef\xf3\x29\x52\x35\x97\xdd\x03\x8a\x5e\x8c\xc1\x73\xdc\xfb\x9e\xf6\xb0\x67\x59\x12\xa0\xc2\x96\x3d\x92\x80\xb0\x9f\x7e\x4b\x86\x4c\x20\xc8\xe2\xcf\xf3\x24\x97\x94\xfb\x67\xa9\xbb\xd5\x2f\xb2\xe5\xfc\xfc\xf9\xf3\x6d\x37\x84\x18\xde\x4e\xd6\x31\xfa\x16\xc6\xf3\xdb\x3f\xd8\xea\x9d\xd1\x77\x4e\xd9\xea\x8d\xb2\x5f\xa2\xfe\xe7\x8f\x84\xfd\x7b\xf0\xe6\xcd\xba\xcd\xf0\xeb\x6d\x17\xe3\x18\x7e\xbd\xbf\x6f\x6d\xdc\x1d\x5a\xa2\x86\xfe\x5d\x79\xf9\xbf\xf3\xa2\x97\x1f\xef\xff\xb5\x4e\x0f\xa7\xf0\x9f\xf1\xfc\xaf\x6e\x50\x7b\xe3\x7f\xfc\xa0\x64\xfa\x7d\x93\x0b\x4a\x29\x23\x72\xd1\x07\xa3\xb7\x86\x38\x13\xbf\xcb\xb4\x9a\x15\xf2\xc2\x8d\xa2\x20\xab\x0a\xb2\x65\x41\x56\x17\x64\xab\x82\x6c\x5d\x90\x35\xf3\x32\x46\x0b\xb2\x82\xd3\xd8\xac\x5f\x72\x17\x89\xd4\x81\x91\x3e\xb8\xb4\x6a\xf7\x97\x39\xe9\x83\xd4\xe1\x91\xe7\x19\xde\x4b\xfd\x78\x55\x89\xcc\xb5\x68\x8f\x36\x9e\xc9\xe9\x12\x16\xf7\x42\xed\xcc\xc7\xe1\xdb\x8c\xda\x7d\x7c\xa7\xc2\xe3\xb0\x17\x2b\x1e\xd4\xcd\x1a\x67\xf5\x18\x88\x8c\xba\x8f\xf7\xd7\xf7\x72\xa1\xb4\x5b\xb8\x40\xa4\x8e\x46\xed\x88\x36\x5f\x42\xef\xe5\x99\x51\xb6\x18\xfd\xa0\x89\x1e\x88\x0e\x23\xe9\x47\xd2\x5b\xe5\x87\x30\x6c\xbe\x0d\x75\xa1\xf9\x4b\xb4\x78\x89\xae\x5e\xa0\xf9\x4b\x7a\xf3\x97\xf4\xe6\x2f\xe9\xcd\x5f\xd2\xbb\x7a\x49\xef\xea\x25\xbd\xab\x97\xf4\xae\x5e\xd4\x7b\xf9\x12\x5d\xbf\x44\xaf\x31\xba\xcd\xa7\x76\x3b\x97\xda\x6d\x36\x87\x5b\xeb\xb6\x53\xc2\xe5\xe7\xe8\x84\xa0\x6c\x21\x09\xd3\xfe\x98\x93\xa8\x59\xc9\x36\x23\x71\x4c\xd0\x6a\x61\x66\x24\x75\x76\x9e\x8b\x64\xfe\x9e\xec\x3c\xbc\x5d\xa8\xc1\x4f\xbd\x67\xb4\x64\x4c\x7f\x64\x28\x31\x22\xd4\xe7\x58\x02\xa2\xaa\x32\x75\x72\x81\x91\x93\x0b\xd9\xf2\xd8\x3a\x11\xd4\x8e\x72\x4a\x39\x17\x7c\x3d\xcf\x9d\x67\x57\xe5\x3c\xbb\x2a\x17\x49\xce\x8f\x81\x04\xe3\x8f\xd6\x6d\x17\xe1\x7c\x3f\x91\xca\x54\x51\xf5\x10\x42\xaa\xd4\xc9\x95\x24\xd1\x74\xa6\x37\xd1\x9f\x67\x82\x4c\x49\xb5\x33\x44\xcb\x28\x7b\xe9\x63\xd6\x62\xa5\x5d\x4e\x15\x1d\x78\x4d\x64\x1f\x1a\xd2\x07\xa3\xdc\xfd\xc4\x3a\x54\xcb\x86\x74\xea\x4c\xba\xce\x9d\xbe\xcb\x9a\x7a\x49\xba\xc1\x65\x64\x3b\xf6\x3c\x2a\xfe\x40\xbc\x08\xcd\x2d\xc6\x55\x92\x59\x8c\xab\x24\x13\xd4\x93\x84\xcf\x8e\xc6\xb3\xa3\x0d\xfd\x28\xa3\xf9\x50\x3b\xe9\xb6\x86\xa8\x6e\x38\x68\x39\x8e\xf7\xf6\xde\x31\x8c\x44\x2f\x37\x1b\xab\x7a\xe9\xe4\xd6\xf8\x6f\xa8\x8b\xd6\x1d\x0e\x3d\xd1\xb3\x15\x43\x0d\x7e\x24\x21\x96\xc4\xe6\x23\x92\x3e\xd8\x28\xf5\x26\x90\x6d\xd7\x6a\x97\xea\x55\x1e\x1f\xe1\x96\xac\x46\xb8\x0b\xaa\x11\x6e\x3c\x2a\xa5\xeb\xa8\xc8\x91\xa6\x10\xbc\x75\x86\x6e\x85\xfc\x7d\xc8\x44\xa5\x6e\xc5\xc9\x05\x4e\x59\xfa\x99\xcd\x61\xdd\x2e\x4b\xb2\xa0\x76\x8c\x32\x96\x76\x7b\x1c\xe4\x56\x10\xb7\x16\x45\x9d\x6e\x38\x4c\xbf\x86\x61\xf3\x36\x85\x7a\x76\xc3\x25\x4b\x30\x0e\xf3\x0b\xa3\xbc\xc2\x38\xcc\x2f\x8c\x0a\x70\xbc\x0a\xd4\xaf\xc2\xc6\x63\x15\xb4\x1e\x8c\xd3\x06\xe3\x38\x66\x2f\x07\xfd\xc2\x05\x14\x07\x4c\x60\xf1\xc2\x04\xb8\x6e\x42\x08\x90\xc3\xc6\xab\x18\xe6\xbf\x8a\xd7\x18\x27\x28\xc4\x2d\xcb\xb5\xe2\x86\xc3\xf4\x5b\x62\xf9\xcb\x96\x15\x36\x6f\x5d\x61\x76\xac\x40\x3b\x56\x02\xb3\x63\x05\xc6\xfd\x9a\x61\x71\xb0\x06\xd7\x0d\xac\x7f\x6c\x0d\xc6\xfd\x1a\xcc\xf3\x86\x62\xe3\x35\x0c\x1c\x0f\xf3\x33\xa7\x0c\xb2\x97\x53\x0e\x72\x02\xaa\x7f\x9c\x42\xf9\x9b\x0a\x25\xd2\x3f\x12\x87\xd8\x3b\x15\x54\x88\xe3\x14\xe5\x90\xb8\x4a\x6d\x0b\xf1\x5f\x6a\x5b\x18\x27\xa0\x75\x63\x54\x70\xcc\xcf\x02\xd4\xaf\xf4\x7c\x72\xc7\x55\xe0\xbc\xa0\xbd\x15\xc5\xc6\xab\x04\xa6\x5f\x05\xf5\x69\x46\x97\xd0\xbe\x84\xd1\x25\xb4\x0f\x63\x74\x09\xc6\x7d\x0d\xed\x73\x12\x87\xc5\x5f\x0d\xf5\x41\x46\x57\x14\x5b\x8f\x15\xd4\xa7\x19\x5d\x41\xfd\x83\xd1\x35\x43\x39\xcc\xde\x35\xb4\xcf\x49\x1c\xe6\xe7\x35\x18\xf7\x58\xff\x60\xb4\x01\xf3\xb2\xe1\xcf\xeb\x9a\xa0\x6b\xb6\x06\xea\x9a\x48\x5e\x01\xfa\x74\xe2\x04\x50\x77\x13\x57\x01\xf5\x2f\x71\x35\x50\x9f\x27\x0e\xd4\x6f\x05\x8e\xb7\x62\xcf\xd7\x37\x71\x6b\xc8\x8e\x86\x36\x18\x97\x32\x0e\xe2\x38\xa4\x5f\xc3\x6a\x60\xff\x9c\xb8\x15\xd0\x17\x12\xd7\x40\xeb\xdb\x70\xa4\xff\x5e\x38\x64\x3d\x1a\x8e\x3c\xa7\x88\xf4\x34\x88\xd8\xcb\x28\x15\xc0\xfe\x2f\x71\x4b\xa0\xbe\x5c\x38\x20\xfe\x18\xa5\x50\x9c\x4e\xcf\x3d\x40\x5e\x4e\xcf\x1f\xd8\x78\x4b\xcc\x5e\x86\xea\x87\xd4\x7b\xc1\x28\x67\x48\x9c\x32\x8a\xe5\x79\xe2\xca\xeb\x71\x72\x81\xe9\x02\x50\x4f\x03\x71\xda\x3c\x79\x51\xf2\xc5\xf1\xe2\x06\xe2\x96\x2b\x05\xfc\x2d\x57\x32\xf4\x8b\x13\x45\x07\xdf\x70\xc5\x05\xbb\xe5\x30\x3b\xaa\xa2\x83\x6f\x39\xcc\x7f\xcb\xe2\x86\xf8\x86\x03\xe7\x5d\xa2\xf3\x82\xf6\x2e\x8b\x89\xf6\xc5\xd5\xe0\x78\x75\xf1\x81\xfb\x8b\x5b\x83\xeb\xd6\x50\xcc\xde\xf2\x83\xe0\x0d\x07\xfa\xb9\xc1\xf4\x63\x14\x9b\x97\x51\x2c\x3f\xd2\x56\x17\xe2\xc0\xfc\x60\x02\xd4\x4f\x60\x79\xf9\xa4\x30\x7f\x71\x60\x7e\xb0\x1a\xab\x2f\xac\x2e\xd9\x61\x8e\xe4\x68\x7d\x3c\xc8\xce\x48\x1f\x77\xf7\x2f\x9e\x37\x4f\x4f\x54\xb4\x0d\x0a\x7e\x71\x9e\x60\xf8\xd5\x79\x82\xe1\x97\xe7\xda\xca\xad\x1b\x42\xb4\x2a\x90\x70\x18\xc7\xc1\xc7\x19\xd2\xe4\x4e\x9a\x8c\x72\xa4\xe8\x09\x73\x20\xc7\xc1\x47\xf3\x31\x1d\x1e\xcd\x0c\xbd\xe9\xcc\xc7\xc3\x91\xd5\x66\xee\x7c\x62\xfb\x80\x6e\xcd\x80\x59\xbb\x35\xc3\xd1\x78\x8c\xdd\x3d\x9e\xdb\xee\x1e\xbf\xba\xb0\x8b\xb6\xab\x81\x33\x4a\xbb\x68\xcf\xc8\x59\xa6\x5d\x40\x87\x5b\x37\x58\xe9\x78\xcb\x2e\x82\xe3\xc8\x68\x7f\xb0\xe2\x68\xec\x72\x0a\xa9\x4c\x20\x61\x50\x56\x76\x33\xae\x7b\x06\x12\x17\x64\x54\x77\x71\x62\xdd\xc6\x78\xe3\x94\x21\xdd\xa0\x64\xb4\x83\x23\x9d\x3d\xde\x9f\x53\xee\x8f\x70\xc2\xec\x8f\x70\xba\xec\x8f\x70\xb2\x74\x2d\x23\xa7\xd3\x89\xf4\x81\xc8\xbd\xd4\xee\xfe\xf0\x7e\xd2\xd7\xe7\xbe\x8c\xe9\x02\x3f\x99\x96\x78\xa3\xfb\xc1\x69\x32\x9d\xbf\xe5\x67\xe8\xc9\xe3\xb7\x36\xfd\xd0\xda\xce\x90\xd1\x8e\x86\x48\x6f\xe7\x92\x28\x73\xb0\xdb\x07\x17\x4d\x88\xb3\x67\xc7\x97\x2f\x7d\x86\xcd\xc6\x2a\x23\xc7\x31\x5c\x5c\xfe\x40\xf8\x43\x67\xca\xd8\x00\x1c\x21\x17\x98\x4c\x3c\x0c\xce\x04\x13\xa3\x75\xdb\xb0\x68\x1d\x27\xe9\xae\xcf\x98\x78\x7e\x87\x3a\xbf\x7a\x87\x6e\x97\x2f\xde\xb1\xdb\x23\x73\x8c\xde\x90\xcd\x30\xc4\xd1\x5b\x17\x47\x6f\xb4\x55\xf7\x6e\x19\xbd\x39\x5a\x73\x7a\x88\x19\x2f\xf5\xa3\x9f\x73\x5f\x87\xa4\x31\x7d\xd2\x44\xfe\xc9\xb9\xfc\x02\x78\x93\xaa\x7b\x20\x27\x13\x08\xd0\xa0\x82\xda\x99\x5e\xde\x0e\x96\x89\xf9\x60\xd4\xc1\x9b\x4c\xd0\x5e\x05\x9b\x4e\x86\x5d\x94\xdd\xde\xba\xed\x37\xf9\x55\x57\x54\x9b\x4f\xb7\x07\xe9\x74\x3b\x14\xdb\xc9\x1f\xf6\x64\x1d\xc2\x5d\x98\xf2\x29\xf7\x3d\x3b\xc3\xb8\xb9\x8f\x09\xae\x92\xcc\xf1\xff\x55\x92\xf9\x98\x20\x8c\x67\x67\xe2\xac\x3e\x93\x54\x76\x73\xdd\xfa\x22\x37\x07\x3f\x8c\xe6\xc9\x12\xfe\xee\xa1\x05\xf8\xdd\xff\x1d\x26\x93\x1a\x21\x9c\x1e\x23\x3c\xc4\xc1\x1b\x25\xa3\xec\x86\xad\x37\xc7\xcf\x5e\x30\x5d\xfe\x7d\x90\x9d\x8d\xb3\x93\x1f\xfc\xd1\x9c\xc9\x49\xc6\x30\xb8\x19\x26\x52\x12\x42\x47\xe4\x9e\xe8\xb3\x93\xbd\x55\x24\xda\x54\xdb\x66\xb7\x2f\x5f\x37\x3c\x03\x4d\x67\xd4\xd0\xf7\xd2\xe9\xa7\x6e\x02\xd8\x8c\xbb\xbe\x48\x39\x8e\xe6\x83\xb4\x29\xa5\x10\xe0\x57\x55\x89\x0c\x34\xaf\xdb\x45\x7e\xf0\x73\x85\x24\x86\x8d\xf9\xfc\x06\x25\xec\xe4\x98\xe6\x29\xf6\xcd\x23\xa3\xd7\x5d\xe0\x4d\x4a\x3e\x2d\x9d\xd9\xbb\xf2\xe3\x1b\x1f\x52\x94\xec\xce\xad\xb7\x7a\xda\xc1\xec\x8c\xbf\x0f\xac\xa9\xc8\x3e\x6e\x60\xaf\x13\x60\x2d\xe6\x0a\x63\xdd\xe5\x0a\x63\x8d\xe5\x0a\x63\x3d\xe5\x0a\x03\x95\xf0\x2f\x38\x1d\x73\xf8\xcd\x96\xbe\x5c\x37\xef\x36\xff\xe0\xec\xa5\x99\xaf\xe9\xfd\x50\x37\x8a\x69\x7f\x15\x8e\xa3\x79\x9a\x9b\x57\xf4\xef\x61\x19\xcb\xd2\xfe\x0f\xb0\x0e\x6b\x86\xd3\xff\x05\x10\x3b\x1e\xeb\x39\x60\xda\xa4\x7e\xee\x07\xff\x1f\x00\x00\xff\xff\xc2\xdb\xd4\x92\x51\x30\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 12369, mode: os.FileMode(438), modTime: time.Unix(1508198011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x72\xea\x30\x10\x85\x7b\x9e\x42\x33\x34\xf7\x16\xac\x25\xc1\x40\xa0\x4c\x9f\x2a\x45\x6a\xa1\x1f\xa3\x41\x96\x3c\x5e\x19\xc7\x79\xfa\x0c\x81\x10\x3c\x89\x2c\x33\x2a\xf7\xdb\xdd\xb3\xe7\x68\x3e\x9f\x93\x43\xc0\x88\xa4\xb3\x9e\x51\xd2\xd6\x4a\x44\x4d\xfe\xb1\x4d\xc1\x68\xc1\x29\xdb\x10\xca\x76\xcb\xf5\xff\xd9\x99\x7c\x09\x8d\x26\xd6\x9b\xb0\x23\x87\x18\x6b\xdc\x15\x45\x69\xe3\xa1\xdd\x83\x0c\x55\x21\x1b\xf1\xd1\x2f\x2a\xf1\x5e\xbc\x59\xaf\x42\x87\xaf\x75\xff\xec\x82\x3c\xea\x66\x36\xa3\xf0\xf5\x08\xa5\x94\x53\xbe\x60\xe0\xa0\xbb\x50\x97\x95\xe7\x09\x03\x48\x2e\x27\x40\x46\x65\x21\xb6\xda\x9a\x3c\xf4\xb4\x65\x79\xc8\xf0\xbc\x26\x4e\xd7\xf9\xeb\x38\x53\x34\x03\x89\x16\x54\xe8\xbc\x0b\x42\x8d\x53\xa7\xd5\x14\x50\x46\xa7\xc6\xd6\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x38\xe4\x1c\x28\xed\xec\x49\x37\xfd\x08\xf4\xad\x27\x53\x4e\xcb\xd1\xd5\x59\x2d\x26\x06\x18\xcd\xe1\xda\xf4\x18\x00\xe2\x28\x94\x47\xf0\x3a\xde\xb1\xcb\x9f\x93\x14\xd6\xbf\xce\x02\x8f\x22\xca\x74\x4f\xd2\x06\x53\x82\x42\xd8\xb3\x29\xf9\x98\x72\x62\x90\xb7\x55\x43\xe4\x5e\x1d\x3a\x1c\xb7\x27\x05\xfc\x65\x0f\x46\x11\xf1\x11\x3f\xaf\x0d\x2c\x1d\xdf\x6d\x64\x92\x88\xae\x85\x49\x3f\x6d\x9a\x67\xb9\xca\xb5\x10\x9a\xf2\x33\x00\x00\xff\xff\xde\x5a\x01\x20\x0f\x05\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1295, mode: os.FileMode(438), modTime: time.Unix(1508198014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x32\x31\x10\x84\x7b\x9e\xc2\x12\xcd\xff\x17\xd9\x3b\x0e\x25\x48\x94\xe9\x53\xa5\x48\x6d\xec\xe5\xd8\xc4\xf6\x5a\xde\xe5\x0c\x79\xfa\x88\xa4\x88\x4e\x60\x22\x77\xf3\x8d\x67\x47\xb3\x5c\x2e\xcd\x81\x45\xc5\x54\x4a\x1b\x83\x27\x2d\xd6\xfc\x5b\x3d\x75\xfd\xa6\x1b\xfa\xd5\xc6\xf4\xeb\xed\xe3\xf0\x7f\x71\xf1\xbd\x70\x41\x43\x69\xcf\x5b\x73\x50\xcd\xb2\xed\xba\x91\xf4\x70\xdc\x81\xe3\xd8\xb9\x62\x3f\xcf\x0f\xd1\x9e\xba\x37\x4a\x9e\xab\xbc\xe6\xf3\x73\x60\xf7\x81\x65\xb1\xe8\xe1\xfb\x19\xeb\x94\x26\xab\xc4\x09\x24\x08\x44\x72\x85\x85\xf7\x7a\x49\xf8\x35\x65\x82\x1d\xa5\x71\x26\x3a\x1e\xee\x7c\x71\x25\x34\x88\x8f\x1e\x22\xaa\x15\x2c\x13\x39\x6c\x05\xf8\x24\x10\x65\xaf\xc9\x09\xcd\xc0\x78\x5d\x65\x84\x40\x13\xce\xa4\xc0\x23\xa5\x6b\xf9\x66\x62\x19\x7a\xa9\xef\xab\x75\x2c\x8d\x2e\x4a\x11\xa1\xfe\x8c\x38\x03\x93\x0d\xe4\xff\x5a\xaf\x7a\x97\xef\x20\x1b\xb4\x45\x6b\xbd\x3d\x41\x15\xc7\x49\xc1\xe6\xdc\xbc\xd9\x72\x00\xfa\x11\xe5\x48\x8a\x90\x50\xbf\x02\x00\x00\xff\xff\x21\x60\x66\xf5\x6d\x02\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 621, mode: os.FileMode(438), modTime: time.Unix(1500169983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x3d\x93\x9b\x30\x10\x86\x7b\xff\x0a\xcd\xb8\x49\x0a\x2f\xe2\xe3\xcc\xd8\x65\xfa\x54\x29\x52\xef\x49\x0b\x68\x0e\x69\x89\xb4\x3e\x20\xbf\x3e\x43\x6e\x72\x09\x33\xe0\x9c\x87\x8e\xe7\x79\xdf\x95\x56\xc7\xe3\x51\x75\x9c\x24\xa9\xd1\x85\x5a\xa5\x61\x56\x9f\xf2\x3a\xd3\x97\xac\xd0\x79\xad\xf2\xea\x5a\x16\x9f\x0f\x8b\xf5\x95\x23\x29\x17\x1a\xbe\xaa\x4e\x64\x48\xd7\x2c\x6b\x9d\x74\xb7\x67\x30\xec\x33\x13\xf1\xe7\x7c\xf2\x38\x65\xdf\x5d\xb0\x3c\xa6\x6f\xc3\xfc\xa5\x67\xf3\x42\xf1\x70\xd0\xf0\xfb\x53\x78\xd2\x5a\x97\x80\x27\x9f\xc8\xb6\x04\x81\xe4\x2f\xb3\x3d\x8c\x6f\xd1\xa5\xf0\xfd\xbf\xb1\x29\xcf\xab\x12\x7a\x0e\xd0\xf7\x61\x5c\x85\x16\x58\x9c\x2f\xbb\xb0\xd0\x55\x51\x41\x6f\xe6\x3d\x5a\x3e\xdd\xa3\xe7\x7c\x97\x96\xe5\x65\x9f\x55\xfb\x33\x2b\x5d\x43\x13\x71\x83\xb1\x1f\x50\x68\x32\x1d\x86\x96\x72\x90\x88\x4d\xe3\x8c\xc7\x80\x2d\xc5\xb5\x3a\x17\x90\x48\xc4\x85\x36\x81\x45\x41\xf0\xce\x44\x4e\xdc\xc8\xb2\x3a\xc0\x17\xb4\x21\xad\x22\xf6\xf9\xe9\xd1\x08\xdd\xe0\x95\xa3\xd0\xb4\xe1\xbf\x4b\x2d\xf1\xa3\xbd\xed\x38\x6d\x3e\xf4\x9f\x9a\xd3\xe8\xc2\xbd\x91\x69\x98\x03\x49\x71\x97\xd2\x2d\xf2\x40\xff\x28\x1b\xe7\x48\x3f\x3c\x08\xf5\xe4\x49\xe2\xbc\xd3\xb6\x70\xc3\xde\x63\xb0\x1f\x70\x23\x59\x06\x37\xbc\x9e\x77\x8c\xb7\x75\xfe\xef\x7e\x23\x4a\xe2\xb0\x86\xbf\x02\x00\x00\xff\xff\x06\xd3\xf0\x71\xa6\x03\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 934, mode: os.FileMode(438), modTime: time.Unix(1505651580, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbb\x6e\xac\x30\x14\x85\xe1\x9e\xa7\xb0\x44\x73\x4e\x31\xbe\x05\xc2\x88\x32\x7d\xaa\x14\xa9\x8d\x2f\x60\x05\xbc\x91\x6d\xe4\x4c\x9e\x3e\x9a\x30\x22\x89\x34\xc1\x88\x8e\xf5\xf1\x6f\xca\xb2\x44\x03\x84\x18\x50\xb2\xae\x41\xcb\xac\x44\xd4\xe8\x1f\x67\x84\xd6\x84\x53\xd6\x20\x56\xb7\xf5\xe3\xff\xe2\x0a\x9f\xc1\x6b\x64\x9d\x81\x16\x0d\x31\xce\xa1\x25\xa4\xb7\x71\x58\x3a\x2c\x61\x22\xd2\x8b\x8f\xcb\x69\x12\xef\xe4\xd5\x3a\x05\x29\xbc\xcc\x97\xa7\x11\xe4\x9b\xf6\x45\x41\xf1\xd7\x83\x28\xa5\xc2\x88\x13\xc3\x23\x4e\xab\x5a\x4f\x5e\x0b\x3f\x51\xa7\x4c\x1e\x99\x8a\x66\x11\x3b\x57\x5d\xbe\xc4\x1f\xce\x79\x54\x69\x9d\x45\x9c\x8b\xe6\x00\x92\x2c\x83\xc4\x82\x15\x24\x37\x82\x50\x3b\x4a\xc6\x51\xed\x55\xb6\xc4\x64\xa5\x87\x00\x26\xde\x9f\x77\x0a\xe1\xc8\x7f\x18\xcd\xf1\xed\xf5\xfd\x4b\xa6\xc7\x2a\xe0\x8e\x1d\x89\x6d\x85\xdf\xc4\xe9\xb8\x91\xbf\x3f\x5e\x97\xdb\x00\xbe\xff\x1e\x52\xda\x39\xfe\x19\x00\x00\xff\xff\x4d\x79\xc3\xf9\x07\x03\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 775, mode: os.FileMode(438), modTime: time.Unix(1495446680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x31\xaf\x9b\x30\x10\x07\xf0\x3d\x9f\x02\x29\x4b\x3b\xc4\xd8\x86\x00\xc9\xd8\xbd\x53\x87\xce\x57\x73\x10\xeb\x61\x9b\xda\x97\x47\xe8\xa7\xaf\x68\xa5\xaa\xe8\xc5\x17\xb1\xf1\xfb\x73\x1c\x7f\x09\x1f\x8f\xc7\xe2\x16\x12\xa5\x62\xb1\xbe\x53\x45\x9a\xd7\xe2\x93\x6a\x4b\x25\x4b\x2d\x55\x5b\x48\x75\xad\x9a\xcf\x87\x2d\xf6\x35\x44\x2c\xac\x1f\xc2\xb5\xb8\x11\xcd\xe9\x5a\x96\xa3\xa5\xdb\xfd\x87\x30\xc1\x95\x26\xc2\xaf\xf5\xe4\xe0\x51\x7e\xb7\xbe\x0f\x4b\xfa\x36\xaf\x5f\xa6\x60\xde\x30\x1e\x0e\x52\xfc\xb9\x0a\x38\x49\x29\x95\x80\x93\x4b\xd8\x8f\x28\x3c\xd2\xde\x34\x63\x15\x63\x35\x63\x67\xc6\x1a\xc6\x5a\xc6\x3a\xc6\x2e\x79\x53\x92\x31\xa6\x17\x95\xed\xe5\xc9\x4d\xd3\x27\xa5\x75\x27\xa6\xe0\xc5\x34\xf9\xe5\x23\xd6\x35\x83\xcd\x99\xc1\xb6\x62\xb0\x6b\xb3\xa8\x65\x2d\x6b\x31\x99\xf5\xb9\x2a\xad\x2f\xf9\x67\x95\x3e\x37\x9c\xb6\xf9\x6f\xd5\x4a\x77\x2a\xab\x55\x75\xc9\xee\xd4\xa9\xdc\xd4\xe0\x66\x20\x7c\x98\x1b\xf8\x11\x95\xa0\x08\xc3\x60\x8d\x03\x0f\x23\xc6\x5d\x14\xef\xe2\x3d\x44\xc2\x87\xe8\x81\x40\x38\x6b\x62\x48\x61\xa0\xed\x87\xf9\x17\x4a\x48\x64\xfd\x98\x4e\x8b\xf5\x6c\x6e\x5e\x3d\x92\x66\x15\x26\x62\x1d\xef\x31\xcc\xf8\x5f\x04\xde\xa0\xf7\x69\xb7\x74\xfa\xe9\x04\xe1\x84\x0e\x29\xae\xb9\x69\x04\x94\x06\xd4\xe2\x3e\xf7\x40\xf8\x2a\xb5\xa4\x4c\x62\x7b\x0f\x57\xe0\xe6\x26\x38\x07\xbe\x7f\xb9\xd3\xdf\xa6\x5f\xb5\xb8\x9d\x72\xc2\xce\xef\xcd\xde\x7f\x07\x00\x00\xff\xff\x97\xe8\x36\xee\x07\x05\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1287, mode: os.FileMode(438), modTime: time.Unix(1508198019, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\xbf\x6f\xea\x30\x10\xc0\xf1\x9d\xbf\xc2\x12\xcb\x7b\x03\xce\x5d\xe2\x10\x60\x7c\xfb\x9b\x3a\x74\x76\xfc\x23\x44\x4d\x62\x1a\x9b\xa6\xf4\xaf\xaf\x52\x10\x12\x12\xcd\x9d\xd8\xf0\x27\xdf\x73\x62\xaf\xd7\x6b\x71\x0c\x31\x45\x31\xb5\xc3\x0e\xc5\xf9\x64\x75\x72\xe2\x0f\x56\x19\x42\x96\x03\x56\x02\xf0\x50\x6c\xff\xae\x66\xf9\x3f\x8c\x4e\xb4\x83\x0f\x07\x71\x4c\xe9\x14\x0f\x59\xd6\xb4\xe9\x78\xae\xa5\x09\x7d\x66\x46\xfd\x75\xd9\xf4\xfa\x33\x7b\x6d\x07\x1b\xa6\xf8\x72\xba\xfc\xeb\x82\x79\x73\xe3\x6a\x05\xf2\xe7\x27\x00\x00\x54\xb1\x41\xd9\xc9\xe9\xaa\xae\x23\xe7\xc2\x03\xda\x22\x03\xf9\x9c\x83\xf6\x34\x52\xda\xd2\x68\xbf\x63\x94\x6a\x07\x34\x32\x60\x48\x84\x00\x15\x8d\x10\x19\xa5\xca\x94\x34\xd2\x3b\xfa\x58\xd0\x58\xc6\x38\x0b\xf4\x77\x42\x8b\x9e\x81\x14\xa3\xe4\x80\xf1\x76\xbe\xae\x49\x94\x17\x7b\x45\xa3\xb2\x76\x04\xd2\x67\x69\xc3\x34\x74\x41\xdb\x65\xf5\xa1\x38\xb0\x6e\x66\xa8\xa5\xed\xe4\x14\x65\xdf\x9a\x31\xc4\xe0\xd3\x13\xe3\xfa\x65\x83\x9c\x10\x72\x4a\x39\xa7\x94\x73\x4a\x05\xa7\x54\x70\x4a\x8a\x53\x52\x9c\x52\xc9\x29\x95\x74\xc9\xa4\xce\x2e\x5d\x14\xc6\xe1\x7b\x97\xcb\xdb\xdf\xcf\x67\xcc\x60\x7a\x5f\x5a\xfc\x6d\x77\xbe\x61\x5e\xc0\xfb\xe3\x8f\x64\x70\xe9\x4e\x62\x17\x97\xb7\xc9\x9b\x44\xad\xdc\x16\xc2\xd8\x7c\x07\x00\x00\xff\xff\x9e\x02\x25\xa9\xb9\x06\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 1721, mode: os.FileMode(438), modTime: time.Unix(1508198023, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1495292715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xc1\x72\xdb\x38\x0c\xbd\xe7\x2b\x3c\x93\xcb\xee\x41\x70\x9c\xec\x66\x3a\x99\xe9\xa5\xf7\x4e\x0f\x3d\xf4\x4c\x93\x90\x84\xb1\x08\x30\x04\x6c\x59\xf9\xfa\x0e\x1d\x37\xae\x15\xb1\xcd\x51\x7c\x8f\x00\xf8\xf0\x00\xdd\xde\xde\xae\x24\x21\x8f\xd9\x56\x23\xf1\xe6\x6e\x85\x47\xcb\x6e\xf5\xcf\x1a\xcd\xaf\x03\x6b\x74\xfa\x0c\x5e\xb8\xfd\xf7\xa6\x70\xbf\x4a\xc6\x15\x71\x2b\x4f\xab\xde\x2c\xe9\xd3\x7a\xdd\x91\xf5\xfb\x2d\x78\x89\x6b\x9f\xdd\xcb\xd4\x44\x77\x5c\xff\x20\x0e\x32\xea\xf7\x34\x7d\x19\xc4\xef\x30\xdf\xdc\x28\xe6\x03\xe6\xcf\x6b\xc7\x3a\x62\x56\x88\xe4\xb3\xa8\xb4\x76\xba\x7a\x81\x53\x52\xd0\xdd\x94\x70\x76\x9e\x15\x34\xba\x6c\xea\x33\x22\x57\xaf\xbf\x3c\x3c\x6e\x3e\x6d\x1e\xe1\x20\x10\x15\x3d\x07\x60\xb4\xdf\xf1\xff\x37\xf7\x0f\x0f\xff\xd5\xf0\xed\x20\x5b\x18\xd1\x59\x8f\xb9\x96\xc3\x3b\x0e\x93\xcf\x7b\xed\x55\x82\x83\x1d\x71\x37\x23\x04\x2e\x9a\x19\xb2\x41\xca\x12\xc0\x47\x85\xa8\xfc\x9e\x25\x8c\x2c\x86\xd7\x35\xf8\x5e\xc8\x63\x35\xfb\x02\x0a\xac\xce\xfc\x2c\xca\x40\xc8\xd6\x28\x74\xce\x70\x74\x13\x44\x54\x45\xee\x30\xc3\x40\x87\x99\xba\xaf\x64\x18\x59\x61\x7c\x6d\xdd\x12\x5e\x7c\x40\x1d\x24\xa7\x9a\x24\xdb\x75\xbe\x80\x69\x90\x09\xd4\x9c\x91\x07\xb7\x73\xd1\x91\xa1\xef\x59\x06\xe9\x08\x67\x01\x03\x1e\xca\x2b\xdc\xde\x7a\x38\x6e\xe5\xf8\xbe\xa4\x10\x03\x44\x34\x57\xbe\xc9\x63\xd5\x30\x81\x8b\xb6\xad\xb1\x57\xba\x46\x5a\xc4\xb0\x75\x7e\x77\xb9\xd9\xf4\xd2\xc7\x0a\x49\xd1\x65\xdf\xd7\xb2\xbc\xd1\x16\xe5\xe9\x16\x24\xa5\xd8\x35\xda\x44\xe5\xa6\x34\xe8\x55\x8f\x17\x9c\xd9\x8d\x58\x29\x60\x4e\xc5\xed\x83\xec\x83\x4b\xe9\x9a\x30\x90\x47\xd6\xe2\xb0\x98\x6a\xb5\x15\x7d\x79\xa1\x82\x08\xbd\x58\x74\x34\xcc\x8e\x17\xc5\x92\xb6\x25\x8f\x67\x1f\x54\x12\x09\xff\x22\x68\x7b\x84\xa8\x17\x24\x65\xf2\x38\x90\xda\xd2\xe8\x3e\xef\x31\x4f\x97\x41\xc8\xd5\xf8\x1f\xf3\xaa\xde\xc1\x7d\x0c\x7c\xad\x93\x7e\x5b\x3a\x3c\xb7\x74\x3e\x79\x8a\x66\xc4\x9d\x36\xaa\x43\xc5\x7d\x67\x1b\x2f\xc4\x34\xc9\xd8\x50\x74\x1d\x2a\x68\x53\x7b\x49\x61\x61\xe8\xb0\x0d\x10\xf4\xf8\x87\xe6\x19\x0d\xd8\x9c\x3d\xfe\xb7\xc5\x63\x14\x71\xd9\x80\xb6\xbb\x87\x34\xd8\xfb\xa7\xee\x69\xa9\x23\xfb\x8f\x2d\xd3\x31\xf8\x6a\xdd\x05\x73\x43\xb5\x95\xa7\x9f\x49\x63\xa5\xd7\x5a\x74\xb8\x16\x71\xd4\xb2\x1e\xe1\xb4\xeb\x6b\x01\xc6\xf1\x34\xd6\x5e\x98\xd1\x9b\xa1\x56\x08\x6f\x56\xfe\x19\x00\x00\xff\xff\xa8\x1c\x5c\x4a\xcc\x06\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1740, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x52\xdb\x30\x10\x06\xe0\x7b\x9e\x42\x33\xb9\xb4\x07\xff\xd6\xae\x56\x92\xcd\xad\x6d\x68\x27\x87\x02\x63\xe8\x70\x0e\x89\x29\x69\x43\xec\xb1\x95\x09\xf4\xe9\x3b\x86\xb6\xd0\x93\x96\x73\x3e\xed\x6c\xfe\xd5\xca\xf3\xf9\xdc\x74\x7d\xbb\x3f\x0e\xc9\x1c\xb7\x7b\xb2\xa6\x7d\x48\xc3\xca\xbc\x2b\xdb\xb4\x2e\x6f\xb7\x43\x7b\x5c\xed\x76\x38\x8c\xed\xf0\x7e\x36\xe1\xaf\xdd\xd0\x9a\xed\xfe\xb6\x3b\x31\x77\x29\xf5\xe3\x49\x59\x7e\xdf\xa6\xbb\xc3\x0d\xd6\xdd\x7d\xb9\x1e\x56\xbf\x1e\x8b\xfb\xd5\x43\x79\xbd\xdd\x6f\xba\xe3\x78\xd9\x3f\x7e\xdc\x75\xeb\x9f\xed\x30\x9b\xcd\x4d\xbb\xbf\xed\x86\x75\x6b\x86\xee\x90\xda\xc1\x2c\xce\x2e\x67\xdb\x3e\xad\x6e\x76\xed\x68\x8a\x64\xf6\xab\x64\x8a\xa5\xb9\x68\x4e\x9b\xf3\x6f\x57\xcb\xb3\x2f\xa6\xe8\x4d\x5a\xf7\xa6\x28\x36\x7d\x37\x24\xe3\x9d\x29\x7e\x98\xe6\x74\xb1\x6c\x4e\x3f\x5d\x99\xa2\x48\x5d\x31\xfd\x30\x1a\xef\xf2\x95\x0e\x1b\x65\xa5\xd9\xdc\x0c\x87\x5d\x3b\xbe\x2a\xb9\x34\x9f\xcf\x9b\xeb\x0f\xcd\x62\x3a\xb6\x68\xce\x2f\x4c\xb1\x31\xe4\x50\x59\x10\xc3\x8b\x82\x92\x8d\x70\x20\xae\x94\x96\x09\x6c\x6d\x0e\xb3\x43\x1d\x41\xb1\x02\x45\x97\xc3\x62\x11\x23\x98\x05\xd9\x26\x5e\x28\x91\xd6\x7a\xb0\xa8\x0b\x07\xd8\x92\xb3\xb9\x89\x45\x6d\x41\x2e\x80\xb3\x51\x88\x05\x59\x82\x84\x29\x0e\x0d\x26\x01\x0b\x81\x44\xf3\x0f\x89\x2a\x90\x75\x88\x1a\xcb\x11\x24\x8c\x18\x72\x38\x08\x04\x5e\x54\x59\x04\x0f\xcf\x20\x6b\x15\x23\x79\xb1\x75\xf6\x56\xfc\xb5\x95\xba\x0b\xff\xa4\x59\x55\xd9\x83\x3d\x43\xb2\x96\xac\x40\x2c\x98\x2c\x1c\xab\xb0\x3c\x6d\x5f\x54\xe3\x0a\x8a\xdd\xfb\x67\xc9\xaa\x5a\x66\x92\xe7\xfb\x9c\x1d\xc9\xb3\xf6\x20\x09\x9a\xc5\x26\x47\x60\xef\xe0\x04\xec\xd4\x3a\x90\x6a\x88\xe4\x04\x14\x2d\xa8\xf2\x88\xf9\xe2\x3e\x3e\xcd\x7c\x3a\xe4\xb2\x57\xfa\x3f\x9d\x0f\xfc\x95\x16\x7d\x27\x5e\xf5\x90\x86\x0a\xc1\x81\x2a\xc4\x3a\xfb\x8e\x5a\x41\xac\x41\x75\x54\x05\x38\x71\x9a\xb6\x46\x08\x2c\x0a\x1e\xa7\x77\x29\x4e\xbb\xa0\xb4\xd3\x53\xc6\x8a\xb6\x9f\xb1\x77\x20\xef\xb5\xba\x9e\xc2\x7e\x03\xe6\xb7\x54\x76\xd9\xbd\x79\x85\xf3\x23\xff\x83\x79\xfa\xd0\xa9\x7a\x0e\x15\x28\x04\xb0\x97\xdf\x01\x00\x00\xff\xff\x6e\xee\x77\xb8\xdd\x08\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 2269, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9b\x4d\x73\xeb\xac\x15\xc7\xf7\xcf\xa7\xc8\xcc\xdd\xb4\x0b\x13\x40\xf2\x8b\x9e\x99\x6e\xba\xef\xaa\x8b\xae\x11\x60\x9b\x89\x04\x04\xb0\x1d\xf7\xd3\x77\x90\x7d\x13\xc7\x41\xf8\xef\x3e\x77\x95\xf1\xf9\x09\xce\x39\x9c\x17\x24\xb8\xbf\x7e\xfd\x7a\x71\x5e\xdb\x53\x48\x2f\x27\x63\x19\x7d\x89\xfe\xfc\xf2\xb7\x57\x9d\xe4\xab\xb2\x71\x14\xf1\x9d\x48\x67\xb7\x7f\xff\x23\x93\xff\x72\x41\xbf\x18\xbb\x75\x7f\xbe\xec\x53\xf2\xf1\xcf\xd7\xd7\x9d\x49\xfb\x43\x4f\xa4\x1b\x5f\x65\x10\xff\x3d\x2f\x46\xf1\xf1\xfa\x1f\x63\x95\x3b\xc5\x7f\xfb\xf3\x3f\x07\x27\xdf\x74\xf8\xe3\x8f\xa8\xc3\x51\x87\x7f\xbc\x8a\x05\xa5\x94\x11\xb1\x18\xa3\x56\x3b\x4d\xac\x4e\xaf\xf7\x42\x25\xe7\xa5\xbc\xf6\x68\x53\x13\xb6\x35\xe1\xb2\x26\x5c\xd5\x84\xeb\x9a\x70\x53\x13\x76\x15\x21\xa3\x35\x61\xcd\x7f\x6c\xde\x43\xc5\x5f\x89\x50\x91\x91\x31\xda\x69\x0d\xbf\xff\xce\xc9\x18\x85\x8a\x85\x27\x78\xe9\x89\x20\x54\xe1\x67\xd9\x94\x7e\x4c\xe6\x68\xd2\x99\x9c\x2e\x91\x72\x27\x55\x56\x7f\x1c\xee\xa7\x55\xf6\xe3\x07\x17\x0b\x43\x5f\xcc\xf9\xa9\x76\xd9\x4c\xa3\x7c\x24\x22\xa9\x31\xdd\x09\xde\xc4\x42\x2a\xbb\xb0\x91\x08\x95\xb4\xdc\x13\xa5\x6f\xa4\x21\x88\x33\xa3\x6c\xe1\x83\x53\x44\x39\xa2\xa2\x27\xa3\x27\xa3\x91\xc1\x45\xb7\xbd\x1f\xec\x82\xf3\xe7\xf0\xe6\x39\xbc\x7d\x06\xe7\xcf\xe9\xce\x9f\xd3\x9d\x3f\xa7\x3b\x7f\x4e\xf7\xf6\x39\xdd\xdb\xe7\x74\x6f\x9f\xd3\xbd\x7d\x56\xf7\xe5\x73\xf8\xea\x39\x7c\x03\xe2\xfd\x4c\xda\xf7\xb3\x69\xdf\x97\xd3\xbb\x37\x76\x37\xe5\xe1\xcc\x3c\x43\xd3\x50\xb6\x10\x84\xa9\x70\x2c\x8a\xe4\xbc\x68\x57\x12\x59\xd6\xd0\x76\xa1\xe7\x44\xab\xf2\x5c\x17\x51\xe5\xa9\xf2\x5c\xbc\x5f\x48\x17\xa6\x86\xe5\x0d\xf1\xf9\x8f\x1a\xd6\x60\x58\xfb\x00\x3b\xd9\xc8\xc8\xc9\xc6\x72\x75\xec\x6d\xe3\x21\xad\x9a\x28\xf7\x94\x53\xca\x79\xc3\x37\x95\xf1\x22\xc9\x7f\x1a\xbb\x5b\xc4\xf3\xbd\xec\x3c\xbf\x7c\xe7\xf9\xe5\xbb\x88\x4a\xde\x96\xd5\x0e\x2f\x4b\x95\x58\xfe\x0c\x3a\x29\x48\xd2\x83\x1e\x75\x0a\xe7\xb9\xc8\x93\x42\xee\x35\x51\x22\x89\x51\x84\x54\x36\x5d\x2a\x5b\x9c\x51\x45\xbe\x22\x62\x8c\x1d\x19\xa3\x96\xf6\x4e\x49\x15\xdb\x65\x47\x06\x79\x26\xc3\x60\x4f\x3f\x84\xdd\x6a\x49\x06\x67\x4b\xc2\x3d\x03\x16\xee\x93\xe2\x75\x6a\xd6\xfd\x57\x51\xd1\xfd\xfb\xd9\xc4\x9a\x44\x7c\x7e\x40\x5e\x1e\xd0\x8d\x5e\x24\xfd\x21\xf7\xc2\xee\x34\x91\x83\x3b\x28\xe1\xfd\x9d\xdd\xdf\x20\x46\x52\x10\xdb\xad\x91\xa3\xb0\x62\xa7\xc3\x3d\x6b\x93\xb1\x87\xc3\x48\xd4\x7c\x55\x91\x2e\x78\x12\x53\x55\xae\x3f\x12\x19\xa3\x49\x42\x6d\x23\xd9\x0d\xbd\xb2\xb9\xae\xcd\xf0\x1e\xef\xe5\xd2\xe3\xbd\x53\x7a\xbc\x57\xc9\x9c\xf3\x5e\x92\x23\xcd\x51\xf9\xcd\x27\xaa\x6f\xc4\xfb\xa1\x14\xa9\xaa\x6f\x4e\x36\x72\xca\xf2\xbf\xf9\x14\x57\xfd\xb2\x2a\x8c\x72\xcf\x28\x63\x79\xf3\xc8\x51\x70\x8d\x81\x9b\xa6\xae\xd7\x0d\x08\xea\xd8\x31\x70\xea\xae\x56\xf5\x6e\xc0\x6c\x0e\x08\x82\xee\x61\x94\xb7\x20\x08\xba\x87\xd1\x06\x1d\xb1\x45\x75\x6c\xc1\x11\x59\x8b\xad\x0c\xe3\xb4\x03\x41\x0e\x5a\xcd\x51\xf7\xf0\x06\x0b\x0a\xd6\x80\xd1\xc3\x1a\x74\x09\x9b\xa6\x41\x41\x70\xc4\x96\x81\x7e\x6c\xf9\x0a\x04\x1b\x8a\x81\xcb\x07\x65\xe4\x06\x04\x75\x5c\x82\x79\xcd\x96\x2d\x38\xf5\xaa\x05\x8d\x59\xa3\xc6\xac\x1b\xd0\x98\x35\x9a\x0a\x1b\x06\x06\xc5\x06\x5d\x42\xb4\x3e\xb2\x0d\x9a\x0a\x1b\xb4\x00\x74\x14\x1c\xb1\x63\xe8\x88\xa0\xc3\x39\x65\x98\xd5\x9c\x72\x14\x6c\xb0\xfa\xc8\x29\x96\xd7\xb9\x92\x42\x7d\x26\x83\x90\xd5\x53\xc9\xc5\x40\x4e\x61\x10\x0a\xb3\xdc\xe1\x20\x3f\xe6\x0e\x07\x82\x0d\xb6\x84\x8c\x36\x1c\x74\x78\x83\xea\x58\x7d\xef\xf9\x06\xb6\xe8\xd4\xa8\xd5\x2d\x05\x47\x6c\x1b\x50\xc7\x16\x6b\xec\x8c\x2e\xb1\xed\x0c\xa3\x4b\x6c\x13\xc7\xe8\x12\x4d\x85\x15\xb6\x41\xca\x20\x18\x8f\x2b\xac\x69\x32\xba\xa6\xe0\xca\xac\xb1\xc6\xce\xe8\x1a\xeb\x33\x8c\x6e\x18\x0c\x82\x56\x6f\xb0\x0d\x52\x06\x41\x87\x6f\xd0\x54\x00\xfb\x0c\xa3\x1d\x9a\xae\x1d\x07\xca\x5e\x43\x37\x6c\x83\x94\xbd\x26\x3b\x07\x69\xec\x19\x6c\x90\xd2\x9c\xc1\x16\xa9\x8f\x19\x5c\x21\x35\x7c\x02\x51\x1d\xd7\xe8\x88\x6b\x06\xac\x75\x06\x37\x98\x31\x1d\xed\x40\x30\xe7\x21\x06\x72\x4c\xc7\x8e\xad\x90\x7d\x78\x06\xd7\x48\xfb\xc8\x60\x87\xad\x75\xc7\xa1\x7e\x7d\x01\xa1\x95\xe9\x38\xf4\xe2\xd3\xe4\xf7\x4c\xc8\x6a\x46\x69\x83\xec\x1f\x33\xb8\x44\x6a\xcf\x05\x44\xe2\x91\x51\x8a\x05\xee\xf4\x2a\x85\xa4\xeb\xf4\x3e\x03\x8e\xb8\x04\xad\x66\xb0\x8e\x50\x57\x68\x18\xe5\x0c\x0a\x5c\x46\xc1\x02\x90\xc1\x07\x2b\x73\xb2\x91\xa9\x1a\xb1\x9a\x86\xe2\xb4\x7b\xf4\x59\xe6\x0b\xe4\xf5\x5d\xc7\x2d\x58\xcd\x81\x5b\xb0\x6a\xee\x17\xd8\xd4\x3d\x7d\x03\xd6\xd7\xee\x16\x04\x8d\x69\xeb\x9e\xbe\x05\x41\x3f\x2e\xeb\xfb\xea\x1b\x10\x9d\x7a\x09\x4f\x8d\x5a\xbd\xac\xa7\xdf\x17\xb8\x42\x47\x5c\xd5\xdf\xe9\xbf\xc0\x0d\xba\x84\x1d\x05\xad\x7e\xf0\x8a\x79\x03\xa2\x0e\xef\x40\x1d\x19\x05\xa7\x66\x14\xcc\x99\xbc\x61\xc6\x40\x34\x67\x58\x83\xea\xd8\x80\xe9\xfa\xa8\x78\x7f\x81\x68\xce\xb0\x15\x58\x7b\xd8\xaa\x6a\x8c\x3e\x92\xa3\x09\xe9\x20\x06\x2d\x42\xda\xdf\x7d\x09\xdf\x3e\x3e\xf8\x51\x46\xec\xac\x8b\xc9\xc8\x48\xe2\xc1\x7b\x17\xd2\x3c\x1a\x25\xfe\xe5\x3f\xd3\xf8\xb7\xff\x4c\xe3\x5f\xff\x75\xf1\xe8\x4b\x4b\x4b\xea\x0e\xd1\x07\x72\x74\x21\xe9\x8f\xe9\xa4\x6b\x6e\xf4\xed\xa0\x3f\x7e\x9e\xa2\x6d\x67\xcf\x4f\x76\x3f\xe1\x9d\x76\xa0\x29\x3b\xed\x8e\x3a\x80\xf0\xbe\x70\x06\xbd\x2f\x5c\x2e\x31\x8b\x7e\x58\x21\xc7\x9e\x66\xd1\x9f\xa1\xf3\x51\xb3\xc0\x8e\xe3\x6e\xb8\xea\x81\x9c\x59\x44\xcb\xa1\xf1\x3e\xb9\xfa\x78\xec\x72\x2c\x2b\x75\x24\xd1\x49\x23\x86\x39\x1f\x3e\x22\x89\x8d\x22\xc9\xef\x71\x63\xec\x56\x07\x6d\xa5\x26\x83\x93\x22\x19\x67\xc9\x60\x8e\x77\xc7\xb1\x6f\x47\x3c\x39\xde\x8e\x78\x6a\xbc\x1d\xf1\xc4\x18\x7a\x46\x4e\xa7\x13\x19\x23\x11\x6f\x42\xd9\xbb\x5b\x09\x93\xd2\xa1\x78\x11\x68\x88\xfc\xa4\x7b\x12\xb4\x1a\x9d\x55\x64\x3a\x33\x9c\x99\x64\x24\x85\xdb\x45\xa3\xeb\xcd\xa0\x89\x37\x5e\x13\x11\xcc\x6c\x72\x95\x0e\xb2\xc7\x68\x93\x8e\x69\xfe\x60\xfd\x72\xc1\xc9\x6d\xb7\x46\x6a\xe1\x7d\xbc\x78\xff\x27\x12\x0e\x83\x7e\xc0\x39\xe4\x34\xbc\x02\x95\xc2\xc3\x59\x1d\x75\x4a\xc6\xee\xe2\xa2\xb7\x9c\xe4\xc7\x7e\x87\x08\xf0\x88\x3c\x3f\xfd\x88\xea\x97\xcf\x3e\xb2\x7f\x83\x66\xf1\x41\x93\xad\x73\xc9\x07\x63\x93\x0f\x5a\x19\x79\xe7\x1c\x1f\xf4\xd1\xe8\xd3\xcf\x10\x0a\x42\x15\x1c\x5e\xbc\x07\x93\xc7\x0d\x59\x1d\xf1\x99\x8b\x33\x4b\x11\x74\x6e\x49\x91\x9c\x74\x24\x48\x3f\x8b\x72\xaf\x47\x71\x3b\x5c\x29\x11\xa2\x96\x87\xa0\x4b\x71\x7c\x95\x6c\x07\x11\xf7\x49\x0c\x6f\xc6\xee\xee\x81\xab\xc2\xb0\x46\xbf\x57\x20\x0a\xab\x7a\x57\xef\x3d\x9f\xf0\xc9\x58\x08\xbc\x40\x0f\x4e\xec\xbf\xc3\x73\x90\x9d\xbd\x23\x71\x15\x95\xae\x34\x5c\x45\xa5\x3b\x12\xd1\x9f\xad\x4e\xf3\x4a\x4d\x62\x31\xcc\xee\x37\x2e\x80\x3e\x04\xe7\xf5\xa3\xf5\x7c\x1f\xb1\xb5\x78\x1f\xff\x12\x54\xca\x98\x18\x4f\x85\xb0\x8f\xc9\x05\x2d\x45\x12\x83\xdb\x05\x7d\xfc\xdd\x36\xa6\x9f\xdf\x0f\x62\x30\x69\x7e\xfe\x43\x38\xea\x33\x39\x89\x14\x9d\x9d\x83\x12\x25\x31\x0e\x44\xbc\x11\x75\xb6\x62\x34\x92\x24\x93\x8b\xdf\xfc\xe6\xe7\xeb\x89\x87\xa4\x1e\xb4\x74\xe3\x28\xac\x7a\xec\x2d\x00\x2e\x79\xed\x0b\x15\xde\xeb\x0f\xd2\xe7\x44\x9b\x21\x2a\x33\x5f\x80\x43\x98\xad\x1f\x29\x6e\xf5\xef\x2b\x34\x71\x2f\x7c\x9e\xa6\xde\x43\x8f\x8c\x5e\x77\x89\x37\x49\xf8\xb8\x70\x16\x1f\x9b\x99\x41\x87\x98\x83\x61\x7f\xee\x83\x51\xd3\xb6\x66\xaf\xc3\x5d\x00\x4d\x35\xb6\xb0\xcb\xbd\xce\x01\xf6\x99\x2b\x0d\xb6\x98\x2b\x0d\x76\x97\x2b\x0d\x36\x96\x2b\x8d\x14\xc1\xff\xc7\xfb\xa0\xe7\x6f\x76\xff\x0f\x6a\xe6\xb7\x17\x05\x54\x81\xea\xe4\xd7\x84\xfe\x59\x2b\xea\x99\x7e\x95\x7a\xaf\x1f\x27\xe3\x95\xfd\x8b\x5c\xc9\xbe\xbc\x39\x44\x6c\x04\x9b\xe2\xf4\xbf\x27\x88\xf1\xc7\xd5\x2c\x31\x6d\x63\x3f\x37\x8b\xff\x0b\x00\x00\xff\xff\x13\x79\x1a\xb2\x7b\x31\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 12667, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x99\x3d\x73\x1b\x47\x0c\x86\x7b\xfd\x8a\x9d\x51\x93\x14\x7c\xb9\xc0\x7e\xbb\x4b\x22\x27\xa3\x22\xb6\x87\x76\xc6\xb5\x2c\xd1\xb1\x12\x59\xe4\x90\xa7\x51\x9c\x5f\x9f\xc1\xde\x1d\x29\x37\x01\xae\xb0\x55\xe8\x11\x06\x5f\x0b\xbc\xbb\x77\x79\x79\xe9\x76\xfb\xed\xe3\xf3\x61\x70\xcf\xf7\x8f\xe4\xdd\x71\xff\xcd\xfd\xb0\xde\x0e\xb7\xeb\xcf\xf7\x87\xed\xf3\xcd\xc3\x03\x9e\x8e\xdb\xc3\x8f\x17\x82\xfe\xbe\x3b\x6c\xdd\xfd\xe3\xe7\xdd\x2b\xf7\x65\x18\xf6\xc7\x57\xeb\xf5\x9f\xf7\xc3\x97\xa7\x4f\xb8\xdd\x7d\x5d\xdf\x1e\x6e\xfe\xfd\xb6\xfa\x7a\xf3\xcf\xfa\xe3\xfd\xe3\xdd\xee\xf9\xf8\x7e\xff\xed\xe7\x87\xdd\xed\xdf\xdb\xc3\xc5\xc5\xa5\xdb\x3e\x7e\xde\x1d\x6e\xb7\xee\xb0\x7b\x1a\xb6\x07\x77\xf5\xe6\xfd\xc5\xfd\x7e\xb8\xf9\xf4\xb0\x3d\xba\xd5\xe0\x1e\x6f\x06\xb7\xba\x76\xef\x36\xaf\x37\x6f\xff\xf8\x70\xfd\xe6\x37\xb7\xda\xbb\xe1\x76\xef\x56\xab\xbb\xfd\xee\x30\xb8\x14\xdc\xea\x2f\xb7\x79\x7d\x75\xbd\x79\xfd\xcb\x07\xb7\x5a\x0d\xbb\x95\xfc\xe2\xe8\x52\xd0\x2d\x3d\xdd\x19\x2d\x5d\x5c\xba\xc3\xd3\xc3\xf6\xf8\xc2\xe4\xb5\xfb\xf5\xed\xe6\xe3\x4f\x9b\x2b\xf9\xb3\xab\xcd\xdb\x77\x6e\x75\xe7\x28\x20\x57\x54\x46\x35\x92\x05\xb1\x18\xd1\x0a\xe2\x66\x60\x4b\x06\x53\x05\x91\xc5\x70\x87\x1b\xa8\x91\x1d\x66\xf2\x16\xb8\x82\x4a\x01\xc5\x68\x84\xab\x47\xb3\x1a\xae\x19\x9c\x4c\x86\x1b\x38\x34\x64\x4b\xe2\x2a\x21\xe1\xbb\xb6\xf9\x3f\xb2\x81\x23\x1b\x58\xf2\x05\x09\xd5\x12\xd9\x84\xaa\xbd\xc3\x01\xad\x20\x13\x28\xa8\x35\x1e\x59\xf6\x0d\xcd\xc4\x36\x90\x07\xa9\xdd\x30\xa3\x0d\x7a\x7d\xcf\x6c\xb6\xb2\x94\xe5\x9f\x11\x66\x02\x7b\x4b\x70\xe4\x19\x11\xac\x97\x78\x62\x99\x60\x71\x58\x50\x4a\x09\x14\xd5\x22\x77\x3a\x80\x2a\x83\x58\x8d\x2f\x7a\xe4\x86\xe8\x41\x49\x0d\x6f\x64\x99\x32\x8a\x1a\xde\x99\xe5\xa4\x56\x7a\x86\x2b\xb2\xda\xee\x13\xcb\x2c\xd5\x36\xc0\xc5\x83\xd9\x83\xa3\xda\xf2\x02\x67\x10\xa8\x58\xb2\x26\x28\xeb\xb5\x3b\x91\x64\x0a\xad\x14\x30\x57\x34\x0b\x5b\xa5\xc8\x0d\xd1\x92\x05\xea\x47\x1f\xc5\x92\x84\xce\x46\x50\xb2\x1a\x66\x36\x6c\x98\xce\x46\x50\x94\xe2\xa9\x4d\xdc\xe9\x04\x32\x1c\xfd\x8e\xf6\x25\x00\xd6\x4f\xc7\x4c\x27\x82\xbe\xe9\x04\x66\xea\xa6\xa9\xaa\x25\x49\x42\x12\x02\x43\xef\xf8\x24\x0d\x41\xa0\x04\x8e\x6a\xb7\x75\xb8\x47\x87\xa0\x1e\xbc\x17\xb0\x5e\xc0\x13\x2c\xe3\x2d\x59\xe9\x64\x29\x4b\x87\x4b\x3f\xa8\x86\xd4\x9d\x61\xd2\x5b\xe9\x44\x07\x50\xb0\x79\x5d\xc1\x11\x54\x6c\x5e\xcb\xbc\x0f\xd0\x07\xc6\x0c\xd7\x86\x6a\xaa\x8b\xc8\x8a\x58\x2c\x6d\x3a\xd3\xd2\xa6\x64\x4a\x5f\xd7\x42\x15\xfa\x46\x9b\xe1\x26\xb9\xb6\xd3\xc1\xb2\x2d\x27\x5a\x2a\xc3\xa6\x8c\x54\x99\x33\x0c\x0a\x26\xd3\x9d\x4e\x60\x6f\xa3\x0b\xb2\x17\xc1\x63\x80\x39\x64\x44\xf9\xa1\x1e\x99\x1c\x11\x91\x41\x5e\xad\x61\x27\x39\xc0\xaf\x59\xed\xbb\x9c\x10\x5a\x9f\x4c\x1c\x74\xc3\x09\xe2\x72\x06\xab\x2d\x3a\xa2\xe4\xbd\xd5\x8b\x69\x30\xe9\x2a\x6a\x72\x42\xb4\xba\x9e\x61\x81\x13\x58\x84\xb2\xc9\xe5\x31\x1b\xa6\x44\x24\xc4\x68\x18\xb8\x67\xd4\x14\x59\x47\xc9\x1b\x9d\xed\xac\xde\x39\x9d\x95\xad\xad\xef\xbf\x91\xed\x9b\xd8\x18\x5a\x67\xd5\x49\xf1\x82\x55\xcf\xe7\xc4\x06\x8f\x64\xf5\xb7\x64\xc3\xfd\x6a\x6a\x06\xfb\xc9\x10\x3a\xb1\x8d\x16\x51\xdf\xfa\x94\xa5\xa0\x66\xae\x14\xc8\x1e\x69\x16\xc9\x47\x3e\xa2\xaf\xc9\x62\x50\xbf\x1d\x96\x1c\x17\x64\x9b\x65\x81\x45\x02\x5b\xe1\x28\xb2\xd6\xea\x87\x48\x4a\xc3\xa5\xf3\x0c\xb3\xd7\xaf\x9d\x13\x1d\x8a\x2c\x41\x13\x2d\x8d\x07\x6a\xea\xc6\x9e\x60\x16\xb9\xa8\xb7\x74\xa7\x45\xb7\xb3\x7e\x54\x26\x36\x54\xc3\x80\x9b\xd8\x24\x1a\xd0\xe4\x32\x93\x47\x44\xd1\x9f\x44\x66\xd6\xa3\x9a\x61\x26\x06\x47\x53\x0d\x25\x6f\x41\x84\xa5\x1e\x22\x11\x58\xae\xb6\x72\x03\x5c\x00\x93\x21\xc8\x33\x6d\xb8\x0c\x7f\x47\x9b\xdd\xce\xd1\x34\x13\x28\x90\xf8\x80\x6c\x49\xf7\x89\x25\x6f\x78\xa5\x19\x61\x5a\xe6\x87\xc8\x78\x83\x23\xa2\x57\x3d\x82\x37\x1d\xc6\x17\xb4\x61\x86\x4c\xb4\xec\x7a\x7d\x73\xce\x34\xf9\x6c\x0c\x73\xe6\x45\xe9\x2e\xa1\x75\xc5\xfd\x92\x6e\xfa\x60\x3d\xd1\x75\x91\x27\x75\x91\x27\x15\xc5\x5c\x9f\xee\xc9\x02\x57\x88\x96\xa5\xbc\x3f\x74\x2c\xa1\x17\x04\xca\x7e\x49\xa0\xec\x97\x14\xa8\x54\xc3\xd3\xe1\x99\x6e\xa6\x93\x3c\xd1\xb5\x5a\x1e\x7f\x66\x9c\x43\x32\xdc\xa1\x64\xb1\x13\x65\x54\x32\xe5\xbb\x4c\xca\xde\x64\x3a\x15\x11\x3c\x46\xbd\x33\xd3\xc6\xa3\x39\xd2\xe4\xdb\x22\x9c\x4d\xc2\x64\x82\x83\xed\xaa\x31\xe1\x92\x93\x45\xf8\x82\x40\x33\xe4\x7f\x23\x5a\x22\x58\x97\xb9\x13\xdc\xc8\xb2\xe6\x47\x56\xc6\x26\x55\xab\xc7\x23\x6d\x75\x7a\xa4\x75\xf1\x35\xd1\x14\xc0\x86\x2f\x36\x13\xcd\x04\xbb\x69\x8e\x96\x23\x39\xc1\xb1\x99\x72\x9d\x2b\x32\xf5\x77\x9b\xa8\x77\xdf\x08\x53\xcc\x30\x88\xb5\x19\x16\x25\x63\x85\x0b\xa3\xd8\xdc\x18\x9f\x1e\xf4\xfb\x55\x87\x43\xbf\x9c\x67\x9b\xe5\x30\x2e\x10\xfd\x11\x90\x1a\xf5\xb3\x42\xc9\xf4\x59\xa8\xd3\x05\xec\xab\xe5\x93\xc1\x09\xa7\x6a\x79\x30\x19\xf1\x86\x14\x91\xf4\xfd\xd1\x64\x84\x54\x70\xb2\xcd\x05\xb9\x8e\xc5\x3c\x5e\xcc\x54\xe3\x02\xe7\x0a\xca\xa6\x2f\x7b\x2c\x97\xe4\xd6\xfa\xba\x11\x57\xfe\x0b\x00\x00\xff\xff\x50\x03\x71\x00\xb3\x1e\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 7859, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x14\xc6\x11\x66\xbc\x78\xf7\xe4\xc1\x73\xc8\x4b\xc9\x90\x26\x31\xbb\xa5\xd6\x4f\xef\x20\x08\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\xdb\x44\x45\x6b\x3d\x9f\x17\x4d\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x05\xbe\x82\x0c\xde\xfc\x9f\x1c\xf0\x53\x48\xba\xb0\xde\x84\x75\xb1\x25\x8a\xb8\x66\xac\xb2\xb4\x6d\x36\x20\x43\xcd\x64\x12\xef\xdd\xac\x16\x6f\xec\xc5\x7a\x15\x5a\x7c\x8e\xdd\xa3\x0b\x72\xa7\xd3\x64\x82\x3a\xed\x75\x7a\x60\x7c\xb9\x32\x33\x0e\x0e\xda\xa3\x39\x4e\xfc\xec\xbf\x98\xfb\x15\xcf\x1a\x53\x2e\x72\xa6\x9c\x97\x79\x72\x97\x37\x5c\xcd\xb3\x46\xe6\xb7\x31\x2a\x47\x44\x03\x2a\xb4\xde\x05\xa1\x32\x6c\xbf\x1c\x25\x25\x39\x35\x38\x51\x59\x8c\x4e\x74\x52\x90\x70\xa1\x82\x3a\x42\x6d\x65\x0a\x18\x0c\xfd\x80\x0e\x94\x76\x76\xaf\x53\x37\xa4\xbe\x76\xca\xd5\x07\x56\xd2\xf5\x61\x65\xec\xfb\x84\xd1\x25\x9c\xda\x6e\x14\x20\x76\x42\x79\x04\xaf\xe9\x3b\x5e\x5c\x1e\xa6\x30\xfe\x7a\x1c\x78\x14\x24\x07\x9a\xfa\xd3\x30\x15\x28\x84\x0d\x1f\x75\x2a\x53\x8d\x3d\xea\x79\xda\xb5\xb9\xda\x10\x1d\x66\x52\xea\x13\x7f\xa6\x84\x24\x08\x8d\xe6\x03\x77\x39\x91\x1b\xa2\x3f\x77\xf4\x7f\x94\x5c\x03\xe3\xfe\xbc\x91\xd9\x65\x4b\xa7\x4a\x48\x15\xfb\x08\x00\x00\xff\xff\x7c\xbe\x53\x60\x1f\x05\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1311, mode: os.FileMode(438), modTime: time.Unix(1508198183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xcd\x72\x9b\x30\x10\x07\xf0\xbb\x9f\x62\x67\x7c\x69\x0f\x2c\xac\x3e\xf8\xc8\xad\xad\xdd\x8e\x0f\x8d\x33\x24\x9d\x9c\x09\x96\x1b\x5a\x07\x18\x10\xe3\xa6\x4f\xdf\x51\x48\x13\x7c\xd2\xea\xec\x9f\x35\xff\x5d\xad\x24\xd6\xeb\x35\x74\xbd\x69\xcf\x83\x85\x73\xd3\x52\x02\x53\x7f\xa8\xac\x81\x0f\xb1\xb1\x75\x7c\x6c\x06\x73\xae\x4e\x27\x9c\x46\x33\x7c\x5c\x39\xfd\xbd\x1b\x0c\x34\xed\xb1\xbb\x82\x47\x6b\xfb\xf1\x2a\x8e\x7f\x36\xf6\x71\x7a\xc0\xba\x7b\x8a\xeb\xa1\xfa\xfb\x1c\x3d\x55\x7f\xe2\xfb\xa6\x3d\x74\xe7\xf1\xb6\x7f\xfe\x7c\xea\xea\xdf\x66\x58\xad\xd6\x60\xda\x63\x37\xd4\x06\x86\x6e\xb2\x66\x80\xcd\xf5\xed\xaa\xe9\x6d\xf5\x70\x32\x23\x44\x16\xda\xca\x42\xb4\x83\x9b\x72\x5b\xee\x7f\xdc\xed\xae\xbf\x41\xd4\x83\xad\x7b\x88\xa2\x43\xdf\x0d\x16\xb4\x84\xe8\x17\x94\xdb\xcd\xae\xdc\x7e\xb9\x83\x28\xb2\x5d\xe4\x7e\x18\x41\x4b\xff\x4a\xd3\x81\xb9\xd2\x6a\x0d\xc3\x74\x32\xe3\x62\xc9\x1d\x7c\xdd\x97\xf7\x9f\xca\x8d\xfb\xdb\xa6\xdc\xdf\x40\x74\x00\x92\x48\x49\x86\x0a\x75\xc2\xa7\xc2\x47\x85\xa3\x12\x29\x2f\x90\x44\x1a\xa2\x75\x16\xa4\x73\x9f\x56\x09\x66\x19\x0a\x51\x60\x12\x0b\xe5\xd3\xa9\x46\xad\x91\x64\x1e\xa2\x53\xc9\xd3\x29\x12\x15\x48\x4a\x71\xaa\xbc\xd0\xde\x2a\x97\x3a\x2f\x42\x74\xc1\xd8\x76\x42\xa1\x25\x4a\xc9\x9a\x11\x85\x94\x25\xa8\x09\x29\xf7\x16\x79\xa1\xbd\x45\x2e\x35\x27\xf6\x9b\x16\xca\x3b\x82\x17\x3a\x24\xb7\x50\xfc\xdc\x12\x85\x77\x6f\x16\x58\xf2\x6b\xe4\xcd\xeb\x7f\x4e\xe4\x06\x37\x48\xb3\x1b\xe8\x74\xca\x0e\xfe\xa2\xbd\xb7\xc9\x9b\x4e\x75\x48\xbf\x67\xce\xee\xf8\x0b\xd7\x14\xc6\xa5\x97\xeb\x6c\xbe\x52\x24\x8a\xc4\xbf\x43\xb3\x16\x2a\x41\xff\x31\x5e\x60\x21\xfc\x2d\x77\x3a\x75\x97\x21\x49\x7f\x0b\x17\x98\x97\x63\xc6\x2a\x24\x86\xf2\xf7\x7a\x81\x43\x32\x33\x36\x7d\xc6\x45\x8a\x9a\xb7\x29\xb3\xe5\x86\x28\x52\x24\xe1\x9f\x8d\x82\x50\x48\x81\xb9\x3b\xee\x21\xd8\x1f\xe3\x1d\x33\x0e\xe3\x02\xfb\xcf\xe2\x2b\x26\xc9\x7b\x51\x67\xaf\x30\x13\x48\x39\xb3\xc8\x57\xed\xbf\x73\x96\x9a\xd9\x93\x59\xfb\x9f\x0f\xe1\xbe\x74\xdc\x3b\xa9\x18\xed\x5e\xe0\x94\xfe\x05\x00\x00\xff\xff\x28\x69\xc5\x4e\x90\x0a\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 2704, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfe\x8a\x93\xba\xc0\x40\x02\x65\x40\xaa\xc4\xc2\xce\xc4\xc0\x9c\x3a\xbe\xab\x21\xb1\x43\xec\x5e\x5a\x7e\x3d\x2a\x0c\x70\xd2\x5d\x19\xfd\xbe\xe7\xa7\xa7\xb7\x5e\xaf\x3b\x29\xc8\xad\x5a\xd7\x88\x1f\x3a\x3c\x5a\x0d\xdd\x95\x47\x03\x1f\x59\x73\xd0\x0f\x07\xc2\xfd\xf5\xea\x6c\x7d\x96\x8a\x1d\x71\x2f\xdb\x6e\x6f\x56\x74\xeb\xfd\x40\xb6\x3f\xec\x1c\x48\xf6\x50\xc3\xe7\xe9\x26\x87\xa3\x7f\x25\x8e\xd2\xf4\xa5\x9c\x9e\x92\xc0\x3b\xd6\xd5\x4a\xb1\x8e\x58\x1f\x7d\x00\xa3\x31\x18\x09\x3b\x4d\xea\x32\x41\x15\x95\xde\xbe\x13\x7e\x5d\x85\xdc\x8e\x78\x98\xaa\x20\x9b\x4b\x4f\x50\xd3\x12\x8a\x39\xba\x8c\x16\xce\x37\x01\x2e\x46\x44\x56\x97\xb5\x37\x06\xa5\x29\x19\x66\xfa\x0c\x2e\xd1\x88\x53\x2d\xc9\x40\x3c\xa3\xcf\xa7\xd6\xcd\xad\xb6\xb7\xbb\xfb\x5c\x97\x1a\x19\x65\x74\xed\x67\xcf\x29\x19\x43\xa2\xf8\xef\x92\x2d\x42\xb9\xc4\x42\xb2\x45\xac\x20\x6c\x2e\x94\xb2\x9c\xbe\x64\x71\x18\x07\xd4\x03\x19\x3a\x46\xfb\xf3\xd0\xda\x74\xe0\xaf\x00\x00\x00\xff\xff\xfe\xad\xae\xa8\x82\x02\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 642, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x72\x82\x40\x10\xc6\xf1\x9e\xa7\xf8\x66\x68\x92\xe2\x16\x0e\x0e\x45\xbb\x24\x98\x0c\x45\xd4\x39\xcd\x58\x23\x9c\x91\x04\xb9\x9b\xe3\x18\x34\x4f\x9f\xa1\x4b\x2a\xac\xf7\xb7\xff\xd9\xf5\x7d\x1f\xda\xa8\x76\xb0\x0e\x43\xdd\xce\xa1\xae\xce\x16\x78\x08\x94\x2b\x83\x53\x6d\xd5\x50\x34\x0d\xf5\x9d\xb2\x8f\xde\x68\xdf\xb5\x55\xa8\xdb\x93\x5e\xe2\xec\x9c\xe9\x96\x41\xf0\x59\xbb\x73\x7f\xa4\x52\x5f\x82\xd2\x16\x3f\x37\x76\x29\xae\xc1\xa1\x6e\x2b\x3d\x74\x3b\x73\x7b\x6e\x74\xf9\xad\xac\xe7\xf9\x50\xed\x49\xdb\x52\xc1\xea\xde\x29\x8b\x6c\xbd\xf3\x6a\xe3\x8a\x63\xa3\x3a\x30\x87\xb6\x70\x60\x39\xb6\x72\x25\x37\x1f\xfb\x7c\xfd\x06\x66\xe0\x4a\x03\xc6\x2a\xa3\xad\x43\x12\x83\x7d\x41\xae\xb2\x5c\xae\x5e\xf6\x60\xcc\x69\x36\x0e\x3a\x24\xf1\x74\xa9\xaf\xee\x2c\x79\x3e\x6c\xdf\xa8\xee\x4f\x32\xc7\xeb\x46\x1e\x9e\x64\x36\xae\x65\x72\xb3\x05\xab\xc0\x63\x4a\x43\xe2\x11\x25\x62\x8a\x8a\x90\x38\x4f\x89\x87\x31\xcd\xa7\xec\x4c\x90\xa0\x44\x50\xf4\xef\xa9\x09\x3a\x79\xc1\x2c\xa1\x24\xa2\x45\x4a\x51\xcc\xef\xb3\x3c\x4c\x89\x4f\x87\xa3\x70\x4e\x62\x46\x7c\x21\x88\x8b\xdf\x00\x00\x00\xff\xff\xb2\xac\x49\x2b\x4f\x02\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 591, mode: os.FileMode(438), modTime: time.Unix(1508198176, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x72\xdb\x30\x0c\x86\x77\x3f\x85\xee\xbc\xb4\x83\x41\x59\x52\x9c\x4b\xee\xba\x74\xef\xd4\xa1\x33\x42\x42\x32\x2f\x22\xc0\x90\xb0\x69\xf5\xe9\x7b\x6e\xae\x4d\x93\x93\xd4\x64\xfe\xbe\xff\x07\x09\x6c\xb7\xdb\x4a\x22\x71\x49\x5a\x15\xcf\xb7\x55\x8e\x53\xf5\xc9\x90\x5a\xe3\x38\x07\xcc\x4f\x60\x85\xfb\xcf\x9b\xab\xf8\x4d\x12\x55\x9e\x7b\xb9\xaf\x8e\xaa\x31\xdf\x1b\x33\x78\x3d\x9e\x1e\xc0\x4a\x30\x36\xe1\xcf\x69\x17\xf0\x62\x7e\x78\x76\x52\xf2\xf7\x38\x7d\x1d\xc5\x3e\x52\xda\x6c\x32\xa5\x33\xa5\x2f\x06\x77\x75\x5d\xb7\x80\xbb\x90\xc9\x0d\x04\x4c\x6a\x5e\xa0\x1b\xa1\x3c\x67\x7f\x37\xfe\x05\xd6\xe5\xfd\xbe\x6b\x61\x14\x86\x71\xe4\xf2\x3a\x76\xa5\xcd\xe1\x6e\x99\x36\x75\xd7\x74\x30\xda\x69\x11\xb7\x37\xab\xf8\xb0\x5f\xc6\x6d\x7b\xb7\x02\xbb\x95\xb9\x5d\x7d\x0b\x7d\xc2\x39\x28\x21\xa2\xd2\xc5\x1e\x91\x07\xda\x83\x26\xec\x7b\x6f\x03\x32\x0e\x94\xde\xb8\x53\x03\x99\x54\x3d\x0f\x19\x1c\x2a\x42\xf0\x36\x49\x96\x5e\xaf\x4b\x04\x7c\x44\xc7\xf9\x75\xc6\x3d\xdc\x7c\x38\x43\x27\x38\x4b\x52\xba\xcc\x04\x5e\xac\x81\xe4\xc3\xcd\x43\xb9\xcc\x9f\xfd\x4f\xd1\xae\x78\x5e\x9d\x9a\xe3\xc4\xa4\xcd\x3a\xa6\x53\x92\x48\xff\x38\x73\x6f\xc9\x4f\x01\x94\x46\x0a\xa4\x69\x5a\xea\xbb\x0a\x56\x42\x40\x76\xef\x91\x13\x39\x01\x1f\xcf\x87\x25\xe5\x79\xaf\xff\xfd\x65\x41\xcd\xc2\x6f\xe8\xaf\x00\x00\x00\xff\xff\x1c\x24\xda\xa2\xc1\x03\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 961, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x41\x53\xdb\x30\x10\x05\xe0\x7b\x7e\xc5\xce\xe4\xd2\x1e\xfc\xac\x5d\x49\x96\xcd\xad\x6d\x68\x27\x87\x02\x63\xe8\x70\x0e\x89\x29\x69\x43\xec\xb1\x95\x49\xe9\xaf\xef\x18\x0a\xb8\x97\xae\x38\x70\xe2\x8b\x66\xf3\xf4\xb2\x9a\xcf\xe7\xd4\x76\xcd\xfe\xd8\x47\x3a\x6e\xf7\x81\x86\xee\x81\xde\xe5\x4d\x5c\xe7\xb7\xdb\xbe\x39\xae\x76\x3b\x1c\x86\xa6\x7f\x3f\x1b\xe5\xd7\xb6\x6f\x68\xbb\xbf\x6d\x4f\xe8\x2e\xc6\x6e\x38\xc9\xf3\xef\xdb\x78\x77\xb8\xc1\xba\xbd\xcf\xd7\xfd\xea\xf7\x43\x76\xbf\xfa\x95\x5f\x6f\xf7\x9b\xf6\x38\x5c\x76\x0f\x1f\x77\xed\xfa\x67\xd3\xcf\x66\x73\x6a\xf6\xb7\x6d\xbf\x6e\xa8\x6f\x0f\xb1\xe9\x69\x71\x76\x39\xdb\x76\x71\x75\xb3\x6b\x06\xca\x22\xed\x57\x91\xb2\x25\x5d\xd4\xa7\xf5\xf9\xb7\xab\xe5\xd9\x17\xca\x3a\x8a\xeb\x8e\xb2\x6c\xd3\xb5\x7d\x24\x6f\x29\xfb\x41\xf5\xe9\x62\x59\x9f\x7e\xba\xa2\x2c\x8b\x6d\x36\xfe\x63\x20\x6f\xf5\x93\x0e\x9b\xc4\x93\x66\x73\xea\x0f\xbb\x66\x98\x1c\xb9\xa4\xcf\xe7\xf5\xf5\x87\x7a\x31\x7e\x6c\x51\x9f\x5f\x50\xb6\x21\xb6\x08\x25\xb8\x2c\xc1\x2e\xa4\xe0\x0a\x62\x2b\x14\x55\x82\x2d\x19\x1e\xff\x7c\xab\xff\xc9\x0a\xe2\x44\xb3\xce\x20\x18\x88\x30\xc4\xa9\x23\x8c\x38\x40\xa4\x78\x23\xf6\x26\x01\x33\x97\x60\x53\x80\xad\xaa\x3d\x83\x1d\xc3\x0a\x3c\xab\x56\xc0\x85\x83\x38\x03\xaf\xce\xfc\x82\x19\x62\x7c\xaa\xf6\x0c\xe7\x52\x70\x28\x61\x4b\x70\xda\xd0\xe1\xb1\x41\xe3\xe0\xa9\xda\x33\x84\xd5\x1b\x7f\xd6\xe3\x5f\x91\x8a\x2b\x0b\x4e\xd6\x22\x16\xa2\xb6\x74\xc4\x65\x40\x61\xc0\x46\xfd\xa1\x14\x0e\x0e\x62\x61\x72\x51\x93\x2e\x3c\xbc\x87\x73\x60\x53\xbe\xc1\xaa\xe5\x78\xb2\xcc\x16\x7a\xc8\x13\xab\x06\xf1\x64\xc5\x0b\x82\x5a\x8c\x57\x5b\xbd\xe1\x5c\xae\xd4\x0e\x15\x05\x98\x2b\xf0\x18\x85\xd7\xaf\x63\xaa\xf5\x90\x27\xba\xd4\x63\x9e\x68\x7d\x6e\x36\x0e\x6e\x4c\x39\xa0\x50\xfb\xf9\x82\x2b\x88\x1a\xf5\x5f\x2c\x52\xa6\xac\xdc\x57\x2c\x46\x6d\xc7\xb3\xb6\x01\x9c\xb0\xf8\x99\x9f\x16\x74\x95\x50\xa6\x09\x96\x94\x97\xc2\x81\x83\x81\x7d\x7c\x02\x52\xf5\xb8\x67\x9c\x1e\xf6\x54\x27\xbc\x84\x13\xad\x36\xea\x45\x5b\x48\xc2\xc3\x19\xc0\x1c\x20\xd6\x27\x6c\x3c\xae\xf8\xf1\x62\xc4\x94\x60\x29\xfe\x04\x00\x00\xff\xff\x51\x93\xee\x1f\x09\x09\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2313, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4f\xc3\x30\x10\x05\xe0\x3d\xbf\xc2\x52\x16\x18\x6a\x93\x10\xa9\x55\x25\x16\x76\x26\x06\x66\xc7\x3e\xa7\x16\x89\xcf\xd8\x17\x4c\xf9\xf5\x08\x52\x05\x18\x6a\x67\xf5\xfb\x7c\xef\xd5\x75\xcd\xd0\x83\x4b\x81\x58\xb2\x6e\xcf\x66\xaf\x25\x01\xbb\x11\x40\x4a\x68\x17\x27\x19\xdf\xb8\x42\x67\x6e\xab\x6f\xfb\x84\x01\x98\x75\x06\x8f\xec\x44\xe4\xe3\x51\x88\xc1\xd2\x69\xee\xb9\xc2\x49\xa8\x20\x3f\xcf\xbb\x49\x7e\x88\x17\xeb\x34\xa6\xf8\xec\xcf\x8f\x23\xaa\x57\x08\x55\x15\x21\xbc\x43\x78\x10\xcd\xa1\xeb\x77\x0d\x1f\x79\x5a\xcc\xd2\xf8\xf3\x7f\x35\x6d\x2b\xf7\x65\xa3\x9a\xa2\xb9\x3f\x94\x48\x07\x50\x22\xd2\xc8\x22\x99\xb9\xc6\xe4\x46\x94\x3a\xc7\x7a\x6d\x4a\x97\x14\x8d\x3a\x0b\xd6\x9e\xc9\xaa\x80\x11\x0d\x5d\xc9\x73\x37\xe2\xa6\xb9\xa6\xbb\x2b\xcd\x35\xd0\xf2\xcb\xfb\x95\x3d\x66\xe0\x3a\xf2\xbe\xd9\xd4\xb8\xde\xf8\x6f\x1c\xd0\xaf\xc9\x7c\x5f\xa2\x4b\x82\x61\xf8\x93\xa4\x94\x1b\xf0\x15\x00\x00\xff\xff\x91\xff\x09\xc0\x08\x03\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 776, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x41\x8f\x94\x30\x14\x07\xf0\x3b\x9f\xe2\x25\x5c\xf4\xd0\x07\xaf\xa5\x05\xf6\xa6\xce\x68\xe6\xe0\xce\x86\x5d\xb3\x67\x16\x3a\x2e\xca\x52\x52\x4a\xc6\xf5\xd3\x1b\x74\x34\x43\x62\x52\x7a\xe6\xc7\x3f\xed\xbf\xaf\x8d\xe3\x18\xcc\xa8\x87\xb3\x75\x70\xee\x86\x1c\xe6\xb1\xad\x9d\x86\x37\x89\x76\x4d\x72\xea\xac\x3e\xd7\x7d\x8f\xf3\xa4\xed\xdb\x68\xc1\x9f\x8d\xd5\xd0\x0d\x27\x73\x03\xcf\xce\x8d\xd3\x4d\x92\x7c\xed\xdc\xf3\xfc\x84\x8d\x79\x49\x1a\x5b\xff\x7c\x65\x2f\xf5\x8f\xe4\xb1\x1b\x5a\x73\x9e\xee\xc7\xd7\xf7\xbd\x69\xbe\x6b\x1b\x45\x31\xe8\xe1\x64\x6c\xa3\xc1\x9a\xd9\x69\x0b\xbb\xdb\xfb\xa8\x1b\x5d\xfd\xd4\xeb\x09\x98\x83\xa1\x76\xc0\x0e\x70\x57\xed\xab\xe3\x97\x87\xc3\xed\x27\x60\x23\xb8\x66\x04\xc6\xda\xd1\x58\x07\x52\x00\xfb\x06\xd5\x7e\x77\xa8\xf6\x1f\x1e\x80\x31\x67\xd8\xf2\x61\x02\x29\xfc\x49\x73\xbb\x31\x29\x8a\xc1\xce\xbd\x9e\xae\x22\x0f\xf0\xf1\x58\x3d\xbe\xab\x76\xcb\x6f\xbb\xea\x78\x07\xac\x05\x12\x48\x69\x8e\x19\xca\xd4\x47\xf9\x42\x05\x52\x51\x22\x71\x19\xa4\x55\x88\x96\x79\x90\x2e\x7c\x3a\x4b\x31\xcf\x91\xf3\x12\x57\x0d\xff\xd7\x2a\x89\x52\x22\x89\x02\x89\x78\x08\xce\x02\xb0\xbf\x8e\x2b\x5c\x6c\xc5\x4a\x20\xe7\x14\x82\xbd\x1b\x24\x91\x21\xe5\x29\x4a\x42\x2a\xbd\xf3\xf1\x4f\x0b\x14\xdb\x71\x81\x69\xc2\xbd\xed\xfd\xe5\x44\x12\xd5\xe6\x75\x93\x92\xc8\x33\xef\x80\xac\x79\x19\xc4\xa5\xb7\xf1\x35\xf7\x4e\x20\xc9\x1c\xa5\xc2\x52\x21\x71\x3f\x2e\x09\xb9\xe0\x58\x2c\x45\x06\x60\xe5\x3f\x9f\x2b\xec\xef\xfb\x82\x49\x94\x9b\xb6\xb8\xe2\xfe\xb3\xff\xcd\x33\xcc\x39\x52\xb1\x31\xfc\xa2\xbd\x77\x67\xa5\x37\x36\xf8\x47\xfb\xef\x03\x5f\xde\x55\xb5\xbc\x0d\x28\x8b\x5f\x01\x00\x00\xff\xff\x6b\xe3\x24\x67\xa5\x06\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 1701, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd1\xcf\x8e\x9b\x30\x10\x06\xf0\x3b\x4f\x31\x12\x97\xf6\xe0\xc1\x63\x6c\xfe\xec\xad\x2d\x69\xc5\xa1\x9b\x15\x49\x95\x33\x01\xa7\xa1\x25\x18\x19\x23\x92\x3e\x7d\xc5\xa5\xea\x9e\x4c\xce\xfe\xf9\xd3\x37\x33\x61\x18\x82\x19\xf5\xb0\x58\x07\x4b\x37\x64\x04\xfa\xee\x6c\x0d\x1f\x22\xed\x9a\xe8\xd2\x59\xbd\xd4\x7d\x8f\xf3\xa4\xed\xc7\x60\xc5\xdf\x8d\xd5\xd0\x0d\x17\xf3\x02\x57\xe7\xc6\xe9\x25\x8a\x7e\x76\xee\x3a\x9f\xb1\x31\xb7\xa8\xb1\xf5\x9f\x07\xbb\xd5\xf7\xe8\xd4\x0d\xad\x59\xa6\xc3\xf8\xf8\xdc\x9b\xe6\xb7\xb6\x41\x10\x82\x1e\x2e\xc6\x36\x1a\xac\x99\x9d\xb6\x50\xbc\x1e\x82\x6e\x74\xf5\xb9\xd7\x13\x30\x07\x43\xed\x80\x95\xf0\x56\xed\xaa\xfd\x8f\x63\xf9\xfa\x0d\xd8\x08\xae\x19\x81\xb1\x76\x34\xd6\x81\x8a\x81\xfd\x82\x6a\x57\x94\xd5\xee\xcb\x11\x18\x73\x86\xad\x0f\x13\xa8\xd8\x9f\x34\xb7\x1b\x93\x82\x10\xec\xdc\xeb\xe9\xbf\xc8\x12\xbe\xee\xab\xd3\xa7\xaa\x58\xbf\x15\xd5\xfe\x0d\x58\x0b\x14\x63\xc6\x91\x04\x2a\xe9\xa3\x92\x23\x51\x86\xc4\x63\x4c\x37\xdb\x04\x29\xe6\x3e\x9d\x48\x94\xa8\x24\x0a\xb1\x59\xbe\x5b\x96\x87\x7a\x27\x4b\x14\x2a\x81\xc4\x33\x14\xf9\x76\xab\x9e\xb0\xe4\xef\x4b\x31\xad\x63\x61\x42\xc8\x23\xe1\xed\x4c\x2a\x45\xa5\x90\x62\x89\x24\xbd\x1b\xfe\xa7\x15\x92\xc8\x9e\xd1\xfe\xeb\x09\x2e\x31\xcd\x91\xf2\x14\x05\xdf\xa0\x53\x94\x09\x52\xbe\xf6\xfe\x1b\x00\x00\xff\xff\x41\x26\x9f\xdc\xbb\x03\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 955, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x31\xaf\x9b\x30\x10\xc0\xf1\x3d\x9f\x02\x29\x4b\x3b\xc4\x60\x87\x24\xe4\x49\x5d\xba\x77\xea\xd0\xf9\x6a\x0e\x62\x3d\x7c\xf6\xb3\x2f\x21\xf4\xd3\x57\xb4\x52\xd5\x3c\x3d\x5f\x56\x7e\x7f\xcc\x71\x12\x6c\xb7\xdb\x2a\x44\xa4\x39\x71\x35\x3b\xea\x74\x95\xe3\x52\x7d\xaa\x91\x6d\xdd\x53\xf6\x90\xdf\x94\x0d\x34\x7c\xde\xac\xe5\xb7\x90\xb0\x72\x34\x84\x97\xea\xc2\x1c\xf3\x4b\x5d\x8f\x8e\x2f\xd7\x9f\xca\x06\x5f\xdb\x04\xbf\x96\x9d\x87\x7b\xfd\xc3\x51\x1f\xe6\xfc\x3d\x2e\x5f\xa7\x60\x5f\x31\x6d\x36\x19\xd3\x0d\xd3\x97\x1a\x76\x4d\xd3\x68\x05\x3b\x9f\xb1\x1f\x51\x11\x72\xfd\x88\x46\xc2\xbd\x84\xad\x84\x07\x09\x8f\x12\x9e\x24\xec\x24\x3c\x0b\xa8\x1b\x09\xa5\x0d\xe9\xf2\x86\x3e\xba\x6a\xfb\xac\x8d\xe9\xd4\x14\x48\x4d\x13\xcd\x1f\x68\xdb\x4a\x7a\x3c\x48\x7a\xda\x4b\xda\x9d\xca\x6a\x9a\xb6\x69\xd5\x64\x97\x02\x6b\x63\xce\xc2\xdd\xda\x1c\x8e\x22\x9f\x84\x77\x36\xda\x74\xba\xcc\xfb\xfd\xb9\x3c\x58\xa7\x8b\x07\x07\x1f\x81\xf1\x6e\x2f\x40\x23\x6a\xc5\x09\x86\xc1\x59\x0f\x04\x23\xa6\xc7\x16\xaf\xea\x16\x12\xe3\x5d\xf5\xc0\xa0\xbc\xb3\x29\xe4\x30\xf0\x9f\x4f\xe9\x5f\x95\x91\xd9\xd1\x98\x77\xb3\x23\x39\x8c\x0b\x21\x1b\x99\x61\x62\x39\xc0\x6b\x0a\x11\xff\x6b\xe0\x15\x7a\xca\x8f\x93\xe7\x37\xaf\x18\x27\xf4\xc8\x69\x29\x9e\xc7\xc0\x79\x40\xa3\xae\xb1\x07\xc6\xa7\xd9\x9c\x4b\xc9\xfa\x28\x71\x93\x6b\x60\x83\xf7\x40\xfd\xf3\xb9\xfe\xee\xfc\xe9\x3a\xd7\x7f\xa1\x72\xf1\x76\x7c\x17\xfc\x0e\x00\x00\xff\xff\x3f\xb3\x2b\xe0\x30\x05\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1328, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xbf\x6f\xdb\x3a\x10\x07\xf0\xdd\x7f\x05\x01\x2f\xef\x0d\xfa\x8a\x77\x24\x45\x31\xdb\x7b\x75\x5a\x78\x68\x12\x28\x29\x32\x3b\xb6\xd2\xb8\x75\x2c\x41\x92\xe1\xa6\x7f\x7d\x41\x25\x71\xd5\xa5\x47\x0f\x9e\xfc\x11\x71\xbf\xc8\x9b\xcf\xe7\xaa\x69\xeb\xfd\xb1\x1b\xd4\x71\xbb\x2f\x49\xf5\xed\x8b\xfa\x27\xaf\x87\x75\xfe\xb8\xed\xea\xe3\x6a\xb7\xc3\xa1\xaf\xbb\x7f\x67\x91\x7e\x6e\xba\x5a\x6d\xf7\x8f\xcd\x85\x7a\x1a\x86\xb6\xbf\xc8\xf3\xaf\xdb\xe1\xe9\xf0\x80\x75\xf3\x9c\xaf\xbb\xd5\xcf\x97\xec\x79\xf5\x23\xbf\xdf\xee\x37\xcd\xb1\xbf\x6d\x5f\xfe\xdf\x35\xeb\xef\x75\x37\x9b\xcd\x55\xbd\x7f\x6c\xba\x75\xad\xba\xe6\x30\xd4\x9d\x5a\x5c\xdd\xce\xb6\xed\xb0\x7a\xd8\xd5\xbd\xca\x06\xb5\x5f\x0d\x2a\x5b\xaa\x9b\xea\xb2\xba\xfe\x72\xb7\xbc\xfa\xa4\xb2\x56\x0d\xeb\x56\x65\xd9\xa6\x6d\xba\x41\x39\xa3\xb2\x6f\xaa\xba\x5c\x2c\xab\xcb\x0f\x77\x2a\xcb\x86\x26\x8b\x7f\xf4\xca\x19\xf9\xa4\xc3\x26\xf1\xa4\xd9\x5c\x75\x87\x5d\xdd\x4f\x8e\x5c\xaa\x8f\xd7\xd5\xfd\x7f\xd5\x22\x7e\xb6\xa8\xae\x6f\x54\xb6\x51\x64\xe0\x4b\x50\x69\x61\x6d\x8a\x0d\x60\x13\x50\x84\x04\x5b\x12\x1c\xfe\x48\xea\x6f\x32\x80\x2d\x4b\x96\x0d\x42\x09\x1b\x40\x62\xb0\x91\x86\x91\x32\x49\xd6\x6a\x78\x0f\xe6\x02\x6c\xc5\xcc\x26\xd8\xe9\x54\x5c\x22\x88\xc9\x39\x02\x59\x82\x61\x38\x31\x62\xc7\xa0\xc2\x82\x0d\x81\x5d\x2a\xb6\x1a\x4e\x4c\xef\x84\x09\xac\x93\x8f\x76\x94\x30\x3f\x11\xc7\x61\xb3\x3e\xc6\x92\xaa\x1d\x81\x49\x2e\xde\x9b\x8e\xbf\x22\x15\x07\x03\x4a\xd6\xcc\x06\x2c\x4e\x73\xc4\xa5\x47\xa1\x41\xda\x4b\xb8\xb0\x88\x3d\x84\xce\x59\x2c\xde\xab\xf5\x90\x67\x6e\x9c\x0b\x33\xf6\x85\xca\x32\x59\x17\x20\x2d\x6b\x07\xe7\x60\x6d\xba\x25\x8a\x45\x3e\xc3\x8a\xad\x9e\x58\xb1\x1d\xaf\x96\x1d\xc3\x9e\x61\xc3\x19\x96\x82\xdc\x90\x13\x66\x2d\x67\x57\x80\x28\x3e\x70\x16\xe4\xe4\x09\x9a\x6a\xb9\x23\x13\x5d\x8a\x2f\xc1\x54\xcb\x49\x92\xb6\xb0\xb1\x25\x1e\x85\x78\xa5\x4e\x38\x40\x7e\x9d\xdf\x70\x7c\x44\x13\xb6\xc9\x6f\x9c\x50\xec\x77\x6d\x3c\x28\x61\xa7\x11\x81\x99\xc0\x01\xec\x12\xb6\xa5\x05\x79\x0d\xa3\x93\x22\x99\xea\x84\x9d\x39\xd1\x67\x45\x92\x50\xee\x58\x0c\x2a\xc6\xe6\x90\xbc\x67\x5f\xb9\x07\x1b\x97\xf0\xf2\x92\xf3\xe3\xe5\x35\x26\x29\xf0\xa8\x0b\x50\xb0\xf0\x72\x05\x27\x58\x2e\xe0\x04\xcb\x61\x04\x1a\x47\x84\x75\x09\x62\x39\xc7\x91\x07\x38\x0d\x12\xaf\xe4\x04\x7b\xf1\xb6\x9f\x30\x83\xb4\x7c\x23\xdf\xb5\x85\xe3\x5f\x01\x00\x00\xff\xff\x55\x7f\x32\xae\x23\x0b\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2851, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xbd\x6e\xc3\x20\x10\xc0\xf1\x3d\x4f\x61\x29\x4b\x3b\x04\x8c\x8d\x9b\x0f\xa9\x4b\xf7\x4e\x1d\x3a\x63\x38\x1c\xab\x36\x38\x40\x42\xd3\xa7\xaf\xd2\x44\x8d\x2a\x35\xb9\x5b\xc3\x2f\xff\x33\x08\xe6\xf3\x79\xe1\x27\x70\x39\xa4\x22\xf7\x6e\x25\x8a\xfd\x64\x54\x82\xe2\x81\x43\xd2\xdc\xb8\x38\xaa\xb8\x63\xda\x3b\xfb\x38\x3b\xe1\x57\x1f\xa0\xe8\x9d\xf5\x9b\x62\x9b\xd2\x14\x37\x9c\x77\x7d\xda\xee\x5b\xa6\xfd\xc8\x75\x50\x5f\xc7\xc5\xa8\x3e\xf9\x7b\xef\x8c\xcf\xf1\x6d\x3a\xbe\x0c\x5e\x7f\x40\x98\xcd\x22\x84\x03\x84\x67\x2e\xca\x72\xb9\x10\x6c\x60\xf9\x6c\xce\x13\x7f\xfe\x7f\x35\x42\x68\xd4\x2c\x75\x83\x1a\xb5\xaa\x51\xa3\x0d\x3e\xcb\x94\x6b\xdc\x08\x8b\x1b\x89\x77\xa0\xc4\xf7\x65\xdb\x16\x33\x55\xbd\x96\xa8\x69\x5a\xc0\x8c\x44\x4f\x50\x2a\x83\x91\x27\x81\x89\xf5\x0a\x3d\x19\xb5\x67\xc6\x67\x37\x78\x65\x10\x76\x90\x24\xd9\x42\x89\xcd\x6c\xbb\x53\x4c\x31\x33\xb0\x1c\xd9\xd8\xeb\xe0\xa3\xb7\xe9\x3f\x04\x23\x82\x04\x29\x25\x48\xad\x8a\xd4\xaa\x48\xad\x9a\xd4\xaa\x49\x2d\x49\x6a\x49\x52\xab\x21\xb5\x1a\x42\x4b\x97\xe8\x13\xd7\x69\x30\x77\x01\xe5\x42\xd9\x0a\x1b\x63\xd1\x5b\x6e\xa1\x62\x97\xdf\x6f\xec\xe6\x24\xf2\xee\xee\xea\xcd\x93\xb0\x1d\xf5\x71\xfc\x06\xfe\x1a\x07\xe9\x6a\xe2\x10\x91\x6f\x25\x0e\x43\x97\x2e\x2b\x3e\x74\xfc\x3b\x00\x00\xff\xff\x27\xf7\xc6\xea\xb5\x06\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 1717, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\x4d\x6f\xda\x4c\x10\x07\xf0\x3b\x9f\x62\x24\x2e\xcf\x73\xd8\xb1\x67\x5f\xfc\x92\x5b\x5b\x68\xc5\xa1\x21\x72\x52\xe5\xec\x98\xa5\x71\x4b\x6c\x6b\xbd\x16\x4d\x3f\x7d\x65\x48\x83\x91\x2a\xcd\xfa\xcc\x8f\xd5\x5f\xff\x9d\x1d\x58\x2e\x97\xd0\x76\xb6\x39\x3a\x0f\xc7\xba\xc9\x08\x86\x6e\x57\x7a\x0b\xff\x45\xd6\x57\xd1\xbe\x76\xf6\x58\x1e\x0e\x38\xf4\xd6\xfd\xbf\x18\xf5\xd7\xd6\x59\xa8\x9b\x7d\x7b\x03\xcf\xde\x77\xfd\x4d\x14\x7d\xaf\xfd\xf3\xf0\x84\x55\xfb\x12\x55\xae\xfc\xfd\x2a\x5e\xca\x5f\xd1\x63\xdd\xec\xda\x63\x7f\xdf\xbd\x7e\x3c\xb4\xd5\x4f\xeb\x16\x8b\x25\xd8\x66\xdf\xba\xca\x82\x6b\x07\x6f\x1d\xac\x6e\xef\x17\x75\xe7\xcb\xa7\x83\xed\x41\x78\x68\x4a\x0f\x62\x03\x77\xc5\xba\xd8\x7e\x7b\xd8\xdc\x7e\x01\xd1\x81\xaf\x3a\x10\x62\xd7\xb5\xce\x83\x51\x20\x7e\x40\xb1\x5e\x6d\x8a\xf5\xa7\x07\x10\xc2\xb7\x62\xfc\xa0\x07\xa3\xf8\x93\x86\x5d\xe0\x49\x8b\x25\xb8\xe1\x60\xfb\xc9\x91\x1b\xf8\xbc\x2d\x1e\x3f\x14\xab\xf1\x6b\xab\x62\x7b\x07\x62\x07\xa4\x90\xe2\x14\x35\x9a\x98\xa3\x72\xa4\x0a\x29\xcb\x91\xa4\x99\xa5\x93\x39\xda\xa4\xb3\x74\xc6\x69\x1d\x63\x9a\xa2\x94\x39\x5e\x35\xfc\x4f\x6b\x24\x52\xa6\x50\xa7\x48\x29\x1b\xfa\x0d\x13\x65\x48\x29\x71\x3a\x31\x68\x0c\x92\xca\x30\x8e\xa4\x0e\xd4\x89\x9a\xa1\xa5\x96\x28\x0d\x8b\x49\x11\x4a\xa3\x90\x34\x12\xdf\x08\x29\x8d\x94\xc6\x68\x28\x28\xc9\x3b\x57\x28\xf3\x19\x58\xb1\xe3\xf7\x8e\xc3\x0a\xfc\xcb\x89\xc6\x6e\x66\x69\xf6\xe2\xa7\x3a\x09\x0e\x7e\xd2\x32\x58\x27\xe3\x85\xb2\xc3\x7d\xcd\x83\x1b\x3f\x71\xc3\xce\xec\x35\xe7\x67\xc5\xa4\xe7\x39\x8c\x31\xe3\xa3\x5c\x70\xc0\x82\x98\x68\x29\xf9\xca\x47\x9d\x8c\xcf\x9e\x14\x5f\xe1\x04\x87\xa5\x3e\x63\x3d\x27\x86\xe6\xbb\x9e\xe0\x39\x99\x03\x2e\xfd\x8c\xf3\x04\x03\x96\xc3\xc5\x86\x86\xc8\x13\x24\x19\x36\x1b\x67\xcc\x2f\x78\xca\x09\xa5\x92\x98\xc5\x01\x3b\x7b\x8a\xf9\xcc\x17\x1c\xf0\x72\x27\x98\x7f\xb8\x6f\x98\x54\x8e\x94\xcd\xe2\x21\x4f\xeb\x8a\xf3\xd7\x78\xe2\x1a\xd3\xd3\x4f\xd4\x2c\xcd\x56\x28\xc7\xff\x0b\x09\x12\xe9\x80\xbe\x27\x38\xa1\x3f\x01\x00\x00\xff\xff\xc2\xb5\x6d\x83\xab\x09\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 2475, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xcf\x72\xd3\x30\x10\xc7\xf1\x7b\x9f\xc2\x33\x39\xef\x2f\xda\xd5\xea\x8f\x73\xe4\xce\x89\x03\xe7\x10\x02\xcd\x40\xe3\x4c\x1a\xa6\x2d\x4f\xcf\xc8\x26\x89\x44\x25\x71\xd3\xb7\xfd\x54\xb5\x65\x4b\x5e\xad\x56\xc3\xe7\xc3\xf1\xeb\xf4\xf2\xfc\xe9\xf4\xf6\xe1\xe7\xb4\xfb\xb1\x3f\x0f\x27\x39\x0d\x2f\x87\x23\x9b\x61\xff\x7a\x39\x6f\x1f\x92\xfa\x38\x9d\xf7\xc3\xe1\xf8\x6d\xda\x0c\x8f\x97\xcb\xe9\x79\xb3\x5e\x7f\x3f\x5c\x1e\x7f\x7d\xc1\x6e\x7a\x5a\xef\xce\xdb\xdf\x6f\xf4\xb4\x7d\x5d\xbf\x9b\xed\xe1\xe1\xdd\x8f\x36\x6c\x11\x0d\x58\xe0\x94\xb2\x71\x5d\xb2\x09\xb0\x60\x89\x94\x47\xdb\x0a\x43\x8c\xa1\xa2\x2a\x5a\x2c\xc6\x00\x0e\x11\x1c\x2c\x15\x55\xd1\x6a\x10\x02\x44\x14\x91\xb2\x71\x57\x32\x53\x1e\x1d\xeb\x20\x7a\x9f\x77\xae\x8e\xf6\x30\x74\x1f\x8b\x73\x75\x3b\x1a\xb0\xf5\x90\x19\xdf\xa2\x6e\xd9\x30\xd4\xa7\xfb\xa7\xa2\x1a\x9a\x15\xa2\x0c\xd6\xf9\x0e\xb3\x6c\xf9\x08\x36\x16\x81\xf2\x68\x58\x09\x60\x15\x04\x4f\x45\x55\xb4\x57\x28\x9c\xc2\xd0\x75\x54\x5f\x0b\xef\xe0\x04\x6c\xd2\xff\xa6\x3c\xba\x76\xb4\x94\x47\xc7\xc6\x74\x05\xb7\x71\xfb\x1a\xdc\xf2\xfb\x65\xde\x6b\x34\xad\x38\x81\x5e\xed\x12\xb5\x77\xde\x28\xd4\x40\xd8\xc0\x0a\x15\xd5\xd2\x3a\xef\xb7\xf0\x57\x5f\xab\xa3\x23\xd2\xde\xcb\xa2\x6b\xd9\x58\x2a\xaa\xa1\x85\x75\x79\x85\x99\xca\x6c\x7a\x07\x56\xbf\xec\xed\xb2\xab\x67\x01\x43\x9c\x85\x55\x88\x4d\x87\x41\x9e\x1d\xef\x19\x77\xed\xb9\xf1\x34\xd9\x2a\x38\x18\x70\x74\x08\xc9\xe7\x59\xf3\x2e\xcc\x4f\x3c\x39\xeb\xa9\xcc\xff\xf9\x58\xfa\xea\xea\x67\x40\x0d\x95\xd9\xf3\x6e\x39\x57\x8b\xac\x79\x1f\xe1\x2d\x38\x22\x8c\x94\x47\xed\x5c\x35\x8a\x30\x82\xc7\x00\x43\x59\xd4\x57\x32\x01\x4e\x3b\x47\x19\xa2\x4a\xff\x74\xf5\x2f\x42\x3a\x9c\xd2\x84\x42\x79\xb4\x6d\x3a\xcf\x64\xa4\xa2\x3a\xda\x59\xb0\x73\x54\x66\xc7\x8f\x69\x99\xa9\xa8\xbe\x16\x47\x45\xf5\xb5\xb5\x54\x54\x5f\xab\xa1\xa2\xda\x5a\xd2\x37\xef\x76\xdd\x4b\x35\xb4\x8f\x60\x9f\x3e\x35\x0b\xbf\xe7\x9f\x00\x00\x00\xff\xff\x01\x40\x3f\x69\x40\x08\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 2112, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x99\xbd\x92\x14\x49\x0e\x80\x7d\x9e\x62\x22\xb0\xa5\x49\x29\xff\x31\xcf\x3f\xeb\x8c\xb3\x39\x8e\x3b\x26\x76\x61\x26\x80\x0d\x96\x7d\xfa\x0d\x65\x75\x77\x49\x43\x4a\x6d\x34\xe4\x47\x7d\x9d\x28\xff\x95\xd5\x6f\xdf\xbe\x7d\xf8\xf7\xd3\x97\xff\x3e\xff\xf8\xf6\xaf\x97\x9f\xff\xf8\xfd\xf9\xc3\x6f\x1f\xbf\x3e\xbc\xf0\xcb\xc3\x8f\xa7\x2f\x94\x1e\xbe\xbd\xfc\x7c\x23\xce\x3f\x9f\xbf\x7e\x7c\x78\xfa\xf2\xbf\xe7\x77\x0f\x9f\xbe\x7f\x7f\xf9\xf6\xee\xf1\xf1\xff\x4f\xdf\x3f\xfd\xf1\x1f\xfc\xf0\xfc\xf9\xf1\xc3\xd7\xf7\x7f\xfd\x84\xcf\xef\xff\x7c\xfc\xa5\xae\x37\x6f\x7e\xf9\xa7\x77\x94\xb1\x0d\x1c\x8c\x03\xce\xa2\xef\x75\x2c\x1d\x54\xd9\x37\x07\x12\x4f\xd0\xb0\x77\x7b\x43\xa6\x81\x44\xab\xde\x93\x02\x7b\x22\x4d\x02\x43\xa1\xcd\x94\xc0\x90\x63\x0f\xa4\xde\x91\x4a\x01\x43\xbe\x3d\x12\xce\x04\x1a\x02\xb7\x21\xd7\x5b\xcd\x07\x39\xf6\x44\xce\x13\xdb\xea\xbd\x1b\xec\xdd\x41\x58\xb1\x66\x38\x8b\xbe\x37\x91\x0b\x83\x86\xbd\x4b\xa9\x63\xc5\xb1\x1a\x76\x2d\x87\xe6\x50\xe6\x6e\xee\x70\xc6\xd9\xb1\x11\x52\xee\xa0\xc1\x75\x39\x4d\x9c\x57\xf7\x00\xc7\x9d\x48\x09\x89\x40\x95\x03\x73\x62\x29\xa0\x21\x74\x9b\x76\x5b\xe0\x52\x93\x0f\x18\xf2\x6d\x26\xe4\xd4\xc1\xd0\xde\xa6\xc4\x58\x90\x6b\x06\x0d\xbe\xcb\x84\x05\x54\xd9\x37\xa9\x56\xa4\x92\xc0\xa2\xe7\x67\xa4\xc1\x48\xdc\xc0\xe2\xc6\x2f\x09\xdb\xc4\x92\x90\x6a\x07\x0d\xae\xcb\xd4\xb0\x67\xd0\x10\xba\x5c\x09\x0c\x05\xf6\xc0\xc6\xa0\xc1\x77\x99\x65\x98\xc1\xd0\xde\xee\x09\x99\x13\x72\x19\x60\xc8\xb1\x1b\x12\x52\x6f\xa0\xca\xbe\xc9\x58\xe0\x2c\x46\x1e\x1d\x2d\xbb\x81\xe3\x76\x64\x1e\x38\x0f\xf7\x0a\x7b\x77\xc8\xb8\x4e\x2c\xab\x13\x6e\xb0\x77\x69\xad\x78\xec\xab\x0b\x6e\x10\xb8\x05\xa9\x4e\x30\xe4\xdb\xcc\x72\xcc\x68\xf0\xdc\x82\x54\x64\xb8\x12\x58\xf4\xfc\x8a\x24\x5b\x80\x2a\x7b\xe6\xda\xfa\x91\xcb\xa5\xe6\x1b\x06\x7e\x25\xe4\x09\x86\x1c\x9b\x69\x55\x47\x63\x8d\x8b\xc2\x8d\x5f\xe5\x21\x61\x66\xac\x04\x1a\x76\xae\x4c\x05\x42\xaa\xc8\xa5\x81\x21\xcf\x5e\x8d\xc2\x9c\xc1\x50\x6c\xd7\x09\x86\x22\x5b\xb6\xb7\x0a\x16\x03\xbf\xae\xf1\x31\xe4\xd9\x7d\x2d\xd3\xc1\x60\x28\xb6\xa9\x74\xb0\x18\xf9\x19\x29\x57\xb0\xe8\xf9\x03\xb9\x20\xf5\x4b\xec\x57\xf2\x6c\xd9\xf8\x33\x96\x01\x86\x02\x7b\x4c\x1c\x19\x0c\x39\xb6\xa4\x17\xa5\xaf\x99\x6b\x31\xf0\x65\xae\x12\x83\xc5\xc0\x97\x4f\x03\x43\x81\x3d\xa5\xa3\x4f\xfd\xc0\xc8\xcf\xeb\x38\xb5\xe8\xfb\x32\x30\x9c\xc1\x90\x63\x0f\xd9\x78\x18\x29\x1f\xb5\x9f\x18\xf9\x15\x39\x29\x7f\xa1\xe7\x77\x6c\x49\x52\x21\x30\xb4\xb7\x39\x37\x2c\xf2\xd7\x5a\x4d\x27\x6d\xec\x56\xb0\x60\x43\x4a\x09\xce\xa2\xe7\x71\xc6\x8b\x26\x5d\x51\x77\x33\xb6\x55\xcc\x73\x6d\x53\x9c\x13\x18\xda\xdb\x12\x60\x43\x1e\xa0\xca\xae\x49\x29\x61\x82\xb3\xec\xc6\x70\xd9\xa0\x5a\x01\x0d\x7e\x04\x92\xbd\xa7\x0e\x86\x1c\xbb\x22\x4b\xe6\x7c\x04\x7c\x05\xd7\x95\xe6\x27\x50\x65\xd7\x2c\x45\xb6\x61\x55\x0e\xcd\xa2\x4c\xaf\x5d\xeb\x29\xa5\x01\x1a\x62\x77\x6a\x77\x3b\x5f\xd6\x63\x39\xc3\xf9\xda\xac\x03\x5c\x77\x1d\xcb\xd7\x86\x1d\x10\xbb\xac\xdd\xdd\x5e\xa1\x1e\x67\xed\xee\xd6\xe6\xe5\x71\x4e\x58\xaf\xf1\x1e\xe0\xbb\xbd\xc9\xdd\x4b\x83\x3f\x13\x8e\x15\x71\x2b\xfb\xf3\xb1\x22\x57\x3e\x5d\x99\x65\x7b\x57\x52\xfc\xb9\x36\x56\xca\x04\x16\x37\x7e\xef\x28\x27\xc8\x5c\x89\xa0\x86\xdd\xbd\x2a\x15\x5c\xc7\x64\x97\xb4\xd8\x90\x67\x4b\xaf\x76\x6c\x0d\x0c\x45\xb6\xe4\xc3\x60\x28\xb0\x8b\xa4\xb8\x19\x2c\xfa\xbe\xe4\x98\xf5\xa6\x1f\x14\xdb\x9c\x18\x2c\x06\x7e\xee\x72\x06\x82\x45\xcf\x97\x39\x87\x34\x2b\x18\xf2\x6d\x96\x14\x92\x18\x2c\x7a\xbe\xa4\xf3\x4c\x97\x8e\xbc\x80\xef\xe6\x21\x3b\x9d\x06\xdf\xad\x92\x15\x56\x30\xe4\xd8\x4c\x09\x0b\xf6\x0e\x1a\x22\x37\xe1\x50\xb2\x50\x60\x33\x31\x72\xc9\xf0\x8a\xdd\x6f\x14\xcc\x92\x6e\x16\xb0\xb8\xf3\x89\x90\xe5\xf6\x2b\x37\x44\x30\x14\xdb\x24\x6d\x35\x18\xfb\x72\x7f\xb6\x78\xcf\x2f\xd6\x8f\xa2\x6f\x05\xcf\xe0\x57\xca\xba\x1d\xa7\x4c\xf2\xff\x62\x5b\x5d\xaf\x20\x74\x29\x65\x30\x14\xd8\xb4\xe2\x38\x21\x8e\x43\x72\xfc\x33\x90\x45\x5b\x5b\x72\xd8\x84\x39\x1d\x2b\xd4\xe0\x1d\x5f\xb6\x17\x83\x81\x2f\x27\x7f\x3d\xfd\x03\x03\x9f\x52\x5b\x8d\x3d\xc9\x6b\xed\xd5\x90\xfc\x17\x2c\xde\xf1\xcb\x00\x8b\x77\xfc\xd9\xc0\x62\xe8\x0f\x1b\xcf\xb8\x17\xcf\xb0\xf1\x8c\x7b\xf1\x0c\xec\x0c\x16\xef\xc5\xf3\x3a\xa0\x38\x22\x22\x3d\x02\x32\xfd\xe3\x11\x58\x6f\x48\xc0\xe2\x1d\x5f\xb7\x78\xe1\x1d\x5f\xb7\x78\xe1\x1d\x5f\x8f\xd8\xc2\xc8\xef\x03\x67\x07\x8b\xa1\x3f\x8f\x95\xae\x31\xf2\xc7\x58\xef\x93\x5e\x71\xf0\x0d\xce\x55\xae\x60\x16\xb7\x7e\x5f\x6f\x24\x07\x1d\x03\xa0\xc8\xb5\xfb\x59\xbb\xc6\x9d\x5f\xbb\x24\x4a\x2b\x67\x3a\xcb\xce\x5c\xb8\x3c\x6f\xca\x75\x57\xee\xf1\x9c\xd2\x3c\x65\x81\xd8\xe6\x23\xab\xd1\x14\xd8\x39\xa9\xba\xb3\x77\x4b\xb9\x08\xd2\x03\x37\x5b\xe0\x8e\xdd\xb4\x1d\xb6\xb2\xa1\xfc\x09\xaa\xec\x9b\x5d\xf6\xf5\x04\x86\x7c\x7b\xd2\xca\x0a\x14\xf8\xae\x6c\xa2\x34\x0a\x58\xbc\xe7\x57\xeb\x07\x91\x1f\xc2\xb4\xfe\x36\x6b\xbb\x08\x94\x91\xe9\x16\xfd\x05\x03\x9f\x09\x55\xf5\x8b\x22\xbb\xac\xe5\xa9\x29\xb0\xcb\xd4\xdd\x7e\xc1\x9d\xdf\x06\x36\x5a\x6f\x7e\x0a\x81\x21\xdf\xa6\x22\xd3\x03\x0c\x45\xb6\x24\x3c\x60\x28\xb0\x3b\x63\xbf\x45\x72\x90\x67\x1f\xef\x2b\x28\x83\x21\xcf\xce\xeb\x62\xdf\x2e\x75\x5f\x29\xb2\x07\x72\xce\x60\x71\xe7\x4f\x5a\x2b\x86\xea\xf1\x13\x94\x41\xd7\xef\xc8\x69\xac\x1f\x28\x5e\x71\xf4\x0d\x1a\xeb\xdd\xcb\x2b\x76\xbf\x31\xb1\x16\xac\x0c\x86\xb6\xb6\xec\x27\x43\xd6\xbc\x6c\x02\x8a\xf6\xbb\x80\x5c\xed\x4a\x3b\x2e\x79\x0c\x86\x1c\xbb\x0d\xa4\x76\xfc\x9c\x68\x71\xe7\xcb\x95\x7b\xce\x75\x04\x25\xd0\xc4\xb5\xfe\x1d\x00\x00\xff\xff\x58\xed\x95\x4e\x72\x1e\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 7794, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\xbf\x72\x1a\x31\x10\xc7\xf1\x9e\xa7\xb8\x19\xea\x5d\xb4\xab\x3f\x27\x51\xa6\x4f\x95\x22\x35\xc1\x24\x66\x12\x03\x83\xf1\x38\xce\xd3\x67\x04\xc6\xe8\x87\x75\x52\x77\xdf\xe8\xa3\x8c\x4e\x16\x82\xf9\x7c\x3e\x7c\xdf\xee\x1e\xf6\xaf\xcf\xdf\x0e\x6f\x5f\xfe\xec\xd7\xbf\x37\xc7\xe1\xa0\x87\xe1\x75\xbb\x13\x33\xbc\x1c\x1e\x56\xa7\xcd\x2c\xb3\xaf\xfb\xe3\x66\xd8\xee\x7e\xee\x97\xc3\xe3\xe9\x74\x78\x5e\x2e\x16\xbf\xb6\xa7\xc7\x97\x1f\xbc\xde\x3f\x2d\xd6\xc7\xd5\xbf\x37\x7a\x5a\xfd\x5d\x7c\xfa\xef\x66\xb3\x4f\xff\xb4\x14\xcb\x62\x46\x76\xec\x0d\x15\xcf\x4d\xa9\x85\xd4\x8a\xd4\x3c\x6a\x59\x62\x62\xd1\x40\x98\x1d\xef\x47\xc2\xec\xf9\x88\x3e\x56\xbc\x33\x3c\x8e\xac\x9a\xd8\xd0\xed\x59\xbd\xaf\xd8\xe0\xd9\x7b\x16\x1b\xd9\xd0\xed\xb9\x69\x83\xbd\xd9\x60\xa7\x6c\x60\x91\xc4\xe2\xdc\xf9\x1d\x31\x7b\x3e\xa2\xaf\xbd\x63\x09\x62\x22\xcc\x8e\x4f\x86\x30\xab\x7f\x7d\x61\xf5\x96\xad\xbd\x9c\x94\xa2\xaa\xda\xb1\x8c\x86\xbd\xb0\xc4\x91\x30\x7b\x3e\xa2\xaf\xbd\x6d\x09\x92\x21\xcc\xb6\x57\x17\x08\xb3\xe7\x47\xf4\x9d\xf5\xab\x8b\xe8\x9b\xeb\xb7\xac\x89\xa0\xda\xda\x1a\x82\x6a\xe9\x7c\x84\x8b\xa8\x9f\xcb\x2b\x10\xc9\x07\x98\x30\x7b\x3e\xa0\x6f\xed\x64\x06\xc1\x10\x66\xcf\x2b\xfa\xda\x5d\xf3\x01\x82\x87\xad\x7f\xef\xee\x8c\x74\x37\xa3\xb5\xff\x67\xe1\x85\xee\xba\x3b\xc3\xde\xcd\xb0\xb5\x19\x7e\xbc\x5c\x36\x96\xd5\x38\xc2\x9c\xf6\xea\x0c\xc7\x44\x50\x6d\xad\x6a\x08\x73\xca\x87\x7c\x53\x8a\x8d\x04\xd5\xd1\x09\xf4\xe4\x5a\x2e\xe3\xce\x10\x54\x47\x0b\xe8\xea\xbe\x17\xe3\xb0\xee\xfa\x49\x28\xc6\x61\xdd\xf5\x53\x70\x19\x4f\x81\xbd\xa3\x32\xda\x36\x96\xb6\xb1\x8a\x14\x58\xd4\x12\x54\x4d\x27\x61\xb5\xca\x31\x5f\x00\x04\xd5\xd1\x11\x74\x75\x25\xb7\xf1\xfc\x51\x2d\xab\xa3\x15\x74\xf5\x73\xfa\x3e\x2e\x36\x7f\x0b\x97\x35\x71\x2f\x9d\x85\xe3\x51\x59\xe2\xf5\x45\xaf\xd9\xf3\x01\x7d\xf5\x5e\x2a\x41\x44\x3f\xbd\x37\x17\x90\x0c\x61\xd6\x7e\xa3\xe4\x9f\x47\xf9\x4b\xd5\xe5\x9d\x87\x6a\xeb\x20\x04\xf5\x3f\x00\x00\xff\xff\xed\x0b\xd5\x73\x19\x0a\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 2585, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x6e\xc3\x20\x14\x85\xe1\xdd\x4f\x81\xe4\x99\x03\x17\x2e\x36\xf1\xd8\xbd\x53\x87\xce\xae\xeb\x36\xa8\x8d\x41\x84\x2a\x49\x9f\xbe\xca\x46\x65\xda\xed\xfe\xe8\xd3\xa1\xef\x7b\xf1\x1c\xb6\xd7\x78\x39\x3f\xa5\xdb\xc3\x67\x5c\x3e\xd6\x2c\x92\x49\xe2\x12\xb6\x51\xac\xd7\x92\xe7\xee\x8e\x1e\x63\x5e\x45\xd8\xde\xe2\x24\x8e\xa5\xa4\xf3\xa4\xd4\x7b\x28\xc7\xaf\x17\x2c\xf1\xa4\x96\x3c\x7f\xdf\xe4\x69\xbe\xaa\xdd\x58\xd7\xed\x9e\x26\xb2\xf0\x1a\x64\xe0\x58\x56\x77\x43\xb2\x06\x91\x07\x69\x8b\x51\xd6\xd1\xb0\x03\x83\xe1\x18\xc6\x59\x59\xdd\xff\x4a\xae\x64\xeb\xff\xc1\xc1\x19\x1c\x3c\x8c\x25\x59\xc7\x9f\x96\xb4\x07\xdd\x77\xeb\x6a\x68\xa3\x47\xf0\x00\x3a\x30\x88\xe5\xaf\xfa\x09\x00\x00\xff\xff\xd9\x22\x69\x75\x95\x01\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 405, mode: os.FileMode(438), modTime: time.Unix(1508198176, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\x3f\x8f\x1a\x3d\x10\xc7\xf1\x9e\x57\xb1\x12\xf5\xfc\xf0\x8c\xff\x53\x3e\xfd\x53\xa5\x48\x7d\x21\x97\x1c\x4a\x8e\x5d\x01\xd1\x85\xbc\xfa\xc8\xa0\x10\x4f\xce\x36\x05\xd2\x7e\xd9\x8f\xd0\xe2\xb5\xc6\xeb\xf5\x7a\xfa\xb8\x3f\x7c\x9e\xdf\x4e\x1f\x96\xcb\x7f\xdf\xe7\xdd\xb7\xe7\xe3\xb4\xc8\x32\xbd\xed\x0f\x71\x3a\x2d\x97\x55\x21\xff\xcf\xc7\xe7\x69\x7f\xf8\x32\x6f\xa7\x97\xf3\x79\x39\x6d\x37\x9b\xaf\xfb\xf3\xcb\x8f\x4f\xd8\xcd\xaf\x9b\xdd\xf1\xe9\xd7\x85\x5e\x9f\x7e\x6e\xde\xfd\xd4\x6a\xf5\xee\xab\x2d\x5b\xc4\x04\x4e\x09\xec\x22\xa9\xea\xe8\x0c\xb1\x19\x21\x53\x1d\x6d\x9b\x18\x1e\xde\xd2\xdf\xcb\xbe\xcb\x10\x27\x54\x47\xc3\x3a\x83\x68\x20\xc2\x10\x97\x49\x55\x47\x47\x88\x84\xbb\xbe\xd7\x58\x7b\x43\xaa\xda\x9a\x39\x81\x4d\x00\xdb\x2b\xaf\xb2\xe1\x3d\x83\x1d\xc3\x0a\x3c\x53\x1d\x2d\x2b\xe0\xe0\x20\xce\xc0\x67\x52\x35\xd2\x0c\x31\x9e\x74\x0e\xbc\x67\x38\x47\xaa\x3a\x3a\x26\xd8\x04\x2e\x0f\x5e\x57\x5f\xb3\x8b\xe5\x79\x49\xe7\xc0\x7b\x86\xb0\x90\xce\x81\x2f\x9f\x40\xaa\x06\x3a\x5b\x70\xc5\x6f\xd9\xf7\x22\x16\x62\x49\x55\x47\xa7\x88\x60\xc0\x26\x92\xaa\x86\x0e\x0e\x0e\x62\x61\xe8\xcf\x95\xf8\xd6\xdb\x09\x1e\xde\xc3\x39\xb0\x49\x54\xc7\xd8\xe6\xda\xb6\x76\xc9\xed\x36\xb3\x05\x0b\xd5\x31\xb6\xb6\xb6\xad\x55\xb8\xdd\x16\x2f\x88\x4c\x75\x0c\x6d\xb6\x54\xc7\xd0\x72\x36\xa4\xaa\xa5\x03\x98\x33\xb8\xfc\x7d\x1f\x49\xe7\x23\x9f\xb4\x6f\xae\x74\x05\x52\x26\x9d\x0f\x7c\x79\x7c\x95\xad\x19\x68\x1c\x5c\x59\xe1\x88\x10\x48\xd5\x48\x67\x08\x93\xaa\xbe\x16\x49\xd7\x51\x5c\xd7\x58\x8b\x11\xd2\x39\xf0\x36\x82\xcb\x99\xa0\xb2\xe5\x99\x6f\x13\x3b\x97\xcd\xa5\x6a\xac\xc5\x2b\x2e\x9d\xb3\xc4\x81\xa3\x81\xbd\x1e\x0b\xa4\x73\xe0\xcb\xc0\x71\x81\x74\x3e\xf2\x51\xfb\xf6\x79\x59\x81\xa4\x7d\x6b\x9f\xdd\x81\x85\x64\x52\xd5\xd4\x11\xcc\x11\x62\x7d\x19\x87\x3a\x5b\x3e\xf3\xf5\xcd\x88\x49\x60\x09\xf4\x4f\xff\x0e\x00\x00\xff\xff\xec\x03\x34\x4d\x7f\x08\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 2175, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xcd\x6e\xe2\x30\x10\xc0\xf1\x3b\x4f\x11\x89\xf3\x4c\x32\x63\x8f\x3f\x38\xee\x7d\x4f\x7b\xd8\x33\x05\x5a\xa2\x16\x12\x41\x10\xa5\x4f\x5f\x59\x14\x29\x13\xdc\xf8\xc6\x9f\xfc\x06\x14\xc7\xf1\x72\xb9\xac\xfe\xb7\xc7\x6d\x77\x3d\xff\xeb\x6f\x7f\x3e\xba\xcd\xfb\xee\x54\xf5\xdc\x57\xd7\xf6\xe8\xab\x4b\xbf\x5d\x0f\xbb\x45\x52\x7f\xbb\xd3\xae\x6a\x8f\xaf\xdd\xaa\xda\x0f\x43\x7f\x5e\xd5\xf5\x5b\x3b\xec\x2f\x2f\xb8\xe9\x0e\xf5\xe6\xb4\xfe\xba\xc1\x61\xfd\x59\x3f\xfd\xda\x62\xf1\xf4\xd5\x8a\x0c\x52\xe3\xd1\xa2\x34\x30\xfa\x9c\x91\x9c\xae\x1a\xa4\x10\x91\x58\x40\x67\xc9\x3b\xed\x5d\xc1\x8b\x07\x9d\x25\x1f\xb4\x0f\x19\x6f\x1b\xf4\x1e\x99\x23\x8a\x81\x71\x64\xac\x13\x14\x41\x32\x01\x89\x18\x54\x15\xb4\x55\xda\xce\x6b\x76\xa0\x6a\x5e\x07\xa5\xc3\x8c\x76\x06\x99\x09\x54\x15\x34\x2b\x9d\xbb\x4b\x32\x16\xc9\x37\x28\x84\x14\xd3\x66\x19\xe7\x9c\x37\x68\x46\x3c\xd5\x9c\x0e\x38\xc2\x01\x59\x72\x7b\xeb\x01\x88\x04\x1d\x83\xce\x39\xef\x04\xd9\x06\x98\x74\x71\x22\x4e\x26\x62\x69\x42\x08\x26\x5d\x9c\x30\x93\x89\xdc\xbe\x24\xf1\x28\x0e\xa3\x43\x62\x03\xaa\x72\x3a\x12\xb2\x61\x0c\x69\x25\x41\xd5\xbc\x76\x0d\xa8\x2a\x68\x56\x3a\xbb\xfe\x3f\xd7\xc9\xc4\xfb\x9d\xea\x2e\x4e\xd8\xc9\x44\xee\xbd\xba\x0b\x8b\x9e\x91\xc2\xe3\x2f\x1e\x59\xf2\x4e\xfb\xdc\xbb\xa5\x40\xd0\xfe\xf7\xf5\xbc\x83\xd8\x80\xce\xdc\x79\x96\x8e\x5e\x97\x0e\x8d\xf4\xb4\x54\x7d\x07\x00\x00\xff\xff\xbc\x9a\xdd\x04\x1c\x06\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 1564, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd1\xbd\x6e\xeb\x30\x0c\x86\xe1\x3d\x57\x21\x20\x33\x3f\x93\x92\xe8\xbf\xf1\xec\x67\xea\xd0\xd9\x75\xdd\xc6\x68\x63\x1b\x8e\x8b\x24\xbd\xfa\xc2\x53\x25\x44\x50\x37\xbe\xc6\x03\x83\x84\x8e\xc7\xa3\x79\x1e\xa7\xd7\xf9\x7a\x79\x5a\xee\xff\x3e\xe7\xfe\x63\x58\xcd\x62\x17\x73\x1d\xa7\x5a\xcc\x70\xdb\xd6\xee\xb0\xab\xff\xf3\x3a\x98\x71\x7a\x9b\x5b\x73\xda\xb6\xe5\xd2\x16\xc5\xfb\xb8\x9d\xbe\x5e\xd0\xcf\xe7\xa2\x5f\xbb\xef\x3b\x9d\xbb\x5b\xf1\xf0\xb7\xc3\xe1\xe1\x53\x2b\x0e\x35\x43\x2c\xd4\x53\x30\x27\xa4\x67\x88\xd4\x10\x76\xa8\x28\x8c\x9c\x2d\x21\x8e\x29\xce\x84\x2f\x3d\x3c\xd4\xc3\x5a\xfa\x1d\x73\x4e\x1d\x05\x73\x56\xfa\x40\xa6\xee\x2a\x15\x6a\x21\x5c\xc3\x36\x14\x46\xd6\x6a\x68\x35\x6f\x65\xdf\x36\xac\xe4\x3b\xc8\x7e\x09\x4a\x01\x53\x10\x56\x35\xa5\xb5\x82\x2a\xc4\x79\x88\x67\x8a\x33\xe7\x15\x62\x6b\x8a\xf3\x0f\xef\x98\xe2\x4c\x78\xcb\x1e\x55\x03\x69\x2a\x58\x66\x8a\x33\xe9\x2b\xf8\x12\xd2\xec\x0b\x53\x54\x3f\x01\x00\x00\xff\xff\x51\x09\xb5\x1f\x08\x03\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 776, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\x3f\x6f\xdb\x3c\x10\xc7\xf1\x3d\xaf\x42\x40\xe6\xfb\x99\x77\x3c\xfe\xcb\xf8\xec\xcf\xd4\xa1\x73\x9a\xa6\x8d\xd1\xc6\x36\x6c\x17\xa9\xfb\xea\x0b\x4a\x30\xc2\x6b\x28\x7a\x08\xa0\x6f\xf8\xb1\x23\x91\x0a\x79\x7f\x7f\x3f\x7d\xde\xee\xbe\xee\xdf\x4e\x9f\x0e\x97\xff\x7e\xee\x9f\x7e\x3c\x1f\xa7\x83\x1c\xa6\xb7\xed\x2e\xf3\x74\x3a\x5c\xee\xaa\xf9\x7f\x7f\x7c\x9e\xb6\xbb\x6f\xfb\x87\xe9\xe5\x7c\x3e\x9c\x1e\x36\x9b\xef\xdb\xf3\xcb\xaf\x2f\x78\xda\xbf\x6e\x9e\x8e\x8f\x7f\x2e\xf4\xfa\xf8\x7b\xf3\xe1\xbb\xee\xee\x3e\xfc\xea\x81\x3d\x52\x06\x67\x85\x2a\xb5\xb1\x62\x0b\xc4\x17\xc4\x42\x6d\xf4\x6d\x66\x04\x04\x4f\xef\x97\xeb\xae\x40\x54\xa8\x8d\x8e\x15\x8f\x92\xa1\x05\xac\xd4\x5c\xaf\xc8\x32\x8f\x0a\x53\x1b\x1d\xab\x0e\x29\x41\x24\x42\xb4\x90\xa9\xb1\x0e\x8e\x4c\x0d\x74\x46\x11\x6a\xa3\x63\x03\x83\x95\xe1\x05\x81\xa9\x8d\x9e\x15\x70\x54\x88\x67\x48\x20\x53\x03\xad\x0e\xa1\x90\xa9\x91\x66\x88\x7b\xff\xf2\x25\x07\x3e\x70\x7d\x85\x4c\xad\xe8\xfa\x8e\x69\xaa\x77\x40\x36\x07\x3e\x30\x84\x85\x6c\x0e\x7c\xfd\x89\x64\x6a\xa0\x8b\x07\x37\x7c\xc9\x75\x2f\xe2\x21\x9e\x4c\xad\xe8\x9c\x10\x1d\xd8\x25\x32\xd5\xd1\x51\x51\xd7\x10\x8e\xae\x57\x12\x7a\xf3\xbd\x8c\x26\x84\x2b\xac\x97\x7d\x27\xde\xcf\xab\xc1\x39\x93\xcd\x91\x8f\x60\xd7\xf8\x39\x7b\x3e\x20\x04\xa8\x2e\xba\x89\x55\xcb\x5c\xe7\x95\xda\x18\x5b\x69\x6d\x6f\xb5\x9b\x61\xdf\xda\xde\x6a\x2c\xc3\x12\x04\x7a\xb5\x4b\x0c\x6d\x69\x6d\x19\x5b\x2e\x8e\x4c\x0d\xb5\x38\x21\x53\x3d\x1d\xc1\x5c\xf7\x38\x05\x87\x44\x36\x6f\xf9\x6c\x7d\x77\x5d\x1a\x90\x0b\xd9\xbc\xe1\xeb\xc3\x9a\xec\xed\xee\x4e\xa1\x75\x3d\x12\x62\x24\x53\x23\x5d\x20\x4c\xa6\xd6\x75\xdd\x4f\xeb\x21\xd3\xd6\x58\xd7\x89\xb7\x39\xf0\x3e\x81\xeb\x69\x67\xb2\xe7\x99\x21\xc2\x90\x02\x09\x4a\x36\xbb\xe7\x9e\x82\x93\x83\x77\xcb\xfd\x98\xbc\xe5\xbd\xf5\xfd\x73\xb5\x01\x6a\xfd\xad\xfb\xa9\x93\x6f\xb2\xeb\x53\xdd\x23\xe7\xe5\x61\xae\x7f\xc0\xf4\xea\x27\x12\xc4\x87\xba\x35\xdb\xec\xf9\x90\xe6\xff\x67\xef\x97\x27\x30\xb9\xe6\x23\xb8\x28\x92\x90\xa9\x1b\xda\x1b\xdd\x9d\xcd\x66\x5c\x8d\xee\xde\x49\xe1\xf9\x4d\x11\x97\xc1\x12\xe9\x9f\x5e\xfd\x44\x41\x70\xe0\x4c\xa6\xc6\x3a\x25\x32\x35\xd2\x02\x76\x8e\x6c\x8e\xbc\x22\x08\x99\xfa\x1b\x00\x00\xff\xff\xb4\x57\x3b\xbe\xa2\x0a\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2722, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x96\xbd\x72\x1a\x41\x0c\x80\x7b\x9e\xe2\x66\xa8\x25\x56\xda\x7f\xca\xf4\xa9\x52\xa4\x26\x98\xc4\x4c\x62\xee\x06\xe3\x71\x9c\xa7\xcf\x2c\x60\xb3\x3a\x8b\xdd\xee\x3e\xf4\x89\x11\x92\x76\xb9\xe5\x72\x39\x7c\xdf\x1f\x1e\xc6\xd7\xe7\x6f\xd3\xdb\x97\x3f\xe3\xf6\xf7\xee\x38\x4c\x3c\x0d\xaf\xfb\x43\xa2\xe1\x65\x7a\xd8\x9c\x76\x8b\xa2\x7d\x1d\x8f\xbb\x61\x7f\xf8\x39\xae\x87\xc7\xd3\x69\x7a\x5e\xaf\x56\xbf\xf6\xa7\xc7\x97\x1f\xb8\x1d\x9f\x56\xdb\xe3\xe6\xdf\x1b\x3c\x6d\xfe\xae\x3e\x7d\xdd\x62\xf1\xe9\xa3\x35\x59\x24\x13\xd1\xa1\x37\x50\x3d\x2b\x26\x97\xa8\x45\x4a\x19\x89\x3d\x48\xec\xf9\x41\xfa\xa1\xe3\xfb\x08\x12\x7b\x7e\x92\x7e\x52\x7c\x67\x30\x46\x64\xce\xe8\x2d\xd4\xa0\xb8\x9e\x91\x92\x45\x17\x91\x62\x00\x41\xf7\x6d\xa2\x84\x14\x09\x24\x2a\x7e\xf0\xe8\x3d\x92\x4d\x68\xe0\xf6\xcc\x5e\xeb\xe2\x35\x1e\xec\xcd\x0d\xb6\xe9\xb2\x63\x64\xef\x40\x90\x3a\x79\x42\xf6\x16\xc9\x21\x79\x0b\x12\x55\xdf\x21\x45\x83\x9e\xb0\xac\xca\x07\xe8\xb5\x7c\x08\x16\x39\x83\xa0\xb6\x6d\x0d\x08\x6a\xd9\xa9\xae\xe4\x5e\x07\xdf\x05\xa2\xd2\x10\x90\xd8\xf3\x83\xf4\xb5\xe9\xd7\x42\x30\x20\xb1\xe7\xb3\xf4\xb9\xe5\x87\x32\xcd\x04\x33\xee\x66\xe4\x59\x46\xab\xff\x67\xc3\x13\xcc\xb8\x9b\x61\x67\x19\xea\xfe\xf8\x78\x59\x48\x83\x29\x83\xa0\xb6\x5d\x6e\x0f\x89\x6d\x9f\xd9\x80\xc4\x7b\x7e\x28\x97\x00\xd9\x04\x82\x3a\x76\x16\xf6\xdd\xda\x2f\x71\x67\x40\x50\xc7\x26\x61\xab\x7d\xaf\xe2\xa2\x6e\x7d\x13\xaa\xb8\xa8\x5b\xdf\x82\x4b\x3c\x07\xf4\x0e\x6a\x68\xbb\xa9\x76\x1b\x55\xe4\x80\xc4\x16\x04\xb5\x6d\x1f\x41\x90\x66\x67\x42\xb6\x8c\xa9\x5c\x17\x20\xa8\x63\x27\x61\xab\x75\xdf\xe2\xe5\x60\xd7\xd4\xb1\x59\xd8\xea\xa9\xbe\xc6\xc9\x66\xa4\x74\xf3\xaf\xdc\xc9\xe0\xea\xb7\x5e\xb9\x9b\xe1\x66\x19\xea\x54\xcf\x86\xc3\x78\xfe\x0b\x03\x89\x3d\x3f\x49\x5f\xeb\x28\x97\xd7\x8b\x80\x44\xae\xf4\x5f\x50\xdb\x0e\x04\x82\xfe\x07\x00\x00\xff\xff\xda\x5a\xc3\x25\x2f\x09\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 2351, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\xcd\x72\xeb\x3a\x08\xc7\xf7\x7d\x94\xce\x98\x45\xb7\x7d\x1a\x15\x61\x9b\x89\x00\x5d\x41\xe2\xe4\x3e\xfd\x19\x25\xf6\x49\x62\xf7\x2c\xc5\x8f\x3f\xdf\xfa\x84\x2f\xc9\x0a\x4a\xf1\xfd\xf1\x09\x42\xee\xa4\x13\x35\x28\x7c\x21\x40\x93\xbb\xd5\x29\x4f\xf4\xd7\xc7\xc7\x50\x74\xde\xa8\x4b\x6a\xe1\xd8\x88\x14\x84\xb1\x99\xdb\x18\x1b\xbc\x58\x57\xa3\xe6\x4d\xbd\x50\x8a\x99\xda\xd1\xf3\xfa\x63\xd7\x67\xd2\xa4\xbe\x50\xf3\xbd\x5b\xaa\xd5\xc1\x4f\xb7\xba\xba\x61\xd2\x7c\xc3\x76\xf6\xd9\x2d\x27\x38\xb1\x4e\x2b\xc8\x0a\x68\x1a\xa4\x01\xb5\x59\x06\x14\x07\x71\x7d\x52\x53\x52\x8b\xb5\x2b\x9c\x8d\x91\xf6\xd9\x7e\xb3\x82\x7a\x0a\x5c\x55\x85\x7b\xfc\x45\x1d\x16\xd6\x6c\x8b\xaf\xba\xbb\x1d\x4d\x47\x9e\xa0\x26\xf7\x6a\x2d\x1e\x92\x4c\xb5\xd8\x0d\x3c\x52\x30\x42\x3a\x25\x49\x1c\x84\xb3\x5a\xb1\x89\x69\x0d\x90\x25\x83\x50\x24\xa7\x76\x61\xa4\xc3\x18\x46\xa2\xfc\x93\xf0\xf4\xb4\x0f\xb3\xcd\xb2\x83\x4e\xa9\xe1\xfc\x4f\xed\x5b\xc9\xd3\xcb\xc2\x59\xa6\xc1\x07\x71\x1d\x7a\xbf\x8f\x1a\xff\xa7\x75\x83\xac\xce\x99\x5a\xed\x1b\x28\x76\xce\xa9\xd6\x07\x28\x8c\xa4\xde\x17\x20\x75\x9f\xb3\xf7\xa6\x2f\x19\x04\x66\x0b\x49\x5c\xd6\xe7\xdb\x45\xd9\x38\x32\xd2\x3a\xdb\x5d\x20\xd3\x0d\xf8\x78\x05\xf1\xef\x8f\xda\x18\xa9\xb0\xc7\xeb\x59\xfc\x77\xa6\x76\x7b\xee\xbd\x1d\xe2\x6c\xa3\xd9\x0e\xc2\xc3\x1a\x0d\x2c\x69\x22\x07\x1f\xf6\xde\x9d\xf6\x2f\x30\x66\xc8\x7e\xfd\xa5\xc1\x60\xa1\xf7\x81\xc6\xe9\x0b\x6a\x89\x67\x8a\x33\xbf\x56\xb8\x64\x3c\x04\xe9\xb6\x54\x0e\xb5\x2e\xde\x0f\x19\xee\xa7\xbf\x47\xcb\x72\xff\x8e\x68\xaa\x84\x11\xe4\x0f\xf0\x27\x00\x00\xff\xff\xc1\x47\x20\xdf\xd5\x03\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 981, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x4b\xae\xc6\x20\x08\x05\xe0\x79\xf7\xd2\x13\x0e\x0f\xd1\x74\xff\xfb\xba\x41\xfb\xb7\xf6\xce\xfc\x44\x02\x01\x69\xe8\x02\x2a\xc2\xaf\x83\x06\x4a\xc2\x40\xed\x8f\x94\x50\x91\xeb\x50\xc3\x48\x30\x3b\x98\x76\x1d\x2e\xc8\x84\xaa\xa3\xef\x20\x5f\x05\xd4\xb7\x60\x83\x9c\xef\x59\x23\x66\x68\x08\x68\x0d\x2a\x53\x14\xc2\x5b\x55\x59\xa4\x43\x9d\xa0\xf3\x76\x07\xc5\x90\x4b\x9a\xa0\x2b\xb2\x5d\x47\x73\x38\xc2\x21\xe7\xef\x34\x0b\xb4\x40\x28\x28\x32\x1b\x7b\x35\xec\x55\xaf\xa4\xe7\xfc\xa4\xc5\xa2\xfd\xa4\xa1\x70\xbb\x0e\x8a\xc3\x05\x4a\x81\xe9\x4d\x9f\x43\xcc\x8d\x1d\x73\x84\x8f\x28\x77\xaa\xd2\xd7\x08\xf8\x73\x80\xde\xd6\x8c\x69\x84\x86\xc1\x1c\x6a\x9b\x1b\x21\xe7\x86\xd9\x24\xcd\xc1\x14\xb0\x07\xb2\x1e\x47\xce\xae\xeb\xda\xda\x3f\xf7\xaf\x7d\x7f\x1f\xf7\xbe\x5b\x47\x33\xb0\x23\xc7\x75\xa8\x38\x72\x80\x23\x21\xe7\x86\x59\xba\xcc\x1a\x98\x13\xea\x5e\x17\x59\x7b\xab\xb0\x3e\xaa\x65\xea\x78\x19\x06\xae\xec\xe5\x51\x8d\x7c\xa8\xdf\xa8\xd9\x87\xd5\xf4\x4d\xad\xdf\x78\xe7\xb6\x0e\xb6\xfa\x50\x7e\xfd\x05\x00\x00\xff\xff\x15\x62\x73\xcb\xce\x02\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 718, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x59\x5b\x92\xab\x2c\x10\x7e\x3f\x4b\x99\xaa\x50\x5c\xd4\xc4\x3a\xab\x41\x20\x4a\x45\xc1\x1f\x88\x4e\x76\xff\x17\x89\x89\x26\x12\xfa\xcc\xd3\xd8\xfd\xd1\x77\x1a\x42\xff\x20\x7e\x18\xbc\x92\xad\x42\x46\x85\xbf\x7f\x7e\x10\x97\xe6\xd7\x23\x61\x87\xc7\x87\xff\x41\x83\xe7\xd2\xaf\xec\x3b\xc5\xbc\x10\xc3\xfd\x5b\x09\xf3\x42\x04\x39\x84\x27\x5b\x8a\x0f\xf1\x6d\xdf\x48\xe3\x29\x1a\xb4\x70\xd6\xdb\xf3\x0b\xd9\x5b\xc1\x83\xb6\x06\xf5\x7a\x7a\xa1\xdf\xd7\x3a\x2e\xb7\xaa\x5d\x34\x6b\xf3\xed\x95\x9b\xb4\x50\x1e\x79\x2b\x34\xef\xf7\x2a\x82\xea\xd5\xa0\x82\xbb\x25\x58\x8e\x9f\xcf\x5a\x0c\xdc\xf0\x56\xb9\xa7\xc2\x49\xbb\x70\xe5\xbd\xe2\x2e\x74\x2f\x9a\x75\x41\xfd\xfe\x20\xc9\x03\x47\x51\xda\xd3\x64\x61\x07\x64\x3c\x0f\x22\x8d\xfc\xd4\xf8\xe0\x26\x99\xef\x29\xe1\x82\xad\x5e\x72\x11\xf4\xa4\xc3\x0d\xcd\xda\x48\x3b\x2f\x89\xe2\xd2\xa8\xdf\xeb\x92\xa3\x4d\x02\xdf\x02\xc4\xa5\x27\xdb\x5c\x2e\xdf\x4f\xee\x85\x1f\x84\x34\x07\xe3\x11\x97\x41\x89\x0e\x49\xf5\xf7\x0f\x77\x8e\xdf\x7e\x0e\xa3\xb3\x12\x49\x8b\xa4\x1f\xd1\x30\x7e\x9a\xdb\x68\xd3\xde\x35\x7d\x90\x7b\xc6\x30\x39\x70\x44\xa4\x9b\xde\x48\x62\x4f\x6a\xb7\x24\x43\x18\x2e\x0e\xea\x93\x54\xbd\xcb\x7a\x90\x12\xa8\x77\x59\xb4\x39\x08\xeb\x30\x26\x88\x8f\x1a\x8d\xf1\x9f\x14\x9b\xe5\xd9\xc5\x17\xf6\x6c\x3c\x41\xb3\xf1\xef\xf9\x68\x0c\x1b\xb3\x5a\x99\x17\x1d\xa6\x18\x53\xca\xe8\x29\xb1\xde\x3f\x8a\xd9\xb4\x07\x7f\x7b\xd2\x6e\xfb\x70\xde\xf6\xe1\x7c\x90\xb6\x51\x11\x6b\x92\x05\x17\x9d\xba\x97\xdc\xc0\x5d\x78\xd7\x29\xa4\x2f\xca\x1a\xf5\xe2\x86\xfa\xde\xcc\x8f\x1a\x11\xd2\xd7\x55\x89\xfa\x58\xe3\x2b\xb1\x23\x19\xe7\x5e\x5c\x9a\xe6\xee\x4c\x5e\x48\x6a\x4f\x6a\x3f\x49\x74\xbf\x90\xbe\x2f\xb4\xc3\xc8\x83\xfa\x15\x1d\x37\xad\x42\xa2\xb7\x57\xc9\xc7\x71\xb1\xdb\x9a\xa0\xcd\xf5\x3a\x20\xb9\xaf\x56\x61\xdd\x88\x7c\xd8\xd3\x47\x82\x09\xb0\x01\xc4\x48\xff\x01\x53\xc0\x98\x58\x4b\xa3\x40\x13\x16\x72\x69\xa7\xb2\x61\xb3\xf1\x14\x93\xf8\xb7\x2f\x14\xd9\x94\x49\xa2\x17\x1d\xc1\x84\x60\x4c\x28\x85\x00\xc7\x3c\xe0\xc4\xd2\x7a\x37\x00\xc0\x86\x9a\x00\x2a\xea\xd4\x1e\xd8\x00\xa2\x99\x00\x00\x70\x93\x60\x5a\x00\x00\xc0\x4d\x82\x19\x24\xa1\x80\x6c\x28\x00\x09\xa4\xc8\x47\x92\x50\x5c\x03\x00\x0a\x78\x41\x21\x37\x29\xcb\x27\x8b\x30\x20\x9b\x84\x41\xa1\x66\x8c\x41\x00\x40\x42\x41\x80\x38\x14\xb4\x02\x00\x0c\xe7\x01\xe5\x97\xed\xb6\x01\x00\x36\x94\xc0\xbe\x20\x65\x01\xa8\xa8\x0a\xc0\xc8\x23\x64\xe4\x91\x01\x46\x1e\xa1\x92\x3b\x11\x20\x59\x27\x28\xd4\x50\x7f\x20\x27\xa8\xe4\x4e\xd0\xc6\xa9\x31\x20\xa1\x26\x90\x04\x20\x50\x14\x93\xbc\x17\x14\x53\x08\xc0\xf2\xfd\x81\xe2\xfc\xbe\x88\x1d\x24\xdb\x27\x23\x20\xeb\xc5\xbd\xc5\xe4\x01\x14\x83\x80\x6c\xba\x63\x27\xce\xc6\x21\x76\x62\x00\xc0\xf2\xa1\x26\x98\x51\x20\x50\x0c\xb2\x21\x79\xeb\x7a\x03\x14\x90\x0a\xc8\x8b\x02\x03\x12\x0a\x06\xd8\x50\xe4\x0f\x14\x82\xcb\xfc\xb1\x48\x70\x99\x3f\xdc\x09\x2e\xa1\x92\xab\xf2\x07\x6b\x04\x00\xf5\x50\xe5\x9b\x39\xc1\x47\x0c\x44\xf2\x98\x3f\x50\x08\x3e\xe6\xfb\x24\xc1\x27\x02\x02\x00\x2f\x4e\xf9\x83\x35\x02\x80\x40\x9d\xa0\x92\x03\xfa\x24\xc1\x35\x54\xf6\x35\xcd\x6c\x7f\x86\x4f\xe4\x94\xdb\xfe\x2c\x3a\x99\x3b\x50\x22\x80\xe5\x5a\x50\x04\x14\xb9\xfe\x10\x01\x55\xae\x47\xdd\x01\x90\x0d\x47\x48\xc2\x91\x64\x72\x11\x01\xa7\xbc\x91\x35\xae\x01\x40\xac\xeb\x3c\x80\xe6\x6d\xa8\x49\x95\xbb\x47\x45\xc0\x31\xd7\x06\x23\xa0\xce\xe7\xa2\xa6\xd9\xf3\xe2\x01\xc8\x46\xb2\xa6\xd9\x0b\x27\x8b\xf7\xf2\xac\x17\x04\x63\x96\xbb\x3f\x44\x40\x99\xdb\x9b\x0f\x40\xae\x1e\x08\xc6\xf9\x82\xb9\x5f\x59\x73\x65\x7f\xbf\x4f\x02\x12\x4a\xc0\x0b\x02\xda\x90\xed\x72\x8c\x60\x4a\xb2\x05\x43\x30\xb0\x71\x22\xe0\x4b\x24\x67\xe3\x89\x4c\x71\xaa\xfb\x52\x8a\xeb\x6f\x3f\x13\x57\x00\x4d\x9f\x66\x5b\x40\xb2\xd6\xb6\x80\xa4\xf9\x2b\x80\xa5\x23\xb4\x01\xa4\x63\xbc\x05\x00\x46\x16\xe9\x08\x6d\x01\x40\x1c\xca\xf4\xfd\x68\x03\x80\x54\x94\xa0\x0a\xc8\x8b\x32\x5d\xce\x2b\xa0\x82\x24\x54\xe9\xdf\x2e\x2b\xe0\x04\x85\xba\xc6\x80\x17\x5f\xae\xe4\x1b\x00\x14\xa8\x1a\xb0\x81\x60\x40\x05\xc1\x40\x4d\xc6\x0b\x50\x1e\x00\xd5\x24\x61\x90\x0d\x0c\x28\xfb\x6f\xcd\x69\x05\x40\x35\x49\x2a\x60\x6f\x92\x2a\x69\xa4\xe6\xad\xb1\x3e\x68\xe1\x91\xbf\x8e\xa3\x75\xe1\xf3\x3d\x4a\x6a\x2f\xe0\xd7\xaf\x88\x82\xdf\xbf\x22\x0a\x7e\x01\x3b\xf7\xea\x77\x7d\xae\x3c\xef\x5e\xe3\xda\x95\xd9\x2a\x0b\x08\x6b\x95\x9d\x94\x03\x40\xdd\xe6\x0d\xbc\xa3\xeb\xff\xfa\xd0\xf4\x55\xee\x11\x57\x1f\x9a\x5b\xf6\x95\x57\x1f\xf2\x0f\xa5\x1b\x7e\xf2\xa9\x54\x1f\xbc\xa1\xd9\xf5\x2f\x7e\x72\xfd\x65\x82\x73\x77\x99\xe0\xcc\x5d\x26\x38\x6f\x7d\x43\xd0\x3c\xcf\x68\xf0\x88\x5f\xb8\x34\xcb\x88\xa1\xf7\x74\x56\x0d\x72\x4a\x0e\xd6\x48\x74\x7f\x63\xfd\x58\x39\xd8\x46\xf7\x0a\x8d\x7a\x54\x88\x3b\xbd\x9b\x85\x6c\x27\x21\x83\x37\x41\xf9\xb0\x7f\x1b\x7f\x4c\x3f\xec\xf9\xac\x85\xe2\xe3\xe8\x5f\x03\x99\x85\xe5\xae\xbd\xfa\xc2\xb7\x46\x79\x15\x82\x36\xad\x3f\x34\x86\xe6\x26\x3a\x5b\xa8\xb8\xfd\x33\x54\x36\xe5\xbf\x42\xbb\x4b\x56\xea\xe8\x14\x3a\x5b\x1b\x46\xa7\x4d\x18\x9d\x92\x5a\x2c\x51\x1a\x9d\x9a\xb4\x9a\xd7\xf2\x75\x5c\x6e\x9c\x7c\x1b\x9c\xc5\x75\x2e\xaa\xe1\xaf\x81\xd9\x47\xcc\xbd\xe8\xd4\xc0\xb7\xe4\x6d\x52\xbd\x12\xd7\x68\x48\xcf\x7d\x17\x78\x7f\xd1\xa6\x5d\x96\x3d\xdd\xf0\xdc\xc8\xc6\xa6\x67\x5b\x2f\xd0\xac\x4d\x16\x90\x66\x9a\xdd\xf8\x60\x21\xa9\x3d\x69\x3b\x3e\xf0\xe3\xcd\xa8\xb0\x1b\x3b\x3e\xc8\xbc\xdf\xb5\xbe\x07\x43\x5d\x9d\x1d\xd5\xb7\x38\xf8\x79\x13\x62\x1f\xac\x53\x82\x07\xde\xdb\xd6\xa9\xe9\x39\xcc\xbc\x93\xff\xbb\xf2\x5e\x87\xdd\xd4\xd1\x5f\xdd\xa4\x6e\x68\xe6\xc1\x5b\xf3\xc9\x5c\x67\x95\x7c\x1c\xd5\x2f\x6a\x62\x98\xef\x7a\xbf\x4e\x31\x57\xc6\xd5\xed\x72\x1a\xfc\x59\x3d\xa7\x9c\xbe\xe3\x63\x14\x97\xde\xcb\x93\x72\x3e\x9a\xde\xdd\x1a\xa7\xe5\xbd\xb3\x74\xca\x2d\x6e\x3e\xa6\x96\x87\x9f\x5c\x99\x2e\x98\x5c\x15\x2c\x90\x6f\x35\xf0\x36\x1b\x85\x14\x25\x25\x2c\x41\x5d\xf3\x93\x8e\xf2\xac\x0d\xc1\x48\x8f\x53\xf5\xc1\xf9\x3f\x00\x00\xff\xff\xc6\x3a\x68\xe7\x18\x1f\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 7960, mode: os.FileMode(438), modTime: time.Unix(1508198183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x96\x5d\x92\xc4\x20\x08\x84\xdf\xe7\x2e\xdb\x65\xe3\x1f\xd6\xdc\xff\x5e\x5b\x8d\x46\xcd\x3c\xcc\xae\x5f\x10\x82\xc8\x4f\x98\xd1\x1c\x6e\xf0\xef\x67\xad\x3b\x4a\xdf\xe0\xa0\x8d\xa0\xde\x60\x74\x90\xfd\xe0\x00\x07\x6f\x34\xa6\x89\x0e\xf6\x0e\x96\xb2\xd1\x13\xc6\x11\x7a\x83\xd5\x25\x1c\xb0\x3c\xd0\xe6\x6b\x9c\xa8\xa8\x79\xaf\x07\xac\x58\x10\x53\x47\x85\xa7\x1b\xfc\xfb\xb1\x8c\xd1\xd1\x08\xe6\xfe\x90\xa5\x81\xb1\x68\x80\x09\xe4\x81\x01\x79\x75\xa8\x1d\x62\xd3\x6f\xa3\x11\x96\xa6\x19\x26\x43\x81\xc9\xb1\x45\x46\x94\x0d\xac\x15\x2c\x69\x71\x06\xdd\x40\x6b\xdf\x4f\x49\x68\x03\x25\x81\xb5\x3f\x64\x6c\xe8\xf9\x26\xab\x3c\xe8\x68\xb6\xc9\x4c\x3e\x06\xf6\x04\xb3\x04\x2b\x3e\xb1\x81\x60\x6f\x1b\x4c\xfe\xec\x35\x97\x91\xde\x61\xe6\x18\x93\x5c\xae\x0d\x94\x69\x91\x11\x48\x74\x3f\x54\xc0\x7a\x84\x66\x91\x0b\x41\x05\x2c\x72\x28\x2d\xae\x60\x04\x32\x20\xae\x1a\x56\xd2\xe1\x4a\xd8\xb2\x64\x0c\x31\xdd\xbe\x9f\xaa\x35\x91\x0d\x3a\x73\x95\xa3\x04\x2b\xac\xb4\x85\x61\x07\x39\xbf\x50\x4e\x6d\xd4\xb5\xd4\xc3\x75\x3a\x12\xd8\x23\x64\xf1\xa2\x83\xd4\x21\x36\x67\x30\x3f\xda\x0e\x2b\x60\x7f\xb4\x75\xe7\x19\x0a\xf0\x83\x3e\xe0\xcb\x13\xa5\x6d\xe9\xf3\x90\x0f\xeb\x90\xb4\xc3\xfa\xb5\x83\x43\xef\xbe\x39\xcf\xfc\x5a\x2c\x5f\x6c\x59\x77\x45\xde\xc0\xdc\x2e\xae\xb0\xf4\x70\x47\x4b\x4a\xfb\x40\xcb\x0d\x45\xff\xc6\xf7\xd3\x0a\x0a\x1a\x98\xd2\x5a\x5b\x46\xfa\x7b\x56\x56\xeb\xf7\xd3\x2a\xf2\x88\x6b\xb1\x9c\x02\x65\xa3\xc1\xfc\x01\xa6\x24\xa5\xbd\x7e\xd4\xd6\x05\xa9\x46\x96\x96\xaa\x5c\x5e\x08\x2b\x4c\xc5\xeb\x0f\xe9\x25\xe9\x81\x52\xe2\x8a\x0f\x94\x0b\x98\xfc\x45\xe3\x21\x65\xa8\x6d\x1b\x91\x93\x7c\x91\xbd\x28\x6f\xca\x09\xf5\xe8\xf5\x16\xdd\x66\x39\x39\x23\xb2\xd7\xfb\x70\x15\x56\xed\x88\x74\xbc\x10\xa9\x0d\x8c\xb8\x6d\x66\x7e\x3f\xbd\x43\x99\x33\x66\xb9\x31\x15\x44\x0a\xf6\xa8\xe2\x40\x79\xd2\xd1\xda\x85\x2a\xe5\x83\x45\xc5\x7b\x76\xab\x24\xeb\x1b\x2d\xd9\xe1\xdc\x95\x7e\x8b\x75\x54\x70\xd4\x8d\xa6\x62\xe4\xb3\x5d\x7d\xc0\xc8\x4d\xd9\xe3\xba\x16\x55\xd5\xdf\x52\x35\x26\x14\xf4\x7e\x51\x82\x5f\x68\x34\x58\xc9\xcf\x83\x82\xac\xc2\x94\x31\x12\xa6\x76\xa8\x5e\xf6\x42\x86\xb9\xc3\xd1\x22\x5f\x7c\xa9\xb7\x82\xf4\x77\x41\x44\x9b\x99\xd2\x42\x9b\xae\x6c\x62\xca\x07\x19\x9a\x07\x5e\x9a\x6a\x17\xa1\xaa\x5a\x4e\xc8\x69\x05\xf3\xe2\xb8\x8b\xc5\xca\xe9\x7a\x31\x53\x0b\xe3\x87\x96\xf5\xe7\x81\x8a\xfe\xcd\xc5\xdf\x3c\xda\xcd\xfe\xb3\xdf\x7f\xf6\x3b\xba\xfd\xec\x7f\x29\x90\xb7\x3f\x0a\xd7\xcb\x9f\x18\x02\x6f\x7e\xd9\xb7\xf4\xb6\x6f\xe9\xed\x5f\xf7\x18\x8e\x87\xc7\x8a\xfc\x62\xf7\x39\x64\x9e\x07\x96\x6b\x74\x35\xa5\xb8\x46\xa4\x73\xbd\xbf\xaf\x96\xb2\xc4\xb5\xab\x8a\xa2\xa0\xce\x7a\xba\xbe\xb0\x5d\xa2\xf6\x12\x69\x10\x6f\x99\xe0\x25\xb4\x55\x4c\x0b\x73\xba\xf6\xe6\xf4\xda\x2b\x6f\xb6\x50\xf0\x16\xb6\x5b\x78\xbb\xd0\xa0\xbf\x1b\xba\x52\x2c\x6d\x1c\x9c\x65\x33\x49\x29\x42\x2f\x3f\x5c\x7f\x78\x1c\xd6\x28\xe5\xa5\x6f\xc4\x2d\xb6\x32\x2f\x60\xa1\xc6\x6c\xbc\xbb\xb9\xbe\x6b\x34\xa1\x0a\x37\xb2\xc8\xed\x0b\x55\x83\x07\xbb\xa1\x3f\x9b\xe7\xd8\x50\x8f\x0c\xcc\xd1\xd9\x1b\x2f\x74\x98\x06\x2d\x07\x23\x1c\x9a\x38\xf1\x81\x15\xac\xef\x28\x9f\x9f\x31\xfb\x01\x7d\x0e\x9d\xf9\x60\xa0\x16\x54\xe5\xda\xd0\x4d\xb8\xe2\xa9\x00\x5f\x14\x11\x56\xaf\x2c\x6d\x76\x4d\x9b\xd8\x34\x29\xd7\x47\xa0\xa9\x93\xeb\x83\xab\x2b\x09\x6e\x92\xf6\x7f\x00\x00\x00\xff\xff\x1f\x35\x81\x43\xa3\x0a\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 2723, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1508198183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x49\xb2\xe4\x20\x0c\x04\xd0\xbd\xef\x52\x19\xa4\x26\x44\xf8\xfe\xf7\xea\xc0\x76\x7f\x10\x3b\x9e\x80\x2a\x34\x98\x0a\xb6\x0e\x83\xb7\xfb\x5a\x90\xfb\x92\x09\x05\x73\x80\x12\xd5\xde\x0f\xe7\x7d\x59\x43\xef\x10\x19\x68\xbf\xb5\x16\xf7\xfb\x0a\x87\x3b\xa8\x89\xf6\x5b\xeb\x7d\x2b\x74\x6d\x85\x7e\x5b\x01\x72\x80\x66\xef\x1f\x16\x67\x75\x8e\xea\xf1\x64\x43\x88\x2b\x54\xbf\xe4\x0c\xec\x0d\x4e\x30\xfb\xe1\xac\x1e\xf5\xbc\x58\x1c\xee\x87\xf7\xfb\x0a\x19\x85\xba\xff\xda\xac\xc1\x86\x27\xd3\xff\x26\x67\x05\x0e\x47\x75\xb4\xc3\xb2\x39\xbc\xbe\xe5\x0d\x8c\x23\xe0\x3c\x03\x7a\x5f\xf4\xfe\x36\x46\x21\xcd\xfe\x2c\xd6\x30\x8b\xbb\x51\xa4\x7d\x8e\xd9\x65\x6a\x56\x8e\x42\xab\x87\x8d\x95\xf5\xae\xad\xbb\x23\xe0\x56\x94\xbb\x28\xf3\xcd\x83\x10\x15\xe4\x2c\x73\x65\x16\x3e\x45\xdb\x28\x8b\xd4\x39\xb0\xbb\xde\x96\x3c\x01\x43\x17\x30\xf5\x70\x1c\xce\xea\x39\x3d\x32\xbf\xa3\x39\x90\xf6\xbc\x65\x63\xf0\xfe\x17\x00\x00\xff\xff\xbc\x0c\xf6\xcc\x75\x03\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 885, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3b\xb2\xc3\x20\x0c\x45\xfb\xb7\x94\x57\x68\x12\xa7\xf4\x6a\x88\x90\x19\x65\x40\x62\x90\x02\xdb\x4f\xe1\x14\x8e\x3f\x1d\xf7\x5c\x74\x46\xfa\x87\x62\x8b\x0b\x1a\x03\x6a\x99\xff\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xc5\xbf\x6d\x65\x78\xb2\xa4\x35\xa1\x4e\x67\x9f\xb0\xe5\x3d\x8a\x25\x42\x21\x0f\x46\xad\x33\xd2\x61\x24\x6d\xac\x09\x32\x77\x5a\xdf\x59\x13\xcb\x26\xff\xee\xda\xa6\x9b\x8d\xd7\xfd\x51\xda\xde\xe7\x5c\x08\x06\x4b\xd4\x61\x2b\xe9\x21\x73\xbc\xbc\x6b\x44\xac\x67\x2c\x64\x3f\x60\x43\x15\x87\x50\xeb\xd1\x72\x55\x01\xc5\x44\xf6\x66\x27\x10\xf2\xf9\x13\x00\x00\xff\xff\x0f\x64\x5d\xd5\x74\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 372, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc9\x41\x0a\x03\x41\x08\x44\xd1\x7d\x1f\xe6\x63\x69\xd9\xe3\xe0\xfd\xef\x15\xb2\x08\x64\xf9\x78\x2a\x26\x50\xd2\xde\xe3\x40\x1a\x14\xc5\xb3\xe7\x1a\xd3\x26\xbb\xfe\xe1\x3d\xb7\xe9\xe4\x1d\xb2\xf4\x93\x62\xd0\x37\x33\x1e\x7c\xd1\x6b\xe4\xfd\x04\x00\x00\xff\xff\xff\x0f\x28\x2b\x60\x00\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 96, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xd1\x6a\xeb\x30\x0c\x06\xe0\xfb\xf3\x28\x85\x8a\xc6\x71\x73\x28\x7b\x1a\xcd\x56\x82\x99\x2d\x05\x5b\xab\x9b\xb7\x1f\x5b\x28\x64\x89\x07\xbd\xfd\xa4\x5f\xc2\xf2\x09\xf0\x9c\x0a\xf9\x89\x80\x49\xdf\xfe\x9d\x40\x29\x52\x22\xcd\x0b\xa4\xe0\xb2\x14\x19\x15\x9c\xa4\x9f\x52\xc6\x71\x0c\x2e\x21\xe3\x44\xf9\x19\xb8\x4b\x56\x7a\x80\x47\xc5\x7d\x04\x7d\x84\x1a\xd8\x4b\x2d\x2b\x38\x5f\xba\xce\xf6\x10\x85\x21\x46\xae\xeb\x8c\x6f\x35\xc3\xed\xa8\xe6\x62\x8d\x85\xe8\x96\x03\xf7\xd7\x26\x0f\xdd\x91\xfb\xfe\xd6\x40\xdb\x98\x6b\x2f\xff\x61\xcc\xb8\xc5\xc5\x40\x21\xd5\xc0\x53\x69\xbc\x10\xf0\x03\x3d\x97\xb5\xd7\xbf\x5f\x5f\xee\x9d\x48\x5e\xef\xad\x8f\xdf\x47\x7c\x06\xcf\x35\x70\xf3\xec\x65\x5e\x98\xd4\xb4\x99\x3e\xb3\xcc\xb4\xa9\x6d\x77\x29\x65\xf2\x02\x61\xbe\x0f\xfb\xf4\xfa\xcd\x7f\xee\xac\xa8\x45\x78\xa7\x5f\x01\x00\x00\xff\xff\x04\xe2\xdb\x08\x5e\x02\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 606, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x41\xce\xec\x20\x0c\x03\xe0\x7d\xef\xf2\xac\xd8\x49\x08\x51\xef\x7f\xaf\x27\xa8\x66\xda\xce\xbf\xa8\xc4\xa7\x0a\x08\xb2\xe9\xa8\x09\xce\x09\x46\x9d\xc7\x62\x43\xde\x18\xbd\x35\x89\x44\xfa\x77\xdd\x50\xe8\x3c\xc2\x50\x06\x89\x50\xf4\xc5\x82\x34\xfe\x30\x6d\x93\x9c\xa0\x0d\xd0\xed\x3c\x92\x60\x10\x2e\x24\xcf\x23\x05\x8e\x80\xc2\x90\xfd\x20\x21\xcb\xdb\x49\x44\x5c\xac\x09\x9f\xe0\x67\x73\xed\xd9\xd7\x01\xb7\x93\x10\x75\x7b\x7d\xe3\x66\x3b\xf8\xb0\xe4\x90\x5f\x9c\x85\x61\xa0\xd5\x79\x8c\x40\x40\x0e\xfb\xf7\x59\x29\xf3\x3c\x46\x22\x13\x11\xa0\xcd\x97\xfa\x23\xd2\xb1\x6e\x7f\xc8\x3f\x52\x0a\xc5\xa7\xfa\xf5\x8f\x6d\xe7\x31\x06\xc8\x06\xd7\xb1\x59\x3f\x9e\x6f\xcf\x7e\x7b\xed\xa7\x05\x62\xdd\x5a\x18\xe3\xc1\x86\xf8\xa5\x34\xaf\x64\x6f\xca\x74\xdb\x0b\xdc\x2d\x20\xaf\xa4\x7b\x3f\xe3\x41\x5d\xc5\x08\xb0\x0c\xbe\xfb\x70\x7b\x45\x10\xe3\xc7\xf5\xe3\xf9\xb0\x43\xbb\x73\x05\xb2\x20\xcf\x1d\x19\x9b\x7b\x14\xd9\x04\x35\xce\xff\x01\x00\x00\xff\xff\xce\x39\xae\x3b\xb1\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 689, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x41\x6a\x40\x21\x0c\x84\xe1\xbd\x77\xe9\xe0\x4c\x4c\x8c\x78\xff\x7b\x15\xa1\xe5\x19\x97\xdf\x2f\x44\x89\x34\xb0\x4f\x0c\x78\xdf\x4d\x07\x06\xe6\x02\xe5\x8f\xa3\xda\xe7\xe3\xdc\x6d\x74\xcc\x09\x69\xc1\x6d\xb7\x70\xb8\x83\x96\x20\x55\x39\x0a\xcf\xe8\x8b\xf9\x31\x0c\x12\x2b\xb5\x1b\x6d\x80\xb3\xc3\x09\xae\x7e\xd9\x60\x37\x13\xfd\xe7\x82\xdc\xbf\x43\xd2\x11\xd7\x2c\x86\x43\x23\xdf\xb0\x9e\xe0\x7c\x83\xed\x46\x9f\xf0\xc0\x0a\x50\x87\x8b\x90\x09\x79\x6e\x2d\x8c\x5e\xa9\x8f\xb4\xf5\x37\xac\x84\xf1\x1f\x06\xa6\xc0\xb4\xc7\xf1\x38\xab\xcf\x76\x74\xfe\x37\xce\xd6\xcf\x73\x7e\x03\x00\x00\xff\xff\x87\x58\xc0\x68\xf1\x01\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 497, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3b\x8e\x45\x21\x0c\x04\xd1\x9c\xbd\x4c\xc9\x6d\xdc\x7c\xc4\xfe\xf7\x35\xe2\x45\xdc\xcc\x27\x28\xab\xd5\x59\x81\x12\xd7\x69\x15\x48\x0b\x45\x67\x3e\x1a\xa8\xc7\x69\xa3\x28\x5c\x64\x3e\xb7\xfb\x8b\x3a\x6d\x18\x27\x8a\x45\xee\x57\xfe\x48\xb7\x53\xd7\x7d\xc0\x10\xf1\xf7\x20\xed\xd3\xe4\x89\x8d\x7a\xa1\x8a\xc7\x46\xb9\xbe\xbe\xeb\x32\x8a\xb9\xd1\x9e\x64\xfc\x3c\xa9\x81\xf6\xed\xcf\x7f\x00\x00\x00\xff\xff\x35\x58\x4b\x85\xe7\x00\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 231, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd1\x51\x6a\xc3\x30\x0c\x06\xe0\xf7\x1d\xa5\x50\x51\x3b\x69\x92\xb2\xd3\x08\x5b\x09\x66\xb6\x1c\x6c\xb5\x59\x6e\x3f\x58\x19\x74\xb1\xfa\xfa\xfd\x4a\x7e\x61\x9d\x00\xcf\xa9\x92\x5f\x08\x98\xe4\xf3\xe3\x04\x42\x91\x12\x49\xd9\x21\x05\x57\x72\xcd\xb3\x80\xcb\xe9\x37\x2a\x38\xcf\xc1\x25\x64\x5c\xa8\xfc\x7d\x70\x5f\x3d\x0a\xb5\xd3\x8f\x5c\x84\xbe\xc1\xa3\x60\x1b\x6e\xf5\x68\xff\xf7\x70\xbe\x1a\x6b\x27\x88\x99\x21\x46\xde\x5e\xb4\xef\x35\x1d\xae\x9a\x8e\x9d\xa6\xd3\xd8\xaa\xbd\xf4\x97\x1e\xa2\xdb\x0f\x6c\xac\xbd\x29\xd3\xc6\x5e\x07\x95\x47\x65\x67\x6b\xec\x64\x5a\xee\xba\x5b\x5b\x38\x99\xe3\x0f\x2a\x89\x04\x5e\xea\x79\x0b\xac\xbe\x66\x5d\x77\x26\xb1\x3a\x63\x14\x3d\xa0\x7b\xc9\xeb\xeb\xd9\xf0\x0b\x3d\xd7\x67\xe7\xf3\x76\x6f\x1b\xb7\xc0\x13\x84\xf5\x31\x1c\x82\x9f\x00\x00\x00\xff\xff\xf2\x51\x0e\xdc\x4e\x02\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 590, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x41\xce\xec\x20\x0c\x03\xe0\x7d\xef\xf2\x2c\xec\x24\x40\xd4\xfb\xdf\xeb\x29\xcc\xf4\x2f\xcc\xa2\x12\x1f\xa5\xc1\x34\xd0\x30\x26\x38\x1d\xee\xf7\x55\x4a\xc8\x12\x3d\x97\x26\x11\x08\xfb\x1b\x27\xe4\xba\x2f\x19\x72\xc2\x13\xf4\x0f\x72\x41\xbc\x2f\x6f\x18\x03\x52\x87\x3c\x0f\x46\x7b\x39\x91\xba\xaf\x20\xe8\x84\x09\xc1\xfb\x0a\x81\xdd\x21\x23\x14\x2f\xbd\x21\x72\x23\xa1\xb6\xbd\x0e\xae\xe4\xc5\x3a\x88\x8f\xfa\xe2\x75\x10\xa2\x5e\xd7\xd3\x5f\xa6\x81\x9b\x25\x83\xec\xc3\x39\xd0\x1b\xd8\xc6\x7d\x75\x47\xe5\x42\xfb\xf7\x8c\x14\xf1\x4c\x0f\xd4\xc1\x56\x70\x5b\x91\x38\xe7\xe6\x0e\xb6\x72\x20\x02\xee\xbb\xc8\xda\xfd\x90\x0e\xd9\x23\x85\xe0\x87\xf2\x10\xb3\xed\x54\xab\x3a\x1d\x64\x75\xc8\xc1\x18\x3f\x9e\xa7\x67\x9e\xae\x72\x6c\x0e\xaf\x10\x03\xbd\x6f\x4c\x54\x9b\xbf\xac\x4e\xae\xeb\xf1\x72\x6d\xfe\xd8\x06\xb8\xae\x12\x09\x89\x50\x42\xb1\x2e\x9a\x83\xa3\xc1\xda\x77\xfd\x6e\xfb\xf1\xcf\xfa\xb5\x7d\x15\x66\x5f\x71\x48\x7f\x26\x06\x64\xb1\x1a\xcc\x18\xeb\x37\x9a\x7d\x0b\x94\x3b\x98\x8e\xa1\x93\x76\xb2\x16\x27\x57\x74\xb5\x09\xaa\x3f\x13\x89\x68\xe0\x3c\x38\xc6\x46\x81\xad\x6d\x76\x84\xee\xff\x01\x00\x00\xff\xff\xde\x60\x07\xe3\x62\x03\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 866, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x4b\xd2\xe3\x20\x0c\x04\xe0\xbd\xef\x92\x2e\x5a\x2f\x44\x71\xff\x7b\x4d\x41\xe6\x8f\x11\xbb\x7c\x4d\x64\x19\x4b\x54\xb0\x75\x18\xbc\xcd\x47\x16\x14\xcc\x01\x8a\x5f\x8e\x6a\xef\x97\x73\x3e\xd6\xd0\x3b\x44\x06\x5c\xe7\xe3\x02\xa6\xc2\x3a\xd8\xe3\x47\x32\xc1\xce\xf9\x84\xc3\x1d\xd4\x44\xfb\xbc\xbf\xc5\xfd\x77\x14\xfa\x1e\x85\x9e\x47\x62\x02\x71\x9b\x0f\x95\x10\x57\xd0\xc0\xd5\x93\x6a\x60\x6f\x70\xa2\x7d\x0e\xec\xda\x9f\x15\x32\x0a\xb5\x1d\xcc\xb3\x34\x6b\x29\xb9\xfa\x5f\x8e\xea\x68\x97\xe5\x70\xac\x97\xcf\x3b\x18\x57\xe0\xbc\x83\x75\x37\xef\xdf\xbb\x37\xe4\x28\xdc\xc3\x39\x2c\xd2\xfe\x3b\xd6\x40\xa8\x59\x39\x0a\xad\xfe\xd9\x58\x59\x6b\xed\xad\x1d\x81\x3d\x82\x57\x79\x8a\xa2\x85\x6b\x61\x38\x08\x51\x41\xb6\xbd\x21\x27\xb3\x70\x7f\xc3\x83\xf2\x92\x3a\xc0\xbc\x02\x39\x1f\xf7\x0d\xec\x2f\x30\xf4\xbd\x7a\x97\x73\x3e\xb2\x36\x3f\x40\xda\xee\x7f\x30\x38\xff\x05\x00\x00\xff\xff\x12\x70\x22\x30\x1a\x03\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 794, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x98\x4f\x73\xda\x3c\x10\x87\xcf\x2f\x9f\x42\xaf\xaf\xad\x97\xdd\xd5\x3f\x9b\x81\x64\xa6\xe7\x76\x7a\x48\x67\x7a\xcc\x10\x70\x1b\x4f\x01\x67\x8c\x69\x92\x7e\xfa\x8e\x9d\x60\x24\x43\x72\xe9\xac\x6f\xd6\x83\xcc\xf3\x93\x2c\x8b\x15\xf3\xff\xd3\x54\x7d\x2f\x77\xeb\xea\x71\x7f\xf3\xf0\xfc\x69\x53\xad\x7e\x15\xb5\x7a\x2c\x77\x84\xaa\x78\x6a\xea\xa5\x4a\xd3\xab\x49\xd7\xed\xa6\x3a\xd4\xab\x62\xa6\xee\x9b\xe6\x61\x3f\x9b\x4e\x7f\x96\xcd\xfd\xe1\x0e\x56\xd5\x76\xba\xaa\x97\x7f\x9e\xd3\xed\xf2\x69\x7a\xfe\x5d\xfd\xfd\x9f\x97\xfb\x26\xfd\x52\xad\xcb\x1f\x65\xb1\x9e\xa9\x6f\x87\xe2\xa3\x22\xaf\xbe\xae\x1a\xc5\x48\x5e\x21\xcd\xac\x9b\x91\x56\x1f\x90\x11\xbb\xfb\x26\xf3\xeb\xa7\xed\x46\xfd\x2e\xea\x7d\x59\xed\x16\x09\x01\x26\xd7\x57\x93\x79\x5d\x55\xcd\xd5\xe4\xbf\x79\xd9\x14\x5b\xb5\x5b\x6e\x8b\x45\xd2\x45\xbe\xed\x22\xdf\x92\x86\x0c\x81\x18\xac\x49\x54\x7d\xd8\x14\x8b\x24\x42\xeb\xb2\x5e\x24\x98\xa8\x87\xba\x6a\xaa\x55\xb5\xe9\x1a\xbd\x04\x13\x55\xee\x6f\xef\xda\xf8\x8b\x84\xba\x46\xb1\x5b\xde\x6d\x8a\x75\xd7\x9c\xbe\x2f\x26\xf4\xa0\x81\x38\x0b\xcc\x01\x93\x56\x33\x01\x23\x0e\xdc\x47\x28\x26\x67\x0d\xb9\x07\xf2\x19\x90\xd7\x47\xf9\x00\x8a\xc9\x0d\x82\xf7\xc0\x6c\xa0\x9f\xf3\x08\x8d\x20\x26\x3a\x37\xb7\x4c\x5c\x6d\x81\xcd\xd9\xa8\x5f\xa1\xb8\xdc\x01\xa6\xa7\x6b\xb6\x76\x18\xe4\x42\x07\xc9\x50\x39\x02\x69\x07\x8c\x41\x8e\x80\x49\xaa\x09\x09\x8c\x6b\x17\x7b\xe0\x0e\xa1\xa8\x9c\x0c\xb0\x21\x20\x13\x2e\xc3\x88\xca\xea\x33\x20\xd4\xe0\x23\x79\xcf\x44\xd5\xec\x81\x0c\x83\x77\xa1\x3b\x80\x62\x72\x67\xc0\x80\x35\x80\xe9\xf1\x2a\x58\xff\x6f\x7c\x28\x17\xc6\x82\x65\x20\xc4\x60\x23\x8a\xd9\x08\xea\x5c\x9f\xab\x73\xc9\x7d\xff\xa8\xc9\xda\x79\xee\xaf\xc3\xc7\xf0\x76\x07\xd1\x50\xf6\xc5\x13\xcd\xc7\x89\x09\xab\xd9\x32\x98\x81\xfa\xc8\xe4\x8a\x0f\x34\x60\x10\x98\x10\x34\xf7\xc5\x47\x0c\x65\xe5\xa6\x2b\xef\x7c\x2c\x3f\x41\x71\x79\x06\x41\xc5\x17\xb1\x11\xd4\x84\xfa\xdc\xdd\x41\x51\x39\x93\x79\xf9\x6d\xa7\xd0\x1e\x52\x61\xbd\x05\x32\x2e\xaa\x77\x87\x58\xb0\xdc\x26\x60\xab\x41\x1b\x60\x1d\xd4\xdb\x31\x15\xd7\x3b\x02\x4c\x83\x46\xb0\xfb\xbd\xdb\x45\x30\x98\x01\xf2\x08\x94\x59\xf0\xc1\xbc\xc4\x54\x4e\x6f\x7d\xb7\xd7\xb6\x3e\xdd\x17\x05\x43\x3a\x8e\x3e\xbb\xa8\x17\xdd\x11\x02\x91\xc1\x4b\x7a\x33\xca\xe4\xdb\xe8\xfc\x3b\xa0\x72\x7a\x97\x81\xd3\x40\x19\xf8\xbc\x97\x47\x4c\xee\xfc\x8b\x06\x7c\x0e\x94\x7b\xc0\x34\x68\x04\xaf\xe3\xbb\x5d\x44\x83\x51\x5b\xf8\x18\x02\x36\x26\x0c\x13\x61\xc1\x00\xbe\x3d\x03\xb5\xe3\xe4\x93\x3d\x64\xd2\xea\xf6\x14\xc6\xf9\xc0\x7d\x84\xe2\x72\xab\x81\xc2\x45\x10\x53\x71\x7d\xde\xbe\xf3\x43\xfb\x2b\x1c\x43\xce\x67\x43\x7f\x85\x63\xc8\xb5\xbe\x20\xd7\x92\x55\x51\xe0\x39\xed\xbf\x03\x28\x2d\x67\xd6\x90\x0f\x9f\xf9\x11\x8a\xca\x5d\x06\xe4\x1c\xb0\x8d\xec\x21\xfd\x57\xfd\x7c\xda\xfd\xf3\xfb\x37\x00\x00\xff\xff\xb4\xe3\xd0\x82\xb6\x16\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 5814, mode: os.FileMode(438), modTime: time.Unix(1508198181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9c\x4b\x6f\xdc\xc8\x11\xc7\xcf\xf1\xa7\x60\xe6\x9a\x4c\xa9\xab\xfa\x2d\x48\x5e\x20\xe7\x04\x39\x6c\x80\x1c\x0d\x59\x9a\x64\x07\x91\x34\x82\x24\x67\xd7\xf9\xf4\x41\xf7\xf0\x51\xdd\xa4\xed\xc3\xe2\x3f\x07\xd9\xc3\x9f\x5b\xfe\x15\xfb\x59\x24\x9b\x73\xf3\xc7\xfd\x7e\xf8\xe7\xf1\xf9\xe1\xf4\xeb\xdb\xcf\x2f\x5f\xff\xf2\x78\xba\xff\xcf\xe1\x75\xf8\xf5\xf8\xcc\x66\x78\x7b\xf9\x3a\xec\xf7\x1f\x3f\xd4\x42\x3f\x9f\xbe\xbc\xde\x1f\xae\x87\x5f\xde\xdf\x5f\xde\xae\xaf\xae\xfe\x7d\x7c\xff\xe5\xcb\x67\xba\x3f\x3d\x5d\xdd\xbf\xde\xfd\xef\xeb\xfe\xe9\xee\xb7\xab\xf5\xff\x34\xff\xfe\x5f\xef\xde\xde\xf7\x7f\x3b\x3d\x1c\xff\x75\x3c\x3c\x5c\x0f\xff\xf8\x72\xf8\xf3\xc0\x71\xf8\xfb\xfd\xfb\x20\x86\xe3\x60\xf8\xda\x87\x6b\xb6\xc3\x9f\x8c\x18\x53\x7f\xef\xc3\xcd\x4f\xbf\x3d\x3d\x0e\xff\x3d\xbc\xbe\x1d\x4f\xcf\xb7\x3b\x26\xb3\xfb\xe9\xe3\x87\x9b\xd7\xd3\xe9\xfd\xe3\x87\x3f\xdc\x1c\xdf\x0f\x4f\xc3\xf3\xdd\xd3\xe1\x76\x57\x03\xfe\xf4\xf6\xf2\xf5\x13\x5b\x0a\x89\x92\x50\xda\x0d\xaf\x5f\x1e\x0f\xb7\x3b\x4d\x1e\x8e\xaf\xb7\x3b\xb3\x1b\x5e\x5e\x4f\xef\xa7\xfb\xd3\x63\x3d\x98\x05\x66\x37\x1c\xdf\x3e\x7d\x2e\xa1\xdf\xee\xb8\x1e\x1c\x9e\xef\x3e\x3f\x1e\x1e\xea\xe1\xd5\x8f\xa4\x91\x5c\xec\xac\x67\x84\xd5\x26\x62\xc9\x9d\x77\x64\x38\x71\x0c\x24\x9c\x88\x59\x9f\xb1\x86\x60\x75\x26\xce\xdc\xab\x47\x08\x57\x0b\x9b\xb5\xba\x42\xa0\x3a\x11\xc7\x48\xec\x9c\x56\x2b\x88\x55\x27\x43\xd9\x74\xe6\x91\x81\xc5\x81\xc4\xf7\xe7\x3c\x41\xa0\x3a\x93\xd8\x4c\x41\x0f\x2c\xc5\x70\xe2\xc4\xe4\xc9\x5b\xa5\x9d\x09\x56\x9a\x49\x9c\x74\xda\x91\xe1\xc4\x6c\x22\x79\x4a\xba\x67\x2d\x08\xae\x4d\x6b\x2d\x6e\x91\x10\x4b\x39\x52\x60\x62\x3b\xcf\x99\x2d\x83\x8a\xc5\x64\xca\x9d\x78\x62\x40\x71\x26\x36\xc4\xac\xbd\x33\x02\x6b\x33\x2d\x73\x65\xcb\xe0\xe2\xb0\x21\x0e\x70\x31\x87\xf2\xd3\x99\x27\x88\x55\x0b\x93\x98\xd8\xa9\x27\x88\x53\xb3\x11\x72\x24\xcb\x74\xd9\x32\xac\x58\x98\x5c\xe7\x3d\x23\xac\x96\xbd\x27\x76\xa6\x33\xcf\x14\x29\xb7\xc4\x49\x88\x25\x34\x72\x45\x41\x72\x67\x28\x64\x72\x86\xd8\xcf\x7d\xac\x65\x50\xb1\x70\xa0\x68\x5b\xf1\xc4\xe0\x62\xf1\xbc\x36\x57\x08\x56\x27\x0a\xd2\x9b\xcf\x0c\x2b\x16\x29\xd3\x65\x67\x9e\x20\x4e\x1d\x0d\x89\x18\x12\x97\x94\x5a\x43\xa0\x3a\x10\x13\xc7\xa0\xc5\x33\xc2\x6a\x65\x99\xc2\x34\x41\x4b\xb9\xe9\x5a\x8a\x01\xc5\x91\x44\x12\xe5\x46\xbc\x30\x9c\x38\x95\xf9\x31\x93\xd3\x5d\x5a\x31\x9c\x98\x6b\x56\x4b\x51\x77\x68\xc5\xc0\x62\x47\xec\x73\x6f\x1e\x21\x56\x2d\xa2\xee\xc3\xb4\x0c\x29\x76\xc4\xae\xcc\x54\xa6\x51\x2b\x8a\x94\x7b\x62\x95\xed\x36\x08\xa9\xad\xb7\x1e\x48\x5c\x7b\xce\x8a\x82\xe5\x9e\x49\x72\xef\x1e\x21\x50\x2d\x5c\xcf\x90\x93\x9e\x4c\x1a\x0a\x92\xfb\xa2\x60\xb2\x42\x4b\x56\xd0\x32\x94\xb8\xcc\xcf\x4c\xec\x49\xdc\xbc\x4e\x75\x10\xa9\xae\xdd\x89\xac\x6d\xd4\x0b\xc4\xab\x97\xb9\xac\x83\x68\x75\xb9\x86\xf2\x2b\xf7\x48\xc1\x72\xaf\x27\x95\x0e\x22\xd5\xb1\x26\x7c\xcb\xe8\xea\x20\x5e\xcd\xcb\x02\xd2\x53\xb4\xdc\x12\x5b\xbf\x92\x8f\x14\x29\x4f\x24\x8e\x38\xb6\xed\xbd\x40\xa4\x3a\x13\x8b\xa5\x25\xf3\xee\x20\x58\x9d\x32\x25\xdb\xab\x47\x08\x54\xc7\x54\x3a\x94\x5e\x3c\x7b\x0a\x96\x97\x75\x92\xa5\x97\x4f\x14\x2c\x2f\x3f\xa1\x77\x8f\x10\xac\xce\x65\x24\xaf\xdc\x13\x45\xcb\xad\xbe\x47\xd7\x53\xac\xbc\x4c\x23\x62\x3b\xf7\x04\x81\xea\x54\xd2\x7e\x21\xb6\xcd\x79\x6b\x8a\x96\x7b\x12\xb3\x96\x8f\x14\x29\x8f\x14\x0c\xb1\x69\x56\x13\x05\x71\x6a\xb1\x81\x5c\xf9\x4b\xe7\x2d\x1a\x82\xd4\xc1\x91\xa3\x40\x6c\xe6\x59\x4d\x13\xa4\x54\x2c\x99\xfd\xf4\x49\xbc\x6f\xfc\xeb\x7f\x44\x85\xe2\xc9\xe6\x7a\x1d\x22\x76\xa9\x82\x16\xe2\xd4\xa5\x8d\x03\x49\x52\xe2\x05\x41\xb5\x6c\x4c\xa9\xe1\xf9\xb3\x6e\x80\x6f\x17\xc0\x86\x14\x58\x3d\x88\x69\x19\xb6\x09\x38\xeb\xa7\x21\x1d\x04\xaa\x3d\x49\x26\xb1\x4d\xf3\x2f\x0c\x2a\x2e\xfd\xdb\xb4\xde\x11\x41\xb5\xce\xa9\x2b\xe1\x06\xc1\xb5\x6e\xad\xc5\x76\xac\xea\x60\x93\x56\xde\xca\xf0\xe2\xbc\x21\x06\x2e\x24\x55\x92\x2c\xb1\x74\xfd\x6a\x62\x50\x71\xbd\x5d\xd9\xf5\xac\x89\xe1\xc5\xb2\x21\xc6\xe5\xe4\x4a\x62\x37\xc4\xb8\xe4\x70\x94\x58\x43\xbe\x6b\xe3\x89\x61\xc5\x31\xa8\x4d\x4d\x2d\xc3\xce\xd2\xe7\x74\x64\xfe\xdc\x2d\x96\xdf\x28\x80\x0d\xc9\xcb\x62\x2c\xcb\xd5\x2a\xa4\xad\x02\xa8\x90\x02\x31\xe7\x7a\x21\xcc\x76\x19\x84\x1d\x05\xc9\x63\xa4\x10\xcb\xa2\xa9\x9e\xc8\xb5\x0c\xb5\x2f\xc9\x38\xaa\x37\xf6\xa2\x7a\xda\xdc\x41\xa4\xba\x0c\xf5\x48\x21\x34\xea\x05\xa2\xd5\x99\x84\x57\xea\x33\x04\xab\x9d\x29\x83\xac\x77\x4f\x14\x2b\x17\x49\x7a\xb7\x5f\x0b\xf1\x6a\x31\xb2\xe1\xae\x14\x2c\xb7\x91\x58\xed\xae\xec\x28\x52\x5e\x96\x35\xe2\xec\x1b\xf7\x02\xb1\x6a\x61\x47\xcc\xd2\xb9\x67\x8a\x94\x07\x62\x12\x6e\xc7\xd8\xcc\xb0\x62\x9b\xd4\x95\x58\xcb\xb0\x62\x6f\x88\xc5\x77\xe6\x09\x02\xd5\xc2\x86\x1c\xc5\xa8\xcd\x0b\x43\x8b\x0d\xa5\xb5\xf9\x0c\xc1\x6a\x61\x21\x71\xb6\x97\xcf\x18\xaa\x77\x64\x3d\x89\x73\xad\x7d\xa1\x28\x39\x33\x89\x70\x49\x0f\x96\x7b\xf9\x1d\xc4\xab\x59\x75\xb6\x8e\xe2\xe5\x6a\x07\x66\x4f\x2f\x21\x77\x9b\x72\x7c\x8b\x07\x47\x66\xaf\x0e\x54\xd2\xfc\xdd\x22\xb0\x8d\xed\x5c\xea\x9c\x82\x1e\xfe\x0d\x83\x8b\xd9\xd8\xb5\xb9\x42\xb0\x9a\x6b\x3d\x2f\x07\xba\x29\xbe\x57\x04\x1c\x96\x33\x64\x57\x6d\x31\x42\x98\xda\x11\x47\x43\xd6\x34\xd9\x5d\x47\x2f\x20\x57\xe9\x7c\x47\xc1\x72\x2f\xc4\x7e\x25\x9f\x28\x58\xce\x26\xd4\x6e\xb6\x1c\x35\x5d\xf1\xbb\x85\xe0\xa1\x45\x12\xb7\x8e\xe5\x4c\x2f\x20\x77\x69\x4b\x0e\x7c\xc4\xaf\x35\x39\x6c\xc9\x33\xf0\xca\x76\xd6\xa4\xcd\x6a\x4f\x97\xa9\xf6\xb4\x59\xed\xe9\x32\xd5\x9e\x28\xae\xa6\xa0\x89\x5e\xa2\xda\xbf\x51\xef\x97\xa8\x78\x66\x3d\xc4\x4b\x06\xb0\x31\x0f\x6c\x17\x42\x87\x56\xb7\xb4\xaf\x62\x19\xe9\x05\xe4\x1b\x1d\x72\xa4\x17\x90\x6f\x74\xc8\x91\x5e\x40\xbe\x31\x09\x8d\x14\x2d\x8f\x49\xbd\xfe\xd7\x53\xb8\x3c\x37\x29\x69\x4b\xd1\xf2\x94\xf4\x5b\x1d\x2b\x0c\xd6\x8b\xf5\x6a\xa7\x53\x4f\x61\xf2\x58\xdf\xfc\x4b\xdc\x0c\xf4\x06\x42\xd5\x71\x75\xde\x2d\x45\xc9\x7d\x24\x5f\x1f\xb7\x9b\xfd\xf2\x59\x4f\xbc\xdf\x2e\x00\x0e\x29\x28\x63\xd8\x0a\x69\xa3\x00\x36\x24\x36\x79\x51\x96\x83\x75\x50\xdb\x45\xc0\x61\x49\xf3\x24\xa0\x85\x60\xb5\x35\xea\x74\xad\xd9\xaa\x91\xcd\x22\xd8\xb0\xca\xa0\x99\x9d\xe5\x60\x1d\xd6\x76\x11\x74\x58\x41\x3b\xb7\x3a\xf5\x76\x11\x64\x58\x81\xca\x9f\x4d\x18\x13\xc2\x6a\xa3\x23\x59\x9e\x62\x77\x10\xab\xce\xac\xef\x34\x37\x0c\x2b\x2e\x17\xae\x9c\x5c\xa7\x9e\xe9\x25\xe4\x7d\x53\xcf\xf4\x12\xf2\xbc\x29\x07\x3e\xbe\x1a\x35\x6c\x49\xb8\x6f\xf1\x99\x82\xe5\xc2\xb4\x3e\xf1\x11\xa2\xd5\x4e\xa7\x91\x2d\x04\xab\x5d\xde\x18\xde\x33\x45\xc9\x43\xa2\xc0\xf5\x15\x0c\xb7\xac\x88\x2d\xc4\xaa\xd9\x95\x39\xbb\x53\x4f\x10\xad\xce\xa4\x3a\x79\x0b\xc1\xea\x28\x14\xfb\x0a\x9f\x20\x52\x7d\xde\x1d\xbe\xec\xc2\xea\x20\x52\x6d\xeb\xae\xdc\xd0\x9e\xf5\x02\xd1\xea\x44\x62\xed\xca\x3d\x52\x94\x3c\x73\x4d\x4a\xd8\x37\x5f\x41\xd4\x51\xa8\x3c\x92\x98\xa4\xbf\x51\x63\x85\xd1\x7a\x4e\xfa\x25\x81\x15\x86\xea\x33\x79\x47\x5e\x5a\xf9\x0c\x61\xea\x92\xb8\xa7\x92\x8a\x96\xdc\x54\x1d\xe9\xfc\xf5\xfb\x85\x40\xa1\x89\x89\xe4\xc2\x79\xbf\xd7\x5c\x2b\x1d\x04\xaa\x43\x22\x0e\xcd\xd7\xad\xf5\x14\x25\x67\x4b\x9c\x73\xbd\x23\x64\xf6\xfa\x48\x35\xc9\x0f\x0a\xfd\xde\xd0\x6e\xae\xea\xf7\x4a\xfe\x3f\x00\x00\xff\xff\xd2\x50\xfc\x14\x12\x53\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 21266, mode: os.FileMode(438), modTime: time.Unix(1508198182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xc1\x6f\x9b\x3e\x14\x07\xf0\xf3\x2f\x7f\x85\x7f\x5c\x37\x5e\xfc\x6c\x63\x70\x94\xb4\xd2\x8e\xd3\x76\xea\x61\xc7\x2a\x4d\xd8\x8a\x96\x84\x88\x90\xb5\xdd\x5f\x3f\x41\x1a\x30\xf0\x14\xed\x30\xbf\x5b\xf8\xca\xe9\xe7\x2b\x30\x06\x37\xcb\xff\xe3\x58\x7c\x2b\x0e\xdb\xf2\xe5\xf4\x70\x7c\xfb\xb4\x2b\x37\x3f\xf3\x4a\xbc\x14\x07\x94\xe2\x7c\xdc\xae\xeb\x5c\xc4\xf1\xdd\xac\x1d\xf7\x50\x9e\xab\x4d\xbe\x10\xcf\x75\x7d\x3c\x2d\xe6\xf3\x1f\x45\xfd\x7c\x7e\x82\x4d\xb9\x9f\x6f\xaa\xf5\xef\xb7\x78\xbf\x7e\x9d\x4f\xff\x58\xf7\xfd\x2f\xeb\x53\x1d\x7f\x2d\xb7\xc5\xf7\x22\xdf\x2e\xc4\xc3\xf9\xf0\x51\xa0\x15\x9f\xcf\x3b\xa1\x24\xa6\x02\xed\x42\xaa\x85\xb4\xe2\x83\x54\x52\xb6\xdf\x9b\x2d\xef\x5f\xf7\x3b\xf1\x2b\xaf\x4e\x45\x79\x58\x45\x08\x32\xba\xbf\x9b\x2d\xab\xb2\xac\xef\x66\xff\x2d\x8b\x3a\xdf\x8b\xc3\x7a\x9f\xaf\xa2\xb6\xf3\xe3\xa5\xf3\x23\x6a\x40\x99\x82\x81\x44\x46\xa2\x3a\xef\xf2\x55\x34\x88\xb6\x45\xb5\x8a\x64\x24\x8e\x55\x59\x97\x9b\x72\xd7\x1e\x74\x8a\x8c\x44\x71\x7a\x7c\x6a\xfa\xaf\x22\x6c\x0f\xf2\xc3\xfa\x69\x97\x6f\xdb\xc3\xf9\xdf\xc9\x6a\x2a\xab\x90\xb2\x6a\x18\x0d\x98\x39\x40\x65\xaf\xf8\x38\xe5\xf1\x93\x94\xf2\x9b\x94\xc9\xcf\x48\x3f\x0b\xe9\x1b\x09\x69\x0a\x4a\x39\x90\x71\xff\x59\x25\xc9\xb5\xca\x8d\x01\xe1\x5a\xd9\x04\x92\x04\x50\x67\x20\xe3\xfe\xb3\xd7\xea\xc6\x80\xe0\xad\xac\xee\x51\xab\x89\x56\xd4\x80\x80\xad\x2c\x20\x3a\x40\x63\xfc\x19\x3c\x4e\x99\xfc\x8c\xf4\x83\xce\x60\x5f\xca\x1c\xe5\x37\x29\x8f\xef\x24\xe5\xbb\xc0\x6b\x37\x82\x4a\x34\x68\x3d\x78\x6e\x0c\xc2\x90\xba\x01\x4c\x25\x24\x08\x98\xa5\x3d\x3f\x4c\x99\xfc\x8c\xf4\x83\xce\x3e\x5f\x72\x92\xf2\x43\x5f\xfd\x4e\x52\xc6\x12\x7e\x9b\x32\xf9\xd4\xf5\x6f\x53\x26\x9f\xba\xfe\x6d\xca\xe0\x6b\x50\x6e\xc2\x5f\x42\x16\x5d\x4f\x27\xdf\x25\x64\xd0\x9b\xa7\xb0\x77\xe0\x3d\x11\x6f\x0e\x09\xdf\x0c\xb1\x79\x0a\x8f\xcb\x5c\x53\x26\x7f\x72\x57\x5e\x53\x1e\xdf\x4e\x26\xc6\x35\x65\xf2\x15\xe9\x07\xdd\x55\x74\x92\x4d\xa8\x65\xa1\x8b\xb9\x1a\x4c\x56\x86\x2e\x66\x6a\x90\x20\xd9\xa0\x89\xb9\x1a\x68\xba\x81\x0e\xda\x20\x49\x2f\x7b\x03\x0d\x4a\x9a\xae\xc0\x28\x0d\xee\x2b\x23\xa1\x7f\x35\x1d\x85\x2c\xba\x52\x92\xe0\xdb\x34\xb0\x6f\x9b\x2d\x23\xea\x6c\xc0\xf7\x21\x8f\xee\x28\x3d\xfc\xb9\xbf\x40\x46\x12\xba\xe1\x3a\xf3\x06\x29\x3d\xec\x7d\xef\x41\xd4\x75\x0f\xbc\xf2\x7a\x10\x75\xdd\x03\xaf\xba\x17\xc8\x59\x48\xcc\x08\x7f\xcf\x58\xec\xf1\x69\x7f\xcf\x38\x6c\x54\x7a\x8a\xb7\x61\x40\xdd\x21\x28\xad\x20\x6b\xde\x7a\x3b\x7d\x18\xf2\xe8\x19\xa5\x87\x3d\xf3\x3d\xe4\xbd\xea\x0d\x43\x1e\x5d\x51\x7a\xd8\xf7\xbc\x77\x08\xb5\x6b\xf6\x17\xde\x91\xbf\x07\xb9\x3d\x28\x74\x3b\x03\xa9\x02\xcc\x46\xd3\xb2\x4f\x99\x7c\x4b\xfa\x61\x77\x21\xbe\x94\x91\x3e\xc3\x9d\x71\x91\x9c\xa4\xfc\xb0\xff\x9b\x51\x32\x05\x63\x01\xd1\x78\xeb\xc2\x28\x64\xd1\x2d\x12\xba\xfd\x07\xef\x00\xcb\x79\xfb\x9b\xd6\x9f\x00\x00\x00\xff\xff\xb3\x76\x87\x6a\x91\x1b\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 7057, mode: os.FileMode(438), modTime: time.Unix(1508198555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd3\xcf\x6e\xa3\x30\x10\x06\xf0\xf3\xf2\x14\xb3\xbe\xee\x32\x78\x8c\xf9\x13\x04\x89\xb4\xc7\x55\x7b\xca\xa1\xc7\x88\x80\xdb\x58\x05\x1c\x19\xd3\x24\x7d\xfa\x2a\x48\x41\xa5\x51\x4f\x15\xc7\xf9\xc4\xf0\xfb\x6c\xc9\xf9\x6f\xdf\x87\x27\xdd\xd5\xe6\xd4\x6f\x8f\x97\x7f\x8d\xa9\x5e\x95\x85\x93\xee\x12\x50\x67\x67\x4b\xf0\xfd\xb5\x37\x7e\xb5\x35\x83\xad\x54\x06\x07\xe7\x8e\x7d\x16\x04\x2f\xda\x1d\x86\x3d\x56\xa6\x0d\x2a\x5b\xbe\x5f\xfc\xb6\x3c\x07\xf7\xbf\x9a\xf6\x1f\xca\xde\xf9\x8f\xa6\xd6\xcf\x5a\xd5\x19\x6c\x87\xee\x2f\x50\x0c\xff\x87\x06\x04\xa7\x04\x28\xce\xb8\xc8\x78\x0c\x7f\xb8\xe0\x7c\xdc\xf3\xf2\xcd\xb9\x6d\xe0\x4d\xd9\x5e\x9b\xae\x60\x84\x9c\x6d\xd6\x5e\x6e\x8d\x71\x6b\xef\x57\xae\x9d\x6a\xa1\x2b\x5b\x55\xb0\x6b\xe3\xdd\xd8\x78\x47\x21\xa6\x1c\x49\x60\x24\x19\xd8\xa1\x51\x05\x9b\x45\xb5\xb6\x05\xe3\x0c\x8e\xd6\x38\x53\x99\x66\x1c\x26\x83\x33\xd0\xfd\x6e\x7f\x6d\x5f\x30\x1a\x07\xd5\x95\xfb\x46\xd5\xe3\x18\x7c\xef\x4a\x8e\x44\x29\x12\x0f\x31\xb9\xc1\xf3\x6c\x29\x39\x96\x28\x31\x92\x28\xa2\xf0\x06\xcf\xa2\xe5\x5d\x79\xef\x2e\x78\xd3\x71\x84\x91\xc0\x55\x8a\x22\xa4\x09\x9e\x65\xcb\xca\xc4\x53\xa4\x4f\x67\x9e\x87\x4b\xd9\x82\x27\x28\x63\xa4\x95\x44\x9a\xec\x2f\xe1\x4f\xed\x3c\x18\xdf\xd6\x47\x00\x00\x00\xff\xff\x43\x6c\xd6\x37\x17\x04\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 1047, mode: os.FileMode(438), modTime: time.Unix(1508198428, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xc1\x6f\xda\x3e\x14\xc0\xf1\xf3\x8f\xbf\xc2\xbf\x5c\x37\x1e\x7e\xcf\x76\x6c\x23\x68\xa5\x9d\x37\xed\xd0\x49\x3b\x56\x14\xb2\x35\x1a\x10\x14\xc2\x5a\xf6\xd7\x4f\x09\x24\x38\x4e\xb6\xcb\xf4\x7a\xa8\xd4\x7c\x5b\xfa\x49\x6b\xec\xd4\x5e\xfc\x3f\x9d\x8a\xaf\xf9\x7e\x53\xbc\x1c\x1f\x0e\xe7\x0f\xdb\x62\xfd\x23\x2b\xc5\x4b\xbe\xb7\xe2\x78\x38\x8b\xe9\xf4\x6e\xd2\x7c\xcf\x43\x71\x2a\xd7\xd9\x5c\x3c\x57\xd5\xe1\x38\x9f\xcd\xbe\xe7\xd5\xf3\xe9\x09\xd6\xc5\x6e\xb6\x2e\x57\xbf\xce\xd3\xdd\xea\x75\x36\xfc\x41\xdd\xeb\x3f\xae\x8e\xd5\xf4\x53\xb1\xc9\xbf\xe5\xd9\x66\x2e\xbe\x9c\xb2\xf7\x02\xad\xf8\xbc\xae\x04\x49\xb4\x42\xe2\xdc\xa4\x73\x54\xe2\x9d\x24\x29\x9b\xd7\x4d\x16\xf7\xaf\xbb\xad\xf8\x99\x95\xc7\xbc\xd8\x2f\x13\x04\x99\xdc\xdf\x4d\x16\x65\x51\x54\x77\x93\xff\x16\x79\x95\xed\xc4\x7e\xb5\xcb\x96\x49\x7d\xbf\x8f\xc7\xc3\xf9\x11\x15\x58\x07\xe8\x1c\xa0\xb6\x89\x28\x4f\xdb\x6c\x99\x44\x71\x93\x97\xcb\x44\x26\xe2\x50\x16\x55\xb1\x2e\xb6\xcd\x45\xa7\xc8\x44\xe4\xc7\xc7\xa7\xfa\xfe\x97\x09\x36\x17\xd9\x7e\xf5\xb4\xcd\x36\xcd\xe5\xec\x6f\xb2\x07\x52\x1e\x52\x1f\xc2\xb7\xc6\xe6\x3a\x04\x03\x46\x05\x6a\x57\x58\x4d\x0f\xa4\x29\x52\xaf\x8d\xc7\xd5\x12\xac\x04\x22\x04\xd2\xdd\x1f\x39\x8a\x7c\xb2\x05\xa2\x34\x96\x83\xc8\x2e\x1b\x39\x22\xd7\x91\x4d\x46\x74\x80\x32\x05\x54\x21\xdd\xab\x3c\xb6\x41\x40\x8d\xa0\x08\x0c\xb6\x72\xbf\x31\xb9\x04\x98\x6a\x20\x2d\xc1\x74\xe3\x1c\x45\x66\x19\x81\xa4\x19\xd0\xd7\xca\x6b\x1b\x04\xad\x63\xfa\x1a\xf9\x64\xeb\x40\x39\xc0\x60\xa0\xfb\x91\x55\x46\x6d\xeb\x81\x8d\xe8\xae\xf2\xda\x06\x81\x90\x62\xbb\xad\xbc\x76\xfd\x91\xc6\xf4\x35\xf2\xca\x5e\x01\x0e\xe9\xb6\xb2\xda\x44\x0a\x48\x45\x74\x1b\xf9\x64\x67\x21\x95\x80\xd2\x86\x72\x10\x79\xe4\x54\x83\x06\x52\x20\xa7\xed\x67\x64\xba\x85\xe5\x0f\x5f\x64\xba\x13\x03\xc6\x80\xd6\x80\xd2\x75\x37\xd0\x6b\xec\xae\x1f\x71\xd9\xd6\xf2\x8b\x81\xa8\xe0\x36\xbb\xfb\x8d\xdd\x55\x23\x2e\xdb\x7b\xfc\x62\x90\x21\xb0\xd8\x77\xdb\xc6\xed\x7a\x35\x74\xfd\x1b\xfc\xbe\xe8\xe5\x10\x6e\x22\x93\x9c\x02\xa2\x07\xac\xdf\xbf\xa6\x5b\x4e\xe2\xfa\x06\xb6\x1b\xb5\xf9\x66\x72\xa0\x38\x3f\x66\x3b\xbe\xd9\x1c\x28\xc1\x70\x47\x95\x69\xa7\x25\x35\xe8\x7a\xea\x5a\x48\xbb\x47\x66\x14\x99\x65\x0f\x84\x03\xf9\x12\x59\x65\x22\x17\x6e\x6a\xfb\x91\x5d\x26\x49\x23\x74\x53\x79\x6d\x65\x01\x83\x13\x84\xa8\x32\xd9\x88\x97\x0d\xb4\x0f\x1e\x1c\x51\x64\x97\xc9\x8c\xd1\xc4\x79\x8a\xa1\x01\xad\x04\xd5\x9c\x1e\xdc\xce\x31\xfa\x95\xd7\xae\xff\xd7\xd7\x69\x6c\xb7\xf5\x0d\x6c\x3b\x6a\x33\x9e\x92\x05\x8a\x1b\xb5\xd9\x9e\x21\x9d\xa2\x80\xfc\x80\xbe\x44\x2e\xd9\x02\xa2\x05\x52\x26\xd8\x74\xc5\x95\xc9\xf6\xd8\x2c\x1f\x24\x1d\x20\xdd\xf0\x38\xff\xab\xbe\x98\x35\xe7\xb2\xbf\x03\x00\x00\xff\xff\xe0\xe6\xf6\x62\x51\x16\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 5713, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd7\xcb\x8e\xd3\x30\x14\x06\xe0\x35\x7d\x0a\x93\x2d\xe4\xc4\xc7\x8e\x2f\xa9\xda\x8e\xc4\x1a\xc4\x62\x90\x58\x56\x69\x62\x98\x88\xb6\xae\x72\x61\x66\x78\x7a\x94\x94\xb4\x4d\x6a\xb1\x19\xd9\x4b\xff\x4a\xfa\xfd\xaa\x6c\xc7\x5e\xbd\x8f\x63\xf2\xbd\x3a\x96\xf6\xb9\x79\x3c\xbd\x7e\xda\xdb\xe2\x97\xa9\xc9\x73\x75\x54\xa4\x3b\x95\x79\x6b\x48\x1c\x6f\x16\xc3\x63\x8f\xb6\xab\x0b\xb3\x24\x4f\x6d\x7b\x6a\x96\x49\xf2\xb3\x6a\x9f\xba\x1d\x14\xf6\x90\x14\x75\xfe\xe7\x35\x3e\xe4\x2f\xc9\xfd\x6f\x5d\xde\xff\x9c\x37\x6d\xfc\xc5\x96\xd5\x8f\xca\x94\x4b\xf2\xad\x33\x1f\x09\x2a\xf2\xb5\x68\x09\xa3\xa8\x08\xc5\xa5\x90\x4b\xe4\xe4\x03\x65\x94\x0e\xef\x2d\x56\x0f\x2f\x87\x3d\xf9\x6d\xea\xa6\xb2\xc7\x75\x84\x40\xa3\x87\xcd\x62\x55\x5b\xdb\x6e\x16\xef\x56\x55\x6b\x0e\xe4\x98\x1f\xcc\x3a\xea\x2b\x6f\xcf\x95\xb7\xc8\x01\xa9\x82\x14\x04\x8d\x48\xdd\xed\xcd\x3a\x9a\x44\x65\x55\xaf\x23\x1a\x91\x53\x6d\x5b\x5b\xd8\xfd\x30\xb8\x20\x34\x22\x55\xb3\xdd\xf5\xf5\xd7\x11\x0e\x03\x73\xcc\x77\x7b\x53\x0e\xc3\xe4\x3f\x30\xeb\x15\x0e\xa8\x33\x40\x26\x46\x7b\x9e\x86\xe1\xa5\x93\x97\x81\x78\xa1\x5c\x7c\x9f\x86\xe1\xb5\x93\xd7\x1e\xf9\x94\x82\x52\xc0\x58\x06\x82\x8f\xf8\x34\xf3\x46\x4b\x01\x42\x00\x72\x0d\x88\x6c\xb4\x67\x61\x10\x3c\x75\xe1\x69\x18\xfc\x3a\xe1\x67\x61\x08\x5c\xbb\x70\x1d\x00\x97\x1c\x18\xc3\x19\x3e\x86\x41\xf0\xf9\x84\x1b\x43\x6f\x38\xf2\x14\x50\x51\x10\x08\x98\xdd\x6c\xf0\xd3\xd4\x3f\xcf\x81\xdf\xeb\xe7\xd0\x3f\xae\x81\xc6\x37\x03\x26\xc4\x5d\x15\xd7\x23\xde\x8b\x21\x0a\x90\x6c\xde\x65\x4c\xfd\xf3\x52\x00\x4b\xf5\x9d\x3f\xc6\x81\x0a\x64\xee\x02\x59\xa8\x02\x02\x9d\x05\x84\xcf\x3d\x61\x2a\x71\x77\x01\x9f\x5f\x41\x14\x0a\x84\x84\x4c\x02\xb2\x2b\x3f\x0d\xfd\xe1\x19\x02\xe3\x0c\x74\xbf\xd6\x2e\xf8\x34\x0c\x81\x4b\xea\xc0\xa5\xd7\x2d\xe9\xc6\x61\x2e\xdc\xeb\xba\xff\xe7\x20\xcf\x26\x93\x6e\x1e\x07\x2a\x90\xba\x0b\xf8\x3c\x01\x9d\xa5\x14\x14\x03\xd4\xb3\x3f\xe0\x9a\x86\xe1\xa5\x93\xf7\x79\x0a\x9a\x40\xda\xc9\xfb\x5f\x78\x67\x28\xa3\x2e\xde\xeb\x51\x84\xf5\x37\x5a\xd9\x1f\xb1\x6f\x36\x9d\x59\xf8\x56\x7c\x95\x0c\x97\xed\xbf\x01\x00\x00\xff\xff\x4f\x1a\xdc\xed\x29\x10\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 4137, mode: os.FileMode(438), modTime: time.Unix(1508198177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd5\x41\x6f\x9b\x30\x14\x07\xf0\xf3\xf2\x29\x3c\x5f\x37\x1e\x7e\xc6\x06\x82\x20\x95\x76\xde\xb4\x43\x27\xed\x18\x11\xf0\x56\x6b\x80\x23\xe3\xac\xe9\x3e\xfd\x14\xab\xa5\xa1\x4c\xb9\x4c\xe6\xf8\xfe\xb2\xf9\x3d\x64\xf3\x28\xdf\x47\x11\xf9\xae\x87\xd6\x3c\x8e\xf7\xc7\xa7\x4f\x9d\x69\x7e\x29\x4b\x1e\xf5\x90\x23\x51\x67\x67\x6b\x12\x45\xbb\x8d\x5f\x76\x6f\x4e\xb6\x51\x05\x79\x70\xee\x38\x16\x71\xfc\x53\xbb\x87\xd3\x01\x1a\xd3\xc7\x8d\xad\xff\x3c\x45\x7d\x7d\x8e\x97\xcf\x9a\xf6\x7f\xae\x47\x17\x7d\x31\xad\xfe\xa1\x55\x5b\x90\x6f\x27\xf5\x91\x60\x46\xbe\x36\x8e\x70\x86\x19\x61\x58\xc8\xb4\xc0\x84\x7c\x60\x9c\x31\xbf\x6f\x53\xde\x9d\xfb\x8e\xfc\x56\x76\xd4\x66\xa8\x28\x02\xa3\x77\xbb\x4d\x69\x8d\x71\xbb\xcd\xbb\x52\x3b\xd5\x93\xa1\xee\x55\x45\x7d\xcb\x7b\xdf\xf2\x1e\x13\xc8\x19\x20\x07\x29\x28\xb1\xa7\x4e\x55\x74\x16\xb5\xda\x56\x94\x51\x72\xb4\xc6\x99\xc6\x74\xbe\x98\x10\x46\x89\x1e\xf7\x87\x4b\xfb\x15\x45\x5f\xa8\xa1\x3e\x74\xaa\xf5\x65\x7c\x03\x16\x0c\x10\x73\x40\x96\x40\xf6\x22\xcf\xb3\xf0\x74\x0a\x98\xb0\x05\xfe\x9c\x06\xe3\x53\x01\x02\xa4\x00\xce\x5f\xe8\xeb\x24\x3c\x2b\x93\x85\x7b\x89\x56\x80\xc5\x12\x0e\x79\xc5\x52\x09\x92\x03\xb2\x1c\xf8\x76\x92\x67\xd9\x0a\xb4\xfc\x07\x2d\xd7\xa1\xf1\xea\xa4\xe7\x61\x30\x1c\x13\xbc\xdc\x26\x48\x11\x58\x74\x55\x70\x29\x5f\xc7\xcb\x8d\x25\xe1\x1a\x93\x19\x48\x09\x98\x08\x40\x31\x7d\xf3\x6f\xd3\xf0\xbc\x04\xe4\xf9\x82\x7f\x4e\x57\xe1\x93\xe5\xdb\xcb\xc0\x13\x8f\x33\x01\xd9\x16\x70\x9b\x01\x67\x13\xff\x36\x0d\xc8\x67\x20\x52\xc0\xed\xe5\x94\x5f\xf5\x59\xf8\xbf\x78\x19\xfb\x1f\xed\xdf\x00\x00\x00\xff\xff\x21\xa0\x48\xf7\x25\x08\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 2085, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x4f\x6f\xda\x3e\x18\xc0\xf1\xf3\x8f\x57\xe1\x5f\xae\x1b\x0f\x7e\x1e\xdb\x71\x8c\xa0\x95\x76\xde\xb4\x43\x27\xed\x58\x51\xc8\xd6\x68\x40\x50\x08\x6b\xd9\xab\x9f\xe2\x42\xe2\x38\xd9\x2e\xd3\xc3\xa1\x52\xf9\xb6\xf4\x13\xf2\xc7\x89\xdd\xc5\xff\xd3\xa9\xf8\x5a\xec\x37\xe5\xcb\xf1\xe1\x70\xfe\xb0\x2d\xd7\x3f\xf2\x4a\xbc\x14\xfb\x0c\xc5\xf1\x70\x16\xd3\xe9\xdd\xc4\xff\xd2\x43\x79\xaa\xd6\xf9\x5c\x3c\xd7\xf5\xe1\x38\x9f\xcd\xbe\x17\xf5\xf3\xe9\x09\xd6\xe5\x6e\xb6\xae\x56\xbf\xce\xd3\xdd\xea\x75\x36\xfc\x4b\xed\xfb\x3f\xae\x8e\xf5\xf4\x53\xb9\x29\xbe\x15\xf9\x66\x2e\xbe\x9c\xf2\xf7\x02\xad\xf8\xbc\xae\x05\x49\xb4\x42\xe2\xdc\xa4\x73\x54\xe2\x9d\x24\x29\xfd\xfb\x26\x8b\xfb\xd7\xdd\x56\xfc\xcc\xab\x63\x51\xee\x97\x09\x82\x4c\xee\xef\x26\x8b\xaa\x2c\xeb\xbb\xc9\x7f\x8b\xa2\xce\x77\x62\xbf\xda\xe5\xcb\xc4\x6f\xf0\xe3\xf1\x70\x7e\x44\x05\x36\x03\xcc\x34\x68\x9d\x88\xea\xb4\xcd\x97\x49\xbf\x6d\x8a\x6a\x99\xc8\x44\x1c\xaa\xb2\x2e\xd7\xe5\xd6\xbf\x68\x11\x99\x88\xe2\xf8\xf8\xd4\x6c\xfe\x32\x41\xff\x22\xdf\xaf\x9e\xb6\xf9\xc6\xbf\x9c\xfd\x15\x76\x40\xca\x41\xea\x42\xb8\x6b\x7c\x70\x86\x60\xc0\xa8\x80\x6d\x0b\x2f\xea\x80\x34\x45\xec\xa5\x31\xc1\xa4\xc0\x65\xa0\x1d\x60\x7b\x78\x7b\x89\x91\x75\xde\x20\x0c\xdd\xae\x31\xc1\x5a\x82\xb5\x40\x94\x02\xe9\xf6\xbc\x8a\x22\x3f\x6d\xe4\x08\xdd\x44\x66\x3a\x03\x47\xb1\xfc\xd6\x98\x60\x83\x80\x1a\x41\x11\x98\xf6\x38\xf7\x1b\x17\x4c\x80\xa9\x06\x52\x08\x64\x5a\xb9\x1f\x99\x69\x2d\xc1\xb8\x98\xbe\x44\x6e\x1a\x81\xe4\xe0\x63\x5f\x2b\x33\x6e\x30\xb8\x57\x44\x91\x91\x6e\x6e\x49\xda\x36\x7b\x38\xb4\xc3\xca\x8c\x1b\x04\x42\x8a\xf1\x6b\x65\xc6\x9b\xaf\x34\xb6\x2f\x91\x99\x76\x0a\x70\x68\x5f\x2b\x2f\x4e\xa4\x80\x54\x64\x5f\x23\x23\x9d\x59\x48\x25\xa0\xb4\x21\x1d\x44\x26\x3a\xd5\xd0\x0c\x5f\x20\xa7\xd7\xef\xc8\xb4\x97\xf9\x1f\x7e\xc8\xba\x29\x16\xba\x5b\x59\x58\xf8\x50\x52\xca\x8f\x28\x98\x65\x01\xdc\xab\xdc\x78\x0a\x28\x87\xf8\xa5\x72\xe1\x06\x8c\x01\xad\x7b\x74\xaf\xb1\xc2\x88\xcd\xe5\xdc\x87\xaf\x8d\x1f\xa6\x11\x98\x6f\x48\x0d\x10\x35\x02\xf3\x0d\x2c\x6f\x08\x19\x02\x1d\xc1\xd7\xc6\x0e\xbb\x11\xd8\xdd\x02\x46\x27\x87\xb2\x8f\xec\x34\x49\x1a\xd2\x3e\x72\xd1\x29\x20\x36\xd3\x2b\x0d\x68\xda\x3b\x48\x5c\x6f\x81\x67\xa3\x38\xe3\x60\x12\x30\x99\x1b\xc3\x33\xbe\x87\xe3\x90\x09\xce\xb6\xa8\x72\x4d\xf0\xa5\x06\xdd\x8c\x1e\x16\xd2\xf6\x59\x29\x8a\xdc\xb4\x83\x6e\xb2\x1d\x45\x5e\xba\x99\x64\x06\xcb\x29\xfd\xc8\x4f\x07\x17\x78\x5c\x99\x71\x65\x01\x83\xe5\xab\xa8\x72\xe1\x88\x40\x84\x40\x0e\xc8\x74\x8b\x76\x51\x65\x5b\xc8\xd2\x80\x56\x82\x92\xbd\xdd\x1e\xd5\x5b\xe0\x6a\x14\xe7\x5c\xc2\x0b\x18\x3d\x8a\xdf\x66\xb7\x07\x17\x79\x54\xd9\x70\xdb\xcc\xf5\xfc\x60\x82\x18\x7c\xf4\x28\xb3\xf2\x16\x48\x99\x60\x0e\x1c\x57\x2e\xdc\x58\xff\x64\xa8\x54\xef\xa8\x47\x95\x13\x4f\x01\x9d\x06\x4b\x3d\xbb\x8b\x37\xa0\xd5\x18\xcd\x78\xa1\x05\x8a\x1e\xa3\x19\x77\xb8\x43\x3f\x7c\x93\xcc\x00\xa9\x3b\xd7\xe2\xcc\xca\x3b\x30\x12\x30\xeb\xe3\x6d\xe4\xa7\xad\x1d\xa1\x2d\xdf\x13\x6b\xab\x10\xa0\x94\x03\xfb\x52\xb9\x71\x0d\x86\x06\xf6\x5b\xfc\x57\x7a\x31\xf3\xff\x82\xfb\x1d\x00\x00\xff\xff\xba\xa6\x1e\x8b\x3d\x1c\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 7229, mode: os.FileMode(438), modTime: time.Unix(1508198179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x4d\x6f\xda\x30\x18\x07\xf0\xf3\xf8\x14\x5e\xae\x5b\x9e\xf8\xf1\x7b\x10\x50\x69\xe7\x4d\x3b\x74\xd2\x8e\x28\x24\xd9\x1a\x0d\x08\x0a\x61\x6d\xf7\xe9\xa7\x84\x92\x57\x8b\x53\xed\x5b\xf3\x97\xe9\xef\xaf\x18\x3b\x56\x58\x7d\x0c\x43\xf2\xb3\x38\x66\xe5\xf3\xf9\xf1\xf4\xfa\x65\x5f\xa6\x7f\xf2\x8a\x3c\x17\x47\x83\xe4\x72\xca\x92\x3a\x27\x61\xb8\x59\xb4\xe3\x1e\xcb\x4b\x95\xe6\x4b\xf2\x54\xd7\xa7\xf3\x32\x8a\x7e\x17\xf5\xd3\x65\x07\x69\x79\x88\xd2\x2a\xf9\xf7\x1a\x1e\x92\x97\x68\xfe\xcf\xba\xcf\x7f\x4d\xce\x75\xf8\xad\xcc\x8a\x5f\x45\x9e\x2d\xc9\x8f\x4b\xfe\x99\xa0\x26\xdf\xd3\x9a\x30\x8a\x9a\x50\x5c\x4a\xb5\x44\x4e\x3e\x51\x46\x69\xfb\xb9\xc5\xea\xe1\xe5\xb0\x27\x7f\xf3\xea\x5c\x94\xc7\x75\x80\x40\x83\x87\xcd\x62\x55\x95\x65\xbd\x59\x7c\x58\x15\x75\x7e\x20\xc7\xe4\x90\xaf\x83\xb6\xf3\xf6\xda\x79\x8b\x1c\x90\x6a\x10\x20\x69\x40\xaa\xcb\x3e\x5f\x07\xa3\x28\x2b\xaa\x75\x40\x03\x72\xaa\xca\xba\x4c\xcb\x7d\x7b\xd1\x29\x34\x20\xc5\x79\xbb\x6b\xfa\xaf\x03\x6c\x2f\xf2\x63\xb2\xdb\xe7\x59\x7b\x19\xdd\x93\x59\xc3\x70\x40\x13\x03\x32\x79\xc3\xa7\xa9\x27\x5f\x59\x7d\xe5\xcb\x97\xda\xe6\x37\xa9\x27\xdf\x58\x7d\xe3\xd2\x17\x14\xb4\x06\xc6\x62\x90\xfc\xa6\x8f\x33\x77\xb6\x64\x80\x86\x83\xd0\x80\xba\x9b\xfa\x49\xe8\x5c\x47\x34\x80\x1a\x27\x7c\x97\xba\xf3\x95\x04\x29\x01\xb9\x01\x1a\xf6\x7f\x33\xd9\x2d\xc2\x3b\x03\x9c\xb7\x52\xbc\x47\x15\xb7\xb4\xb2\x0d\x70\xdd\x8a\x09\x06\x4c\x8a\x71\x93\x2e\x74\xa7\x23\x47\x60\x92\x03\x0a\xc0\x7e\x95\x4c\x53\x97\xbe\x00\xd4\x14\x24\x02\x0d\x07\x17\x83\x59\xb9\x3b\xc4\x43\x33\x0e\x2c\x9e\x75\xb9\x86\x5e\x74\x4e\x2d\x3a\x77\xfa\xe4\xec\x20\x33\xbc\xe5\xc6\x3a\x2b\xb6\x21\xee\x9b\x21\x36\x2b\x64\x5a\xe6\x96\x7a\xf2\x95\xd5\x77\xba\xb3\x0f\x25\x35\xfb\x62\xdc\x52\x4f\x3e\xb3\xfa\xcc\x8b\xaf\x9a\xed\xd1\xcc\x0a\xdc\x62\x5f\x0d\x66\x3b\x43\x17\x7b\x6a\x20\xd1\xda\x40\x3a\x7d\xbe\x8f\x29\x6e\x6f\xe0\xf6\xb9\x21\xf5\xf5\x09\x49\xc1\xf4\x73\x30\x0e\xbd\xe8\x83\x93\xfd\x34\xf5\xe2\x33\x46\x2d\x7e\x9b\x3a\xf6\x55\x73\x92\x46\x6e\x46\x7c\x1f\xfa\xd1\x63\x9b\xee\x7e\xee\xaf\x90\xa0\x16\x5d\xf8\xba\xf3\x02\x6d\xba\xdb\x75\x3f\x80\x6c\xf3\xee\x78\xe7\x1d\x40\xb6\x79\x77\xbc\xeb\x5e\xa1\x58\x41\x7f\x4c\x1f\x67\x5e\xec\xe9\x6d\x7f\xcb\x7c\xd8\xc8\xf8\x1c\x6f\x43\x2f\x7a\xff\x0a\x63\x12\x3a\xd4\x63\x04\xc6\x19\x18\x3a\x78\x85\x30\x09\xfd\xe8\xc6\xa6\xbb\x9d\xf7\x1e\x1a\x1c\x34\xc7\xa1\x1f\x9d\xd9\x74\xb7\xa7\xcc\x37\x08\x79\x0c\x68\x66\x7e\x17\xfb\x69\xc0\xe6\xdf\xbd\x2e\xf6\xd5\x40\xd8\x1b\xb8\xdd\xf5\x5a\x4a\x80\x6e\xdf\x5b\x8d\x0b\xf4\xa9\x27\xdf\x58\x7d\xa7\x2b\x90\x51\x0d\x42\x01\xa2\x18\xac\xff\x49\xe8\x45\x57\x68\xd1\xd5\x3b\x9c\x34\x56\x51\xfb\xeb\xc1\xff\x00\x00\x00\xff\xff\xad\x8a\x23\x6d\xfb\x18\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 6395, mode: os.FileMode(438), modTime: time.Unix(1508198180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\x1b\x37\xee\xb6\xbe\xb6\x97\xc2\x76\x1b\x08\x4b\x0e\xa5\x07\x45\x96\x1d\x51\x5b\x23\x34\x72\x1e\x2c\xf9\xee\x8b\x94\xc4\x0f\xc8\x61\x11\x86\x99\x9f\x66\xfe\xf3\x90\xff\x4e\x00\xd8\x4e\x39\xd2\x68\x58\x0e\x6c\xc1\x9f\xf9\x3d\xbb\x0b\xb4\x50\x9b\xb6\x62\x39\x94\xa2\x26\x15\x89\x75\x78\xd0\xa5\x56\x8e\xe5\x10\x12\x01\x58\x8d\xd5\x52\xf8\x6d\x48\x7d\xc9\x93\x3f\xa4\x1c\x25\x9f\x2d\x29\x67\x44\xa3\xbe\x92\x57\x94\x6d\xa3\x8c\xa7\x64\x79\xcd\x4d\x7e\x61\xc5\xfd\xc1\xb3\x09\xc0\x29\xca\xd2\x91\x9a\x58\xfd\xa2\xa9\x76\xfe\x30\x10\x5d\xbf\xfd\x7e\xfd\x58\xaf\x12\x3a\x92\x57\xcd\x43\x9a\xec\xb5\x51\x3b\x1f\x74\x28\x79\xd7\xd2\x21\x61\xe9\x67\x6b\x6d\x0a\xdc\xd3\x6c\x15\xd5\x7e\x2c\x3e\xac\x72\xc2\x6b\x34\xa2\xe6\x41\xb1\xaf\xb7\xd7\x4e\xd1\x56\xb8\xef\xbe\xa4\x95\xc2\x9a\xff\x9c\x64\x7d\x4d\x4f\xa4\xb0\xfc\x9c\x19\x37\x06\xc0\xa4\xb0\xbe\x75\xaa\x13\x06\x60\xda\x78\xe5\x4a\x21\x03\x9c\xdf\x5d\x69\xa9\x6b\x1f\xf7\xc8\x0c\x7a\x10\xce\x82\x30\x05\x58\x74\x1e\x02\xc8\x1e\xa2\x1f\x4c\x2d\x1b\x3b\x72\x1e\x3b\x6f\xe3\x50\x14\x52\x50\xdc\x25\xc0\xa9\x9b\x50\x1d\x64\xdd\x16\x7d\x1b\x4c\x5b\x62\x39\x7c\x5e\xab\xdf\xf3\x78\x58\xd7\xce\x3c\xfd\x19\xd1\x7c\x80\x9e\x53\x3e\x7f\x7c\x0a\x78\xd6\xdb\x69\x96\xf5\x21\x4f\x3c\x9e\x31\x58\xf0\x45\x0f\xd2\x2c\xe3\x83\xef\xdc\xe7\xd7\x65\x59\x5b\x24\x3f\x6a\xeb\xfd\xf8\x82\x8d\x6d\xc3\x62\x3a\x85\x1a\xa5\xa8\x43\xe4\x0d\xc4\xa3\x55\x60\x23\xb4\xe9\xaf\xa7\x67\xdc\x83\x23\xb6\xee\x6d\xb5\xe4\x12\x9b\x61\xd4\x4d\xdc\xfd\x1b\x1c\x5d\x35\x8c\x1e\x5f\x8c\xe6\x40\x57\x8d\xc6\x98\x86\xd7\xde\x20\x7e\x4f\x2f\x71\xe1\x5d\x26\xa7\xc9\xbf\x00\x00\x00\xff\xff\x22\xd3\x1f\xd5\x6c\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 876, mode: os.FileMode(438), modTime: time.Unix(1508198870, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

