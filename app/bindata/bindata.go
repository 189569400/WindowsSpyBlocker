// Code generated by go-bindata.
// sources:
// app/settings.json
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x7d\x6f\xdb\xba\xf5\xfe\xbf\x9f\x82\x3f\x15\x06\xee\x0d\x7e\xa2\x6c\xa7\x71\x3b\xaf\x2f\xe8\x92\x6e\x0b\xd0\x97\x20\xee\x1a\x0c\xe3\x70\x41\x8b\xc7\x36\x6f\x24\x92\x97\x87\xb2\xec\x3b\xf4\xbb\x0f\xa4\x6c\x4b\xb2\xa5\x24\xbd\x18\xe0\xc0\xd1\x39\x0f\x9f\xf3\x9c\x17\x91\xf4\x7f\x9e\x11\x12\x15\x56\x62\x34\x25\xfe\x7f\x42\xa2\x8c\x3b\x40\xf7\x0d\x2c\x4a\xad\xa2\x29\x89\x56\xce\x19\x9c\x26\x89\xe5\x25\x5d\x4a\xb7\x2a\xe6\x05\x82\x4d\xb5\x72\xa0\x1c\x4d\x75\x9e\x94\xf2\x5e\x26\xa9\xe5\xbf\x6f\xe3\x9c\x6f\x92\x3b\xa9\x84\x2e\x71\x66\xb6\x7f\xc9\x74\x7a\x0f\x36\xa9\x38\xa3\xff\xaf\x22\xb8\x95\x05\xee\x52\xab\x4b\xd1\xe4\x2f\xcb\x92\x36\x5c\x54\xdb\x65\x82\xc0\x6d\xba\x7a\x6f\x64\xb2\x1e\x27\x03\x4c\x2c\x18\x6d\x5d\xf2\x6e\x80\x6f\x06\xb8\xe7\x2b\x57\xdc\x85\x0c\x02\x95\x67\x0a\x86\x7c\x2b\x0d\x17\xc2\x02\x62\x50\x29\x4d\xb2\x5f\x21\x14\xfe\x56\x80\xdd\x36\xc3\xef\x6d\x21\x6e\xb9\xd2\x12\x0f\x70\x69\xb8\x91\x0d\x7e\x69\x62\x6e\x64\x20\xfd\x15\xb5\x6a\xe0\xa4\x5a\xe8\x16\xd0\x1b\xa8\xd4\x5e\xbb\x87\xd6\x48\xb5\x68\x06\x97\x86\xaa\x45\x32\x40\x1a\x40\xcf\x08\xf9\xee\x81\x51\x26\xe7\x8d\xce\x94\xd2\x02\xae\xb8\xbd\x3f\x98\x42\xf3\xb2\x56\x16\x19\x9d\x4b\xe5\x2c\xdf\x06\x79\xa1\x29\x89\xd3\x3a\xc3\xe4\x6e\xbf\xfc\xa3\x74\x10\x8f\xe9\x98\x4e\xe8\xef\xd2\xec\x24\x11\x12\xa5\x2b\x48\xef\x17\x32\x03\x4f\x78\x08\xc6\x98\x0b\xdf\x14\x36\x10\x05\xe8\xf7\x5d\x12\xca\xa4\xdc\xfc\x31\x2d\x61\x69\x3c\xa4\xaf\x26\x81\xb6\x5b\xc2\xe5\x94\xb1\xdd\x2c\x31\x36\xdb\xa2\x83\xfc\x7c\xcc\xd8\x67\xbf\x96\xb1\xd2\x7f\x51\x91\x65\x6d\x51\xb8\xc5\x3c\xcc\xed\x1f\x50\x35\x0b\x6b\xe3\x73\x3a\x1a\x3e\x50\x99\x2a\x42\x50\x94\x6b\xd5\x28\xcb\xa1\x6d\x82\x3b\xfe\xd5\x64\x75\xe7\x84\xc2\xd4\x6e\x8d\x6b\xca\x5a\x01\x0f\xe3\x5f\x47\x59\xf3\xac\x08\x11\x06\xd8\xce\x49\x1b\x50\xa5\x6d\xad\x96\xcd\xc2\x37\xd8\x9e\x3f\x7f\x4e\x76\x70\x32\x40\xff\xf9\x29\x01\x97\x26\x0b\x69\xa1\xe4\x59\x46\xfd\xbb\xfb\x33\x53\x1e\xf7\x49\x5b\x20\x7e\x40\xa7\x64\x80\x4c\x31\xf5\x9c\x80\x5a\x68\x9b\x02\xb1\xba\x70\x60\xc9\xd5\xe7\x19\x53\xd2\x38\x3e\xcf\x00\x49\xec\x88\xe2\x8e\xc4\xd7\xe4\xe6\xf6\xc3\xed\x97\x7f\x7c\xbd\xfe\xfc\x37\x12\x1b\xe2\x52\x43\xe2\x58\xf8\x37\x93\x5c\x9c\x93\xf8\x57\x72\xfb\xe1\xea\xfa\xf6\xc3\xe5\x57\x12\xc7\x4e\xc7\xde\x81\xe4\xe2\xfc\x09\x54\x85\x78\x2a\x95\x57\x6b\x8b\x0c\x90\xa9\x43\x05\x9b\x35\xac\x43\x5d\x93\xbf\x7e\xb9\xbd\x7b\x7f\x7b\xe5\xe9\xae\x6e\xbf\xdc\x90\x58\x90\x7d\x89\x0f\x45\xf6\x5d\xd2\x39\x97\x0a\x7f\xac\xb0\x42\x61\xce\xf1\x37\x9a\x6a\xb5\xe8\xab\x6b\xa7\x40\x04\xbb\x06\xfb\xc6\xef\x0c\x07\x29\xad\xae\x9b\xb1\xe9\x9a\x17\x1f\xe1\x64\x87\x25\x66\x6c\x2a\x59\x8f\x49\xa8\x05\x9c\x90\x4c\x8f\xe7\xce\x58\xbd\x91\x0b\x09\xf6\x29\x93\xd7\x99\xe4\x00\xff\xfc\x83\x75\x7e\x94\xa6\xfd\xb6\xcb\xdc\x64\x61\xb0\xbb\x4a\xf5\xfa\xff\xe2\xb8\xa3\x56\x55\xfb\xe2\xf8\x2d\x53\x01\x31\xd3\x85\x4d\x61\xda\x36\x7e\xe4\xe8\xe2\x4f\x5a\xf8\xfc\x45\xed\x63\xea\xf5\xbb\x4d\x9e\x91\x75\x75\x3e\xbe\x61\xd1\x88\x0e\x59\xf4\xce\x2f\xb3\x5a\xbb\xb7\x9d\xa5\x66\xee\xb5\x74\x90\x13\xc5\x73\x78\xc3\xa2\x01\xfe\x12\x3e\x2c\x0a\x23\x1c\x2c\x2c\x22\x42\xda\x37\x2c\x1a\xb2\x88\x18\xab\x9d\x4e\x75\xb6\x7b\xac\x83\xf9\x27\x89\xbf\xcc\x7d\x26\x3e\x76\xf5\x08\xca\x8f\xba\xd8\x19\x92\xb7\xc7\xfb\xd1\x69\x1f\xa3\x42\xad\x79\x26\xc5\x47\xa9\xc0\x37\xe2\x5f\x7b\xc9\x77\x90\xa5\x3a\x07\xe2\x34\xb9\x39\xac\x3a\x24\x74\x63\xb5\xdf\x05\xc9\xa9\x05\xf9\x1a\x04\xe1\x58\x7b\x3e\xea\x25\x09\xae\x9d\xba\xda\xf3\xd5\xf2\xc5\x42\xa6\x24\xd3\xcb\x7e\x67\x58\x2a\x24\x1e\xb9\xbf\x81\x9d\x6b\x04\xa2\x0b\x67\x0a\x77\xba\xdc\x47\xbd\x92\x16\x52\xa7\xed\x96\x48\x24\x08\x8e\x38\xdd\x04\xa4\x3c\x23\x97\x9f\xbe\xcc\xc8\xa5\xaf\x62\xed\x79\x5f\x38\x9d\x73\x27\x53\xbf\xed\x91\x5c\x0b\x20\x02\x1c\xa4\x4e\xea\x46\x4f\x7f\xba\xbe\x59\x4f\x7e\xae\x9f\x31\x0c\x0f\x41\x3f\x5a\x8e\x28\xed\xc8\x42\x17\xaa\xa1\xe8\x52\x2b\x55\x91\x20\x11\x3a\x20\xb4\x95\x4b\xa9\xb8\x03\xb2\xb0\x3a\x27\x6e\x05\x84\x1b\x93\xc9\x94\x07\x58\xd5\xbe\x7f\x1f\xda\x77\x74\xa4\x45\xb0\x76\x9b\x1b\xee\x56\x27\x67\x24\x6e\x51\x71\x27\xd7\xc0\x58\x29\x15\xac\x1d\x63\x1f\xf5\x12\x19\xfb\x24\x53\xab\x51\x2f\x5c\xbc\xc3\xc6\xd5\xe1\x35\x78\xf1\xc5\x80\x0d\x51\x79\x46\x3d\x6f\x7d\xf7\x50\x29\xca\x3a\xa6\x85\x65\xf3\x0d\xbb\x87\x70\x77\x9a\xfd\x73\xf6\xf5\xc3\x27\xc6\x2e\x0b\x6b\x41\xb9\x4b\xad\x9c\xd5\xd9\x0c\x1c\x63\x33\xb0\x6b\x99\x02\x32\xf6\x39\xe3\xb3\x75\xca\xd8\x0d\xb7\x3c\x07\x07\x16\x19\xbb\x56\x0e\xac\x02\x57\x97\xa9\x84\xf9\x8d\xd5\x73\xf8\xbb\x46\x7f\xd0\x45\xef\x53\x9f\xc8\x5d\xd3\x7a\x82\xdd\x17\xa1\x8d\x0d\xd6\x13\xec\x65\x75\x5f\x3d\x85\xef\x1d\x9d\x4a\xbe\x4d\xba\xb5\x7c\x9b\x74\xab\xe9\xc2\xef\xec\x7d\x8a\xba\x96\xd4\xae\x7a\xd3\x54\xd8\x51\x9f\xab\xa6\xf5\x04\x7b\x92\xf3\xd5\x91\xa3\x93\xbd\x29\xe8\xaa\x6d\xef\x8b\xd0\xb5\xa4\x76\x1d\x9f\x29\x73\x68\xee\xfd\x51\xbe\x1f\xce\xf6\x81\x50\xc2\x3c\x44\x7d\x11\x6e\xa3\x65\x49\x73\x5c\x38\x3f\x94\xfe\xda\xd6\x3c\x25\x7c\x3d\x7d\x89\x03\x30\x00\xdc\xc6\x1d\x01\xf6\x62\x02\xe6\xf0\x36\x90\xcf\x97\xb3\xeb\x23\x64\x5d\x01\x69\xd6\x93\x47\x83\x4e\x9e\x10\x74\xf2\x70\x50\xa1\xb0\x4e\x54\x28\xec\x8d\x29\x14\xb6\xf2\x18\x9d\x8f\xe8\x68\xf8\x92\x8e\x2f\x2e\xfc\x5f\x17\xe7\xe4\x07\x38\x03\x76\x21\xce\x61\xfa\x62\x71\xc1\xa7\x17\xf3\x57\xa3\xe9\x74\x74\x7a\x7c\x97\x38\x7f\xa0\x53\xbd\xbf\x12\x7b\x5b\xf6\xd0\x0f\xc7\x9c\xa3\x03\x9b\xf8\x0b\x75\xe2\xe5\x27\x4f\xe9\xef\x09\x4d\x6f\x8b\x7f\x48\xec\xe4\x7f\x2d\x76\xf2\xa8\xd8\xd6\x68\x28\x1c\x51\x33\x9a\x50\xb1\xf5\xe7\x09\x6d\xee\x9e\x1d\xc3\x31\x1e\xbe\xa2\x2f\x5f\xd1\x97\x43\x3a\x9a\xf4\x4e\xc6\x93\x29\x27\x15\xe5\x70\x34\xbd\x18\x0e\xa7\x7f\x1a\x4e\xfd\x68\x4c\x8e\xee\x64\x87\xa3\xa3\x94\x59\xca\xad\x98\x15\xf3\xfa\xaa\x57\xdd\x30\xa2\x33\x3a\xce\x85\x6a\x44\x8a\xce\x28\x8f\x73\x04\xb1\x84\x23\xab\x50\xb0\x29\xf0\xc4\xb8\xc1\x46\x83\x82\x09\xcf\x68\x8e\x5c\x9c\x40\x83\x5d\x1d\xa1\xf3\x60\x85\xf4\x58\x83\x31\xb0\x89\xed\xa2\x63\x85\x13\xb9\x6b\x9b\x44\xda\xa9\x58\x40\x26\xd7\x60\xb7\x54\xa0\xa1\xb9\xa1\x87\x8d\xcd\xaf\xa6\x0a\xb9\x4b\x7b\x16\x1c\x83\x6b\xc8\x32\x9b\x0b\x85\xe3\x3e\x77\xa6\xab\x3b\x03\xf5\x44\x6d\xf2\x1c\x10\x41\x2d\xc1\x56\xbe\xd6\xb2\x03\x5b\x59\x4d\x5f\x61\x04\x77\xc7\xeb\x3b\x32\xec\xd8\x45\xa2\x33\x6a\xb9\xe8\x88\xe1\xad\x27\xc5\xb4\xbe\x4d\x27\x56\xdc\xdd\x15\xaa\x2e\xf8\x9f\xe7\xcb\x1e\x00\xea\x54\xf2\xac\xaf\x1a\x98\x73\xeb\x30\xb5\x00\xaa\x0f\xe2\x20\x83\x1c\x9c\xdd\x36\x63\xb5\x72\xac\x11\x8f\x52\x3c\xda\xe0\x1a\x5a\x58\xec\xe5\x93\x19\xf4\x66\xee\xaa\xeb\x70\xce\x15\xf7\xad\x6c\xb1\xef\xba\xd6\x43\xdb\xe5\xa5\xfc\x9e\xfb\xd3\xa0\x45\xb3\x96\xd6\x15\x3c\x03\x6e\xdd\xea\xc8\xa3\xab\x57\x45\x1c\x9b\xad\x83\xcd\x19\xf5\x1b\x1d\xf5\xe9\xed\xe7\xaf\xa7\x0a\x6d\x7c\xb7\xda\x0a\xf3\x20\xa4\x04\xee\x56\x60\x7b\xdd\xad\x51\x7e\xc0\xa5\xed\xf2\xd8\xd5\xe9\xe9\x6d\xd8\x66\xae\x37\xc7\xf3\xce\xad\xe5\xdb\xb3\xd8\x58\x2d\xa8\xd0\x9d\x3b\xc0\x1e\x5a\xa5\x1a\x9f\x3d\x50\xba\x67\xfe\xfa\xff\xfd\xd9\x7f\x03\x00\x00\xff\xff\xd3\xae\x49\x3d\x9e\x15\x00\x00")

func appSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_appSettingsJson,
		"app/settings.json",
	)
}

func appSettingsJson() (*asset, error) {
	bytes, err := appSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/settings.json", size: 5534, mode: os.FileMode(438), modTime: time.Unix(1508888955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xd1\x72\xe3\x30\x08\x7c\xef\xa7\x74\xc6\x3c\xf4\x8f\x54\x84\x65\x26\x16\xe8\x04\x89\x93\xfb\xfa\x1b\xd9\x4e\x1c\xab\xd7\xc7\xec\xb2\x88\xcd\x82\x3f\xe1\x2b\x47\x01\x21\xff\xf8\x84\x4c\x66\x24\x89\x2a\xcc\x7c\x23\x40\xcd\x0d\x34\x8a\x89\x9e\x15\x36\xba\xa0\xf1\xce\x59\x0e\xd5\x0d\x2b\x91\x40\x66\xac\x6a\x3a\xfa\xce\xdd\xb4\x49\x51\xe2\x2e\x5d\x28\xf8\x44\xf5\x47\xdd\xfd\x5b\xef\xaf\xe7\x82\xd8\x42\xd5\xba\xa2\x50\x8a\x81\x5d\x1e\x65\x2b\xc2\x20\xf1\x81\xf5\x6a\x93\x69\x0c\x70\x61\x49\x1b\x1e\x05\x50\xc5\x49\x1c\x4a\xd5\x08\x98\x0d\xb2\xc9\x8b\x54\x21\x51\xdf\xbc\xe0\xa4\x8c\xd4\x3d\xf4\x3f\x10\xc4\x82\xe3\xa6\x99\xb9\xf5\x5e\xc4\x60\x61\x89\xba\xd8\xa6\x5a\x61\x54\x19\x39\x41\x09\x66\x45\xab\xaf\x82\x48\x65\xd6\x07\x98\x07\x67\x84\x70\x09\x39\xb0\x13\x4e\xa2\xb3\x26\xa6\x4d\x1e\x73\x84\x4c\x1e\x8c\xea\x8d\x91\x7a\xf3\x23\x51\xfc\x0e\x78\x39\xe0\x61\xd2\x29\x9f\x39\xa3\x50\x71\xfa\x4d\xf9\x3e\x6c\x3a\xb2\x65\xc2\xdb\xcc\xe6\x9d\x8c\x73\x1a\x6c\xc8\x26\x43\x73\xbf\x0d\xfd\x97\xb6\x18\x59\x8c\x23\xd5\xd2\x92\x98\xf5\x1a\x43\x29\xef\xf8\x6e\xa1\x6b\x38\x33\x92\x58\x4b\x29\x97\x9e\xd2\xc4\x72\x4c\x94\x61\x52\xcf\x81\xe7\xed\x17\x45\x0e\x95\x22\x57\xc2\x7e\xc8\xd3\x22\xea\x38\x32\xd2\x9e\xce\xb9\x4e\xe5\x89\xdb\x78\x87\x6c\x1f\xa5\x32\xd2\xea\xfa\x58\xa8\xe2\x0c\xe6\x5a\xfb\xc1\xff\x5c\xa9\x3e\x8e\x55\xaa\x7d\xf3\x4a\x89\xcd\xa9\x02\xc6\x82\x7d\x6e\xcf\x48\xf6\xfd\x6b\xfd\x43\xa2\xc3\xeb\xfa\xe0\xc0\x39\x24\x32\xb0\xa1\x13\x37\xb2\xdd\xdd\x18\x21\xda\xfd\xe7\x1f\x67\xd7\xb2\x6e\xd9\x19\x75\xce\x74\x4a\xdb\x2f\x5f\x50\x66\x7f\x4d\x71\xe5\x37\xdb\x4b\xc4\xbe\x6d\x83\xc2\xdc\xb7\x5d\xac\x9d\x15\xac\x67\xd8\x31\xcb\xb2\x7e\x13\x50\x45\x08\xdd\xc9\x56\xfc\x5f\x00\x00\x00\xff\xff\x8c\x45\x8f\xa0\x56\x04\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 1110, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9b\xdf\x92\xbb\xae\xcf\xc7\xcf\x7f\x97\xf2\x99\xa9\x43\x40\xad\x5e\x0e\x55\xb6\x75\xd6\xaa\x8f\xd8\x76\x7b\xf7\xcf\x60\xbb\x2d\xd4\xec\x3b\xdf\x3d\xda\xf2\xe2\x4f\x48\x02\x01\x84\x7f\x99\xdd\x9d\xbd\x6b\x8f\x2e\x1b\xdc\xf2\xbf\x7f\x99\x6d\x87\x1f\x9f\x35\xe3\x79\xfd\xdf\xff\xcb\xce\xde\xb6\xfe\x05\xd7\x84\xe1\x97\x9f\xd7\x9f\xae\x19\x7e\xf9\xd2\x9e\x97\x27\x6c\x9b\xb4\xe2\x63\x7f\x68\x07\xaf\xb3\x73\xd7\xcc\xa3\x1f\xbf\x7e\xf3\xf5\x63\x63\x97\x6e\x1c\xb2\xbe\xbb\xfe\xe6\x4d\x0a\xce\xb6\x8d\xda\x9c\x83\x34\xef\x9f\xde\xcd\xd7\xae\x71\x3e\xf3\x63\xd3\xd9\x7e\x53\xfb\xe2\x7a\x77\x76\xcb\x7c\xdf\x92\xd9\x7e\x7d\x75\xcd\xd9\x0e\xf6\xe8\xe6\x67\x5b\xd7\x6e\x5e\x2e\xb6\x77\x76\x5e\x4e\xbf\x49\xe3\xbc\xb8\x9f\x7f\x59\x6b\x17\x9b\x85\xaa\x7e\x45\x6d\xc6\x73\x36\x78\xbb\x34\x6c\xc6\x8f\xd6\x1e\x90\x63\x89\xfe\x6d\x63\x5e\x9d\xb3\xcd\xd2\x5d\xbb\xe5\x9e\xdd\xba\xa1\x1d\x6f\x0f\xa3\xd8\x76\x70\x3f\x97\x87\x3d\xde\xa6\x8a\x75\x62\x5b\x4f\x91\xd1\x9e\x3f\x9f\xec\xdb\xee\x9a\x76\xd8\x0d\x3e\xb3\xed\xe2\x9a\x53\xd6\xba\xff\xd9\x79\xb6\xf7\x7f\xbb\x69\x1e\xdb\xac\x1d\xb3\xd6\x4f\xd9\x79\xfa\x10\xf2\xd0\x0d\xc7\xb5\x91\x34\xb5\x37\x46\xd1\xce\x66\xd4\xce\xd7\x38\xa5\xd9\xa4\x1c\xa3\x94\x81\x8c\xca\x77\xee\x23\xa5\x4c\xea\x79\xa4\x6c\xf3\x24\xf5\xe8\xc3\xae\x19\x67\xa5\x28\xb3\x53\x97\x4d\xe1\x1f\x86\x6a\x48\x0d\xa4\x39\x4f\x6f\x83\xa7\xec\x36\xf8\xc4\x34\x87\xc1\x4c\x48\x1e\xe3\x9b\x93\xd2\x4a\x91\x2a\x4a\xc5\x95\x7e\xf1\x92\x2a\xcc\x75\x8d\xb9\x61\xa5\x8b\x78\x21\xf0\x12\xf3\x02\xca\x4f\x7b\xbd\x47\x5c\x57\xb0\xbc\x56\x46\x6b\xc8\xf7\x39\xea\xbf\xd6\x46\x23\xfd\x69\x6d\x60\xff\xb5\x36\x25\xa7\xbf\xdc\x37\x27\x52\x44\x5a\x55\x94\x0b\x9c\x6b\xff\xcd\x6b\x32\x88\x93\x22\xae\x7f\x6f\x4e\x4a\xe0\xb8\x7d\xd2\x1a\xb7\x9f\x2b\xce\x7e\x6f\xce\xfb\xe7\x9b\xef\x15\xd4\x0f\xed\x05\xf9\xf7\x58\xbf\x54\x2b\xd8\xbe\x26\x82\xf2\x6b\x43\x9c\xff\xc5\x9c\xf3\xbf\x37\xcf\x35\xf4\x0f\x43\x58\x3e\x43\xb8\x7d\xa3\xd5\xdf\xed\x07\xeb\x93\x66\xf4\xe3\x1f\xb1\x70\x38\xee\xfc\xfd\x99\x74\xdf\x4c\xcf\xf7\xcd\xf4\xfc\x48\x89\x26\xda\xe6\x15\x2d\x1a\xdb\x9c\xdc\x1a\xb2\xce\x76\x5e\x92\xd6\x9a\xd6\x93\x56\x79\xd6\x87\x60\xd8\x0f\xb7\x35\xd4\xac\x89\x55\xcd\x24\xd6\x66\x9b\x68\xf4\x7e\x93\xa8\x55\x4e\xfb\xac\x6f\xee\x9f\xa9\x86\xb8\xd4\x42\xb1\xa9\x6c\x0d\xfb\x62\x9b\x4a\x3a\xdf\x76\x41\xd7\xf5\x26\x67\xae\xb6\xa5\x73\xcd\xa4\x15\x4c\xd9\x3a\xdf\xa4\xd5\x65\xf1\xd1\xee\x89\xfe\x0e\x1d\x2f\xc8\x45\xb2\xe6\xf4\x69\xd2\x67\x8a\xdb\xa4\x1c\x3f\x52\xf4\xa6\x94\x4e\x4a\x8d\xe7\xc9\x2e\xee\xa7\x39\xd9\xe1\xe8\xb2\xa6\x1f\x2f\xad\x9d\xa6\x87\xbc\xe3\xb0\x74\xc3\xe5\x72\xce\xda\xcd\xaa\xa0\x19\xe7\x29\xf3\xcb\x26\x79\x22\x45\x78\x95\xd1\x4c\x5a\xce\x92\x8b\x59\x42\x6c\x9e\x9a\xec\xaa\x9a\xf6\xb1\x30\x6d\x0f\xe6\x36\x78\xad\x28\xfc\x6d\x46\x4e\x7b\xd8\x46\x83\xf6\x50\x3c\x47\x63\x88\x57\xdb\xd1\x98\xf2\xed\x6c\x13\xf3\x8a\x89\xc6\x29\xc7\xed\xd7\xcc\x6c\x96\x70\x2d\x94\x67\xa2\x61\xc2\x0d\xe4\xa1\x87\x98\x63\xfd\x90\x62\x66\xab\x84\x63\xfd\x90\x32\x42\xf9\x5c\x68\x3f\xc7\xe5\x05\xfb\x86\x09\x59\xe0\x50\xff\x44\x58\xff\x44\xcc\x6a\x2e\xe1\x46\x68\x3f\xc7\xed\x6b\x26\xda\x26\x9c\x89\x66\x29\xc7\xf2\x6b\xc1\x7e\xda\x40\xff\x25\x83\xfd\x9b\x8c\xe0\x3f\x46\xd0\x9f\x11\xf4\x67\x04\xff\x32\xc2\xf8\xc8\x99\xd5\x5a\xc2\x05\xf9\x73\xbd\x5d\x6d\xa7\x1c\xeb\x27\x37\xdb\xd5\x44\xc2\x05\xff\x28\xf8\x39\x31\xe2\xb8\x7f\x85\xa0\xff\x02\xcf\x6f\x54\xe4\x42\xfb\x39\xb6\x5f\xc9\xac\xb6\x12\xce\xac\x56\x13\x2e\xc8\xcf\xed\xa6\x52\x2e\xc8\x97\x63\xfb\xec\x05\xfd\xef\x85\xf9\x69\x6f\xb0\xfc\x7b\xc1\xfe\x15\xb3\x1b\x49\xb8\xc6\xf2\x57\x82\xff\x56\xc2\xfc\x21\xc4\x3f\xaa\x84\xf9\xa3\x12\xe6\xf7\x9a\x59\x4d\xa7\x1c\xd7\x5f\x33\xbb\x91\x84\x0b\xfe\x53\x0b\xf6\xa9\xb1\xff\x6b\x45\x50\x3f\x5a\xe1\xf9\x53\x73\xbb\xc9\x84\xe3\xf8\xa6\x15\x8e\x6f\x61\xbb\x2e\x70\x54\x7f\x08\xd0\xc8\x3f\x02\x47\xf2\xaf\x01\x10\x73\xe8\x5f\xeb\x04\x0b\xb9\x66\x76\xb3\x29\x47\xfe\x1f\x76\x6c\x42\x79\xa8\x5f\x52\x1a\xea\x37\x2c\xaf\x70\x79\x03\xfd\x87\x94\x81\xf6\x0f\x5c\x2a\x8f\xed\x67\xe0\xfc\x19\x96\x77\x12\x17\xe4\x13\xfa\x9f\x2b\x5c\x1e\xc7\xef\xb0\xbc\xc4\xfd\xcb\x05\xff\xca\xe1\xfa\x21\x2c\x4f\xb1\x7d\x0b\xb8\xfe\x26\x55\xc0\xf5\x01\xa9\x42\x18\x7f\x38\x3e\x92\x2a\xe1\xfa\x30\x70\x2c\x7f\x09\xd7\x3f\x81\xe3\xf1\x53\xc2\xf5\x19\xa9\xbd\xc2\xfa\xdf\xc3\xf8\x46\x6a\x2f\xc8\xb7\x87\xf1\x9b\x54\xc5\x9c\xe6\xa4\x1c\xf7\xaf\x12\xf4\x5b\x09\xfa\xad\x84\xf1\x89\xe3\x6f\xe0\xd8\xff\xf1\xfe\x95\x84\xfd\x2b\xa9\x5a\x18\x5f\xb5\xd0\xff\x5a\x98\x9f\x50\xfc\x35\xaa\x22\xee\xb4\x36\xe6\xdc\x69\x6c\xc4\xb5\x02\xeb\xb3\xc0\xff\x38\x53\x78\x71\x03\xe2\x5b\xe0\x39\x88\x1f\x0f\x0e\xfb\xa7\x4b\x89\x0b\xf2\x71\xa7\xb1\x09\x67\x4e\x43\x63\x5e\x41\xf9\x6b\x45\x20\xfe\x04\x9e\x43\xfb\x04\x8e\xcb\x17\xd0\x7e\x81\xe3\xf2\x68\xff\x10\xb8\xd4\x3f\xec\x5f\x75\x68\x01\x71\xc2\xfe\x15\x38\xd2\x7f\x1d\x66\x48\x81\xc3\xfe\x91\x16\xea\x37\x82\x7c\x82\xfd\xe0\xfe\x32\x70\xec\xbf\x35\x95\x60\x7d\x1b\xf8\x1e\xdb\x97\x2a\xa1\x3c\xf7\x35\x21\xe1\x58\x7e\xad\xc0\xfc\x1f\xb8\xa0\x7f\x8d\xd6\xb7\x81\xa3\xf3\x9b\x95\x0b\xed\x17\xa8\x3c\xad\xdf\xeb\x30\x07\xf3\x73\xe0\xe8\xfc\x28\x70\x83\xc6\xe7\xca\x81\xff\x90\x52\x39\xf2\x4f\x52\xaa\x40\xfd\x5f\x39\x96\x0f\xce\x8f\xa4\x14\x9c\xff\xd6\x2d\x0e\xf0\xbf\xf5\xfc\x0d\xd8\x3f\x70\xa1\x7e\x41\x3f\x94\x63\xf9\x29\xc7\xfa\x27\x38\x7f\xae\xe7\x27\x50\xbf\x24\xe8\x8f\xd0\xfa\xcc\x08\xe7\x1f\x66\xdd\x9f\x43\xff\x85\xfb\x73\x13\xb6\x67\xb8\xbc\x26\xac\x7f\xad\xc1\xfe\xe1\xc1\x71\xfd\xdc\xd7\xc6\x98\xe7\x60\x7f\xb9\x72\xa1\x3c\x9c\x3f\x03\x17\xca\x0b\xfa\xd7\x15\x6f\xbf\xdb\xe0\xa9\x65\x40\xb9\x16\xd4\x21\xf0\xb3\x1d\x8b\x39\x27\x78\xc4\x59\xc3\xc4\x9c\x0b\x7c\x11\x67\x17\xce\x6f\xce\x1b\x36\xe6\xb8\x7e\x7e\x60\xc7\x1c\xf7\x4f\xb3\x8a\x8f\x39\x96\xdf\xb0\x86\x89\x39\x96\x9f\x5f\x98\x46\x5c\x90\x8f\x9f\xd8\xdf\x9c\x77\xdc\x98\xe3\xfe\x15\x82\xff\xf0\x13\x7f\xcc\x85\xfa\x05\xf9\x0b\x76\x62\x89\x39\xb6\x6f\x29\xd4\x5f\x0a\xe5\xf9\x8d\x65\xcc\xb1\x7d\xf8\x83\xcf\x98\x63\xff\xe1\x0f\x46\x63\x8e\xfd\xa7\x16\xe4\xe7\x17\x56\x2f\x1e\x96\x06\x02\x87\xf2\x91\xc2\xf2\x11\x1f\x18\x22\x2e\xc8\x47\x82\x7c\xfc\xc2\xe0\xcd\xf9\x83\xc5\x98\x63\xf9\x84\xf1\x4f\x46\xd0\x8f\x30\xfe\xc9\x48\xed\xe3\xf1\x41\xc2\xf8\xa6\x42\xd0\x5f\x21\xc8\x5f\x08\xf2\x97\xd8\xff\xa9\x14\xda\x2f\xf1\xfc\x49\x25\x27\x5f\x67\x8f\xc3\xe8\x97\xae\xf1\x99\xbf\x4c\xd3\x38\x2f\x1f\xd7\x13\xda\xce\x37\xe2\x4d\x88\x90\x49\xbc\x0b\x11\x32\x89\xb7\x21\xbe\x7a\xf7\xf3\xba\xd1\xf3\xf5\x79\x29\xe3\xf8\x42\x47\x37\xe2\x8a\x8e\x6e\xbc\xba\x19\xe7\x39\xbd\xaf\x9a\x9e\xf4\xfb\xdf\xef\xad\x1d\x4e\xdf\x3a\xe8\xd1\xac\xd7\xf9\x98\x0d\x44\xca\xb7\x76\x4a\xf9\xd6\x4e\x29\xdf\xfa\x71\xc2\x99\x03\xf6\x98\x57\xcc\x01\x61\xc2\x99\x03\xea\x84\x17\xb8\x7f\x55\x21\xd4\x5f\x6c\xc7\x79\xcc\x6b\x41\xbe\x9a\xb9\xce\x99\x70\xe6\x80\x33\xe1\x85\x50\xbe\xd8\x8e\xc3\x84\x33\xd7\x29\x23\x4e\xdc\x07\xac\x84\x63\xfb\x91\x62\x0e\x20\x63\x4e\xcc\x07\xc4\x84\x33\x07\xf0\x09\x2f\xa0\x7d\x49\x0b\xf2\xeb\x1c\xea\x8f\x34\x73\x9d\x35\xe1\xcc\x75\xe1\x94\x43\xfb\x13\x77\x9d\x36\xe5\xb8\x7f\xdc\x05\x8b\x84\x33\x07\xf4\x09\x17\xe4\xcf\xf1\xf8\xa3\x9c\xf9\x80\x91\x72\x6c\xff\x5c\xb0\x7f\x8e\xfd\x9f\x72\xe6\xba\x72\xcc\x0b\xe6\x03\x4a\xc2\x05\xfd\x16\x78\xfe\x22\xee\x03\x4f\xc2\x99\x0f\xe0\x09\xc7\xf3\x0b\x7b\x41\x22\xe1\x82\x7d\x4b\xe6\x03\x57\xc2\x05\xff\x2f\x0b\x6c\xff\x52\x92\xbf\xc0\xfa\x11\xe2\x07\x09\xf1\x83\xbd\xce\x9e\x70\xe6\x02\x4e\xca\xf1\xfc\xb7\x17\xfa\xc7\x7d\xa0\x49\xb8\xd0\x7e\x25\x8c\x9f\x4a\xf0\xff\x4a\x98\x1f\x85\xf8\x46\x95\x60\xdf\x5a\xd0\x2f\x77\x81\x31\xe5\x58\x3f\x42\x7c\xd2\x42\xfc\xd0\x8a\xf9\x40\x9d\x72\xd8\xbe\xe6\x2e\x20\x9c\xbe\xf9\x47\x24\xcf\xf4\xc3\x06\x74\xbb\x43\x5f\x82\xf7\x25\xdd\xee\x70\x47\xef\x4f\x62\xce\xdd\x23\xee\x76\xf0\x0e\x72\x84\xf9\xd2\x7e\xd0\xa8\xf4\x0b\x73\xa5\xbf\xaf\xe2\x82\xf8\xfb\x2a\x2e\x87\xbf\xaf\xe2\x62\xb8\x3f\x50\x76\xbb\xdd\xb2\xb3\xcf\xec\xb7\x6d\x87\xc7\x13\xa9\xde\xeb\x9b\x3b\x64\xb3\x6b\xcf\xe3\xd0\x66\xeb\xfd\xe5\xb4\xdc\x79\x3c\x74\xbd\xcb\xa6\x6e\x72\x99\x9d\xbb\xcf\x27\x5c\xd1\x03\xae\xb3\x1f\x16\xe7\x97\xcd\x5d\xfc\xc7\xab\xad\xf1\xeb\xab\x6b\x9c\x9d\x26\xff\x7a\x42\xf6\x20\xf3\xa5\x77\x3c\x1e\x07\xe7\xdd\xb2\x74\xc3\xd1\xef\x0e\x83\x06\x2f\xd0\xe2\x9c\xcd\xfd\xbf\xe6\x6c\x0f\xc5\x7f\xcc\x19\x96\xf1\x7f\xe7\x9c\x66\x97\x7d\x8d\xe3\x32\xcd\xdd\xb0\x4c\xb3\x6b\xbb\xe6\xa1\x9c\x69\x76\xd7\xce\xdd\x5e\xbb\x81\xd9\xb6\xef\xde\xc5\x6f\xfb\x42\x99\x39\xb4\x60\x5f\x8f\xfa\x52\x35\xfb\xe6\xe4\xce\x36\x4e\x8d\x8c\xe8\x5d\x73\x09\x22\xf4\xd6\x9f\x16\xdb\x7f\x77\xc3\xf1\x51\xe8\x57\x7c\x6f\x87\xf6\x30\xb2\x4f\xf0\x5e\x79\x6e\xdd\xb0\x9b\x26\x27\xe5\x41\x9c\x65\xc3\xe7\x1d\xfd\x67\x8a\xdb\xa4\x44\x77\xf4\xfd\x74\x1f\xdc\xf2\xf9\x60\xf2\x91\x6a\xfb\xcf\x6d\xe5\x23\xdd\x5d\xe6\x71\x72\x7f\x68\xc8\xdf\xde\x8a\xf7\xcb\x38\xbb\xc6\x2e\xb6\x1f\x8f\xb3\xbb\xfe\xbe\xc1\x5c\x93\xff\xef\x62\xfb\x6e\xf9\x7c\x31\xe9\x2f\xf3\xd5\xdd\xb3\x9b\x5d\xfc\x38\x7c\xb0\xf7\x2b\x4b\x3b\x4d\xee\x27\x3b\x04\xed\x87\x36\xff\x7a\x7e\xf9\x4e\xbf\xcc\x9f\x66\x5e\xc7\x0f\xfb\xf8\x71\xf1\x5f\xee\xf7\xdd\xa6\x3f\xd9\x29\xb4\xc2\x8e\xf3\xab\x9b\x7d\xe8\xce\xe9\x7e\x98\xbb\x76\x9d\x71\x4e\x6e\x7e\xf4\xfc\xf1\x12\x73\xf7\x0f\xf8\xf2\x33\x0b\xf0\x98\x67\x8e\x3f\x7c\x21\x79\xec\x29\xb4\xc2\x95\x7f\xea\xf8\x65\x2c\x56\xe7\xb7\x6e\x20\x95\x75\xd3\xb5\x64\xc0\x9e\x45\xff\x1f\x00\x00\xff\xff\x73\x65\x44\xe6\xed\x3b\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 15341, mode: os.FileMode(438), modTime: time.Unix(1522108931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1522108932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4d\x6e\x03\x21\x0c\x85\xf7\x3d\x4a\x17\x56\x9b\x9e\x88\x18\x0f\x75\xe5\x9f\x11\xf6\xc0\xf5\x2b\x4d\xa4\x46\x25\xc9\x0e\x3e\xfb\x7b\xe2\xf1\x0e\x1a\x5b\x1a\x06\x03\xba\xbe\x15\x4c\x1e\x25\xd9\x0d\x42\x02\x94\xb1\x7b\xf8\x96\xb7\xe1\xce\x70\x65\x6b\xe7\x05\xfd\xf2\x64\x05\xbb\x2c\xa4\x6a\x05\xa5\x2c\x41\x7d\x30\xd2\x2a\xb4\x7b\x62\x03\xe1\x41\xb7\xa3\xf8\xb5\x08\x44\x51\xd0\xb0\x13\x31\xe1\x10\x8e\x5c\x7c\xf1\xc6\x76\x17\xff\x95\xf1\xdc\xfe\xf4\x7e\xf9\x88\xf9\xf3\xf9\xa5\x7d\x09\x48\x38\xfa\xfa\xa8\x64\x25\x98\x6c\xd5\x67\x9c\xe0\xf8\xde\x96\x95\x47\x69\x14\xe1\xfa\xea\xeb\x66\xc5\xfd\x09\x2a\xb2\xf6\x99\x81\x6e\x09\x65\xdf\x1f\x22\x5e\x4d\x80\x6a\xa3\x38\x38\x09\x8c\xf2\x37\x00\x00\xff\xff\x29\x4d\x1a\xbd\xd1\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 465, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\x5d\x6e\xc3\x20\x0c\x07\xf0\xf7\x1d\xa5\x52\xad\xf0\x91\xd0\x1e\x87\x81\x13\xa1\x11\xa8\x80\x96\xe6\xf6\x53\xb2\x4d\x6a\x82\x27\xf5\x91\x1f\x7f\xe3\xc4\x82\x13\xe8\xf3\x9c\xd1\x4e\x08\x01\xcb\xc7\x09\xac\xd9\xaf\x0b\x7a\x9c\xb1\xa4\x05\x66\x67\x52\xcc\x71\x2c\x60\xe2\xbc\xee\x24\x3d\x8e\xce\xcc\x3a\xe8\x09\xd3\x6f\xfc\x11\x53\xc1\x27\x58\x5d\xf4\xa1\x40\x5b\x0f\xd5\x05\x1b\x6b\xde\xd6\xc6\x66\xc6\xa4\x00\x1f\x03\x78\x1f\xea\x76\xc0\x8a\xbc\x23\xf1\x4a\xa0\x94\x04\xf6\x8a\xc0\x81\x2a\xbf\x10\x49\xa5\xc0\xde\xf3\xce\x78\x27\x19\x03\x6f\x96\xa3\x72\x49\x6a\x4f\xa9\x20\x55\x92\x3a\x90\xdd\xae\x44\x96\x71\xd1\x0e\x8b\x33\xbe\x9e\x40\x68\xfb\xbf\x9c\x09\x62\xb2\x9c\x09\xde\x9e\x20\xba\x4b\xf3\x05\x42\x5c\x5b\x93\xed\x5c\x64\x37\x10\xa6\x60\x4c\x7a\x6f\x52\xb5\xb9\xbe\xed\x4b\xcd\x48\xaa\xa3\x2d\x1c\x32\x96\xe2\xc2\x94\x89\x2b\x09\xfa\x4b\xdb\x90\xb7\xa8\xfd\xec\xdf\x8d\x4e\x18\xdf\x8e\xd6\xe7\xee\xce\xff\x95\x9d\xab\x0b\xd4\x1b\xc9\xb7\x25\x60\xe1\xa4\xe2\x3d\xc5\x1b\xbe\x6c\xbd\xf4\x29\x98\xd0\x46\x70\xb7\xc7\x70\xa8\xfd\x79\x8f\xff\xf5\xab\xba\xe4\x18\xf6\xf8\x1d\x00\x00\xff\xff\xa7\x53\x41\xe7\x12\x04\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 1042, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x51\x6e\x83\x30\x0c\x06\xe0\xf7\x1d\xa5\x52\xad\xc4\x40\x1b\x8e\x13\x81\x41\xd1\x42\x82\x12\xb7\x8c\xdb\x4f\xdd\x26\x6d\x60\xef\xf5\xb3\x25\x5b\xbf\xfe\x0b\xf8\xeb\x52\x69\x9c\x09\x12\xf1\xdb\x05\x98\x22\x2d\xc4\x65\x87\x25\x0c\x25\xd7\x3c\x31\x0c\x79\x79\x4d\x8a\x9f\xa6\x30\x2c\x3e\xf9\x99\xca\xcf\xfa\x63\x1d\x3d\x93\xd8\x7d\xe6\xc2\xf4\x01\xa3\x67\x2f\x66\x5b\x3d\xd1\xe1\x83\x61\xac\x16\x6d\x0f\x31\x27\x88\x31\x6d\xbf\x88\x4e\xc1\xb6\x55\xf0\xd6\x29\x78\x6f\x14\x74\xda\xa6\xbb\x0b\x44\x63\x4c\x07\x95\xcf\xda\x9a\x16\xe2\xb0\x9f\xb5\x43\x4d\x9d\xa2\x16\x51\xbe\xf0\x52\x99\x00\x5a\xec\x6e\x9a\xde\x65\x30\x68\xd1\x59\x4d\x7b\x99\x42\x63\x8d\xf8\xab\x69\x7a\x61\xce\xca\x3b\xae\x41\x69\xad\x39\x5a\x25\xe6\x90\xe6\x7a\xdd\x42\xd2\x2a\x51\xd7\x3d\x11\xa3\xaa\x3e\xb2\xea\xf4\x28\x79\xfd\xdb\x3b\xff\xee\xc7\x54\xbf\xee\x7d\x97\xef\xbf\x6b\x5b\x48\x0e\xc2\xfa\xbc\x1d\xfd\x33\x00\x00\xff\xff\x09\xc8\x75\xd4\x09\x03\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 777, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd4\xbd\x6e\x1b\x39\x10\x07\xf0\x7e\x9f\x42\x80\x9b\xbb\x42\x7f\xcd\x27\x3f\x5c\x5e\x7f\xd5\x15\x57\x2b\x8e\x1c\x0b\xb1\x2d\x43\x56\x60\x3b\x4f\x1f\x0c\xb9\xbb\xa2\x0a\x01\xf3\x13\x77\xc8\x21\x77\xb8\x77\x77\x77\x9b\xc7\xe3\xf9\xf0\xb1\x7f\x7e\xde\x7c\x1c\x5f\x99\x36\x87\xcf\xcb\x79\xbf\xf9\x8b\x74\x47\xba\x13\xe2\xb2\xe1\x7a\x6f\xfc\xf7\x14\xcf\xfe\x7b\x3a\x1f\x36\xc7\xd7\xc7\xd3\xfd\xe6\xe9\x72\x79\x7b\xbf\xdf\xed\x7e\x1c\x2f\x4f\xbf\xbe\xe1\xe1\xf4\xb2\x7b\x38\xef\x7f\x7f\x6d\x5f\xf6\x9f\xbb\xff\x8f\xaf\xdf\x4f\x1f\xef\xff\xbd\x7d\xfd\xf3\x7c\x7a\xf8\x79\x38\x4f\x13\x2b\x72\x85\x68\x45\xaa\x03\x8a\x04\x0a\x81\x05\x6e\x11\x33\x65\x28\x58\xca\x02\x47\xa1\x21\x5e\xff\x8f\xbc\x15\xc2\x10\xa2\x49\x14\x35\xc1\x05\xae\x73\x2c\x54\xe2\xd7\x94\xc1\xb9\x80\x73\x1b\x63\x8a\x45\x05\x9c\x7d\x32\x42\xce\x10\x31\x94\x21\x66\x1e\x61\xe3\x63\xe2\xb6\xca\x21\x76\x4d\x4b\x10\xab\xa3\x9c\x16\x29\xa1\x4f\x52\x62\x7f\x19\xde\xe6\xaf\x04\xd6\x84\x9b\xb8\x0e\x90\x96\xcf\xc4\xb0\x14\xf5\x37\xb1\x41\x8c\xc1\xc6\x9d\x19\x5c\x09\x59\xba\x0a\x98\x14\xb9\x21\x0e\x26\xce\xc8\x6b\x67\x06\x9b\x20\xa7\xc9\x23\x9d\x90\x1c\xc5\x16\xb4\xe1\x9a\x3b\x19\x51\xbe\xd4\x45\x2a\x51\xb1\x0b\x38\x19\xb8\x32\xdc\x17\x89\xe4\x76\xc8\x8d\x09\xcc\x84\x64\xab\x24\xb6\xdf\x55\x91\x19\xec\xd4\x14\x61\xdb\xe0\xcc\x02\x4e\x0c\xe3\xab\x14\xa5\xad\x21\x1a\xc9\xf3\x2c\x0d\xb5\x6d\xa1\x23\xd5\x36\x65\x32\x18\x44\x41\xdb\x25\x12\xf7\xfe\xaf\xc7\x1b\xd3\x21\xb6\x29\x79\xb4\x49\x6b\x02\x1e\x50\x75\x45\x81\xd4\x01\xde\xe1\x7d\x44\x67\x48\x5f\x70\x8d\xdb\x92\x5d\x2e\x30\x9d\x98\x0c\x46\x10\x26\xa8\x5c\xc5\x50\xef\xb2\xd6\xfd\x59\x56\x15\x88\x8d\x28\x03\x98\xe6\x19\x1d\xf1\x96\x73\x6e\x12\xb6\xde\x6e\x3c\xd3\xc1\xd6\x0f\x96\x95\x63\xeb\x48\x0c\xda\x0e\x88\x3a\x59\x0d\x9c\x09\x5c\x1c\x99\x06\x96\xd6\xd1\xec\x39\xf6\xe1\x29\x32\xd7\xb8\x25\x76\x31\x55\xe4\x11\x12\x85\x8f\x4c\xb7\x2c\x37\x54\x5a\x29\x15\x51\xfb\xac\xa8\x43\xd3\x2d\xcb\x0d\xed\x9a\xaa\xde\xbf\x15\xa9\x20\x69\x1c\x4a\xae\x53\x34\xa7\x68\x6b\x49\x70\x14\xd1\x5c\xfb\x45\xa8\x79\x12\xb2\xf8\xfe\x70\xcd\xa0\xed\x80\xd8\x5b\x90\xe3\x95\x47\xff\x9b\x4d\x42\x39\x2e\x5e\x0c\xca\x82\xb8\x8c\x52\x57\x79\x5c\x2f\x5f\x59\xa3\xc0\x51\x72\x33\xa6\x3a\xca\x68\x51\x74\x4f\xed\x79\xa9\xb4\x8b\x23\x6e\x7f\x02\x00\x00\xff\xff\x4b\x5b\xec\xff\xa1\x05\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 1441, mode: os.FileMode(438), modTime: time.Unix(1521509875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd6\xbd\x72\x24\x27\x10\x07\xf0\x7c\x9f\x62\xab\x94\xd8\x81\x7b\xe9\xa6\xa1\x41\xa1\x73\x47\x0e\x1c\xcb\xb2\xce\xa7\xb2\x4e\xab\x92\xe4\x92\xe5\xa7\xbf\xfa\x37\x1f\x03\x17\xac\xc4\xaf\x06\x18\x06\x9a\x86\x9b\x9b\x9b\xf3\x97\xc7\xd7\x87\x8f\xbb\xa7\xa7\xf3\xc7\xe3\x33\x87\xf3\xdb\xcb\xe7\xf9\xa7\x10\x2f\x21\x5e\x24\x70\x39\x73\xbd\x55\xfe\xf9\x84\x9a\xbf\x5d\x5f\x1f\xce\x8f\xcf\x5f\xae\xb7\xe7\xaf\xef\xef\x2f\x6f\xb7\x97\xcb\xdf\x8f\xef\x5f\xff\xfd\x93\xee\xaf\xdf\x2e\xf7\xaf\x77\xff\x7f\xfe\xf2\xed\xee\xbf\xcb\x1f\x8f\xcf\x7f\x5d\x3f\xde\x7e\x7f\xf9\xfc\xf5\xe9\x7a\xff\xcf\xc3\xeb\xe9\xc4\x91\x72\xa1\x22\x54\x46\xb1\x10\x4b\x05\x2c\x93\x70\x21\x66\x9b\xaa\xc4\x95\x17\x09\x07\x57\x21\x36\x23\x56\x9d\x42\xcd\x3a\x54\x02\xa5\xb0\xa0\x1e\x50\xe2\x92\xa7\x32\x49\x9a\x7d\x14\xa3\x54\x3a\x24\x26\x62\xc9\x8b\x44\x7d\x58\x85\x29\x51\x8a\xa3\x58\x49\x54\x00\x0e\x46\xb3\x37\x40\xc5\x25\x91\xaa\x51\x66\xe2\x68\x1d\x12\x2a\xd5\x86\x4a\x1c\x88\x79\x96\x2b\xa9\x2e\xc8\x13\x9c\xf1\x1b\x12\x26\x09\xde\x03\x07\x21\x25\x49\x71\x40\x98\x74\x94\x39\x25\x62\x0d\x8d\x91\xb8\x88\x7f\x93\x06\xcc\xbb\x08\x2a\x8b\x0b\x13\x9b\xc9\xe2\x02\xac\xc9\x21\x49\x3c\x55\x28\x1f\xad\x30\xed\x36\x24\x81\x34\x4f\x30\x49\x9c\x7d\x88\xe0\x83\xa6\x22\xc5\x15\x5c\x0b\x64\xc1\xfb\x10\x6d\xca\xc4\xc4\x96\x47\x59\x48\x8f\x22\xb7\x31\x98\x91\x48\x21\xb5\x05\x65\x45\x9d\xd5\x22\x46\xe0\x5f\x51\x30\x15\x95\xd4\x47\xc0\x58\x48\x92\x94\x06\x38\x90\x95\x09\xa6\x1a\x27\x94\x38\xcd\x46\x22\xfd\xb5\xde\x83\x22\x26\x1c\x4a\xac\x3e\x17\x8d\x89\x18\x6b\xea\x65\x8f\x58\x12\x0d\x93\x89\xa9\xcd\x33\x96\x14\x0f\xb9\xc8\x29\xf9\x5c\x61\x54\x61\x29\xf3\x28\xe3\xeb\xcb\x82\xa3\x96\x65\x8a\x1b\x78\xc5\xd1\x71\xa1\xa8\x2b\xd2\x8a\x7c\x74\x1d\x88\x6d\x53\xd9\x54\x0f\xe9\xf6\x4c\x7f\x78\xd6\x47\x18\x0b\xb1\xfa\xfa\xac\xaa\xab\x30\xbf\x20\xf6\x0b\xb6\x5c\x1b\x4c\xf6\x49\xa3\x18\x57\x8d\x9a\x10\xb6\x43\x9a\x4c\x3e\xe3\x2e\xf3\xc8\xeb\x73\xda\xc5\x6a\x07\x23\x71\xff\x7c\x6c\x09\x25\xb6\xde\xb2\x22\x47\x71\x9f\x41\x28\x52\x9c\x65\xec\xee\x01\x96\x48\x5a\xa6\x0a\xaa\xba\xac\x45\x5a\x1b\xa6\x29\x02\x66\x7c\x10\xb2\x8d\x9a\x47\xc2\x20\x22\x81\x65\x12\xbf\xa3\x6e\xc5\xa8\x17\x46\x4f\x06\x9d\xf8\x08\x69\xaf\xc4\xfb\x10\x80\xd6\x89\x80\xc5\x57\xe4\x83\x89\x24\x74\x1a\xe5\x80\x54\x05\x89\x54\x1f\xb1\x88\x1e\xf4\x0c\x72\x50\x11\xab\x8b\xd8\x64\x7b\xd8\xd6\xa7\x31\x91\xb5\xba\x11\x53\x80\x2c\xd9\x99\x3d\x31\xc6\x43\x91\x24\xc8\x29\x2b\x29\x65\xe2\x10\x4e\x39\x11\x9e\x65\x92\xd2\xcb\x1c\x02\xd9\x52\xae\x4b\x99\x79\x7d\xb0\x41\x56\xc4\x15\x3a\x90\x19\x39\xb6\xbf\x11\xe7\x4b\x68\xef\x49\x24\x95\x24\x96\x8e\x88\x74\xdc\xcb\xaa\x94\x78\x29\xeb\x51\xe6\x50\x56\xd4\x0e\xac\x8a\x8c\xe6\x2d\xab\xac\x90\x15\x71\x20\xfa\x11\xd6\x61\x19\x47\x58\x1f\x58\x12\xd2\xb8\x20\xaf\xb0\xb5\x9a\xf1\x0a\x59\x50\xd7\x36\xbc\xf5\xed\xab\x81\xd3\xa6\x7a\x8c\x62\x0b\x70\x50\xf2\x3d\x66\x38\x23\x5c\x18\xaa\x51\xce\x87\x70\x1a\x4c\x29\x22\x69\x56\x45\x22\x4e\x9b\xf0\x92\xc1\x68\xd8\x39\x8d\x98\x05\xe2\x9a\x86\x04\xd1\xcc\xbd\x2e\xce\x03\x61\x1e\x88\x05\x6b\xd7\x91\x90\x42\x5b\x33\xe1\x40\x4a\x66\x07\x02\x72\xce\x90\x20\x65\x6a\xec\x56\xf2\xa3\x5d\x4f\xcc\xdc\xce\x2c\x1c\xb6\x9b\xe2\xae\xad\xaa\xf8\x4d\x80\xf1\x9f\xb2\xbf\x65\x82\xc3\xf1\xc8\x4f\x8e\x8d\x82\x69\xed\x8c\x60\xd8\xa9\x3b\x6d\xa3\xc6\x9d\x3f\x3c\xad\x1b\x93\xec\x4c\x93\x48\xa9\x68\xaa\xbe\xf3\x63\x68\xab\xb2\x10\x0b\xda\x89\x30\x49\x07\x71\xc1\x11\xdd\xa8\x65\x63\xcd\x0b\xcb\x5e\xb9\xec\x95\x0b\x62\x73\xab\xbc\xd6\xf6\x0b\xc1\xc6\xb5\xb1\x84\xad\xb1\x84\xed\xc5\x56\x70\xd1\x1a\xf4\x3b\x1d\x9e\x9a\xdf\xa7\x0a\x7b\xc7\xc9\x28\x65\xc2\xdf\x51\x46\x2e\xc3\xf5\xb1\xa9\xb2\xc7\x52\x03\x87\x8c\x3c\xba\x33\xed\xac\x93\xb8\x25\xf0\xd1\x56\x98\x96\x87\xa2\x1e\x2f\x5d\xb8\x32\xe0\x9d\xb9\xe0\xae\x88\x83\x48\x79\x88\x15\x17\xb0\x43\xc8\xaf\x53\xe6\xdb\xdc\xd5\x72\x3a\xe2\x15\x8a\x9e\xea\x32\x1f\x2a\x9e\xa2\xb9\xb2\x27\x5e\x1c\x05\x25\x74\x9a\xdf\xeb\x90\x96\x9b\x2b\x25\xa5\x24\x27\x6c\x79\xcd\x6d\xf3\x4f\x71\x8f\x23\x30\xe3\x9c\xf2\x7b\xef\xf7\x00\x00\x00\xff\xff\x7a\x56\xc9\x20\x42\x0c\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 3138, mode: os.FileMode(438), modTime: time.Unix(1522107995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x31\x8f\x1a\x3f\x10\x05\xf0\xde\x9f\x62\x25\x9a\xff\xbf\xb8\x59\xbf\x99\xb1\x3d\xa6\x4c\x9f\x2a\x45\x6a\xc2\x71\x39\x14\x0e\x10\xc7\x89\x5c\x3e\x7d\xe4\x05\x16\x4f\xba\xf7\xd3\xda\x23\xeb\xd9\xbb\x58\x2c\x86\x97\xed\x69\x73\x59\xed\x76\xc3\x65\xbb\x47\x1c\x3e\x8e\xcf\xab\xf3\x66\xf8\x2f\xca\x18\x65\xe4\x08\x1b\x50\x97\x8a\xff\x43\x5b\xfc\xf5\x70\xda\x0c\xdb\xfd\xcb\x61\x39\xbc\x9e\xcf\xc7\xf7\xe5\x38\xfe\xdc\x9e\x5f\x3f\x7e\xd0\xfa\xf0\x36\xae\x4f\xab\x3f\x9f\x4f\x6f\xab\xdf\xe3\xf7\xed\xfe\xf9\x70\x79\xff\x76\xfc\xfc\xb2\x3b\xac\x7f\x6d\x4e\x21\x40\x28\x1b\x59\x21\x2d\x8f\x8c\x92\x6e\xa8\x42\x88\xb5\xa1\x28\xa1\x54\x02\xa6\x75\xc5\x08\xd9\x88\x25\xde\xc4\x12\x09\xa2\x4d\x88\x85\x94\x52\xec\x32\x07\x6e\x59\x08\x56\x09\x9c\x1d\x53\xf1\xb4\xa0\x91\x4a\x21\xe6\x4a\x92\x3a\x24\x09\x89\xa7\x84\x02\xe2\xc8\x21\x6b\x9b\xae\x04\x9b\x23\x73\xc8\x89\x52\x22\x88\x51\x7c\x7a\x64\x4e\xe9\xfe\x25\x0b\x31\x6a\x2f\x8e\x4e\x70\xe2\x90\x33\x01\x95\xa0\x3a\x1d\xd7\xd1\x1c\xad\x3a\xd6\xd6\x02\x88\x93\x90\xc8\xb5\x93\x59\x1c\x25\x40\x5a\xad\x91\x12\x08\x56\x3c\xcd\x71\x9a\x34\x93\x35\x7b\x16\xcf\x6e\xaf\x10\xd7\x5e\xd2\x0d\x6a\x0d\x75\x68\x15\xdd\x09\xb4\x06\x3c\xb3\x63\x8e\x9e\xfc\x60\x4e\xee\x0c\x57\x57\xef\x84\x7f\x2c\x01\xa9\x5c\x6f\xab\x95\xa3\x77\xb2\x46\xb2\xda\xab\x5d\xd7\xc4\xdc\x9e\x06\xc4\x9c\x6a\x2f\x75\x2b\x15\x4e\x6e\x9f\xce\xfb\x6a\xa6\xa4\x3d\xac\x03\x58\x02\x2a\x88\x85\xc9\x5a\xa1\x4e\xd6\xab\x15\xd4\x89\x67\x41\x2a\xc1\xbc\xb9\x9b\x74\xb5\xde\xac\x54\x98\x60\xe2\x99\x3d\xcd\xb1\xc6\xc0\xed\xcf\x6b\x2f\x51\xdb\xa9\x3a\x65\xfc\x0d\x00\x00\xff\xff\xc1\x1f\x19\x33\x60\x04\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 1120, mode: os.FileMode(438), modTime: time.Unix(1522108005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbb\x72\xe2\x40\x10\x85\xe1\x7c\x9e\x42\x55\x24\xbb\x01\x47\x73\xfa\x32\x33\x22\xdc\x7c\x23\x07\x8e\x65\x2c\x8c\xca\x80\x28\x21\x17\xe0\xa7\x77\x09\x7c\xcb\xce\xd7\xfd\x2f\x16\x8b\x6a\xd3\x8f\xdd\xb9\xdd\xed\xaa\x73\x7f\xc8\x55\x77\x99\xc6\xb6\xfa\x13\xb5\x8e\x5a\x4b\x64\xa9\xd8\xac\x8c\x7f\xc3\x9c\xfe\x1f\xc6\xae\xea\x0f\x9b\x61\x55\x6d\xa7\xe9\x78\x5a\xd5\xf5\x4b\x3f\x6d\xdf\x9e\xb0\x1e\xf6\xf5\x7a\x6c\xdf\xaf\xcb\x7d\x7b\xa9\x1f\xfb\xc3\xf3\x70\x3e\x3d\x1c\xaf\xff\x76\xc3\xfa\xb5\x1b\x43\xa0\x22\x37\x10\x6d\x90\x9a\x19\x25\x82\x02\xb7\x60\x11\x64\x01\xa3\x22\xdf\x20\x19\x34\x41\x4e\xc1\x09\x5a\x44\x72\x14\xbb\x83\x50\x81\x33\xb8\x80\x29\x81\x8c\x48\xf6\x2d\x89\xc8\xf9\xa6\x5c\xc0\x44\x18\x7f\xa4\x28\x3e\x4b\x74\xae\xe7\x30\x19\x0c\xa2\x88\xcb\xaf\x25\xee\xf7\xab\x1b\xc4\xf5\xd7\xb6\x90\x1c\x2e\x68\x0a\x44\xf9\x09\xc6\x02\xba\x05\x6a\x06\x99\x21\xea\x60\x0a\x6c\x08\xd1\x0c\x99\xdf\x92\x82\xc4\x0c\x4b\x60\x63\xa0\x7d\x04\x00\x00\xff\xff\xb2\x45\xbc\xdf\x72\x01\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 370, mode: os.FileMode(438), modTime: time.Unix(1522107439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x3f\x8f\xd3\x40\x10\x05\xf0\xde\x9f\xc2\x52\x1a\x28\x78\x9e\x37\x33\xfb\x2f\x25\x3d\x15\x05\x75\x08\x39\xce\x22\x17\x47\x4e\x50\x08\x9f\x1e\xad\x2f\x71\x1c\x8a\x95\xf6\xa7\xdd\xa7\xdd\xd1\x5b\xad\x56\xed\x4b\x3f\xee\x2e\x9b\xfd\xbe\xbd\xf4\x87\xd4\x9e\x8e\xd7\xf6\x83\x58\x27\xd6\xa9\x30\xb7\x2c\x6b\xe7\xc7\xa6\x5e\xfc\x32\x8c\xbb\xb6\x3f\xbc\x0c\xeb\xf6\xf5\x7c\x3e\x9e\xd6\x5d\xf7\xb3\x3f\xbf\xfe\xfe\x8e\xed\xf0\xd6\x6d\xc7\xcd\xdf\xeb\xa7\xb7\xcd\x9f\xee\x5b\x7f\xf8\x31\x5c\x4e\x5f\x8f\xd7\xcf\xfb\x61\xfb\x6b\x37\x36\x0d\x0d\x29\x83\x39\x83\x9e\x6e\x52\x33\xd0\xac\x2a\x13\x01\x61\xde\x16\xa8\x6b\xe3\x82\x98\xa1\xaa\x50\x4e\x4a\x02\x55\x81\x7a\x9e\x45\xa8\x97\x49\x09\xaa\xf1\x7f\x05\xa9\x22\x33\x28\x11\x34\x69\x82\x82\x56\x7f\x91\x91\xd3\x93\xca\x52\x0c\xef\x8c\x0e\x75\xc1\x52\x84\x4a\x98\x19\x08\xf7\x49\x29\xa3\x86\x03\xef\xa2\xa7\x1a\x9e\x19\x38\x0d\x72\x67\x5d\x71\x56\x31\xf0\x41\x55\x83\xda\xa4\x9c\x10\x05\x94\xd4\xc4\x80\x10\xe0\x0e\x4a\x5e\xa2\xdc\x40\x1a\xa8\x4b\xd8\x0d\x1a\x14\x89\x0b\x94\xe5\x09\x8b\x34\x14\x87\xd7\x44\x42\x8c\x0f\x15\x28\xef\x52\xcd\x53\x45\x0f\xa9\xe8\x4c\x4b\x60\x2c\x0d\xc9\xf7\x56\x4a\x7d\xfd\x49\xbe\xa4\x4e\x65\x3b\x98\x04\x36\x15\xf9\x2f\x00\x00\xff\xff\xdc\x7e\x84\x29\x8a\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 650, mode: os.FileMode(438), modTime: time.Unix(1522107992, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\xb1\x6e\xc2\x40\x0c\x06\xe0\xfd\x9e\x22\x12\x4b\x3b\xe0\x9c\xed\xf3\xdd\x99\xb1\x7b\xa7\x0e\x9d\x53\x08\x25\x2a\x10\x14\x82\x28\x7d\xfa\x2a\xa5\x82\x33\xe3\xa7\xfb\xf5\x9f\x65\x79\x36\x9b\x55\xeb\x6e\x68\xcf\xcd\x76\x5b\x9d\xbb\x7d\xaa\x4e\x87\x55\x33\xb6\xd5\x93\xe7\xda\x73\x4d\x1e\x73\x85\xba\x08\xf8\xec\xa6\xec\x6b\x3f\xb4\x55\xb7\x5f\xf7\x8b\x6a\x33\x8e\x87\xe3\xa2\xae\x3f\xbb\x71\x73\xfa\x80\x65\xbf\xab\x97\x43\xf3\x73\x99\xef\x9a\xef\xfa\xbd\xdb\xaf\xfa\xf3\xf1\xed\x70\x79\xd9\xf6\xcb\xaf\x76\x70\x0e\x19\xd0\x27\x08\x20\xde\x05\x0f\x29\x01\x91\x02\x4b\x01\x61\x47\x53\x8a\x01\xb3\x02\x92\x58\x46\x43\x49\x96\xd9\x45\x01\x11\x40\xce\x80\x48\x46\xa1\x14\xc5\x52\xf9\xa6\xc8\x40\xa8\xa5\xc8\x1b\xa1\x11\xb9\x18\x01\x51\x01\x43\xf8\x9b\xc6\x30\x1b\x66\x35\x54\xef\x90\x03\x60\xf2\x20\xf8\x48\x0a\xd1\x32\x59\xe6\x3b\x19\x48\x4b\x71\x51\x94\xc1\xcf\x0b\x90\xc8\xed\x0d\x51\x20\xd2\x9d\x51\x4c\xed\xd5\x6a\x2d\xf8\x60\x76\x28\x09\x24\x82\x46\x40\x62\x87\x8a\x40\x4c\x90\xa7\xef\x4a\x45\x6f\x44\x37\x21\xeb\xb5\xc7\x38\xfc\x3b\x40\x22\xc0\xcc\x96\xd1\x32\x1b\xaa\x77\x34\x5d\xd8\xb4\xe9\x00\x92\x7f\x03\x00\x00\xff\xff\xcd\x35\xe4\x1d\xdd\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 733, mode: os.FileMode(438), modTime: time.Unix(1522107979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd0\x31\x8f\x13\x41\x0c\x05\xe0\x7e\x7e\xc5\x4a\x69\xa0\xc8\x5b\x3f\x7b\x3c\x9e\x49\x49\x4f\x45\x41\x1d\x42\x8e\x5b\x91\xcb\x9e\xf6\x82\x72\xc7\xaf\x47\x43\x74\x64\xe9\xfc\x8d\xec\x37\xb2\x37\x9b\xcd\xf0\x30\x2d\xc7\xeb\xfe\x74\x1a\xae\xd3\xb9\x72\x38\xbe\x5e\x96\xfd\xf0\x41\x6c\x14\x1b\x55\x58\x07\xb6\x5d\xe6\xc7\xd4\x7b\x3f\xcf\xcb\x71\x98\xce\x0f\xf3\x6e\x78\xbc\x5c\x9e\x5f\x76\xe3\xf8\x63\xba\x3c\xfe\xfa\x86\xc3\xfc\x34\x1e\x96\xfd\xef\xb7\xed\xd3\xfe\x75\xfc\x3a\x9d\xbf\xcf\xd7\x97\x2f\xcf\x6f\x9f\x4e\xf3\xe1\xe7\x71\x49\x89\x86\x68\x50\x6b\x28\xad\xa3\x0a\xa8\xf0\x9c\xb2\x80\xac\xa0\x18\xe2\x8e\x02\x9a\x24\x27\x98\x05\xc5\x51\xf3\x3b\xa8\x01\xb6\xb8\x91\x30\x85\x33\xb9\x82\xa5\x80\x14\x94\xfc\x4f\x2a\x88\xb8\xa9\x21\x08\xba\xfc\x55\x54\xb0\x10\x99\x77\x19\xaa\x77\xa9\xf5\xee\x3e\x56\x32\x32\xd4\x20\xdb\xf7\x4a\xdd\x6f\xaf\x9e\xa1\x6e\xab\x3a\xa7\xe2\xe8\x59\x52\xa1\x6d\x05\x6f\x89\x92\x91\x1d\x7d\xab\x88\x44\x63\x9f\x45\x21\x64\xbb\x42\xcf\xa6\x05\xc8\x80\x9a\x83\x25\xd1\x03\xee\xa0\xe5\xbe\xf7\x9d\x0e\x6a\xfd\x8f\x26\x89\x8d\x50\x0b\xa8\x54\x50\x4b\x52\xc9\xfd\xde\x6c\x01\xd9\xae\xd0\xff\x51\x09\xe4\x02\xb6\x1e\xfc\x27\x00\x00\xff\xff\x52\xd3\xd9\x75\x03\x02\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 515, mode: os.FileMode(438), modTime: time.Unix(1522107457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\xbd\x8e\xdb\x3a\x10\x05\xe0\x9e\x4f\x21\xc0\xcd\xbd\x45\x8e\x78\x66\x86\x7f\x2e\xd3\xa7\x4a\x91\xda\x71\xbc\x59\x21\x5e\xcb\xb0\x1d\x38\xce\xd3\x07\xd4\x7a\x25\xaa\x10\x30\x1f\xe6\x90\x9a\x01\x37\x9b\x4d\xf7\x32\x5c\x0e\xf7\xdd\xf1\xd8\xdd\x87\x53\x66\x77\x3d\x3f\xba\xff\xbc\xf6\x5e\x7b\xf1\xcc\x1d\xcb\xd6\xf8\xbf\xab\xc9\x2f\xe3\xe5\xd0\x0d\xa7\x97\x71\xdb\xbd\xde\x6e\xe7\xeb\xb6\xef\x7f\x0e\xb7\xd7\xdf\xdf\xb1\x1f\xdf\xfa\xfd\x65\xf7\xf7\xf1\xe9\x6d\xf7\xa7\xff\x36\x9c\x7e\x8c\xf7\xeb\xd7\xf3\xe3\xf3\x71\xdc\xff\x3a\x5c\x9c\xa3\x22\x65\x88\x06\x50\x62\x55\x26\x02\x82\x7e\x94\x05\x62\xe2\x44\x51\x32\xac\x80\x36\xd5\x65\xaa\x85\xce\x3c\x52\x82\x48\x84\x58\x69\x15\xfc\xac\x8c\x22\x2e\x08\xa8\x19\xb4\x8c\x9c\x56\x2a\xad\x18\xde\x19\x0d\xa2\x84\x84\x59\xe6\xd1\xf4\x8c\x10\xbf\x34\x03\x61\x36\x29\xd5\x7b\x52\x8d\xcf\x0c\x84\x50\x66\xd6\x2f\xce\x2a\x0a\x2e\x14\x51\x88\x4e\xca\xb5\x61\x60\x7a\x32\x21\x7a\xd0\x4f\xb3\x8b\x2a\x58\xca\xb4\x73\x0c\x08\x01\x66\xa0\xcf\x4f\x90\xf5\x6c\x0b\x69\xa1\x4f\x48\x10\x58\x8b\xd2\x82\xc5\x37\x12\x2f\x8e\xde\x60\xf5\x7c\x42\x8c\x8b\x0a\x84\x1f\x12\x4d\x60\x2c\x33\x25\x4f\x4f\xb9\x68\xba\x87\x84\x08\x21\x05\x54\x6b\x29\xc1\x1c\xb5\x2e\xed\xa1\xfe\x3d\xdc\x52\xd7\x5c\x87\xeb\x14\xf5\xf7\x8c\xd3\x50\xa4\x39\x86\x84\x10\xc1\x62\x48\xb2\x92\xae\x64\x8e\x85\x10\x2d\x08\x1e\xcc\xad\x52\x5a\x24\xa0\xf7\x0b\x0d\x41\xfe\x05\x00\x00\xff\xff\xe2\x9c\x3c\x3b\x28\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 808, mode: os.FileMode(438), modTime: time.Unix(1522107984, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x31\x73\x5a\x31\x0c\x07\xf0\xdd\x9f\xe2\xdd\xb1\xb4\x43\xf4\xfc\x97\x64\x5b\x66\xec\xde\xa9\x43\x67\x4a\x48\xc3\x95\x00\x47\xc8\xd1\xf4\xd3\xf7\xfc\xe0\x11\x2b\x1b\xbf\x43\xf2\x93\x25\x79\xb1\x58\x0c\x4f\xdb\xd3\xe6\xb2\xda\xed\x86\xcb\x76\x6f\x18\xde\x8e\x8f\xab\xf3\x66\xf8\x12\x65\x8c\x32\x72\x84\x0d\xa8\x4b\xc5\xd7\xd0\x82\xbf\x1f\x4e\x9b\x61\xbb\x7f\x3a\x2c\x87\xe7\xf3\xf9\xf8\xba\x1c\xc7\xdf\xdb\xf3\xf3\xdb\x2f\x5a\x1f\x5e\xc6\xf5\x69\xf5\xef\xfd\xe1\x65\xf5\x77\xfc\xb9\xdd\x3f\x1e\x2e\xaf\x3f\x8e\xef\xdf\x76\x87\xf5\x9f\xcd\x29\x04\x08\x65\x23\x2b\x84\x92\x6e\xa8\x42\x88\xb5\xa1\x28\xa1\x54\x02\xca\x24\x23\x64\x23\x96\x38\xcb\x94\x54\x6f\x60\x89\x04\x99\x84\x58\x48\x29\xc5\xa0\x91\x4a\x21\xe6\x4a\x92\x3a\x24\x09\xdc\xa2\x84\x60\x95\xc0\xc9\x33\x3b\xa6\xe2\x69\x21\x31\xc1\x84\xb4\xd5\x9c\x67\x01\x46\x28\x68\x6c\x9f\x40\x01\x71\xe4\x90\x95\x94\xb8\xb4\x62\x72\xa2\x16\x1b\x8d\x90\x64\x52\x22\x88\x51\x7c\xf8\xf8\xcd\x29\xcd\xff\x64\x21\x46\xed\xc5\xd1\x09\x4e\x7c\x13\x2b\x13\x27\x0d\x39\x13\x50\x09\xaa\xd3\x15\x1c\xcd\xd1\xaa\x63\x6d\xdd\x05\x71\x12\x82\x4e\xa5\x42\xda\x18\x22\x25\x10\xac\x78\x9a\xe3\x94\x7b\x27\x6b\xf6\x2c\x9e\x5d\xae\x10\xd7\x5e\xd2\x1d\xd4\x3a\xd4\xa1\xb5\x68\x26\xd0\xee\xec\x99\x1d\x73\xf4\xe4\x0f\xe6\xe4\x6a\xb8\xba\x7a\x27\x7c\xb2\x04\xa4\x72\x9d\x96\x10\x47\x9d\xc9\x1a\xc9\x6a\xaf\xb6\x47\x1d\xdb\xf4\x26\xe6\xb6\x85\x10\x73\xaa\xbd\xd4\x45\x2a\x9c\x5c\x9e\xde\xf3\x6a\xa6\xa4\x3d\xac\x03\x58\x7a\xa5\x12\x50\x41\x2c\x4c\xd6\xba\xed\x64\xbd\x5a\xf7\x3a\xf1\x5d\x90\x4a\x30\x6f\xee\x4e\xba\x5a\x6f\x56\x2a\xd3\x23\xf1\xcc\x9e\x16\xb8\x3d\xdb\xb6\x89\xda\xca\xe8\x94\xf1\x3f\x00\x00\xff\xff\xb3\x13\xea\x16\x92\x04\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 1170, mode: os.FileMode(438), modTime: time.Unix(1522108001, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x3d\x73\xdc\x38\x0c\xed\xfd\x2b\x34\xe3\xe6\xae\x10\xf6\xcb\xe7\xf1\xb9\x4c\x9f\x49\x91\x22\x35\x97\x84\x24\xcc\x8a\x00\x43\x40\xab\x5d\xff\xfa\x8c\xd6\x6b\x3b\xca\x8a\x19\x8f\x3a\x3e\x80\x4f\x78\x78\x00\xef\xef\xef\xab\x4e\xd4\xb4\x1a\x89\x37\xeb\x0a\x4f\x96\x5d\xf5\xcf\x7a\xb7\x5a\xef\x56\xdb\xf5\xe6\xa9\xda\xfc\xff\xfc\xb0\xf9\xf7\x6e\x0a\xfc\x2a\x19\x2b\xe2\x46\x9e\xab\xce\x2c\xe9\xf3\x6a\xd5\x92\x75\xc3\x1e\xbc\xc4\x95\xcf\xee\xe5\x5c\x47\x77\x5a\xfd\x20\x0e\x32\xea\xf7\x74\xfe\xd2\x8b\x3f\x60\xbe\xbb\x5b\xc3\xe5\xab\x1c\xeb\x88\x59\x21\x92\xcf\xa2\xd2\xd8\x94\xfa\x81\xa6\xa4\xa0\x87\x73\xc2\xf9\x71\x56\xd0\xe8\xb2\xa9\xcf\x88\x5c\x4a\x7e\xd9\x3d\x6e\x9e\x36\x8f\x70\x14\x88\x8a\x9e\x03\x30\xda\x6f\xf0\x7f\x9b\xed\x6e\xf7\x50\x80\xf7\xbd\xec\x61\x44\x67\x1d\xe6\x02\x81\x77\x1c\xce\x3e\x0f\xda\xa9\x04\x07\x07\xe2\x76\x8e\x07\x06\x2f\x6c\xc8\x06\x29\x4b\x00\x1f\x15\xa2\xf2\x4d\x90\x30\xb2\x18\xce\xf8\x7d\x27\xe4\xb1\xc4\xbc\x00\x02\xab\x33\x3f\xbf\xa3\xa7\x89\x7b\x64\x85\xf1\xb5\x05\xf3\x5b\x2e\x70\xad\xd0\x3a\xc3\xd1\x9d\x21\xa2\x2a\x72\x8b\x19\x7a\x3a\xe2\x42\xac\x17\x6e\xa8\x85\xe4\x54\x93\x64\x9b\x91\x05\x4c\xbd\x9c\x41\xcd\x19\x79\x70\x07\x17\x1d\x19\xfa\x8e\xa5\x97\x96\x70\x4e\x1d\xf0\x38\x15\xe0\x06\xeb\xe0\xb4\x97\xd3\x0d\x5f\x88\x01\x22\x9a\x53\xcc\x53\x64\xc9\x20\x81\x27\x45\x1b\x63\xaf\x34\x03\x1a\xc4\xb0\x77\xfe\xf0\x91\x57\x77\xd2\xc5\xe5\x18\x45\x97\x7d\x57\xa0\x78\x8f\x5a\x92\xb0\xbd\x55\x8a\xd0\x1f\x7b\x52\x2b\x5c\x47\xb1\xad\xb5\x8e\xca\xf5\xd4\xb3\x57\x99\x5e\x70\xee\x3d\x62\xa5\x80\x39\x4d\xb6\xef\x65\x08\x2e\xa5\x25\xfc\xaa\x4d\x81\xa8\x27\x8f\xac\x93\x27\x63\x2a\x85\x48\x4b\x7c\x5b\x41\x84\x4e\x2c\x3a\xea\xe7\xa7\x18\xc8\x65\x0c\x94\xd1\x97\x8a\x5b\x6c\x85\x34\x0d\x79\xbc\x7a\x71\x39\x4f\xf8\x0d\xd7\xe6\x04\x51\xdf\x81\x94\xc9\xe3\x45\xcd\xdb\x2d\x90\x8c\x40\x4d\x72\x49\x80\x9f\x03\xe6\xf3\xc7\xe0\xe5\x12\x79\xc6\x96\xd4\x30\x83\x0f\xc9\x97\x8c\xf6\xa9\x21\xd1\x35\x6c\x63\xe0\x59\xaf\xf4\xdb\xc2\xd9\xd5\x6f\x7f\xac\x02\x45\x33\xe2\x56\x6b\xd5\x7e\x79\x2a\xae\xc3\x75\x7b\xa1\x49\x76\x2d\x2e\xfc\xd1\xa4\x4f\x4d\xd1\xb5\xa8\xa0\x75\xa1\xb6\x29\x08\x43\x8b\x4d\x80\xa0\xa7\xb2\x5f\x74\x48\x97\xb1\x5f\x46\x8d\x7a\xac\xdf\x3c\xf9\xf7\xcd\x69\x14\x71\x71\x9e\xec\xb0\x85\xd4\xdb\x8d\x34\x03\x2d\x18\x60\xf8\xd4\x33\x30\x06\x5f\xaa\x67\x82\x5c\x5f\xaa\xe7\xf2\x00\xd6\x36\xd5\xab\x93\x3a\x33\xc5\x47\x9d\x36\x3b\x5c\x1e\xa8\x42\xfa\x38\x5e\x56\x93\x17\x66\xf4\x66\xa8\xcb\xf8\xdb\xbc\xfc\x0a\x00\x00\xff\xff\x5c\xa5\xc5\x4e\x7a\x07\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1914, mode: os.FileMode(438), modTime: time.Unix(1520102541, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\x3d\x93\xeb\x2a\xd2\xc7\xf3\xfb\x29\xa6\xea\x26\xcf\x13\x98\xa1\x41\x92\xa5\x1b\x6e\xbe\xd1\x06\x1b\x63\x09\xdb\xaa\xd1\xdb\x11\xb2\x3d\xde\x4f\xbf\x85\xec\x33\x23\xc6\xa2\xfd\xf7\xde\x73\x92\x29\xf7\x4f\x40\x37\x0d\xdd\x20\xd0\x9f\x7f\xfe\xf9\x76\xec\xdd\xe4\xde\x2e\x75\x47\xf2\xcd\x0d\xd7\xb7\xff\x93\xfa\x5d\xea\x77\x25\x29\x7f\xa3\xe2\xaf\x84\xfe\xff\x0f\x8f\xfd\xb3\x1f\xed\x5b\xdd\xed\xfb\xbf\xde\x8e\xd3\x34\xb8\xbf\xde\xdf\x0f\xf5\x74\x3c\xed\x44\xd9\xb7\xef\xe5\x68\xfe\x73\xdd\xb4\xe6\xf3\xfd\xdf\x75\x57\xf5\x17\xf7\xaf\xe1\xfa\x8f\xa6\x2f\x3f\xec\xf8\xc7\x1f\x52\xcc\xff\xdf\xcc\x46\x4a\x49\xc2\x6c\x5a\x67\xab\x83\x15\x9d\x9d\x7e\xca\xaa\x32\x2a\x54\xcc\x83\x9a\x95\x31\x85\x26\xcc\x83\x29\x23\xcb\x18\xd9\x96\x91\xe5\x8c\xac\x88\xcb\x48\x32\x32\xc6\xa2\x14\x35\xda\xda\x8f\xc2\x54\x8e\x44\xeb\x3a\xdf\xa5\xe1\xcf\x4a\xb4\xce\x54\xee\x91\x57\x2b\xfc\x68\xaa\xc7\x5f\x4b\xbd\xf2\xdb\x54\x9f\xeb\xe9\x2a\x2e\x37\x9f\x09\x85\x55\x67\x3f\x4f\x3f\x6a\xac\xba\xcf\x9f\x94\x7b\x2c\xf6\xa6\xc5\x43\x73\x57\x95\xab\xab\xc1\x09\x33\x55\xed\x14\xfe\xfe\x61\x36\x65\xd5\x6d\x3a\x27\x4c\x35\xd9\xf2\x28\x2a\xfb\x2d\x1c\x47\x73\x25\x49\x9b\x61\xec\x2b\x51\xf5\xa2\x72\x83\x68\x07\xd1\xd6\xe5\xd8\xbb\x7e\xff\xa3\xa8\x1b\xad\x5e\xa2\xf5\x4b\x74\xf2\x02\xad\x5e\x6a\xb7\x7a\xa9\xdd\xea\xa5\x76\xab\x97\xda\x9d\xbc\xd4\xee\xe4\xa5\x76\x27\x2f\xb5\x3b\x79\xb1\xdd\xe9\x4b\x74\xf6\x12\xbd\x7d\x89\xce\x31\x7a\xb7\x3e\x11\xec\x62\x13\xc1\x6e\x75\xc4\xef\xea\xee\x30\x0f\xcf\xf5\x3a\x1a\xad\x25\x6d\x8c\xa0\x6a\x3c\xaf\x49\xca\xa8\xe4\xb0\x22\xe9\x48\xcb\x64\x63\x23\x92\x6c\xb5\x9e\x9b\x24\xfe\xcc\x6a\x3d\x6a\xb7\x29\xfb\x71\x0e\x63\x43\x2d\x06\xff\x07\x43\x29\x88\xd2\x10\x95\xf0\xd4\xa5\x73\x24\x2e\x9d\x5b\x9d\x4c\x77\x9d\x1e\x90\x76\x6b\x57\x1e\xa5\xf2\xf1\x26\xcd\x24\x57\xda\x17\x97\x51\x8e\x71\xaa\xc0\x38\xcd\x6a\xb1\xe0\x52\x90\xcb\x30\x2e\x85\xf4\xa5\xad\xda\x22\x9c\xca\xa1\xf2\x94\xd4\x4a\x41\xdc\x36\x41\xec\xa7\x94\x56\x48\x7f\x28\xa5\x21\xfb\x29\xa5\x33\xae\x3f\x12\x57\x1e\x49\x12\x29\x99\x53\x02\x72\x5c\xfb\xbe\xb9\x82\x34\xc2\x91\x24\xce\x2e\xdf\x1c\x49\x90\xc3\xda\x47\x4a\x61\xed\x4b\x24\xe7\x2f\xdf\x1c\x3f\x8e\xbe\xb9\xad\x84\xec\x4c\x5b\x50\xdf\x2d\xd6\x6f\x54\x48\xa8\x7d\x8a\x08\xd2\x57\x69\xe2\xc6\xc7\x92\xe3\xc6\xc7\x37\x97\x28\xc8\x4f\x35\x61\x7a\x68\xc2\xda\xa7\x95\x7c\xde\x3e\xef\x7d\xa4\x18\x3b\x3b\xe1\xec\x78\xae\xbb\xc3\xc6\x5d\x7f\x88\xae\xd1\x30\x79\x8d\x86\xc9\x9b\x64\x25\xb0\x95\x2b\x99\x6e\xf9\x10\xb8\x4b\x6e\x29\x56\x1a\x31\xd9\xc6\xb6\x76\x1a\xaf\x91\xd0\x5e\x9a\xf2\x68\x45\x65\x26\xd3\x9a\x71\x5a\xd5\xb8\xac\xba\xb5\xa6\x54\x4e\x15\x85\x68\xca\xab\x68\x9a\xee\x12\xd6\x5b\xb9\x44\xa6\x51\x19\x29\x99\x88\xa6\xef\x22\xc2\xbc\x60\x84\x85\x8e\x0b\xb5\xda\x46\x85\x4a\x26\xb4\x8d\xb6\x48\xc9\x44\x13\x27\x4d\x25\x2b\x65\x4b\xde\xc6\x2d\xa1\x48\x25\x71\x53\xa8\x4c\x98\xd6\x15\xa2\x75\xb6\xec\x1e\x0c\xac\xe2\xc5\x26\x29\xd3\x31\x45\x12\x95\x15\x59\x1a\x69\xcc\x91\x9e\x67\x24\x5f\x10\x97\x48\x95\xc7\xd8\x48\xb8\x4b\xd6\x46\xc2\x31\x96\x4a\xce\x12\x15\x2d\x4d\xad\x96\xd6\xb7\x83\x99\xec\x67\x79\x34\xdd\xc1\x8a\xb2\xe9\x4f\x95\x19\x86\x50\xdf\x80\x21\x31\x8d\x66\xbf\xaf\xcb\xd6\x74\xe6\x60\xc7\x1f\x68\x37\xd5\xdd\xe9\xd4\x8a\x2a\x9a\x3f\x97\xfd\x38\x08\x37\x71\x62\xfb\x39\x89\xd6\xd5\x93\xa9\xf6\x4e\x1c\x9a\x5d\xd5\xf9\xec\x7d\x1d\x1f\xe0\xe5\x6c\x39\xc0\x2b\xc8\x72\x80\x17\x6d\xa5\x4f\x5e\x87\x52\x9c\xa5\x9f\x1a\x96\xc6\xa8\x76\xda\xfc\x3a\xad\xcc\x16\xd5\x4e\x5f\x3a\xa7\x24\xf9\x7f\xd1\xb9\xb5\xda\xc5\xf3\x9c\x6a\x97\xde\xe7\x71\x9f\xb1\xc5\xe7\xf1\x90\x8b\xc7\xb7\x25\x97\x33\x79\x6c\xc8\x61\xed\x2b\x98\xb8\x1a\x70\x0a\x2c\x8f\xc9\x13\x03\x4e\x43\x9c\xb7\x0c\xc6\x61\x76\x26\xc9\xc4\xcb\x80\xc3\xec\x4c\x52\x83\xe5\x25\x60\xfb\x12\xac\x3c\xd0\xaf\x7c\x2a\x01\x72\x50\xff\x12\x61\xfd\x4b\xc4\xac\xcb\x02\x4e\x83\xed\x4b\xb0\xf6\x29\x26\x3f\x0d\x38\x26\xaf\x0b\x39\x4c\x5f\x05\xfa\x8b\xd2\xd0\x78\x23\x8d\x8d\x4b\xd2\xa0\x3f\x6b\xb0\x3f\x34\xd8\x1f\x1a\xf4\x7b\x0d\x8e\xf3\x84\x59\x6f\x05\x1c\xa8\x6f\xa2\xe2\xeb\xf3\x90\xc3\xec\x9c\xe8\x78\xde\x1e\x70\xa0\x9f\xa6\x7c\x6c\x59\x70\x98\x5d\x52\xb0\x7f\x53\x2c\x2e\x50\x9a\x80\xed\x4b\x30\x7f\xc9\x98\xf5\x51\xc0\x31\xeb\xd5\x80\x03\xf5\xe5\xf6\x7d\x42\x0e\xd4\x23\xc1\xfc\x60\x0b\xf6\xef\x16\x9c\xc7\xb7\x1a\xd3\x77\x0b\xfa\x5f\xce\xec\x83\x04\x9c\xc2\xf4\xcd\xc1\xf1\x96\x83\xf3\x29\x98\xbf\x50\x0e\xce\xa7\x39\x18\x57\x0b\x66\xdd\x1d\x72\x58\xbd\x05\xb3\x0f\x12\x70\xa0\x3f\x17\xa0\x1f\x14\xd8\xf8\x55\x92\x20\x3b\x2b\x89\xc5\x23\xc5\xed\x9b\x05\x1c\x96\x97\x28\x89\xe5\x25\x4a\x6a\xa8\xdf\x94\x84\xc6\xb9\x4f\xc4\x10\x3f\xf5\x1c\xa2\xef\x9c\xc0\x60\x1c\xe4\xf7\x73\xe0\x82\x38\xc5\xec\xeb\x85\x1c\x32\x7e\x49\x2a\x50\x0f\x05\xf5\x1b\x49\x05\xf5\x9b\x4f\xdb\xb1\xf2\x34\xe4\xcf\x24\x35\xe4\x7f\x9e\x43\xcb\xc3\xfc\x45\x43\xf1\xc8\x2f\x2b\x50\x0e\xd4\x03\xb4\x5f\x22\xb1\xf2\xb0\x7c\xcd\x2f\x7b\x30\xbb\x24\xa0\xdf\x27\x50\x3e\xe9\x97\x51\x98\x5f\xa5\xd0\xfa\x92\x64\x0a\xe5\x89\x24\x53\x70\x7e\xc1\xf2\x1c\x92\x19\xb4\x4e\xf1\x1c\xa6\x6f\x06\xe5\xcf\x9e\xc3\xe6\x83\x0c\x5a\x07\x90\xdc\x4a\xac\x7f\xb7\x50\x5e\x42\x72\x0b\xea\xb1\x85\xf2\x35\x92\x39\xb3\x2f\x1f\x72\x98\x5d\x72\xb0\xdf\x72\xb0\xdf\x72\x70\x1e\xc2\xf2\x2b\xcf\x61\xe3\x17\xdb\x6f\x22\x70\xbf\x89\x64\x01\xce\x1b\x05\x68\xbf\x02\x9c\xc7\x91\xfc\x4a\xcb\x9c\xb8\xf7\x8d\x4b\x8e\x7b\x8f\xb8\xe0\x94\x04\xd6\x01\x9e\x7b\xb2\xd7\xf8\xc5\x69\x20\x2f\xf1\x5c\x02\xc4\xf3\x1b\x07\xd9\x45\x65\x28\x07\xea\xc1\xbd\x47\x0c\x38\xe6\x3d\xdd\x92\xcb\x21\x7d\x0b\x49\x40\x7e\xe0\xb9\x04\xf2\x03\xcf\x61\xe5\xa5\x90\xbf\x78\x0e\x2b\x0f\x59\x4f\x7b\x0e\xb5\x0b\xe6\xf7\x85\xaf\x19\xe1\x08\xf3\x7b\xcf\x21\xfd\x5b\xf8\x48\x03\x72\x90\x5d\x48\x81\xf5\x6a\x50\x0f\xd0\x5f\xa0\x7d\x1f\xcf\x61\xe3\xad\xa0\x0c\x58\x97\x79\x6e\x8b\xf9\x15\xe5\x60\x79\xdc\x7b\xfb\x80\xc3\xf4\x55\x12\x88\xbf\x9e\x03\xfb\x57\x21\xeb\x32\xcf\x21\xfb\xc5\x33\x07\xb6\x2f\x45\xca\xa3\xf9\xc4\x0f\xc6\x01\x71\xd0\x73\xc8\x7e\xb6\xe7\x34\x32\x0f\xcd\x1c\xe0\xcf\x24\x65\x82\x8c\x23\x92\x32\x45\xec\x37\x73\x98\x1e\x50\x9c\x21\x29\xa1\xf8\x31\x6f\x0d\x00\xe3\x63\x7e\xbf\x00\xf8\x9f\xe7\xc0\x7a\x41\x3b\x53\x82\xe9\x4b\x09\xd6\xbf\x04\xc5\xa3\x79\x3f\x16\xea\x37\x02\xfb\x83\x90\x75\x80\x06\xf7\x4f\xf5\xbc\x0f\x07\x8d\x37\x68\x1f\x4e\x93\x54\x12\x2b\x4f\x11\xd6\xbf\x4a\x01\xeb\xe9\x1b\x87\xd5\xcb\x9d\x6f\x5a\x72\x09\xb0\xef\x33\x73\x60\x79\x50\x3c\xf2\x1c\x58\x1e\xd8\xbf\x2a\xe7\xfd\xe5\xd2\x39\xaa\x18\x20\x9b\x0b\x52\x3e\xf1\x63\x0d\xb2\xe4\x38\x45\x17\x1c\xeb\x00\x4b\x8e\x4b\x5c\x16\x1c\xbb\x10\xfc\xe6\x78\x87\x5a\x72\x58\xbd\xfc\x84\xb6\xe4\x30\xbb\x28\xb6\x63\x97\x1c\xa6\xaf\x66\x1d\x60\xc9\x61\xfa\xf2\x0b\xa8\x05\x07\xea\xc1\x07\xd4\x6f\x8e\x1f\x68\x4b\x0e\xb3\x4b\x0a\xfa\x33\x1f\x78\x97\x1c\x58\x2f\xa8\x6f\xca\x4e\xb8\x4b\x0e\xf3\xab\x0c\xac\x37\x03\xcb\xe3\x37\x7c\x96\x1c\xe6\x07\xfc\x8b\xa3\x25\x87\xf9\x33\xff\x82\x69\xc9\x61\xfe\x5c\x80\xfa\xf2\x09\xfb\x17\xe7\x53\x44\x90\x83\xf4\x20\x89\xe9\x41\x7c\x80\x5e\x70\xa0\x1e\x04\xea\xc1\x27\x88\xdf\x1c\xff\xc2\x65\xc9\x61\x7a\x80\xf3\x1f\x69\xd0\xce\xe0\xfc\x47\x1a\x6d\x1f\x36\xce\x09\x9c\xd7\x28\x05\xfb\x23\x05\xf5\x4d\x41\x7d\x33\x6c\xfc\x52\x06\xb6\x2f\xc3\xe2\x11\x65\x9c\x1e\xf6\x2c\xce\xf5\x38\x9d\x4c\x63\xcd\x38\x1d\xc3\x03\x8c\xfb\xa7\x27\xa6\xab\xda\x95\xf0\x01\x4c\x0f\xc3\x47\x30\x3d\x0c\x1f\xc2\xac\x6a\x73\xe8\x7a\x37\xd5\xa5\x13\xee\x34\x0c\xfd\x38\x45\x48\xbb\x76\x92\xdc\x96\x9d\x60\x2d\x61\x4f\xe2\xdc\x8f\x93\xfd\x9c\x0f\x87\x47\x8a\xde\x37\xf6\xf3\xe1\x48\xfa\x3e\x76\xce\xf5\xf0\x80\x1e\x6c\x8f\x69\x7b\xb0\xfd\xd9\x8e\x18\x7b\x7c\xbc\x0d\x77\x7c\xbc\xf9\x7a\xfc\x88\xbb\xe6\xf1\x43\x79\x57\xd2\xf3\x5d\x1e\x66\x0f\x20\xe4\xe2\x2e\x1c\x72\x71\x17\x0e\xb9\xf8\x54\x11\x70\xcc\xbb\xde\x25\x97\x33\xef\x76\x02\x8e\x79\xf7\x19\x70\x29\x66\x97\x3c\x05\xeb\x4d\xe3\x53\xf2\x92\x2b\x40\x3d\x0a\xe6\x2e\x59\xc0\x31\xef\xb2\x02\x2e\x05\xcb\x4b\xe3\x53\x63\xc0\x31\x77\xb5\x16\x1c\x71\x67\x44\x02\x0e\xf3\x17\x92\xcc\x3b\xa5\x25\x47\xcc\x19\xa0\x80\x63\xde\x09\x07\x5c\x0a\xf9\x15\x29\x50\x5f\x95\x40\xfd\x41\x8a\xb9\x8b\x17\x70\xcc\x1d\xca\x90\x83\xfc\x8f\xb8\xbb\x82\x21\x87\xd9\x85\x3b\x6b\x1a\x70\xcc\xbb\xe3\x80\x03\xf5\x4d\xb0\xf9\x85\x12\xe6\x1d\x7d\xc8\x61\xfe\x97\x80\xfe\x97\x60\xe3\x97\x12\xe6\x8e\xe7\x92\x4b\x99\x33\x04\x01\x07\xf6\x5b\x8a\xcd\xf7\xc4\x9d\x85\x08\x38\xe6\xcc\x5d\xc0\x61\xf3\x2e\x7b\x36\x34\xe0\x40\xbf\xca\x98\xb3\x24\x01\x07\x8e\xdf\x2c\xc5\xfc\x2f\x43\xf5\x4d\x31\x3b\x83\xf1\x9c\xc0\x78\xce\xde\x45\x0e\x38\xe6\x4c\x74\xc8\x61\xf1\x63\x0b\xda\x85\x3b\xbb\x10\x70\x60\xfb\x72\x70\x3e\xc8\xc1\xf1\x9b\x83\x71\x06\xcc\x4b\x28\x07\xfd\xaa\x00\xfb\x8d\xbb\xa3\x13\x72\x98\x9d\xc1\x3c\x42\x81\xf1\x5c\x49\xe6\xec\x5b\xc8\x41\xed\x53\xdc\x99\xca\xe3\x07\xff\x85\x83\xbb\x7c\x17\x05\xea\xcd\xae\xc9\x80\x8f\x20\xd4\x9b\xdd\x15\xf9\x58\xc2\x92\xe3\x6e\x27\xd6\x1b\xe8\xa6\xe3\x02\xe3\x4b\x73\x9d\x42\x4a\xfb\xc2\xd8\xd2\xe8\x76\xf1\xb8\xb4\x4e\xb8\xbe\xac\x4d\x13\x59\xff\x3c\x03\x45\xe7\xcc\x54\x06\x8b\xbd\xba\xdb\xdb\xd1\x76\xa5\x15\x4d\x5f\x9a\xa9\xee\x3b\xd1\xd4\xe7\xf0\x32\xf1\xc7\x19\x5e\xf5\x7e\x9c\xe1\x35\xef\xc7\x19\x5e\xf1\x36\x3b\x12\x97\xcb\x45\xb4\x4e\x98\x0f\x53\x75\xe1\x77\x4d\xe6\xf6\x8e\x6b\x9f\x18\x6a\x9c\xba\xd8\x9d\x18\x6d\xd5\xf6\x5d\x25\xe6\xcb\x98\xeb\x35\xb4\xe2\xf1\xa3\x45\x6d\xbf\xab\x1b\x2b\x86\x7a\xb0\xc2\x8c\x75\x6c\x25\xbc\x72\xfb\xba\x75\xdd\x64\xdd\x14\xbd\x2e\x7e\xfb\x64\x52\xbf\xdf\xd7\xa5\x35\xc3\xe0\x6e\x26\x7f\x20\xc6\x53\x63\x79\xac\x07\xee\x79\x33\xcc\x8a\x3f\xf4\x9d\x75\x76\x9a\xea\xee\xe0\x36\xbb\x4e\x09\xff\xd4\x6f\x9f\x78\xfe\x44\x79\x7d\xf5\x89\x6a\x97\xbe\xf8\x84\x5f\xbe\x3f\x7f\x62\x18\xad\xd8\xf7\xfd\x34\x8c\x75\x37\x0d\xa3\xad\xea\x32\x34\xcb\x30\xda\x73\x6d\x2f\x0f\x3e\x33\x9a\xea\xd1\xce\x6b\x1f\xce\xf1\x65\x8e\xbe\x25\xe6\x6b\xcc\xad\x77\xc0\x68\x87\x7e\x9c\x9c\xb8\x58\x27\x80\x5d\x26\x57\x1e\x6d\x6b\x96\x85\xad\xf8\xbc\xb3\xe5\x69\xb4\x2b\x4e\x7b\x17\xec\x1b\xe3\x8e\x93\x69\x3e\xea\xee\xf0\x43\x7e\x6f\x2b\xda\x9a\xdf\x66\x77\xa6\xab\x76\x3d\xbb\x27\xf4\xc5\x5e\xea\x0e\xe5\x36\xc3\x60\x11\xf6\xc6\xf0\xd7\xa3\x43\x36\xc2\x74\xb1\x5b\xe8\x77\xc9\xca\xbd\xf1\xbb\x64\xe5\x16\xba\x1b\xae\x9d\x9d\xa2\xed\x99\xa5\xa6\x89\x6d\xcf\xdd\xe4\xf6\x34\xf6\x83\x7d\xd2\xdd\xbf\x5a\xa8\xb3\x7e\xb5\x7f\x87\x59\x19\x46\xce\x5d\x1e\x47\x83\x9b\xfa\xd1\x96\x66\x32\x4d\x7f\x18\xed\xf9\x77\xdc\x98\x7f\xfe\x75\x32\x4d\x3d\x45\x2b\x3f\x8d\x67\x7b\x15\x17\x33\xb9\xbe\x8b\x30\x93\x14\xce\x35\xc2\x7c\x88\xea\xda\x99\xb6\x2e\xc5\x54\xfb\x79\x30\xba\x5f\xf9\xfd\xc0\x33\xd0\x36\xb6\xec\xdb\xd6\x74\xd5\x53\x33\x01\xec\x8a\xb9\xbe\x49\x33\x0c\xf6\x53\xec\xfc\xf0\x5b\x07\xe2\xd5\xde\xe4\xa7\x31\x36\x9f\xcc\xa1\x85\xfd\x28\xdf\xe4\xf6\xf6\xf7\x97\x0b\xdc\xd1\x0c\xbe\x15\x6c\x80\x3d\x93\xbc\xef\xf9\x2e\xc6\xee\xd3\x39\x76\xf5\xa9\xf5\xf2\xed\xe8\xbc\x8b\x1c\xaf\xbb\xb1\xae\xe6\x54\xe7\x68\xc7\xd0\xab\xe6\xd9\xf8\x71\xbb\xfa\x5e\x01\x16\x8b\xee\x30\x16\x86\xee\x30\x16\x81\xee\x30\x16\x7c\xee\x30\x30\x65\xfe\x0f\x46\xc7\x0c\xbe\xd8\xc0\xe7\x27\xcd\x60\xab\x1f\xac\x9d\xab\xf9\x3e\xb6\x1f\x26\x0d\x76\xcc\xdf\x85\x3e\x16\x3c\x1b\x21\x77\xf4\xef\x61\x2b\x9a\xf9\x44\x11\xd0\x0e\x8b\x9a\xf3\x67\x5a\x45\x3d\x9c\x33\x06\xd8\x3e\x41\xe6\x84\xf7\x77\x6e\xf9\xdf\x00\x00\x00\xff\xff\xc2\x65\xec\x58\x03\x56\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 22019, mode: os.FileMode(438), modTime: time.Unix(1520102549, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x72\xea\x30\x10\x85\x7b\x9e\x42\x33\x34\xf7\x16\xac\x25\xc1\x40\xa0\x4c\x9f\x2a\x45\x6a\xa1\x1f\xa3\x41\x96\x3c\x5e\x19\xc7\x79\xfa\x0c\x81\x10\x3c\x89\x2c\x33\x2a\xf7\xdb\xdd\xb3\xe7\x68\x3e\x9f\x93\x43\xc0\x88\xa4\xb3\x9e\x51\xd2\xd6\x4a\x44\x4d\xfe\xb1\x4d\xc1\x68\xc1\x29\xdb\x10\xca\x76\xcb\xf5\xff\xd9\x99\x7c\x09\x8d\x26\xd6\x9b\xb0\x23\x87\x18\x6b\xdc\x15\x45\x69\xe3\xa1\xdd\x83\x0c\x55\x21\x1b\xf1\xd1\x2f\x2a\xf1\x5e\xbc\x59\xaf\x42\x87\xaf\x75\xff\xec\x82\x3c\xea\x66\x36\xa3\xf0\xf5\x08\xa5\x94\x53\xbe\x60\xe0\xa0\xbb\x50\x97\x95\xe7\x09\x03\x48\x2e\x27\x40\x46\x65\x21\xb6\xda\x9a\x3c\xf4\xb4\x65\x79\xc8\xf0\xbc\x26\x4e\xd7\xf9\xeb\x38\x53\x34\x03\x89\x16\x54\xe8\xbc\x0b\x42\x8d\x53\xa7\xd5\x14\x50\x46\xa7\xc6\xd6\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x38\xe4\x1c\x28\xed\xec\x49\x37\xfd\x08\xf4\xad\x27\x53\x4e\xcb\xd1\xd5\x59\x2d\x26\x06\x18\xcd\xe1\xda\xf4\x18\x00\xe2\x28\x94\x47\xf0\x3a\xde\xb1\xcb\x9f\x93\x14\xd6\xbf\xce\x02\x8f\x22\xca\x74\x4f\xd2\x06\x53\x82\x42\xd8\xb3\x29\xf9\x98\x72\x62\x90\xb7\x55\x43\xe4\x5e\x1d\x3a\x1c\xb7\x27\x05\xfc\x65\x0f\x46\x11\xf1\x11\x3f\xaf\x0d\x2c\x1d\xdf\x6d\x64\x92\x88\xae\x85\x49\x3f\x6d\x9a\x67\xb9\xca\xb5\x10\x9a\xf2\x33\x00\x00\xff\xff\xde\x5a\x01\x20\x0f\x05\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1295, mode: os.FileMode(438), modTime: time.Unix(1508198014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x6f\xe3\x30\x0c\x85\xf7\xfc\x0a\x01\x59\xee\x86\xa3\xed\xe4\x80\xbb\x66\xec\xde\xa9\x43\x67\x45\xa2\x6d\xb6\x92\x68\x88\xb4\x95\xf4\xd7\x17\x69\x87\xc2\x48\x94\xc2\x1b\xdf\xe3\xf7\x68\xbd\xed\x76\x6b\x46\x16\x15\x53\x28\xfd\x33\x78\xd2\x6c\xcd\xaf\x76\xdf\xb4\xfb\x66\xd7\x76\xff\x4d\xf7\x70\xf8\xdb\xfd\xde\x5c\x7c\x4f\x9c\xd1\x50\xea\xf9\x60\x46\xd5\x49\x0e\x4d\x33\x90\x8e\xf3\x11\x1c\xc7\xc6\x65\xfb\x7e\xfe\x13\xed\xa9\x79\xa1\xe4\xb9\xc8\xf3\x74\x7e\x0c\xec\xde\x30\x6f\x36\x2d\x7c\x7e\xc6\x3a\xa5\xc5\x2a\x71\x02\x09\x02\x91\x5c\x66\xe1\x5e\x2f\x84\x6f\xd3\x44\x70\xa4\x34\xac\x86\x8e\x77\x77\x56\x5c\x0e\x15\xc5\x47\x0f\x11\xd5\x0a\xe6\x85\x1c\xd6\x00\x3e\x09\x44\xe9\x35\x39\xa1\x95\x30\x5c\x9f\x32\x40\xa0\x05\xd7\xa3\xc0\x47\x1b\x40\x6c\x84\x28\x69\x25\x11\xba\x25\x90\x68\x25\x38\xf0\x40\xe9\x1a\x78\xf3\x16\xd6\xfe\x0a\x9f\x77\xad\x94\xd7\x6e\x1f\x73\x25\x40\x61\xce\xb5\xbf\x56\x8a\x08\xe5\xab\xae\x95\x30\x8f\x7d\x65\xa5\x0e\x5b\x6c\x20\xff\x53\xb7\xc5\xbb\xe9\x8e\x64\x43\xed\x9d\x4a\x29\xb7\x0b\x2a\xe2\x38\x29\xd8\x69\xaa\x66\xd6\x1c\x80\x7e\x40\x99\x49\x11\x12\xea\x47\x00\x00\x00\xff\xff\x1b\x70\xbd\x5e\x0b\x03\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 779, mode: os.FileMode(438), modTime: time.Unix(1520102527, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x4f\x8f\x9b\x30\x10\xc5\xef\xf9\x14\x48\xb9\xb4\x87\x0c\xfe\x97\x90\xe4\xd8\x7b\x4f\x3d\xf4\xec\xb5\x07\x82\x16\xdb\xd4\x76\x96\xd0\x4f\x5f\xd1\x55\x57\x45\xc2\xd3\x46\xdc\xf8\xbd\xf7\xfc\x98\x11\xde\xef\xf7\xd5\x2d\xa4\x9c\xaa\xa9\xf7\x4d\x95\xc6\xb9\xfa\xc4\x64\xcd\x64\x2d\x18\x3f\x57\xfc\x72\x55\xfc\xf3\x6e\x51\x7d\x0d\x11\xab\xde\xb7\xe1\x5a\xdd\x72\x1e\xd3\xb5\xae\xbb\x3e\xdf\xee\x2f\x60\x82\xab\x4d\xd4\x3f\xe7\x83\xd3\x8f\xfa\x7b\xef\x6d\x98\xd2\xb7\x71\xfe\x32\x04\xf3\x8a\x71\xb7\x63\xf0\xfb\xa9\xf4\x81\x31\xc6\x41\x1f\x5c\x42\xdb\x21\x78\xcc\x6b\x26\x49\x66\xcd\x26\xb4\x03\x4c\xef\x67\x2e\x4d\x3e\xde\x1b\x9b\x38\x57\x12\x86\xe0\x61\x18\xfc\xb4\x32\x2d\x50\x30\x12\x5e\x08\xa8\x14\x01\x8f\x0d\x01\x4f\x54\xec\x99\x70\x36\x0d\xd8\x7b\xda\x64\x82\x29\xce\x61\x30\x73\x89\x0a\x45\xd2\x23\x45\x25\x49\x15\x49\x4f\x64\xab\x0b\xe1\xe5\x42\x96\x97\x23\xb8\x58\x92\x09\x5a\x9e\xa3\xe0\x92\xd8\xac\xe0\x52\x94\x93\x25\x3b\x17\x1b\x4b\x79\x29\x33\x55\x9e\xbf\x62\x27\x82\x35\xd0\x46\xbd\xcd\x54\x53\xf6\x1d\xcb\x3d\xa9\x9d\xa8\xa6\xc4\x82\x1b\x75\xc6\x87\xb9\x69\xdf\x21\x87\x1c\x75\xdb\xf6\xc6\x69\xaf\x3b\x8c\x6b\xe9\x2c\x20\x61\xce\xbd\xef\x12\x58\x9d\x35\xb8\xde\xc4\x90\x42\x9b\x97\xbf\x13\xf4\xab\xb6\x3e\xad\x2c\xf6\xe5\xf8\xac\x05\xef\xf0\x16\x62\xc6\xc7\x86\xfe\x43\xd4\x61\x78\x36\xb7\x9b\x1e\x9b\x77\xc9\x9f\x98\xc3\xd4\x7b\xea\xc8\x34\xce\x1e\xb3\x20\x29\xde\x63\x18\xf1\x2f\xc9\x46\x8f\xf4\xc3\x41\xc6\x01\x1d\xe6\x38\x17\xd2\x16\x6e\x82\x73\xda\xdb\xff\xd0\x46\xb4\x01\xfa\xf1\xed\x54\x50\xbc\x8f\xf3\x5f\xdf\x37\xe9\x9c\x82\x5f\xc3\x5f\x01\x00\x00\xff\xff\xff\x21\x51\xe5\x42\x06\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 1602, mode: os.FileMode(438), modTime: time.Unix(1520102531, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xbd\x6e\xf2\x30\x14\x86\x77\xae\xc2\x12\xcb\xf7\x0d\x38\x3e\xce\x3f\x63\xf7\x4e\x1d\x3a\xfb\x17\xa2\x86\x18\xc5\x46\x2e\xbd\xfa\x8a\x82\xa8\x90\x68\xce\x51\xb6\x9c\x27\xcf\x1b\xfb\xbc\xeb\xf5\x9a\xed\x43\x4c\x91\xe5\x61\x6a\xd9\xe9\x68\x55\x72\xec\x9f\x28\x0b\x51\x16\x52\x40\xc7\xa0\xdf\x56\xf0\x7f\x75\x01\x5f\xc3\xec\xd8\x30\xf9\xb0\x65\xfb\x94\x8e\x71\x5b\x14\xbb\x21\xed\x4f\x9a\x9b\x70\x28\xcc\xac\xbe\xce\x9b\x83\xfa\x2c\xde\x87\xc9\x86\x1c\xdf\x8e\xe7\x97\x31\x98\x0f\x37\xaf\x56\x82\xff\x3c\x4c\x08\x21\x40\x6f\x80\x8f\x3c\x5f\xa9\x6b\xe4\xc5\xf0\x00\x79\x87\x43\xe0\x2c\x0e\xc9\xb2\x23\x40\x1d\x21\xae\x6c\x81\x00\xf5\x0d\x0e\x55\x8e\x10\xd7\x54\x04\x53\x07\x0a\x87\xfa\x86\x70\x05\xaa\xae\x09\x90\x27\xc4\x69\x23\x08\x90\xf5\x38\x64\x34\xc1\x64\x1b\x42\x0b\x7c\x85\x9b\xa0\x31\x25\x0e\xb5\x1e\x6f\x01\x74\x15\xde\x71\xe8\x1b\xbc\x05\xa0\x35\xbe\x16\x29\x5b\xfc\x32\xa5\x54\x2d\x01\x32\xf8\xe9\x64\x49\xd8\x9d\xac\x6b\x2c\x4e\x9d\xb8\x0d\x79\x1a\x83\xb2\x0b\x94\x49\xa3\x5d\xb2\xdc\x15\x87\xc1\xcc\x21\x06\x9f\x9e\x8f\x17\x0c\x91\xf2\x1f\xde\x49\x7e\x7b\xfd\x3c\xc9\xef\xb8\x8d\x5c\x03\x45\x76\x37\x3c\x22\x93\x4b\x77\xe4\xef\x8f\xaf\x93\xdb\x20\xcc\xbb\xdf\x41\xce\x0b\xe1\xdf\x01\x00\x00\xff\xff\x67\x2f\xba\x7c\xeb\x05\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 1515, mode: os.FileMode(438), modTime: time.Unix(1520102535, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\x31\xaf\x9b\x30\x10\x07\xf0\x3d\x9f\x02\x29\x4b\x3b\xc4\xd8\x86\x24\x26\x63\xf7\x4e\x1d\x3a\x5f\xcd\x41\xac\x87\x6d\x6a\x5f\x1e\xa1\x9f\xbe\x22\x95\xaa\x46\x7d\xbe\x88\x8d\xdf\x1f\x38\xfe\x27\xc1\x7e\xbf\xaf\xae\x31\x53\xae\x16\x17\x8c\xaa\xf2\xbc\x56\x9f\x64\x53\xcb\xa6\xd6\x52\x99\x4a\x75\x97\x56\x7d\xde\x6d\xb1\xaf\x31\x61\xe5\xc2\x10\x2f\xd5\x95\x68\xce\x97\xba\x1e\x1d\x5d\x6f\x3f\x84\x8d\xbe\xb6\x09\x7e\xad\x07\x0f\xf7\xfa\xbb\x0b\x7d\x5c\xf2\xb7\x79\xfd\x32\x45\xfb\x86\x69\xb7\x93\xe2\x71\x54\x70\x90\x52\x2a\x01\x07\x9f\xb1\x1f\x51\x04\xa4\x67\xd3\x8c\x35\x8c\xb5\x8c\x1d\x19\x3b\x31\x76\x66\xcc\x30\xd6\x95\x4d\x49\xc6\x98\x5e\x54\xb1\x97\x0f\x4e\xda\x3e\x2b\xad\x3a\x31\xc5\x20\xa6\x29\x2c\xff\xa3\x36\x0c\xb6\x2d\x83\xa7\x23\x83\xe7\x86\x41\xc3\x5d\x69\xce\x45\xd4\x8f\x0d\x66\x2a\x69\x2b\x5b\x31\xd9\xb5\xa4\x47\xcd\xa9\x61\x54\x69\x5d\x1e\x79\xd3\x72\xc3\x5a\xe9\xe3\x89\xd3\x73\x79\x01\x5a\x69\xa3\x38\xed\xca\x2d\x37\x4a\x16\xdf\xa7\x69\xba\xa2\x19\x55\x9e\xc7\x34\xba\x6c\xad\x2c\x58\xf4\x33\x10\xde\xed\x15\xc2\x88\x4a\x50\x82\x61\x70\xd6\x43\x80\x11\xd3\x53\x14\x6f\xe2\x3d\x26\xc2\xbb\xe8\x81\x40\x78\x67\x53\xcc\x71\xa0\xed\xa3\xf2\x37\x94\x91\xc8\x85\x31\x1f\x16\x17\xd8\xdc\xbc\x06\x24\xcd\x2a\x4c\xc4\x3a\xde\x52\x9c\xf1\x9f\x08\xbc\x41\x1f\xf2\xd3\xd0\xf9\xa7\x17\x84\x13\x7a\xa4\xb4\x96\xee\x46\x40\x79\x40\x2d\x6e\x73\x0f\x84\xaf\x52\x4b\x2e\x24\xb6\xe7\x70\x05\x6e\x6e\xa3\xf7\x10\xfa\x97\x33\xfd\x69\xfa\x55\x8b\xdb\x9f\x40\xb8\xf9\xfd\xf4\xec\xbf\x03\x00\x00\xff\xff\x5e\xcb\x74\xfd\x2b\x06\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1579, mode: os.FileMode(438), modTime: time.Unix(1520102553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\xbd\x8e\xa3\x30\x10\x07\xf0\x3e\x4f\x61\x29\xcd\x5d\x11\xe3\xb1\x4d\x02\x29\xaf\xbf\xea\x8a\xab\x8d\x3f\x08\x3a\xc0\x39\xec\x2c\x9b\x7d\xfa\x15\x9b\x28\x52\xa4\x2c\x33\xa2\xc3\x3f\xfe\x33\x8c\x67\xbb\xdd\xb2\x53\x4c\x39\xb1\xb9\x1b\x2b\x60\x97\xb3\x33\xd9\xb3\x1f\x42\x15\x42\x15\x52\x40\xc5\xa0\x3e\x6a\xf8\xb9\x59\xe4\xef\x38\x79\xd6\x8d\x21\x1e\xd9\x29\xe7\x73\x3a\x16\x45\xdb\xe5\xd3\xa5\xe1\x36\x0e\x85\x9d\xcc\xc7\x75\x37\x98\xf7\xe2\x6f\x37\xba\x38\xa7\x3f\xe7\xeb\xaf\x3e\xda\x7f\x7e\xda\x6c\x04\xff\x7a\x98\x10\x42\x68\xb5\x03\xde\xf3\xf9\xa6\x6e\x25\x97\x84\x27\xb4\x07\x02\x0a\x92\x82\x6a\x1c\xa9\x60\x71\xa4\x8d\xc3\x51\x5d\x11\xca\x35\xb2\x24\x20\x2f\x70\x64\x05\xa1\x71\xa7\xf1\x24\x10\xe2\x80\x23\x00\xbc\x1c\xa8\x9a\x50\xee\x60\xf1\x11\x40\xed\x2a\x1c\x19\x85\x6f\x01\x98\x0a\x5f\x3a\xb0\x8e\xf0\x77\x4e\xe0\x17\x0c\x0e\x02\x01\x69\x42\x92\x17\x84\x39\x85\xa6\x41\x91\x84\x0a\x9f\x93\x94\x7e\x8f\x23\x55\x6b\x1c\x95\x8d\xc7\xd1\xbe\xc1\x26\x6e\x2e\xdc\xc5\x79\xec\xa3\x71\xeb\xea\x4d\x53\x60\xd3\x2e\xd0\x70\xd7\xf3\x39\xf1\xa1\xb3\x53\x4c\x31\xe4\x17\xc6\x0f\xeb\x06\x28\x41\x40\x49\x92\x94\x24\x49\x49\x52\x94\x24\x45\x49\xd2\x94\x24\x4d\x49\x2a\x29\x49\x25\x9e\x64\x73\xef\xd6\x16\x85\x70\xf9\xc1\x4b\x7e\x7f\xfd\xba\xc6\x02\xe6\xff\x6b\x87\xdf\x75\x17\x5a\xe2\x02\x3e\x3e\x7f\x26\xa3\xcf\x0f\x92\xfa\xb4\xde\x26\xad\x12\x76\x72\x3f\x88\x53\xfb\x19\x00\x00\xff\xff\xf0\x0b\xc7\x36\x06\x08\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 2054, mode: os.FileMode(438), modTime: time.Unix(1520102557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1518299054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xb1\x72\xe3\x38\x0c\xed\xf3\x15\x9e\x49\x73\x57\x08\x8e\x93\xbb\xcc\x4d\x66\xae\xd9\x7e\x67\x8b\x2d\xb6\xa6\x49\x48\xc2\x58\x04\x18\x02\xb2\xec\x7c\xfd\x0e\x1d\x27\x5e\x2b\xe2\x6e\x4a\xe9\x3d\x02\xc4\xe3\x03\x70\x7b\x7b\xbb\x92\x84\x3c\x65\x5b\x4d\xc4\x9b\xbb\x15\x1e\x2c\xbb\xd5\x5f\x6b\x34\xbf\x0e\xac\xd1\xe9\x33\x78\xe1\xf6\xef\x9b\xc2\xfd\x2a\x19\x57\xc4\xad\x3c\xad\x7a\xb3\xa4\x4f\xeb\x75\x47\xd6\x8f\x5b\xf0\x12\xd7\x3e\xbb\x97\x63\x13\xdd\x61\xfd\x83\x38\xc8\xa4\xdf\xd3\xf1\xcb\x20\x7e\x87\xf9\xe6\x46\x31\xef\x31\xff\xbf\x76\xac\x13\x66\x85\x48\x3e\x8b\x4a\x6b\xa7\xa3\x17\x38\x25\x05\xdd\x1d\x13\xce\xfe\x67\x05\x8d\x2e\x9b\xfa\x8c\xc8\xd5\xe3\x2f\x0f\x8f\x9b\xff\x36\x8f\xb0\x17\x88\x8a\x9e\x03\x30\xda\xaf\xf8\xbf\x9b\xfb\x87\x87\x7f\x6a\xf8\x76\x90\x2d\x4c\xe8\xac\xc7\x5c\xcb\xe1\x1d\x87\xa3\xcf\xa3\xf6\x2a\xc1\xc1\x8e\xb8\x9b\x11\x02\x17\xcd\x0c\xd9\x20\x65\x09\xe0\xa3\x42\x54\xfe\xc8\x12\x46\x16\xc3\xeb\x3b\xf8\x5e\xc8\x63\x35\xfb\x02\x0a\xac\xce\xfc\x2c\xca\x40\xc8\xd6\x28\x74\xce\x70\x72\x47\x88\xa8\x8a\xdc\x61\x86\x81\xf6\x33\x75\x5f\xc9\x30\xb1\xc2\xf4\xfa\x74\x4b\x78\xf1\x01\x75\x90\x9c\x6a\x92\x6c\xd7\xf9\x02\xa6\x41\x8e\xa0\xe6\x8c\x3c\xb8\x9d\x8b\x8e\x0c\x7d\xcf\x32\x48\x47\x38\x0b\x18\x70\x5f\xaa\x70\xa3\xf5\x70\xd8\xca\xe1\xe3\x95\x42\x0c\x10\xd1\x5c\xf9\x26\x8f\x55\xc3\x04\x2e\xda\xb6\xc6\x5e\xe9\x1a\x69\x11\xc3\xd6\xf9\xdd\xe5\x64\xd3\x4b\x1f\x2b\x24\x45\x97\x7d\x5f\xcb\xf2\x4e\x5b\x94\xa7\x5b\x90\x94\xd0\xef\x07\x52\xab\x45\xa4\xd8\x35\xda\x44\xe5\xa6\x3c\xe0\xab\x5e\x2f\x38\xb3\x23\xb1\x52\xc0\x9c\x4a\x37\x0c\x32\x06\x97\xd2\x22\xe1\x2c\x52\x2d\xd7\x40\x1e\x59\x8b\x4f\x63\xaa\x72\xa4\x23\x5e\xa8\x23\x42\x2f\x16\x1d\x0d\xb3\xdf\x18\xc8\x65\x0c\x94\xd1\x57\x6b\x5c\x7e\x17\x69\x5b\xf2\x78\xb6\x5c\xe5\xa4\xf0\x1b\x41\xdb\x03\x44\xbd\x20\x29\x93\xc7\x93\xb0\x0b\x53\x22\x19\x81\x9a\xe4\xaa\x12\xcf\x23\xe6\xe3\xa5\x29\x73\xf5\x02\x19\x3b\x52\xc3\x0c\x3e\x24\x5f\x35\xdf\xe7\xba\x4b\xef\xe0\x3e\x06\xbe\x7e\x39\xfd\xb6\xf4\xf3\x6c\xc2\xf9\xac\x50\x34\x23\xee\xb4\x51\x1d\x2a\xfd\x72\x6e\xbc\x85\x98\x26\xd9\x75\xb8\x74\xaf\xa2\x54\x43\xd1\x75\xa8\xa0\x4d\xad\xc6\xc2\xc2\xd0\x61\x1b\x20\xe8\xe1\x37\x16\xd2\x31\x9d\xe6\x42\x05\x36\x1a\xb0\x79\x73\xea\x1f\x66\xac\x51\xc4\xe5\x5e\xb3\xdd\x3d\xa4\xc1\x3e\x6a\x34\xd2\x92\x23\xc6\xcf\xed\x8d\x29\xf8\x6a\x59\x05\x73\x43\xb5\xac\xd3\xde\x6c\xac\xd4\xad\x45\xa6\x6b\xf5\x27\x2d\x9b\x00\x4e\x6b\xad\x16\x60\x9a\x4e\x13\xcc\x0b\x33\x7a\x33\xd4\x0a\xe1\xbd\x95\x7e\x06\x00\x00\xff\xff\xa2\x9c\xd2\x0c\xb7\x07\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1975, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x97\x3f\x73\xdb\x46\x10\xc5\x7b\x7e\x8a\x9b\x61\x93\x14\x78\xbc\xdd\xbb\xc3\xe1\xdc\x25\x91\x92\x51\x11\xcb\x43\x3b\xe3\x9a\xa6\xa0\x98\x09\x4d\x70\x40\x70\x64\xe7\xd3\x67\x16\x04\x4d\xaa\xf1\x2e\x0b\x55\xfa\x71\xe7\xdd\xee\xdb\x3f\x98\xcf\xe7\xae\xdb\xb7\xbb\x97\x7e\x70\x2f\x9b\x1d\x79\xd7\x7e\x1d\xfa\x95\xfb\x69\xd1\x0e\xeb\xc5\xf3\xa6\x6f\x5f\x56\xdb\x2d\x8e\x87\xb6\xff\x79\x26\xf0\x9f\x5d\xdf\xba\xcd\xee\xb9\x7b\xe3\x3e\x0f\xc3\xfe\xf0\x66\xb1\xf8\x7b\x33\x7c\x3e\x7e\xc2\xba\xfb\xb2\x58\xf7\xab\xff\xbe\x55\x5f\x56\x5f\x17\x1f\x37\xbb\xa7\xee\xe5\xf0\x7e\xff\xed\xd7\x6d\xb7\xfe\xb7\xed\x67\xb3\xb9\x6b\x77\xcf\x5d\xbf\x6e\x5d\xdf\x1d\x87\xb6\x77\x77\x6f\xdf\xcf\x36\xfb\x61\xf5\x69\xdb\x1e\x5c\x35\xb8\xdd\x6a\x70\xd5\x83\x7b\xb7\xbc\x5f\x3e\xfe\xf5\xe1\xe1\xed\x1f\xae\xda\xbb\x61\xbd\x77\x55\xf5\xb4\xef\xfa\xc1\xa5\xe0\xaa\x7f\xdc\xf2\xfe\xee\x61\x79\xff\xdb\x07\x57\x55\x43\x57\xc9\x3f\x0e\x2e\x05\x3d\xd2\xf1\xc9\x18\x69\x36\x77\xfd\x71\xdb\x1e\xae\x42\x3e\xb8\xdf\x1f\x97\x1f\x7f\x59\xde\xc9\xcf\xee\x96\x8f\xef\x5c\xf5\xe4\x28\x20\x17\x70\x28\xa8\x8b\x9d\x6d\xd8\xc0\x36\x1e\xc4\x48\xd1\x80\x92\xcf\x08\x20\x6e\x8c\x6c\x42\xe3\xed\xa8\x35\xaa\x68\xb6\xb2\x4c\x60\xaf\x6a\xe0\x80\x52\x23\x31\x5e\xd5\xf6\x07\x28\xfb\x46\xfe\x2c\x70\x06\xe5\x06\x94\x2d\x91\xc9\x4b\x2d\x18\x94\x93\x46\x47\x8f\x9c\xc1\x1c\xa1\xaa\xb8\xa0\x44\x37\xb0\xf1\x06\x0d\xac\xdb\xe7\x0c\x27\x70\x34\x4b\xae\xc1\x51\xf5\xfb\x15\x9c\xd4\x52\x4f\x70\xf0\x30\xbd\xaf\x11\xbb\x67\x24\x4b\xe2\x8a\x07\x85\x1a\xb7\xa0\x96\xb7\x4d\x2c\x5b\x9e\x46\x9e\x10\x6b\x71\x9c\x05\xa6\x08\x8e\x04\x8a\x16\xc9\x44\x19\x54\x3c\xb2\x3a\x53\x46\xb8\x01\xf9\x80\x6c\x61\xa5\x47\xa5\x5d\x93\x25\x1b\x52\x0d\x8a\x8c\x5c\x6b\x70\x92\x97\x79\xd4\x09\x8d\x6a\xce\x89\x1d\x83\x17\x55\xf4\x48\x13\xc4\x70\xac\x6a\x9e\xe0\xc0\x06\x13\x25\x06\xd5\x11\x54\x08\x49\x75\xe7\x04\x33\x67\xcb\x28\x1a\xe9\x1a\x44\x1e\xb5\x9e\x8e\x09\x66\x69\x16\x13\x5c\x90\x09\xa4\xb7\x9f\xc0\x42\x8e\x86\xb6\xd1\x0d\xa8\x26\xe8\x1e\xfd\x0e\x07\x34\x96\xe4\x71\x10\xe1\xb6\x07\x8e\x6c\xb1\x98\xee\xc4\xd6\xc5\x92\x8c\x3a\x22\x82\x03\xfc\x82\xd5\x92\x8c\x6c\x92\x49\xab\x2e\x92\x0b\xaa\x47\x4d\xb2\xf5\xc6\xb5\xa3\xe6\xf7\xc2\x16\x5d\xc2\xc4\x36\xd0\x1b\xe4\xc2\xea\x03\x40\xd8\x74\x8a\x6b\xd2\x90\xc0\xd6\xfc\x9e\xe8\xc4\x88\x6a\x64\xf2\x11\xd1\x83\xc9\x23\xe8\x17\xd6\x19\x26\x04\xd5\x96\x23\x1c\xc7\x93\x4c\x9f\xb3\x67\xb8\x81\xfe\xbc\x2b\x56\x3f\x9d\xbe\xb3\xe4\x6d\xb9\x48\x90\x79\xaf\x77\x92\xc0\x4c\xf1\xb4\xae\x55\xc3\x9d\xe8\x04\x8a\xa6\x61\x41\x81\xa4\x3b\x50\x93\xa9\xe0\x14\x22\x28\x7b\x50\x93\x90\x0d\xc1\xcf\x74\x63\xb9\x5f\x28\x65\xb1\x53\xaa\x6d\x52\x4e\x34\xf9\xa2\x2f\xcc\x2b\x96\x6f\x8a\xcc\xac\x0e\xaf\x57\xb4\xf5\x8d\x23\x1d\xf4\x04\x4e\x34\x17\x18\x2a\x3f\xc1\x92\xf4\x60\x96\x3d\xd2\x66\xd9\x42\x47\xb3\xec\x90\x4c\x9f\x3d\x75\x83\x3a\x48\x33\x64\xfd\x2b\xad\x10\x38\x8c\xbb\x1b\x64\xa8\xcd\x88\x97\xd3\xa5\xa4\x9f\x28\xec\xa3\x7c\x04\x52\xc9\x26\x07\x0a\x4e\x32\x85\xe5\xac\x89\x06\x3c\xcb\x99\x99\x65\x5e\x1a\x59\xb9\x4c\xf5\x5d\x70\x86\x93\x9c\x83\xea\xb4\x3c\xd3\x45\x4a\x79\x03\xcc\xb7\x44\x0e\xfa\x87\xdb\x05\xd6\x0d\x35\xc1\xb2\x96\x8a\x49\x73\xdd\x8c\xb7\x18\xa7\xf8\x7f\x00\x00\x00\xff\xff\x4c\xe5\xd9\xaa\x41\x11\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 4417, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\x41\x93\xa3\xba\x11\xc7\xef\xef\x53\x6c\xd5\x5e\x92\x83\x35\x6a\x09\xb0\x79\x55\xb9\xe4\x9e\x53\x0e\x39\xcb\x20\xdb\xd4\x80\x60\x11\xb6\xc7\xf9\xf4\x29\x61\xef\x0c\xf2\x40\xf3\x77\xde\x9c\xa6\xdc\x3f\x24\x75\xab\xd5\x6a\x09\x89\x9f\x3f\x7f\xfe\x68\x3b\xeb\xae\xfd\xf0\xe3\x5a\x39\x92\x3f\x7c\x77\xfb\xf1\xb7\x37\x3b\x14\x6f\xa5\xf3\x8d\xf1\xbf\x44\xd1\xba\xc3\xdf\xff\x08\xe4\xbf\xda\xde\xfe\xa8\xdc\xa1\xfd\xf3\xc7\x69\x18\x3a\xff\xe7\xdb\xdb\xb1\x1a\x4e\xe7\xbd\x28\xda\xe6\xad\xe8\xcd\x7f\x6f\x9b\xc6\x7c\xbc\xfd\xa7\x72\x65\x7b\xf5\xff\xee\x6e\xff\xac\xdb\xe2\xdd\xf6\x7f\xfc\xe1\x6d\x7f\xb1\xfd\x3f\xde\xcc\x46\x4a\x49\xc2\x6c\x1a\x6f\xcb\xa3\x15\xce\x0e\x6f\xcf\xc2\xb2\x58\x96\x2a\xee\x51\xcd\x0b\xb9\x72\x13\xee\xd1\x94\x13\x66\x9c\x70\xcb\x09\x77\x9c\x30\x67\x84\x24\x39\x21\x67\x5d\x5a\xb6\xdf\xec\xaf\xc2\x94\x9e\x44\xe3\xdd\xd8\xc3\xf1\xef\x4a\x34\xde\x94\x7e\xe6\x09\x35\xf7\x44\x6f\xca\x99\x9f\x0b\x3d\xf7\xe3\x50\x5d\xaa\xe1\x26\xae\x77\x3f\x7a\x92\x96\xce\x7e\x9c\x9f\xab\x2d\xdd\xc7\x37\xce\xcf\x14\x7d\x57\xe7\x7b\xb3\xe7\xd5\xac\xca\xce\x0b\x33\x94\xcd\xf0\x24\x78\x37\x9b\xa2\x74\x1b\xe7\x85\x29\x07\x5b\x9c\x44\x69\x27\xd2\xbe\x37\x37\x92\xb4\xe9\xfa\xb6\x14\x65\x2b\x4a\xdf\x89\xa6\x13\x4d\x55\xf4\xad\x6f\x0f\xcf\x85\xdd\x71\xf5\x1a\xae\x5f\xc3\x93\x57\x70\xf5\x5a\xdb\xd5\x6b\x6d\x57\xaf\xb5\x5d\xbd\xd6\xf6\xe4\xb5\xb6\x27\xaf\xb5\x3d\x79\xad\xed\xc9\xab\x6d\x4f\x5f\xc3\xb3\xd7\xf0\xed\x6b\xf8\x0e\xc4\xf7\x0b\x51\x62\xbf\x18\x25\xf6\xf3\xd1\x60\x5f\xb9\xe3\x38\x6c\x17\xea\xa9\xb5\x96\xb4\x31\x82\xca\xfe\x32\x2b\x2a\x96\x45\xc7\x39\x91\x23\x2d\x93\x8d\x5d\x12\x65\xf3\x75\xdd\x45\xcc\x53\xf3\x75\xa9\xfd\xa6\x68\xfb\x71\xf6\xeb\x2a\xd1\x85\x7f\x38\x4c\x61\x98\xc6\xb0\x64\x05\xbb\x3a\x4f\xe2\xea\xfc\x7c\xcc\xdd\x3b\xdd\x41\x8d\xd7\xbe\x38\x49\x15\x66\xa8\x34\x93\x6c\x79\x9f\x60\x46\x3b\x10\x54\x39\x08\x6a\x5e\x95\x09\x98\xa2\x60\x06\x82\x29\xa6\x35\x6d\xd5\x16\x02\xd5\x0e\x2b\x51\x49\xad\x14\x06\x6e\x13\xc8\x8e\x4a\x69\x05\xf5\x8c\x52\x1a\xb3\xa3\x52\x3a\x63\x7b\x26\xf1\xc5\x89\x24\x91\x92\x3b\x4a\x50\x90\x6d\xe3\x17\x98\x93\x86\x40\x92\xc4\x9a\xe7\x0b\x24\x89\x82\x60\x1b\x49\x29\xb0\x8d\x89\x64\xbd\xe7\x0b\x5c\x19\x5c\x5f\xe0\x56\x62\x06\xa7\x2d\xaa\xf5\x16\xec\x42\xca\x25\xd6\x46\x45\x84\x69\xad\x34\xb1\x63\x66\x0a\xb2\x63\xe6\x0b\x4c\x14\xe6\xb8\x9a\x40\x65\x34\x81\x6d\xd4\x4a\x02\x6d\x0c\xde\x48\x8a\x33\xb8\x17\xe1\xdf\xca\x1d\x37\xfe\xf6\x2c\xbb\x2d\xcf\xab\xb7\xe5\x79\xf5\x2e\x9a\x9b\x06\x0b\x76\x1d\x57\xcc\x65\xd4\xc5\xf7\x6c\xa0\x30\x62\xb0\xb5\x6d\xec\xd0\xdf\x96\x52\x82\xc2\x14\x27\x2b\x4a\x33\x98\xc6\xf4\xc3\xbc\xea\x45\xe9\x66\x6b\x2c\x3d\x29\x99\x88\xba\x75\xa2\xae\xdd\xf5\xa9\x91\x41\xba\xcb\x39\x69\xae\x19\xa9\x56\xdb\x65\xa9\x92\x09\x6d\x45\x5d\xdc\x16\xc5\x9a\x58\x71\x2a\x79\x31\x5f\xf8\x36\x65\xc4\xa4\x12\xc6\x26\x2a\x13\xa6\xf1\xb9\x68\xbc\x2d\xdc\x77\x69\x9e\x2f\x97\x9c\x48\xa6\xda\x44\x71\xc2\x94\x2b\x36\x4f\x96\x85\x79\x96\x2e\xe9\x72\x22\x20\xa1\xf9\xa4\xd8\x64\xac\x38\x2d\x0e\x92\x87\x68\x76\x90\x9c\x16\xf3\xd2\x51\xa4\x96\x0b\x54\xf3\x05\xb6\x4d\x67\x06\xfb\x51\x9c\x8c\x3b\x5a\x51\xd4\xed\xb9\x34\x5d\xf7\xa4\x77\x04\x91\x18\x7a\x73\x38\x54\x45\x63\x9c\x39\xda\xfe\x99\x75\x43\xe5\xce\xe7\x46\x94\xcb\x49\x79\xd1\xf6\x9d\xf0\x03\x2b\xb7\x1f\x83\x68\x7c\x35\x98\xf2\xe0\xc5\xb1\xde\x97\x2e\x2c\x0b\x16\xf8\x0e\x5f\x39\x17\x1d\xbe\x52\x2d\x3a\x7c\x65\x58\x84\x5c\xb8\x2b\xc4\x45\x86\xd8\x11\xd9\xa4\xdc\x6b\xf3\xeb\x3c\x17\x4f\xca\xbd\xbe\x3a\xaf\x24\x85\xbf\xe5\x40\x5c\xee\x99\x5c\xa9\xdc\xa7\x8f\xb8\x1f\x52\x3f\x26\xee\xc7\x20\x33\x2d\x4e\xc1\x1d\x97\x17\xc7\x20\xd8\xc6\x9c\x9b\x91\x23\x50\xa1\x25\x72\x39\x67\x04\x6a\x0c\x0c\x06\x02\x41\xd0\xe0\x24\xb9\x89\x36\x02\x41\x83\x93\xd4\x68\x89\x09\xda\xc6\x04\x2c\x11\x75\xb3\x90\x8a\xa0\x20\xd6\xd7\x44\x60\x5f\x13\x71\x2b\xbf\x08\xd4\x68\x1b\x13\xb0\x8d\x8a\x4b\x77\x23\x90\xcb\x10\x63\x10\xd4\x5a\xa1\xde\xa3\x34\x36\x0a\x49\x83\xc3\x95\x34\xea\xe1\x1a\xed\x19\x8d\xf6\x8c\x46\x87\x82\x46\x03\x40\xc2\x2d\xe8\x22\x10\xd5\x3a\x51\xcc\x76\x40\x0c\x82\x06\x4f\x34\xb3\x1a\x88\x40\xd4\x71\xd3\x95\x49\x68\x02\x82\xe6\x49\xd1\xbe\x4e\xc1\xe9\x83\xd2\x04\x6d\x63\x02\x7a\x4f\xc6\x2d\xbf\x22\x90\x5b\x18\x47\x20\xaa\x35\xbb\xeb\x14\x83\xa8\x32\x09\xe8\x14\x5b\xb4\xaf\xb7\x68\xb0\xdf\x6a\x50\xeb\x2d\xea\x8f\x3b\x6e\xff\x25\x02\x15\xa8\xf5\x0e\x1d\x85\x3b\x34\xe2\xa2\x79\x0f\xed\xd0\x88\xbb\x43\xa7\xe1\x9c\x5b\xe5\xc7\x20\x58\x75\xce\xed\xbf\x44\x20\xea\xe1\x39\xea\x14\x39\x38\xae\x95\x24\xcc\xe0\x4a\x82\x33\x97\x62\x77\xef\x22\x10\x4c\x67\x94\x04\xd3\x19\x25\x35\xd6\x85\x4a\x62\x01\x20\x64\x71\x90\xe3\x06\x10\xd2\x7a\x4c\x7c\x40\x10\x1b\x0a\xe3\x1c\x87\x81\x8a\xdb\x61\x8c\x41\x68\x5c\x93\x54\xa8\x32\x0a\xeb\x42\x92\x0a\xeb\xc2\xb0\x02\x00\x4b\xd4\x98\x87\x93\xd4\x98\x3f\x06\x10\x2e\x11\xf4\x1e\x8d\xcd\x5c\x61\x95\x02\x83\xa8\x32\xa8\x1d\x13\x09\x96\x08\x66\x7b\x61\x25\x05\x9a\x27\x41\x87\x42\x82\x65\xa4\x61\x6d\x06\xba\x59\x8a\xad\x5d\x49\xa6\x58\xa2\x49\x32\x45\x63\x0f\x98\x20\x91\xcc\xb0\x85\x4f\x00\x41\xad\x33\x2c\x0f\x0f\x20\x18\x29\x32\x6c\x51\x41\x72\x2b\xc1\xbe\xde\x62\xe9\x0c\xc9\x2d\xaa\xcc\x16\xcb\xf6\x48\xee\xb8\x37\x07\x31\x08\x9a\x67\x87\x76\xe1\x0e\xed\xc2\x1d\x1a\xa4\xc0\xdc\x2c\x80\xe0\xb8\x06\x77\xb9\x08\xdd\xe5\x22\x99\xa3\x21\x25\x47\xed\x98\xa3\xc1\x1e\xca\xcd\xb4\xdc\x11\xfb\xc2\x74\x0a\xb2\xef\x41\x27\xa0\x92\xc8\xa2\x22\x80\x6b\xdb\x9d\x9f\xa0\x46\xd2\x99\x00\x26\x48\x06\x70\x07\x31\xf3\xa8\x0c\x06\x51\x65\xd8\xf7\xa0\x11\xc8\xbd\x63\x9c\x82\x3b\x4c\xeb\x5c\x12\x92\x53\x04\x30\xc1\x9c\x22\x80\x60\x89\x29\xe6\x3d\x01\x04\x4b\x84\x56\xec\x01\x84\xcd\x03\x0e\x85\x3c\x54\x0e\x81\x04\x0e\x85\x00\x42\x7d\x9d\x87\x29\x09\x05\x31\xf3\x90\x42\xab\xd6\xa8\x32\xa8\xf7\x60\x5b\x4d\x01\x04\x47\x61\x4e\x19\xb2\xdc\x0b\xe0\x16\x74\x33\xda\xa1\x25\xb2\xa7\x11\x22\x10\xd4\x5a\x49\x64\xbe\x0e\x20\xda\xd7\x0a\x5a\xee\x05\x10\xda\xbd\x1e\x41\xb4\x8d\x29\x54\x22\x8d\x47\x9c\x40\x10\x99\x34\x03\x08\xed\xb0\x07\x50\x43\x41\x6a\x04\x11\x0f\x27\x29\x13\x68\x70\x91\x94\x29\x64\xc7\x11\x04\x95\xc1\x26\x24\x92\x12\x9b\x67\xc6\x1d\x08\x64\xcc\x8c\xef\x3e\x10\x7f\x0c\x20\x5a\x35\x6a\x70\x4a\x40\xad\x29\x01\xfb\x9a\xb0\x99\x6b\xdc\x19\xc6\xba\x90\xd0\x9e\x21\x68\x51\xa1\xd1\x7d\x5c\x3d\x6e\x02\x62\xa3\x10\xdb\x04\xd4\x24\x95\x04\x4b\x54\x04\xf6\xb5\x52\xc8\x8a\xfd\x0e\x82\x55\xb3\xc7\xba\xa6\x60\x82\x6c\x35\x8d\x20\x5a\x22\x36\x73\x05\x10\x2d\x11\xed\x6b\xb5\x5b\xf1\x9e\xab\xf3\x54\x72\x44\x36\x16\xa5\x42\xe2\xc8\xdb\x65\x0a\xb2\xea\x4e\x40\xde\x1b\xa6\x20\x9b\xf0\x4c\x40\x7e\x89\xf9\x05\xae\xf8\xd7\x14\x04\xab\x5e\x89\x77\x53\x10\x34\x8f\xe2\x3b\x79\x0a\x82\x5a\x6b\xde\x1b\xa6\x20\xa8\xf5\xca\xaa\x6c\x02\xa2\xca\xac\xcc\xbf\x5f\xe0\xca\xf0\x9b\x82\xa0\x79\x52\xd4\xc3\x57\x26\xea\x29\x88\x56\x8d\x6a\x9d\xf2\x31\x79\x0a\x82\x6e\x96\xa1\x55\x67\x68\x89\x2b\x7b\x4c\x53\x10\x74\x8a\x95\x17\x5c\x53\x10\xf4\xf0\x95\x37\x61\x53\x10\xf4\xf0\x1c\xd5\x7a\x25\xf7\xff\x04\x43\x8e\x89\x82\x98\x32\x24\x41\x65\x68\x65\x46\x9f\x80\xa8\x32\x84\x2a\xb3\x92\x61\x7e\x81\x2b\xef\x84\xa6\x20\xa8\x0c\x1a\x1f\x49\xa3\x06\x47\xe3\x23\x69\xb8\x8d\x60\x00\x20\x34\xec\x51\x8a\xf6\x4c\x8a\x6a\x9d\xa2\x5a\x67\xe0\xb8\xa6\x0c\x6d\x63\x06\xce\x5c\x94\xb1\xca\xd8\x8b\xb8\x54\xfd\x70\x36\xb5\x35\xfd\x70\x7a\x3a\xc6\x79\x58\x3f\x5b\x5e\x56\xe6\xe8\x5a\x3f\x54\x85\x17\xfe\xdc\x75\x6d\x3f\x2c\xa3\xbe\xc0\x8f\xad\x06\x1a\x3f\xb8\x1a\x68\xfc\xe8\xaa\x9d\x3d\x5d\x6f\x0b\x27\x78\x83\xd8\xb3\xb8\xb4\xfd\x60\x3f\xc6\xc3\xf4\x4b\xa5\x1f\x6a\xfb\xf1\xfd\xa0\xfe\x61\xf1\xf0\xef\xf1\x3b\x7c\xb4\x2d\xa8\xca\xd1\xb6\x17\xdb\x83\xf0\x69\xe6\xfe\xe1\x69\xe6\x1e\xf2\xe9\x9d\x71\xd7\xd3\xbb\x0a\xce\xa5\xc7\x5b\x52\xdc\x6e\x43\x0c\x32\x7e\x1d\x83\x8c\x5f\xc7\x20\x13\x48\x22\x90\x7b\x5d\x3d\x05\x77\xdc\x4b\xa8\x08\xe4\x5e\xdc\x46\x60\x0a\x9a\x67\x97\xa2\x55\xa7\x4c\xe4\x9e\x82\x39\xaa\x4c\xce\xdd\xda\x8b\x40\xee\xd5\x5b\x04\xa6\x68\x89\x29\x13\x3e\x23\x90\xbb\x11\x37\x01\x89\x3d\x01\x13\x81\xa0\xf7\x90\xe4\xde\x7f\x4d\x41\xe2\x4e\x3b\x45\x20\xf7\x5e\x3b\x02\x53\xcc\xcd\x48\xa1\x5a\xab\x04\xeb\x19\x52\xdc\xed\xc7\x08\xe4\x2e\xb0\xc6\x20\xe6\x8f\xc4\xde\xd0\x8c\x41\xd0\x3c\xec\xf1\xdb\x08\xe4\x5e\x80\x47\x20\xaa\x75\x02\xc6\x1e\x4a\xb8\x13\x07\x31\x08\xfa\x63\x82\xfa\x63\x02\x8e\x6b\x4a\xb8\x4b\xb6\x53\x30\xe5\x4e\x45\x44\x20\xda\x85\x29\x38\x2b\x10\x7b\xc4\x23\x02\xb9\x33\x87\x11\x08\x86\x66\xfe\xb0\x6c\x04\xa2\x6e\x96\x71\x47\x65\x22\x10\x1d\xd7\x59\x0a\xfa\x63\x06\x6b\x9d\x82\x06\x47\x33\x00\x42\x33\x00\xfe\x76\x78\x04\x72\xe7\xc6\x63\x10\x9c\x67\xb6\xa8\x79\xd8\x03\x19\x11\x88\xb6\x71\x87\x46\x8a\x1d\x3a\xae\x77\xe8\x84\x84\xa6\x33\xb4\x43\xdd\x2c\x47\xbb\x90\xbd\xf1\x14\x83\xa0\xc1\xd1\xe4\x43\xa1\x19\x80\x92\xdc\xc1\xbf\x18\xc4\xda\xa8\xd8\xf3\xa5\xa7\xf7\x95\xef\x51\x3c\x80\xfd\x32\x51\x6d\xf6\x75\x86\x7c\xb3\xa2\xda\xec\x6f\xd0\xc7\x2d\xa6\x20\x7b\x1d\xb4\xda\x60\x97\x4b\x27\xdc\x4a\x79\xde\x29\xa8\xbc\x4f\x8e\x2f\x8f\xee\x57\xc1\x0b\xeb\x85\x6f\x8b\xca\xd4\x4b\x8b\xaa\x35\x52\x38\x6f\x86\x22\x5e\x48\x56\xee\x60\x7b\xeb\x0a\x2b\xea\xb6\x30\x43\xd5\x3a\x51\x57\x97\xa7\x2b\xe0\xef\x17\x7c\xb5\xfc\x7e\xc1\xd7\xca\xef\x17\x7c\xa5\x5c\xef\x49\x5c\xaf\x57\xd1\x78\x61\xde\x4d\xe9\x9e\x3e\x51\x33\x36\xba\x9f\xfd\x88\x54\xed\xd5\xd5\xee\x45\x6f\xcb\xa6\x75\xa5\x18\x6f\xc0\x2e\x54\xd2\x88\x99\x2f\x53\x35\xed\xbe\xaa\xad\xe8\xaa\xce\x0a\xd3\x57\x8b\xab\xed\xb9\xcb\xf3\x8d\x77\x83\xf5\xc3\xf2\x65\xfe\xfb\xc7\xb1\xda\xc3\xa1\x2a\xac\xe9\x3a\x7f\xb7\xfe\x77\xa4\x3f\xd7\x76\x85\x6b\x91\x1b\xf8\x0c\x34\xe7\x1e\xad\xb3\xde\x0e\x43\xe5\x8e\x7e\xb3\x77\x4a\x84\xc7\x7e\xbb\x08\xf0\x48\x71\x7b\xf9\x91\x72\x9f\xbe\xfa\xc8\xe9\x1d\xaa\xa5\xeb\xad\x38\xb4\xed\xd0\xf5\x95\x1b\xba\xde\x96\x55\xf1\x64\x9c\xae\xb7\x97\xca\x5e\xbf\xbb\x50\x6f\xca\x19\x83\xcf\x7e\x14\x29\x94\xdb\x87\xe6\x98\xcf\xb1\xb8\xd0\x15\xbd\xed\xda\x7e\xf0\xe2\x6a\xbd\x40\x36\xb8\x7c\x71\xb2\x8d\x99\x16\x37\x37\x10\xbc\x2d\xce\xbd\x9d\xf3\xe3\x87\xe4\x50\x1b\x7f\x1a\x4c\xfd\x5e\xb9\xe3\x33\xf0\x68\x30\xdc\xa2\xdf\x3d\xe0\x8d\x2b\xf7\x2d\xbf\x19\xf5\x09\x5f\x2b\xb7\xe9\x3a\x0b\xc3\x10\x78\x87\x56\x2e\xab\xc7\xf0\x12\xe4\x16\x3f\x0f\xf0\x10\xcd\xdd\xe6\x7f\x88\xe6\x3e\x0f\xe0\xbb\x9b\xb3\xc3\x72\xa3\x46\xb1\xa9\x17\x77\x2b\xef\x80\x3d\xf7\x6d\x67\xd7\x3a\xff\x57\x83\x75\xdc\xaf\xe6\x2f\x41\x73\xc3\xcb\xfb\xeb\xcc\x18\xf1\x43\xdb\xdb\xc2\x0c\xa6\x6e\x8f\xbd\xbd\xfc\x9e\x63\xc6\x9f\x7f\x9d\x4d\x5d\x0d\xcb\xf5\x9f\xfb\x8b\xbd\x89\xab\x19\x7c\xeb\x96\xa0\x41\x0a\xef\x6b\x61\xde\x45\x79\x73\xa6\xa9\x0a\x31\x54\x21\x52\x2e\x6f\x9d\x7e\x3d\xb1\x4a\xda\xda\x16\x6d\xd3\x18\x57\xae\x5b\x0b\x80\xe7\xac\xf6\x85\x9a\xae\xb3\x1f\x62\x1f\x46\xe5\x02\xc1\xd4\x7c\x07\xce\xfd\x62\xb0\x19\x67\x21\xfe\x4b\x8d\x83\x3f\xd8\xdf\x1f\x98\xf0\x27\xd3\x85\x96\xf0\x73\xf2\x85\xe4\x63\x1b\x7a\x32\x4e\xd7\x03\xf1\xec\x63\x0b\x35\xd8\xde\x07\x7f\x39\xdd\xf6\x7d\x55\x8e\x69\xd2\xc9\xf6\x4f\x3e\x36\xc6\xec\x99\x6d\xf4\x47\x1d\xe0\xbc\xf5\xa0\xc1\x29\xeb\x41\x83\xb3\xd5\x83\x06\x27\xaa\x07\x8d\x04\xd5\xff\xc7\xfa\xa0\xe5\x27\xaf\x17\x56\xc2\x6a\xf4\x26\x02\x6d\x00\x5b\xf9\x63\xcc\x7f\x0f\x27\x7c\x30\x78\x48\xc3\xe4\xb2\x3a\x6a\x1e\xec\x5f\xe4\xe6\xf4\x0b\xc9\x26\xa2\x23\x38\xc9\x8e\xdf\xf9\x15\x55\x77\xc9\x38\x62\xbb\xc6\x8c\xa9\xf3\x67\x82\xfa\xbf\x00\x00\x00\xff\xff\xd5\x01\x33\xfa\x49\x58\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 22601, mode: os.FileMode(438), modTime: time.Unix(1522108931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x9a\xbf\x72\x1b\x47\x0c\xc6\x7b\x3d\xc5\xce\xa8\x49\x0a\x42\x0b\xec\x7f\x77\x49\xe4\x64\x54\xc4\xf6\xd0\xce\xb8\x96\x25\x3a\x56\x22\x8b\x1c\x92\x1a\xc5\x79\xfa\x0c\xf6\xee\xc8\x73\x13\x7c\x57\xd0\x8d\x7f\xda\xf9\x16\xc0\x62\x01\xec\x5d\x5e\x5e\xba\xed\x6e\xf3\xf4\xb2\x3f\xba\x97\x87\x27\xf6\xee\xb0\xfb\xe6\x7e\xb8\xda\x1c\xef\xae\x3e\x3f\xec\x37\x2f\xb7\x8f\x8f\xf4\x7c\xd8\xec\x7f\xbc\x50\xf4\xf7\xed\x7e\xe3\x1e\x9e\x3e\x6f\x5f\xb9\x2f\xc7\xe3\xee\xf0\xea\xea\xea\xcf\x87\xe3\x97\xe7\x4f\x74\xb7\xfd\x7a\x75\xb7\xbf\xfd\xf7\xdb\xea\xeb\xed\x3f\x57\x1f\x1f\x9e\xee\xb7\x2f\x87\xf7\xbb\x6f\x3f\x3f\x6e\xef\xfe\xde\xec\x2f\x2e\x2e\xdd\xe6\xe9\xf3\x76\x7f\xb7\x71\xfb\xed\xf3\x71\xb3\x77\xd7\x6f\xde\x5f\x3c\xec\x8e\xb7\x9f\x1e\x37\x07\xb7\x3a\xba\xa7\xdb\xa3\x5b\xdd\xb8\x77\xeb\xd7\xeb\xb7\x7f\x7c\xb8\x79\xf3\x9b\x5b\xed\xdc\xf1\x6e\xe7\x56\xab\xfb\xdd\x76\x7f\x74\x29\xb8\xd5\x5f\x6e\xfd\xfa\xfa\x66\xfd\xfa\x97\x0f\x6e\xb5\x3a\x6e\x57\xfa\x1f\x07\x97\x82\xbd\xd2\xf3\x3d\xb8\xd2\xc5\xa5\xdb\x3f\x3f\x6e\x0e\xb3\x25\x6f\xdc\xaf\x6f\xd7\x1f\x7f\x5a\x5f\xeb\x9f\x5d\xaf\xdf\xbe\x73\xab\x7b\xc7\x81\x72\xa5\x2a\x54\x41\xb2\x12\x4b\x03\xd8\x92\x49\xb8\x12\x73\x41\xe1\x46\xdc\x18\x87\x85\x3d\x02\x57\xe2\x52\x88\x63\x44\x61\x95\x01\x6d\xb0\x12\x57\x4f\x09\x55\x51\x3d\x35\x98\x8d\xc4\x35\xa3\x70\x26\x49\xe8\xf6\x6a\xa1\x84\xb8\xba\x54\x92\x90\x88\x05\x54\xa1\xb0\x44\xc4\xd7\x95\x29\xd1\x77\xb1\xfe\x7f\x64\x23\x89\x02\xb0\xec\x0b\xa1\x76\x50\x36\x0a\x02\x4b\xa0\x56\x28\x33\x71\x30\xb7\x36\xb0\xe2\x1b\x35\x88\x6d\xc4\x9e\xd8\x0c\xf8\x09\x6d\x64\x87\xf0\x99\xcd\x28\xcb\x59\x7f\x20\x2c\x4c\xe2\x91\xcd\xb1\x17\x8a\x24\xb6\x97\x47\x56\x98\x10\xc1\x8a\x72\x4a\xc4\xd1\x3c\x48\x9d\x0e\xc4\x55\x90\x18\x8e\x5e\x73\x9b\x88\x2a\x31\xa3\x4d\x61\x4d\x3f\x99\x8a\xb9\xbf\x33\x0b\x64\xcd\x33\x2c\xc9\x8c\x8b\x09\xae\x94\x61\xc5\x9a\xda\x4c\xf7\x8d\xb0\x78\x8a\x90\xdd\x94\x65\x92\x80\x6e\x4f\x44\x23\x14\x85\x03\xe1\x0b\x07\xe2\x66\xe6\xb6\xe8\xa9\xf8\xbe\x3d\x89\x10\x9c\x89\x89\x0b\x62\x0a\x45\xc5\x0e\xe4\x13\xc9\x90\xe7\x4a\x21\x91\x4a\x76\x6e\x3d\xb3\x75\x01\xdb\x50\x0d\x41\xfd\x86\x84\x65\xd5\x63\xd7\x28\x22\x7e\x63\x4d\xf3\x24\x29\x81\x2c\x7b\x2a\x88\xd7\x3a\xcb\xd4\x90\x03\xda\xd9\x48\x9c\x50\xc1\x22\x98\x37\xfa\xe6\x22\x70\xd7\x75\x36\x12\xc7\x7e\xee\x20\x3a\x11\x03\x17\x42\x47\x7b\xf5\x43\x62\xe7\xcc\x89\x4e\x4c\x50\xb2\xd2\xfb\x40\x97\xe6\x6a\xc6\x50\xea\x87\x5e\x5d\x6d\xaa\x38\xa3\x66\xb0\x8d\xa8\x1e\x25\x33\x28\xce\x2c\x2c\xa1\x64\x0a\x4b\x58\x54\xaf\xb2\xb0\xc5\x2a\x05\xd3\xcd\x33\xd6\x3c\x48\x33\xd6\xcc\x69\x27\x9b\x79\xb2\xcb\xf8\x39\x8c\x7b\xc3\x13\x9b\xa1\x76\x82\xe3\x92\x95\xe3\xb2\x95\xb1\xa8\x08\x95\x38\x22\x09\x76\x0e\x43\x32\x46\x18\xc8\x42\x4a\x6b\x49\xaa\x05\x37\xe4\xc2\xdc\x4f\x3f\x05\x33\x0f\xcd\x60\x50\x86\xc2\x5a\x14\x42\x61\xa7\x74\x42\xd2\x56\x87\x4b\x2f\x15\xb0\xd4\x32\xc2\x6c\xa7\xe5\x13\x1d\x88\xb1\xc3\xa2\x85\x61\x24\x2e\x98\xea\xa6\xbd\x34\x63\xa9\x40\xe1\x40\x98\x57\x1a\x55\x6d\x5a\x40\x96\x25\x90\x5d\xdd\x4c\x70\x55\x1d\x08\x5c\x86\xcb\x1d\x0a\x8d\x12\xf5\x9e\x04\x23\x54\x3b\xd3\x58\x90\x3b\x6a\xa2\xf5\x8e\xb2\x4b\xf5\x89\xd6\x1f\x2c\xa4\x69\x20\xe1\x74\x40\x1a\xa8\x91\xd6\xb0\x13\xc8\xd4\x6a\x67\x2d\x09\xec\x16\xa3\xd3\x5a\xbe\x68\xdc\x41\x42\x3a\x9d\x48\x3c\x46\x17\xca\x5e\x7b\x66\x00\x16\x69\x3d\x4a\x44\x90\xd3\x32\xd0\xbd\xa5\x83\xe9\x08\x94\x26\x33\x98\x0b\x12\x23\xa7\xa5\xa1\x14\x39\xd0\x89\x0a\x24\x24\xe8\x81\x69\x24\x76\x39\xdc\xe9\xdc\x27\x13\x76\xcf\x33\xc1\x81\xc4\x9b\x5b\xcc\x91\x22\x65\x62\x6f\x1e\xaf\x9c\x48\x57\xce\x24\x66\xf6\x18\x50\xf6\x9e\xcc\xc8\x38\xa3\xe6\xbe\xce\xa8\x3d\x1a\x99\x2d\xbb\x84\xb5\xcd\x75\x66\xcd\x78\x98\xb1\x66\xc8\x8f\x6c\x66\x60\x3c\x33\x3a\x82\x1b\x32\x71\x51\x38\x91\x34\x92\x00\xb9\x2d\x51\x68\x64\x8f\x4f\x07\x34\x46\xb2\xa7\x11\x67\x14\xda\x59\x47\xd9\x83\x62\x3b\x0b\x45\x4e\xea\xf7\x93\x5d\xca\x0d\xec\xd0\x24\x2e\x60\xa1\xc8\x19\x59\x28\x72\x12\x71\x40\x46\xc8\x23\x5b\x32\x30\x42\x1e\x83\x21\x09\x45\x50\x83\xb2\x79\x01\x5b\x16\x68\x28\xa0\x7d\x3b\x0b\xda\x57\x59\xec\x64\x0e\x2c\x2f\x31\x1a\x92\x4e\x33\x31\xb7\x5e\xb1\x00\x95\x1e\xfb\x48\xbd\x46\x2e\xc0\xbc\xb0\xc3\x1a\x3d\x85\xb2\x3d\x79\x9f\xe0\x06\xf4\xca\x13\x1c\xf5\x76\x46\x75\x88\x54\x64\x54\x7f\x86\x01\xeb\x4d\x74\x28\x5a\x7d\x42\xb4\x1e\x29\xe2\x66\x56\x09\x23\x2c\x5a\x38\xd9\x87\xb5\xd3\x99\xb4\x90\xc4\xac\x97\x29\x54\x20\x75\x8f\x6c\xf2\xc4\x02\x49\x16\xf6\x14\xa9\xd8\x8f\x27\x13\xeb\x81\x06\x74\x82\x85\xb5\x0a\x87\x7c\xa8\x76\xeb\xcf\x38\xf6\x16\x99\x87\xa9\x6f\x03\x12\xe8\x1c\xb6\x75\xcc\xe1\x25\x3a\x80\xc7\x06\x0e\xac\x18\x65\xc4\x7c\x27\x96\x3d\xbc\x70\x9f\x22\x2e\xa1\x05\x48\x1f\x23\x1d\x94\x06\xde\x0f\x67\x34\xf0\x16\x36\xa3\x61\x93\x28\x0d\x04\xd4\x9c\x5e\xb6\x36\xf0\xfa\x7a\xa6\x13\xf0\x3a\x38\xa3\xed\x03\x39\xd2\xd1\x13\x62\x92\xd8\xfb\x9d\xe0\xa1\xcc\x37\xa3\x81\x84\x3d\xd2\x7a\x81\xd9\x05\xd8\x44\xb3\xd7\x36\x7a\x09\x6d\xcf\x09\xe6\x74\x03\xde\x83\x27\xba\x2e\x52\x52\x17\x29\xa9\x40\xb5\xf0\x9d\x92\x05\x52\xfa\xdb\xd0\x12\x7a\x81\x70\xf1\x4b\x84\x8b\x5f\x62\xf0\x52\x81\xa7\xe7\x89\xee\xaf\xfb\xc0\xda\xa5\xbf\x11\x57\x46\x4c\x92\x0a\xa5\x4c\xfa\x2f\x88\x6a\xcf\x0d\x7c\x40\x31\xc0\x8d\x91\x3b\x72\x60\xd9\x67\xe2\x8a\x2a\x1e\x68\x54\xf4\x40\xdb\x49\x6a\xa4\x39\x90\x00\x1f\xc1\x8c\xb4\x30\x30\x2f\x3e\xc1\x11\xb9\xc9\x46\x38\x36\xc8\xd6\xb9\x52\xe6\x3e\xf1\x8c\x76\xd2\x19\x60\x8e\x99\x80\x4a\x67\x82\x1b\xf0\x98\x30\xc1\x05\xe9\x20\x3a\x3c\x4c\xaa\x80\x02\x43\xe1\xd0\x3b\xf6\x8c\xad\x1c\x86\x04\x62\xcf\x86\xb8\x71\x1f\xca\xb0\xf6\xa1\xb6\xa5\x3b\x5d\xfa\x13\x3e\x30\xf0\x19\xf0\x46\x29\x92\x7d\xe5\x69\xb3\x11\xf3\xd0\x76\xa0\x30\x63\xf7\xa3\xd2\xb9\x12\xe7\xfe\xb5\xcd\x7f\x01\x00\x00\xff\xff\x8f\x51\x86\x03\x7a\x27\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 10106, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x14\xc6\x11\x66\xbc\x78\xf7\xe4\xc1\x73\xc8\x4b\xc9\x90\x26\x31\xbb\xa5\xd6\x4f\xef\x20\x08\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\xdb\x44\x45\x6b\x3d\x9f\x17\x4d\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x05\xbe\x82\x0c\xde\xfc\x9f\x1c\xf0\x53\x48\xba\xb0\xde\x84\x75\xb1\x25\x8a\xb8\x66\xac\xb2\xb4\x6d\x36\x20\x43\xcd\x64\x12\xef\xdd\xac\x16\x6f\xec\xc5\x7a\x15\x5a\x7c\x8e\xdd\xa3\x0b\x72\xa7\xd3\x64\x82\x3a\xed\x75\x7a\x60\x7c\xb9\x32\x33\x0e\x0e\xda\xa3\x39\x4e\xfc\xec\xbf\x98\xfb\x15\xcf\x1a\x53\x2e\x72\xa6\x9c\x97\x79\x72\x97\x37\x5c\xcd\xb3\x46\xe6\xb7\x31\x2a\x47\x44\x03\x2a\xb4\xde\x05\xa1\x32\x6c\xbf\x1c\x25\x25\x39\x35\x38\x51\x59\x8c\x4e\x74\x52\x90\x70\xa1\x82\x3a\x42\x6d\x65\x0a\x18\x0c\xfd\x80\x0e\x94\x76\x76\xaf\x53\x37\xa4\xbe\x76\xca\xd5\x07\x56\xd2\xf5\x61\x65\xec\xfb\x84\xd1\x25\x9c\xda\x6e\x14\x20\x76\x42\x79\x04\xaf\xe9\x3b\x5e\x5c\x1e\xa6\x30\xfe\x7a\x1c\x78\x14\x24\x07\x9a\xfa\xd3\x30\x15\x28\x84\x0d\x1f\x75\x2a\x53\x8d\x3d\xea\x79\xda\xb5\xb9\xda\x10\x1d\x66\x52\xea\x13\x7f\xa6\x84\x24\x08\x8d\xe6\x03\x77\x39\x91\x1b\xa2\x3f\x77\xf4\x7f\x94\x5c\x03\xe3\xfe\xbc\x91\xd9\x65\x4b\xa7\x4a\x48\x15\xfb\x08\x00\x00\xff\xff\x7c\xbe\x53\x60\x1f\x05\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1311, mode: os.FileMode(438), modTime: time.Unix(1522108932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xcd\x6e\xda\x40\x10\x00\xe0\x3b\x4f\x31\x12\x97\xf6\xe0\xb1\x67\x76\xd7\x3f\xb9\xb5\x25\xad\x38\x34\x89\x9c\x54\x39\x13\x30\x0d\x2d\xc1\x96\x59\x44\xd3\xa7\xaf\x8c\x09\x59\x4b\x95\x66\x7c\xce\x97\xd1\x78\xfe\x96\xe9\x74\x0a\x75\x53\xed\x8e\xad\x87\xe3\x66\x47\x09\x1c\x9a\xd5\xc2\x57\xf0\x21\xae\xfc\x32\x5e\x6f\xda\xea\xb8\xd8\x6e\xf1\xb0\xaf\xda\x8f\x93\x4e\x7f\xaf\xdb\x0a\x36\xbb\x75\x7d\x05\xcf\xde\x37\xfb\xab\x38\xfe\xb9\xf1\xcf\x87\x27\x5c\xd6\x2f\xf1\xb2\x5d\xfc\x7d\x8d\x5e\x16\x7f\xe2\xc7\xcd\x6e\x55\x1f\xf7\xf7\xcd\xeb\xe7\x6d\xbd\xfc\x5d\xb5\x93\xc9\x14\xaa\xdd\xba\x6e\x97\x15\xb4\xf5\xc1\x57\x2d\xcc\x6e\xee\x27\x9b\xc6\x2f\x9e\xb6\xd5\x1e\x22\x0f\xbb\x85\x87\x68\x0e\x77\xe5\x75\x79\xfb\xe3\x61\x7e\xf3\x0d\xa2\x06\xfc\xb2\x81\x28\x5a\x35\x75\xeb\xc1\x19\x88\x7e\x41\x79\x3d\x9b\x97\xd7\x5f\x1e\x20\x8a\x7c\x1d\x75\x7f\xd8\x83\x33\x72\xa4\xc3\x4a\x19\x69\x32\x85\xf6\xb0\xad\xf6\x41\xc8\x39\x7c\xbd\x2d\x1f\x3f\x95\xb3\xee\xdf\x66\xe5\xed\x1d\x44\x2b\x20\x83\x69\x8e\x79\x86\x36\x53\x53\xca\x9c\xce\x16\x06\x29\x29\x14\x36\xb3\x48\x59\x81\x44\x9a\x24\xb2\x1c\x29\xcd\x91\x4d\xa2\xc3\x6c\x12\x24\x63\x15\x98\x92\x0c\x2d\x3a\x4d\xdc\x33\x65\x89\x72\x47\x0d\x52\x5e\x20\x71\x3a\x46\x3b\xb1\x16\x03\x9d\x4b\xda\x26\x98\x65\xc8\x5c\xa0\x11\xdb\xf7\x6e\x07\x43\xf9\x5f\xeb\xf8\x04\x29\x23\xe4\x44\xac\x47\x6a\xbb\xb2\x59\x24\x31\xdf\x37\xc9\x72\x4c\x87\xce\x21\x99\x1c\x93\x98\xc5\x3e\x9f\x75\x6a\x90\x49\x9c\xcd\x00\xb3\x38\x16\x21\xa6\x31\x58\xfe\xc2\x14\x89\x0a\x24\x6b\x35\x73\x31\xd0\x72\x9d\x03\x9d\xcb\x05\x09\x74\xa1\x58\x14\x42\x76\x06\x8d\x51\x6d\xd5\x05\x73\x22\x8e\x1d\x99\xee\x66\x24\xe8\x08\x29\x57\x9c\x8d\x40\x8b\x25\x09\xb5\xe6\x23\x2f\x9a\xad\xb8\xe2\x03\x3d\x26\x6f\xb6\xfa\xbc\x0d\xb2\xe2\xec\x5e\xb0\xe6\x92\x9e\xb1\x6e\xc7\xde\x38\x51\x37\xe5\xa3\xb4\xba\x80\x9d\x4e\xd5\x89\x9f\xb4\xb8\x67\x17\x9d\xba\x31\xf5\xee\xb9\xba\xe2\x27\xee\xc4\x0b\x31\xe4\xf2\x42\xb8\xac\x3f\x83\xdd\xfa\xc8\x1d\xea\x35\xdb\x04\xe5\xa5\x0f\xb0\xe2\x0c\x9e\x74\xda\x3d\x20\x64\xe4\x12\x06\x58\x97\x47\x8f\xed\x98\x34\xac\x5c\xeb\x00\x8f\xc9\x59\xd1\xf4\x1e\x17\x29\x3a\x5d\x53\x7a\xab\x4d\xa2\x48\x91\x58\x9e\x8d\x82\x90\x0d\x63\x9e\x28\x1e\xf4\x10\xcb\x69\xbc\x63\xc5\x32\x06\x58\xde\xc5\x33\x26\x53\x20\xe5\xa3\xb8\x66\x5b\x06\x5c\xee\xcc\x89\x5b\xcc\x18\x29\x57\x06\x3f\x6b\xf9\xa0\x85\x5a\x59\xf0\x5e\xcb\x6f\x13\x77\x3f\x53\xbb\x27\xdb\x2a\x7a\x19\xe0\x94\xfe\x05\x00\x00\xff\xff\xdb\x1e\xe2\x77\x57\x0d\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 3415, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x31\x53\x23\x31\x0c\x85\xfb\xfc\x8a\x9d\x49\x73\x57\x9c\xf6\x08\x05\x33\x99\xa1\xa1\xa7\xa2\xa0\x76\x6c\xed\x46\x60\x4b\xc6\xd2\xae\x13\x7e\x3d\x13\x28\x60\x21\x0e\xa5\xf5\xf4\xbe\x27\x5b\x5e\xaf\xd7\x9d\x64\xe4\x5a\xac\xab\xc4\x37\x1d\x1e\xac\xb8\xee\x4f\x8f\xe6\xfb\xc0\x9a\x9c\xbe\x80\x17\x1e\xfe\xae\x4e\xad\xf7\x52\xb0\x23\x1e\x64\xdb\xed\xcd\xb2\x6e\xfb\x7e\x24\xdb\x4f\x3b\xf0\x92\x7a\x5f\xdc\xeb\xf1\x5f\x72\x87\xfe\x91\x38\x48\xd5\x87\x7c\xbc\x8b\xe2\x9f\xb1\xac\x56\x8a\x65\xc6\x72\xdb\x3b\x6f\x34\x3b\x23\x61\xd0\xa8\x90\xc8\x17\x51\x19\xec\x9d\xf0\xd9\x95\x09\x76\xc4\xe3\xb2\xea\x65\x73\xc9\xe4\x4b\x6c\x49\x21\x05\x48\x68\xee\x74\x26\x8f\x4d\x44\x60\x85\xa4\x83\xb1\x57\x5a\x2a\xe3\x99\x79\x46\x88\x34\xe3\xb7\x5a\x94\x9d\x8b\xa0\x2e\x41\x52\x5e\x6a\x84\x7e\x8e\xa4\xd6\x4a\x8f\x32\x12\x9f\x61\x9e\x9f\x48\x6c\xf8\x19\x51\x36\xff\xb5\x3e\x5d\x5d\xa7\xd2\x0a\x31\x98\x4a\xf3\xfe\x46\x09\xa1\x7e\x6c\x6f\xa9\x4c\xfb\xa1\x65\xba\xc0\x9b\x5d\xa4\xf0\xeb\xb6\x6b\xf0\xf9\x92\xe6\x62\xf3\xc9\xaa\x7a\x61\x03\x97\x73\x9b\xde\x6a\x01\x0c\x23\xea\x44\x86\xc0\x68\x5f\x0c\xb5\x2e\x3f\xc1\x5b\x00\x00\x00\xff\xff\xf2\xdd\xe5\x5b\x26\x03\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 806, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\x4f\x6f\xd3\x30\x18\xc7\xf1\x7b\x5f\xc5\x23\xf5\x02\x07\xff\x92\xc7\x7f\xe2\x64\x37\xa0\x05\xf5\xc0\x3a\x65\x43\x3b\x67\xa9\xcb\x02\x59\x1c\x39\x8e\xba\xf1\xea\x51\x0a\x07\x38\x39\xe7\x7c\xf2\xd5\xcf\x96\xb7\xdb\x2d\xf9\xd1\x0d\x97\x10\xe9\xd2\x0d\x96\xdc\x6b\x0c\x0d\xbd\xcb\x5c\x6c\xb3\x73\x17\xdc\xa5\xe9\x7b\xcc\x93\x0b\xef\x37\x8b\xfd\xea\x83\xa3\x6e\x38\xfb\x1b\x7a\x8e\x71\x9c\x6e\xb2\xec\x7b\x17\x9f\xe7\x27\xb4\xfe\x25\x6b\x43\xf3\xeb\x4d\xbc\x34\xaf\xd9\x63\x37\x9c\xfc\x65\xba\x1f\xdf\x3e\xf6\xbe\xfd\xe9\xc2\x66\xb3\x25\x37\x9c\x7d\x68\x1d\x05\x3f\x47\x17\x68\x77\x7b\xbf\xe9\xc6\xd8\x3c\xf5\x6e\x22\x11\x69\x68\x22\x89\x03\xdd\xd5\xfb\xfa\xf8\xed\xe1\x70\xfb\x85\xc4\x48\xb1\x1d\x49\x88\xd3\xe8\x43\x24\xa3\x48\xfc\xa0\x7a\xbf\x3b\xd4\xfb\x4f\x0f\x24\x44\xf4\x62\xf9\x30\x91\x51\xe9\xd2\x7c\x5a\x59\xda\x6c\x29\xcc\xbd\x9b\xfe\x49\x1e\xe8\xf3\xb1\x7e\xfc\x50\xef\x96\xdf\x76\xf5\xf1\x8e\xc4\x89\x58\xc1\x56\x90\xaa\x42\x51\xad\xb0\x65\x0e\x96\x30\x3a\x45\x75\x0e\xe6\x12\x9c\x2b\xd8\x35\x56\x5a\xb0\x96\xb0\x45\x0a\x1b\x06\xeb\x1c\x85\x41\x99\x1c\x71\xb5\x0c\x25\x61\x38\x69\x25\xb8\x28\xc0\x9c\xa3\x48\x87\xff\x62\x99\xc3\x26\x8f\xb7\x60\x5b\x82\x0b\x86\x5e\x35\xe3\x8a\x15\x4a\xb3\x02\x4b\xb5\x4c\x59\xb1\xa2\xd0\xd0\x90\x0a\x79\x26\x93\xc7\xbb\x5a\xa3\x21\xff\x7b\x91\x09\x9a\xae\x1a\x18\x89\xaa\x84\x54\xc9\x6b\xf8\x63\x39\x2f\xc1\xe9\x30\x2b\x0b\x66\x0b\xa9\x0c\x38\xf9\x80\xb8\x62\x48\x65\x21\x97\xb8\x4c\x72\x99\x5b\xe8\x02\x5c\x69\xb0\xfe\x1d\x00\x00\xff\xff\xb8\x1b\xfc\xe2\x69\x04\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 1129, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x3d\x6f\xdb\x30\x10\x06\xe0\xdd\xbf\x42\x80\x97\x76\xf0\x49\xfc\xb0\x15\x07\xe8\xd2\xbd\x53\x87\xce\x0c\x79\x92\x89\x88\xa4\x42\x9e\x2d\xab\xbf\xbe\x70\x83\x7e\x38\x90\xae\xcd\xfc\xbc\xef\xe9\xac\x83\xb5\xdd\x6e\xab\x34\x62\x9c\x32\x55\x93\x8f\x6d\x55\xc6\xb9\xfa\x50\x23\xd9\xda\xc5\x12\x4c\x79\x01\x9b\x62\xf7\x71\x73\x0b\x7e\x49\x19\x2b\x1f\xbb\xf4\x58\x9d\x88\xc6\xf2\x58\xd7\xbd\xa7\xd3\xf9\x09\x6c\x0a\xb5\xcd\xe6\xfb\xbc\x0b\xe6\x5a\x7f\xf3\xd1\xa5\xa9\x7c\x1d\xe7\xcf\x43\xb2\xcf\x98\x37\x9b\x82\xf9\x82\xf9\x53\x6d\x76\x4d\xd3\x08\x30\xbb\x50\xd0\xf5\x08\x11\xa9\xbe\x47\xc5\xa3\xb3\xcb\xea\x06\x98\x5e\x1f\xfb\x73\x99\xdf\x60\x5d\x11\x42\x2b\x18\x52\x84\x61\x88\xd3\x7d\xed\xa6\xb2\xe1\xf5\xc8\xa9\xd6\x9c\xee\x5b\x4e\x0f\xec\xe4\x07\xae\xdb\xb6\xe0\xce\x65\x19\x65\xa3\x85\x80\xc1\xce\xab\x2c\x35\xcf\x7b\x96\x15\xcf\x9a\xe7\x03\xbf\xda\x91\x6b\x0b\xa9\x98\x53\x49\x21\x6f\xc3\x39\x66\x5e\xa9\x14\x8a\xbb\xb4\x14\x4a\x32\xc3\x55\xf3\xb0\xbe\xb7\x52\x47\x06\x35\x73\x0c\xdd\x1c\x38\x6c\xa1\xcb\x66\x05\x75\xcb\x34\xf7\xcc\xb6\xec\x85\x74\xbb\x8a\x29\x8c\x86\xf0\x6a\x4f\x26\xf6\x28\x80\xb2\xe9\x3a\x6f\x83\x89\xa6\xc7\xfc\x26\x3b\x4b\x28\x48\xe4\x63\x5f\xc0\x19\x32\x10\xbc\xcd\xa9\xa4\x8e\x6e\x7f\x5e\x30\xcf\xc6\xc5\x72\xdf\x71\x4f\xfb\x77\x77\xf0\x0c\x97\x94\x09\xaf\x0b\x85\x3f\xa9\x1e\xd3\xbb\x27\xf7\xd3\x75\xf9\x73\xf3\x6b\xd0\x6e\xf2\x91\x7d\x6a\x19\xe7\x88\x24\x79\xc6\x73\x4e\x23\xfe\x95\x59\xda\xa5\xbc\x04\x20\x1c\x30\x20\xe5\x79\x6d\xde\x2d\x60\x53\x08\x26\xba\xff\x09\x67\x74\x09\xfc\x78\x39\xac\x45\x5e\xdf\xeb\x3f\x7f\xe5\x64\xa8\xa4\xf8\x46\x7f\x04\x00\x00\xff\xff\xb5\xb5\x16\x7c\x74\x06\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 1652, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xb1\x6e\xdb\x3c\x10\x07\xf0\xdd\x4f\x71\x80\x97\xef\x1b\x78\xe2\x1d\x49\x91\xca\xd6\xd6\x69\xe1\xa1\x49\xa0\xa4\xc8\xec\xc8\x74\xa3\xd6\x91\x04\x8a\x86\xeb\x3e\x7d\xa1\xba\x69\xd4\x89\xf4\xe0\xc9\x3f\x1d\x4e\xfc\xf3\x4e\xcb\xe5\x12\xfa\xc1\x77\xc7\x10\xe1\xd8\x76\x16\xc6\xe1\x04\xff\x15\x3e\x36\xc5\xae\x0d\xfe\xb8\xd9\xef\xf1\x30\xfa\xf0\xff\x62\x92\x9f\xfb\xe0\xa1\xed\x76\xfd\x15\x3c\xc7\x38\x8c\x57\x45\xf1\xb5\x8d\xcf\x87\x27\x6c\xfa\x97\xa2\x09\x9b\x9f\x27\xf1\xb2\xf9\x51\x3c\xb6\xdd\xb6\x3f\x8e\xf7\xc3\xe9\xfd\xbe\x6f\xbe\xfb\xb0\x58\x2c\xc1\x77\xbb\x3e\x34\x1e\x42\x7f\x88\x3e\xc0\xea\xe6\x7e\xd1\x0e\x71\xf3\xb4\xf7\x23\x88\x08\xdd\x26\x82\x58\xc3\x5d\x7d\x5d\xdf\x7e\x79\x58\xdf\x7c\x02\x31\x40\x6c\x06\x10\x62\x3b\xf4\x21\x82\x51\x20\xbe\x41\x7d\xbd\x5a\xd7\xd7\x1f\x1e\x40\x88\xd8\x8b\xe9\x8f\x11\x8c\x4a\x57\x3a\x6c\x33\x2b\x2d\x96\x10\x0e\x7b\x3f\xce\x4a\xae\xe1\xe3\x6d\xfd\xf8\xae\x5e\x4d\x8f\xad\xea\xdb\x3b\x10\x5b\x20\x85\xd6\x21\x39\x87\xa4\x6d\x1e\x66\xa5\x90\x94\xca\xc0\x8e\xd0\xa0\xc9\x95\x15\xb2\xe6\x94\xd5\x12\x4b\x87\xcc\x8c\x4c\x39\xd8\x4a\x64\x96\xc8\xda\xe5\x62\x42\xd6\x55\x0e\xb6\xc8\x5c\x5e\x88\x8d\xcc\xc0\x44\x0e\x49\x96\x48\x2a\xa9\x0d\x23\xa9\x29\x3b\x87\x2e\x19\xdf\x1c\x27\x9b\x9e\x61\x32\x59\xba\xd4\xc8\x5a\xe2\x05\x98\x90\xa5\xc9\xd5\x86\x50\xeb\x1c\x6c\x1d\x4e\x8d\x1b\xca\xc4\xa4\xed\xd4\x78\xae\x36\x94\x73\xf5\x5e\xf5\xf4\x2b\x73\x71\xa5\x90\xb2\x35\xb3\x42\x4e\xce\xd6\x84\x9d\xc5\x52\x22\xc9\xe4\x05\x29\x0d\x1a\x83\x5a\x23\xc9\xe4\xb8\xcc\x6c\x32\xf0\xb3\x25\x52\x98\x3e\xb8\x99\x4d\xbe\xdc\xd9\xb2\x61\xb4\xc9\xb0\xdf\x6c\x75\x41\x5d\xaa\x92\xf7\x82\xa4\x46\x3d\x75\x6b\xb1\x4c\x66\xf7\x17\x57\xc8\xc9\x96\xff\x60\x66\x97\xb3\x44\xdf\x30\xcb\xe4\x29\xbf\x6a\x65\x91\xca\x64\x7e\x44\x74\x5e\x8c\x55\x46\x28\xff\xe0\xe4\xc0\xce\x34\xe7\x7c\x29\x34\x92\x95\xa8\x7e\x2f\xea\x5f\x01\x00\x00\xff\xff\x5f\x86\xb9\x3d\xf6\x07\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2038, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xbd\x52\xc3\x30\x10\x84\xfb\x3c\x85\x67\xd2\x40\x11\x09\xff\x3b\x99\xa1\xa1\xa7\xa2\xa0\xd6\x6f\xe2\xc1\xd6\x19\x49\x41\x84\xa7\x67\x20\x99\x04\x8a\x78\xd3\x7a\x3f\xed\xed\xad\x6f\xb9\x5c\x66\x34\x19\x97\x7c\xcc\x52\xef\xda\x6c\x3f\x69\x11\x4d\x76\xc7\x4d\x54\x5c\xbb\x30\x8a\xf0\xce\x14\x39\x7b\xbf\xf8\x61\x9f\xc9\x9b\xac\x77\x96\x36\xd9\x2e\xc6\x29\x6c\x38\xdf\xf6\x71\xb7\x97\x4c\xd1\xc8\x95\x17\x5f\x87\xd5\x28\x3e\xf9\x6b\xef\x34\xa5\xf0\x32\x1d\x9e\x06\x52\x6f\xc6\x2f\x16\xc1\xf8\x0f\xe3\x1f\x79\xde\xa8\x72\x95\xb3\x81\xa5\x23\x73\x9c\xf8\xfb\xfe\xc2\xb4\x36\x87\x4c\x57\x49\xc8\xac\x1b\x03\x19\xec\x22\x65\x0d\x19\xa3\x11\x52\x14\xad\xc5\x8c\x68\x31\xa3\x60\x39\x45\xd9\x61\x44\xe3\x38\x75\x8d\xe3\x74\xb0\xe2\xb2\x85\x81\xcb\x75\x83\x90\xca\xc0\x41\x4d\x05\x5d\xba\x5c\x20\x64\xdd\xc0\xf2\x44\x0d\x2f\x42\x58\x38\x48\xec\x99\xa6\xe4\x06\x12\x7a\x0e\x93\xea\x01\x39\x49\xfc\x2f\x95\x84\x2e\x2a\x0e\x7a\x16\xd0\x0d\xbc\xf2\xf3\x42\x63\xaf\x3c\x05\xb2\xf1\x8a\x3e\xe7\x11\x6e\xea\xc5\x56\x70\x23\x0b\x4f\xc6\x9a\x82\x9d\xbe\x5f\x49\x6c\xb7\x4c\x07\x26\xf3\x9b\x32\x9d\x3d\xfe\x33\xce\xc4\x0b\x33\xf3\xfc\x28\x9d\x14\xf2\xdb\x3f\x4a\x4a\x73\x01\xbe\x03\x00\x00\xff\xff\x9f\xd5\x51\xe9\xc9\x05\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 1481, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xcd\x6e\x9c\x30\x10\x07\xf0\xfb\x3e\xc5\x48\x7b\x69\x0f\x1e\x76\x6c\xcc\x47\x6e\x6d\x37\xad\xf6\xd0\x6c\x44\x52\xe5\x4c\xc0\xdb\xd0\x12\x8c\x8c\xd1\x36\x7d\xfa\x8a\x24\x4d\x41\xaa\x34\xf8\xcc\x8f\x11\xf3\x9f\xb1\xd9\x6e\xb7\x60\x7b\xd3\x9d\x9d\x87\x73\xd3\xa5\x30\xf6\x75\xe9\x0d\xbc\x8b\x8c\xaf\xa2\x53\xe3\xcc\xb9\x6c\x5b\x1c\x07\xe3\xde\x6f\x26\xfc\xd5\x3a\x03\x4d\x77\xb2\x17\xf0\xe0\x7d\x3f\x5c\x44\xd1\xf7\xc6\x3f\x8c\xf7\x58\xd9\xc7\xa8\x72\xe5\xef\x27\xf1\x58\xfe\x8a\xee\x9a\xae\xb6\xe7\xe1\xa6\x7f\xfa\xd8\xda\xea\xa7\x71\x9b\xcd\x16\x4c\x77\xb2\xae\x32\xe0\xec\xe8\x8d\x83\xfd\xd5\xcd\xa6\xe9\x7d\x79\xdf\x9a\x01\x84\x87\xae\xf4\x20\x0e\x70\x5d\x5c\x16\xc7\x6f\xb7\x87\xab\x2f\x20\x7a\xf0\x55\x0f\x42\xd4\xbd\x75\x1e\xb4\x02\xf1\x03\x8a\xcb\xfd\xa1\xb8\xfc\x74\x0b\x42\x78\x2b\xa6\x07\x03\x68\xc5\x57\x1a\xeb\x95\x95\x36\x5b\x70\x63\x6b\x86\x59\xc9\x03\x7c\x3e\x16\x77\x1f\x8a\xfd\xf4\xda\xbe\x38\x5e\x83\xa8\x81\x14\xd2\x2e\xc5\x18\xf5\x8e\xa3\x72\xa2\x0a\x29\xcb\x91\xa4\x0e\xd2\x49\x88\xd6\x69\x90\xce\x38\x1d\xef\x30\x4d\x51\xca\x1c\x15\xfb\xd5\xff\xec\x62\x1a\xff\xb5\x89\x46\xad\x91\x54\x86\x44\x32\x04\xc7\x01\x98\x8f\x6e\x86\xb3\xb5\x38\x51\x28\x29\x0f\xc0\x92\xdd\x8e\x39\xa6\x10\xcc\x47\x97\x20\x51\x8e\x14\xc7\x6b\x76\x63\xa1\xd9\xdd\x98\xeb\x8c\x0f\x64\xa6\x73\x36\x11\x52\x31\x52\xba\x43\x4d\x81\x5a\xc6\xec\x1c\x17\x9a\xcd\x64\xa1\xd9\x4c\xde\xb4\x42\xc9\x46\x32\xc3\x6a\x7d\x8f\x19\xee\x22\xc9\x1e\x83\xbf\x9c\x48\x63\xc2\xae\xc9\x9b\x4e\x74\x48\x97\x2f\x7c\x75\x9f\xcf\x5c\xb3\x0b\xbe\xe4\xec\x55\x42\x3a\x45\x9d\x60\x9e\x20\x49\x1e\xe7\x84\x52\x49\xcc\xa6\x20\x03\x70\xc2\xcf\x67\x86\xf9\xbc\x5f\x31\xa9\x7c\x55\x8b\x0b\xce\xcf\xfe\x99\xc7\x98\x4a\xa4\x6c\x65\xf1\x57\xcd\x1f\x9e\xb9\x5e\x99\xe0\x8b\xe6\x8f\xb1\x9c\x7e\xa6\xd3\x35\x11\xa3\xce\xfe\x04\x00\x00\xff\xff\x7a\xc9\xc9\x10\x9a\x08\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 2202, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x4f\x6f\xd3\x40\x10\x05\xf0\x7b\x3e\xc5\x48\xb9\xc0\xc1\xcf\x3b\xfb\xd7\xee\x0d\x48\x41\x39\xd0\x54\x6e\x51\xcf\xae\xb3\xa1\x86\xd4\xb6\xd6\x1b\xa5\xe5\xd3\xa3\x8d\x2a\x01\xa7\x35\x67\xff\x3c\x7a\x33\x7a\xf6\x7a\xbd\xa6\x71\xf2\xc3\x39\x44\x3a\xf7\x43\xc5\xe4\x5f\x62\x68\xe9\x5d\xe9\x63\x57\x1e\xfa\xe0\xcf\xed\xf1\x88\xd3\xec\xc3\xfb\x55\xc2\x5f\xc7\xe0\xa9\x1f\x0e\xe3\x15\x3d\xc5\x38\xcd\x57\x65\xf9\xbd\x8f\x4f\xa7\x47\x74\xe3\x73\xd9\x85\xf6\xd7\x6b\xf1\xdc\xbe\x94\x0f\xfd\xb0\x1f\xcf\xf3\xdd\xf4\xfa\xf1\x38\x76\x3f\x7d\x58\xad\xd6\xe4\x87\xc3\x18\x3a\x4f\x61\x3c\x45\x1f\x68\x73\x73\xb7\xea\xa7\xd8\x3e\x1e\xfd\x4c\x45\xa4\xa1\x8d\x54\x6c\xe9\xb6\xb9\x6e\x76\xdf\xee\xb7\x37\x5f\xa8\x98\x28\x76\x13\x15\xc5\x7e\x1a\x43\x24\xa3\xa8\xf8\x41\xcd\xf5\x66\xdb\x5c\x7f\xba\xa7\xa2\x88\x63\x91\x1e\xcc\x64\x54\x7e\xd2\x69\xbf\x70\xd2\x6a\x4d\xe1\x74\xf4\xf3\x5f\x23\xb7\xf4\x79\xd7\x3c\x7c\x68\x36\xe9\xb5\x4d\xb3\xbb\xa5\x62\x4f\xac\xe0\x6a\x48\x55\xc3\xd6\x0b\x6c\x25\xc0\x12\x46\xe7\xa8\x16\x60\xae\xc0\x42\xc1\x2d\xb6\x16\xac\x44\x4e\x1b\x06\x6b\x01\x6b\x50\x65\x53\xbc\x59\x96\x0e\x5c\x67\x73\x5c\x34\x43\x49\x18\xce\x5a\x09\xb6\x16\xcc\x02\x36\x1f\xe3\x0d\x4b\x01\x97\x4f\x91\x70\x0d\xc7\x60\x93\x3f\x86\x04\xbb\x0a\x6c\x19\x7a\x51\xe6\x0b\x56\xa8\xcc\x02\x2c\x55\x8a\xb2\x20\xb2\xd5\xd0\x90\x0a\xa2\x94\xd9\x5b\x5c\xac\xd1\x90\xff\xb4\x3d\x43\xf3\x53\x0d\xd2\x76\xa2\x82\xcc\xb6\xf8\x8f\x35\xf9\xc6\x0b\x0d\x6d\x90\xda\x99\x3f\x03\x2b\x4e\x6b\xc1\xf2\xa2\x4b\xb0\x72\x60\x76\x90\xca\x80\x6d\x56\x1b\x07\x63\xc0\x4a\xa7\x4a\x2f\xd6\x06\x2c\xab\xff\xd1\xf9\x0f\x90\x6b\x86\x54\x0e\x52\x54\x60\x99\x0d\x2e\x85\x4e\x7f\x18\xae\xdd\xa2\xab\x48\xe1\xa0\x2d\xb8\x4e\x7b\xfe\x0e\x00\x00\xff\xff\xe9\x28\x98\xd3\xda\x05\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 1498, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xcf\x8e\x9b\x30\x10\x06\xf0\x7b\x9e\x02\x29\x97\xf6\x10\x83\x0d\x49\x9c\x95\x7a\xe9\xbd\xa7\x1e\x7a\x9e\x9a\x81\x58\x8b\xff\xac\x3d\x84\xd0\xa7\xaf\xd8\x4a\x55\x53\xad\x27\x57\x7e\x1f\x30\x7c\x23\xe1\xfd\x7e\x5f\x85\x88\x7e\x49\x54\x2d\xd6\x6b\x59\xe5\xb8\x56\x9f\x6a\x24\x53\xf7\x3e\x3b\xc8\x6f\xc2\x04\x3f\x7c\xde\x6d\xc9\x6f\x21\x61\x65\xfd\x10\x5e\xaa\x2b\x51\xcc\x2f\x75\x3d\x5a\xba\xce\x3f\x85\x09\xae\x36\x09\x7e\xad\x07\x07\xf7\xfa\x87\xf5\x7d\x58\xf2\xf7\xb8\x7e\x9d\x82\x79\xc5\xb4\xdb\x65\x4c\x37\x4c\x5f\x6a\x38\x34\x4d\x23\x05\x1c\x5c\xc6\x7e\x44\xe1\x91\xea\x47\x54\x1c\xb6\x1c\x76\x1c\x1e\x39\x3c\x71\x78\xe6\x50\x73\x78\x61\x50\x36\x1c\x72\x0d\xc9\x72\x43\x1f\x5d\x35\x7d\x96\x4a\x5e\xc4\x14\xbc\x98\x26\xbf\x7c\xa0\x4a\x73\xda\x75\x9c\x9e\x8e\x9c\x9e\x5b\x4e\x35\x7b\xaf\x3e\x97\x55\xbd\x6f\x34\x53\x91\xbb\xa6\x13\x93\x59\x8b\x7c\x54\x2c\x6b\x8e\xa5\x52\xcc\xe0\x1b\x33\x6d\x2b\xa9\x8e\x27\x96\xcf\xcc\x36\x94\x54\x5a\xb2\x7c\x61\x1a\x6f\x65\x53\xfe\xac\xb6\xbd\x94\x51\x4b\x66\x28\xdd\x2a\x06\xbb\xa6\x84\xc1\x45\x20\xbc\x9b\x2b\xf8\x11\xa5\xa0\x04\xc3\x60\x8d\x03\x0f\x23\xa6\xc7\x2c\xce\xe2\x16\x12\xe1\x5d\xf4\x40\x20\x9c\x35\x29\xe4\x30\xd0\xfb\x8f\xe7\x6f\x2a\x23\x91\xf5\x63\x3e\x2c\xd6\xf3\xc1\xb8\x7a\x24\xc5\x33\x4c\xc4\x07\x70\x4e\x21\xe2\x3f\x19\x78\x85\xde\xe7\xc7\xc9\xf3\x9b\x13\x84\x13\x3a\xa4\xb4\x16\x9f\x47\x40\x79\x40\x25\xe6\xd8\x03\xe1\xd3\xd8\x92\x4b\x91\xed\x55\x6c\x93\x5b\xc0\x04\xe7\xc0\xf7\xcf\xe7\xfa\xd3\xf9\xd3\x3a\xb7\x93\x43\xd8\x78\x3b\xfd\x17\xf8\x1d\x00\x00\xff\xff\xeb\xd7\x16\x02\x5e\x06\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1630, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x3d\x6f\xdb\x3c\x10\x07\xf0\xdd\x9f\xe2\x00\x2f\xcf\x33\xe8\x6f\xde\x91\x14\xc5\x6c\x6d\x9d\x16\x1e\x9a\x04\x4a\x8a\xcc\x8e\xad\x34\x6e\x1d\x4b\x90\x68\xb8\xe9\xa7\x2f\x98\x36\x89\xba\x94\xd4\xe0\xc9\x3f\x1d\xee\x74\x2f\x9a\xcf\xe7\xd4\x76\xcd\xe1\xd4\x07\x3a\xed\x0e\x15\xd3\xd0\x3d\xd1\x7f\x8b\x26\x6c\x16\xf7\xbb\xbe\x39\xad\xf7\x7b\x1c\x87\xa6\xff\x7f\x16\xe9\xe7\xb6\x6f\x68\x77\xb8\x6f\xcf\xe8\x21\x84\x6e\x38\x5b\x2c\xbe\xee\xc2\xc3\xf1\x0e\x9b\xf6\x71\xb1\xe9\xd7\x3f\x9f\x8a\xc7\xf5\x8f\xc5\xed\xee\xb0\x6d\x4f\xc3\x75\xf7\xf4\x7e\xdf\x6e\xbe\x37\xfd\x6c\x36\xa7\xe6\x70\xdf\xf6\x9b\x86\xfa\xf6\x18\x9a\x9e\x96\x17\xd7\xb3\x5d\x17\xd6\x77\xfb\x66\xa0\x22\xd0\x61\x1d\xa8\x58\xd1\x55\x7d\x5e\x5f\x7e\xb9\x59\x5d\x7c\xa2\xa2\xa3\xb0\xe9\xa8\x28\xb6\x5d\xdb\x07\xb2\x9a\x8a\x6f\x54\x9f\x2f\x57\xf5\xf9\x87\x1b\x2a\x8a\xd0\x16\xf1\x8f\x81\xac\x4e\x47\x3a\x6e\x33\x23\xcd\xe6\xd4\x1f\xf7\xcd\x30\x0a\xb9\xa2\x8f\x97\xf5\xed\xbb\x7a\x19\x1f\x5b\xd6\x97\x57\x54\x6c\x89\x35\x5c\x05\xd1\x16\x2c\x65\x06\xae\x18\x16\x7f\x65\xfa\x2f\xe9\x21\x46\x52\x56\x34\x7c\x05\xe3\xc1\x26\x87\xfa\x67\x2a\x9c\xb2\x46\xc1\x39\x88\x94\x10\xe3\x27\x60\xab\x72\x71\x05\x9f\x2c\xce\x0a\x58\x57\x60\x53\xa1\x72\x53\x70\x32\xe5\x11\x66\x9b\xa5\x4b\x03\xd1\x0c\xb1\xb9\xd8\x28\xe4\x47\x36\x0c\x51\xd9\xa1\x2d\xc3\x24\xdb\x1d\xb1\x8b\x25\xba\x98\x4b\xae\xb6\x0c\xe1\xac\xc6\x44\x1d\x7f\xc9\xc1\x7f\xc1\x5e\x83\xb3\xb5\x88\x86\x24\x37\x25\xe2\x2a\x86\x35\x60\x97\xa7\x1d\x4a\x05\x56\x39\xe3\x24\x5a\x83\xbd\xcf\x59\x81\xd2\xc2\x5a\x18\x03\x56\x55\x9e\x65\x8e\x79\x4f\xb0\xc9\xa6\x8c\x6c\xf2\x55\xfc\xb6\x62\x05\x66\x82\xf5\x13\x2c\xfb\xe4\xcc\xbd\x61\x51\xc9\xea\x58\x19\x98\x58\x9a\x43\x99\xbe\xb5\x2f\xd8\x23\x7d\xeb\xfe\xe0\x78\x92\x32\x6e\xf3\x1b\xce\x4f\x5a\xb4\x03\x97\xc9\x21\x62\x66\x88\x30\xc4\x83\x75\x72\xbf\x47\x5a\x6c\x5a\xeb\xb8\x22\x0a\x5a\x65\xe5\x3d\xd6\x19\xdf\xab\x91\x9e\x94\x49\x46\x73\xe2\xab\xe3\xf2\xb9\x95\x9c\xfe\xc6\xb1\x75\xb0\x25\xd8\x1b\xb8\x74\x95\x23\x9c\x2e\x72\x84\xd3\x69\x78\x86\x68\x0f\xab\xc0\xc9\x7b\x30\xc2\x2e\x79\x96\x5e\xb1\x80\x55\x72\xc3\x5e\xb5\x81\x95\x5f\x01\x00\x00\xff\xff\xf1\x31\x40\x4c\xe9\x09\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2537, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd4\xbf\xae\x9b\x30\x14\x06\xf0\x3d\x4f\x81\x94\xa5\x1d\xae\x8d\x8d\xc9\x85\x48\x5d\xba\x77\xea\xd0\xd9\x7f\x09\x2a\xd8\xc4\x76\x42\xd3\xa7\xaf\xd2\x44\x8d\x2a\xdd\xe4\xf3\x8a\x7f\x7c\xc6\xe7\xf8\xb0\xdd\x6e\xab\xb0\x58\xbf\xc6\x5c\xad\xa3\xef\x58\x75\x5a\x8c\xcc\xb6\xfa\x44\x6d\xd6\xd4\xf8\x34\xcb\x74\x24\x3a\x78\xf7\x79\x73\xc5\xdf\x42\xb4\xd5\xe8\x5d\xd8\x57\x87\x9c\x97\xb4\xa7\x74\x18\xf3\xe1\xa4\x88\x0e\x33\xd5\x51\xfe\xbe\xbc\xcd\xf2\x17\xfd\x31\x7a\x13\xd6\xf4\x7d\xb9\x7c\x9d\x82\xfe\x69\xe3\x66\x93\x6c\x3c\xdb\xf8\x85\xb2\xba\x7e\x7f\x63\x64\x22\xeb\xcd\xdc\x76\xfc\xfb\xfe\xc3\x30\xa6\xa1\x69\xfa\x1a\x9a\x77\xdd\x42\xd3\x9b\x0e\x1a\xd9\x70\x6c\xba\x06\x1a\x6d\xf0\xb9\x4c\xdd\x63\xc3\x1c\x36\x02\xe7\xd8\x1a\xd7\xc7\x29\x85\x0c\x67\x1d\xac\x0f\xe7\x76\x07\x4d\xd3\x0b\x68\x5a\x65\xa1\xd9\x29\x58\xe7\xc6\x41\x22\x60\x43\x85\x34\x88\xec\x18\x12\x7d\x07\x1b\x25\x4f\xc4\x84\xd5\x4f\x41\x1a\xc0\xce\xa2\x48\x2a\x0e\x1b\xaf\x2c\x9c\x2f\x35\x5c\xf7\x93\xc4\x4c\x64\x4d\x64\x1e\x75\x0c\x29\xb8\xfc\x11\xb2\x33\x40\xac\x28\x8a\x15\x65\xf1\xa2\x2c\x5e\x94\xd5\x14\x65\x35\x45\x59\xa2\x28\x4b\x14\x65\xb5\x45\x59\x6d\x41\x96\xae\xe1\x24\xe8\x3c\x99\x97\xc0\x08\x78\x59\x4a\xae\xa5\x83\xbf\x11\x07\x67\xc5\x59\x4e\xee\xcf\x9f\x1c\xf8\x2a\xd6\xe3\xcb\xd5\xa7\xc5\x72\x43\xe9\x88\xfd\x0b\xf8\xdf\x78\x9b\x1f\x26\x4d\x09\x7c\x6b\xe1\x66\x70\xe9\xbe\x12\xe2\x40\xff\x04\x00\x00\xff\xff\xbe\x24\xa9\x95\xf6\x07\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 2038, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xc1\x6e\xdb\x30\x0c\x06\xe0\x7b\x9e\x42\x40\x2e\xdb\xc1\xb4\x49\x49\x96\xdc\xdb\xb6\x74\x43\x0e\x6b\x0b\xb7\x43\xcf\x69\xe2\xae\xd9\xd2\xd8\x70\x14\x64\xdd\xd3\x0f\x4a\xd2\x56\x06\x06\x90\x3e\xe7\x8b\xf1\x9b\x22\x29\x4f\xa7\x53\xd5\x76\xcd\xf6\xd0\x07\x75\x58\x6f\x3d\xaa\x7d\xb7\x5a\x84\x46\x7d\xc8\x9b\xb0\xcc\x1f\xd7\x7d\x73\x58\x6c\x36\xb0\xdf\x35\xfd\xc7\x49\xd4\xdf\xdb\xbe\x51\xeb\xed\x63\x7b\xa1\x9e\x42\xe8\x76\x17\x79\xfe\x73\x1d\x9e\xf6\x0f\xb0\x6c\x9f\xf3\x65\xbf\xf8\xfb\x92\x3d\x2f\xfe\xe4\xf7\xeb\xed\xaa\x3d\xec\x6e\xbb\x97\xcf\x9b\x76\xf9\xbb\xe9\x27\x93\xa9\x6a\xb6\x8f\x6d\xbf\x6c\x54\xdf\xee\x43\xd3\xab\xd9\xd5\xed\x64\xdd\x85\xc5\xc3\xa6\xd9\xa9\x2c\xa8\xed\x22\xa8\x6c\xae\x6e\xea\xcb\xfa\xfa\xc7\xdd\xfc\xea\x9b\xca\x3a\x15\x96\x9d\xca\xb2\x55\xd7\xf6\x41\x59\xad\xb2\x5f\xaa\xbe\x9c\xcd\xeb\xcb\x2f\x77\x2a\xcb\x42\x9b\xc5\x1f\x76\xca\x6a\xfe\x49\xfb\x95\xf0\x49\x93\xa9\xea\xf7\x9b\x66\x97\x3c\x72\xae\xbe\x5e\xd7\xf7\x9f\xea\x59\xfc\xdb\xac\xbe\xbe\x51\xd9\x4a\xa1\x86\xd2\x83\x77\x80\xce\xca\x6c\xa5\x01\x8b\x4a\x60\x9d\x01\x74\x15\x20\x3a\x09\xf6\x80\xa5\x07\xd2\x85\x10\x7b\x03\xc6\xc8\x2c\xe9\x02\x50\x4b\x30\x16\x0e\x0c\x58\x36\x03\x45\xaa\x01\x7d\x05\x48\x6c\xdd\x06\xba\x1c\xa3\x2d\x5b\xba\x81\xf6\x9c\x36\x05\x38\x07\x44\x15\x68\x36\xf5\xbb\x1d\x34\xe6\x7f\xad\x25\x40\xaf\xc1\xc4\x36\x62\x5f\xf0\x8c\x11\x3d\xa0\x43\x81\x8e\x19\xd0\x21\x50\x41\x9c\x2e\x0d\x18\x20\x27\x38\xc2\xd2\x42\x0c\x52\x78\x40\xfe\xfd\x22\xb6\x80\xda\x43\x91\x13\xdb\x48\x67\x5d\x6a\x20\x64\x07\x25\xc1\x24\x0a\xfd\x8a\xd9\xca\xa5\x98\x2f\xdc\x11\x93\x21\x20\xcb\xbf\x60\x09\x88\x15\xa0\x31\x92\x16\x1d\x68\xb6\x45\x53\xed\xf9\xea\x25\xba\x12\xac\x0e\x04\xb2\x1a\xd0\x48\x0e\x1d\x75\x5c\x60\x05\x58\x04\xf4\x82\x1d\x96\x68\xf6\x2d\x53\x2d\xc9\xfd\xa6\xc9\xb0\xf3\x35\xd0\x63\x72\x93\x91\xe7\xd6\x40\x82\x3b\xe0\x0d\x4b\xd6\xfa\x19\xcb\x66\xec\x95\x23\xc6\xc6\x1d\xa5\xc5\x05\x8c\xba\x14\x07\x3f\x6a\x76\xce\xde\x74\x69\xc7\xd4\xfb\xc4\xc5\x15\x3f\x72\xcb\x6e\x88\x21\xe7\x07\xc2\xba\xd3\x1a\xd4\x40\x05\x7f\x42\x27\x4d\xa6\x00\x7e\x8e\x13\x2c\xb8\x22\x13\x2d\x58\x9a\x47\x5d\xc6\xcb\x0c\x35\x5f\xf0\x04\xcb\x52\x9f\xb0\x19\x13\xc3\xf0\x27\x93\xe0\x31\x99\x05\x2d\x72\xc2\x55\x09\xfc\x9e\x4f\xac\x34\x44\x55\x02\x92\xac\x93\x4e\x98\xbf\x3f\xb0\x42\x20\x4d\xe0\x0b\xc1\x97\x48\x8a\xf9\xcc\xef\x58\x30\xe7\x09\xe6\xc7\xfc\x8c\x51\x57\x80\x7e\x14\x97\x0c\xe2\x80\xf3\xc7\x78\xe4\x06\xdc\xf1\xc3\x6b\x94\xe6\x47\x31\xd5\x6c\xc1\x29\x7e\x5f\xc7\x2b\xdb\x08\x4e\x27\xc1\x25\xfe\x0b\x00\x00\xff\xff\x4c\x6f\x6a\x81\xe6\x0d\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 3558, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x97\xcd\x6e\x64\x27\x10\x46\xf7\x7e\x8a\x96\xbc\xae\xcf\x54\xf1\xef\x65\xf6\x59\x65\x91\xb5\xe3\x38\x19\x2b\x19\xb7\xe5\xe9\x68\x66\xf2\xf4\xa3\xe2\xba\x6f\x53\x3d\x80\x17\x96\x38\xe6\x34\x2a\xa0\x80\xba\xb7\xb7\xb7\x87\xdf\x9f\x5f\xfe\x3c\x7e\xfd\xf2\xdb\xeb\xf7\x5f\xfe\x3d\x3e\xfe\xf3\xf4\x76\x78\x95\xd7\xc3\xd7\xe7\x17\x76\x87\xa7\x6f\xa7\xb7\x87\x1b\xb5\x7e\x3d\xbe\x3d\x1d\x9e\x5f\xfe\x3a\xde\x1f\x3e\x9d\x4e\xaf\x5f\xee\xef\xee\xfe\x7e\x3e\x7d\xfa\xef\x0f\x3c\x1e\x3f\xdf\x3d\xbe\x3d\xfc\xff\x9d\x3e\x3f\x7c\xbb\xfb\x69\xb4\x9b\x9b\x9f\xfe\x75\xcf\x1e\xb9\x42\x7c\x45\xaa\xd4\xc3\xd2\x2d\x42\x3d\x8c\xdd\xe2\xc0\x82\x18\xa8\x6b\x8f\x4d\x76\x19\x1e\x2c\x85\x7a\x98\xbb\x11\xc5\x51\xd7\x5e\x9a\xa5\x33\x17\x63\x6a\x90\xbb\xda\x60\xee\x0a\x43\xdc\x1e\xc1\x46\x03\x5b\x3c\x6a\x42\x14\x44\x4f\x5d\x7b\x6a\x8a\x2b\xfa\x47\x86\x26\x76\x06\xe7\x02\xce\xdb\xc8\x3b\x8d\x6d\x76\xba\xfc\x02\xce\x91\x2c\x0e\xfc\xe0\x90\x33\x44\x02\x0a\x75\xed\xa5\xc9\x4c\x3d\xac\xdd\x10\xc9\xd0\xd2\x96\x18\xc8\xd0\xc2\x8e\x90\x70\x89\xb9\xd1\xc2\x4e\x90\x50\xc9\xd0\xda\x8e\x8e\x0c\xcd\x6d\xef\x70\x99\x64\x83\xb1\x5b\x34\xcf\x33\x62\x5b\xbd\x1d\xc6\x6e\x75\x60\x9f\xd0\xd4\x73\x7b\x6d\xd6\x5e\x9d\xcc\xed\xbd\x5b\x1c\xf5\x30\x76\xd9\x31\x42\xd2\x4c\x23\x43\x13\x9b\x03\x24\x30\x38\xb4\x90\x3b\x9c\xf9\x19\x5c\x1d\xb2\x90\xa1\x99\x5d\xc0\xce\x23\x53\x0f\x13\x57\x0f\xa8\x9e\xd5\xd8\x56\xa4\xc3\x99\x9f\xc1\x41\x90\x13\x19\x1a\xd8\x51\x27\xe4\x90\x22\x4a\xa0\x1e\xe6\x6e\x1b\xaf\x66\xb2\x38\xf3\x19\x9a\x6b\x52\xc9\xd0\xdc\xf6\xa2\xd9\xd4\xc3\xc8\x15\x70\x0a\xe0\xca\x88\x91\x0c\xcd\x6d\x91\xdc\x2e\x27\x8b\x33\x3f\x81\xd9\x21\x05\x32\xb4\xb0\x45\x0f\x0b\x19\x9a\xd9\x15\x99\xc1\xd1\x91\xa1\x89\xad\x9d\x2d\xa7\x37\xfd\x82\x33\xbf\x80\x13\x23\x30\x19\x5a\xd9\x1e\x25\x92\xa1\xb1\x2d\x5e\xe3\x7d\x9f\xe6\x0e\x0b\xb7\x6a\x0a\xf6\x30\x77\x53\x3d\xaf\xc8\x85\x06\x76\x0a\x08\x10\x0f\x47\xe7\x96\x0c\xf7\xbc\xf5\x46\xbd\x6f\x3d\x75\xed\xa5\x19\x3a\x73\xb4\xd3\x29\xea\xf3\xd7\xde\x1e\xa6\x1e\x96\x6e\xf5\xd4\xc3\xc2\x2d\x90\x4a\x3d\x2c\xdd\xd8\xbb\xc3\x9b\x40\xbb\xe3\x36\xd4\x16\xc3\x19\xa6\xae\x6c\x2b\xbb\xb7\x27\x6b\xbb\xf5\x47\x41\x38\x8f\xbb\xc1\xa8\xde\x70\x01\xc1\x41\xd8\xc1\x0b\x19\x5a\xd9\x0c\x1f\xc9\xd0\xcc\x0e\xad\x32\xcb\xef\x63\x9f\x69\x61\x17\x48\xa0\x1e\xd6\x6e\xe9\xdd\x61\x45\xb5\x77\xb3\xf3\x64\x68\x66\x47\xe8\x7d\x9f\x33\x19\x9a\xd8\xc2\x61\x7b\xb2\x99\x2c\x4e\xfd\x08\x0e\xdb\x85\x71\xc5\xc3\x7a\x90\xf5\x5c\x20\x31\xb4\x1c\xdc\x61\xbc\xf3\xec\x03\x38\x3b\x70\x89\xc8\xea\xf7\xb8\xf4\x4b\xab\x6c\xae\x78\xf4\x8b\x98\x35\x9f\x62\xd2\x70\xf6\xf6\x24\x9a\xad\x9f\x5d\x45\xa6\x1e\xd6\xae\xe8\xfe\x1b\xfc\xc8\x4f\xd6\x1f\xdd\x62\x46\x28\xd6\x5f\xcc\xb3\x09\xde\x91\xc5\x85\x2f\x15\x9a\x08\x3d\x2d\x6c\x5d\x6e\x7f\x89\x7e\xc3\x8f\xfc\x62\xfd\x55\xf4\x2a\x04\x47\x16\x57\x7e\xdc\xbe\x91\x0c\x8e\xfc\x54\x90\xbc\x9e\x8b\x5c\xa9\x87\x91\x5b\x19\xe2\xdb\x5b\x0e\xd6\xad\xb2\x3c\xfd\x45\xdd\x6a\xa8\x9a\xe9\x8a\x47\x5f\x20\x2e\xe8\xb7\x22\xd7\x0c\x47\x1d\x8c\xf3\x52\x05\xd6\x8b\x59\xcb\x9d\x10\xe8\x8a\x87\xbf\xc8\x5a\x8a\xea\x80\x42\x3d\xcc\x5d\xad\x5e\xa5\x92\xa1\x85\x1d\xb5\x5c\x8c\x64\x71\xe1\x57\xdd\x4a\x32\xb4\xb6\x25\x92\xa1\xb5\xed\x3d\x19\x5a\xdb\xc1\x91\xa1\xb9\xad\x8f\x56\xdd\xe3\xde\x68\x62\xa7\xd2\x2a\x35\x7d\xf6\x2d\xfe\x08\x00\x00\xff\xff\x57\x72\x0b\xfc\xc8\x10\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 4296, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x9a\x3d\x93\x1e\xb7\x0d\x80\x7b\xff\x8a\x9b\x51\x0d\x88\x00\xbf\x55\xa6\x4f\x95\x22\xb5\xa3\x38\xb1\x26\xb1\xee\x46\x52\xc6\x51\x7e\x7d\x06\xdc\x7d\xf7\x05\x64\x02\x5b\xc8\xc3\xc7\x7c\x8e\x87\xe5\x82\x9f\x7b\xef\xde\xbd\x7b\xf9\xeb\xa7\xcf\x7f\x7f\xfd\xfd\xeb\x5f\xde\xbe\xff\xe9\xdf\xaf\x1f\xff\xf5\xcb\x97\x97\x37\x7e\x7b\xf9\xfd\xd3\x67\x4a\x2f\x5f\xdf\xbe\xff\x24\xce\x9f\x5f\xbf\xfc\xf2\xf2\xe9\xf3\x3f\x5e\x3f\xbc\xfc\xfa\xed\xdb\xdb\xd7\x0f\xef\xdf\xff\xf3\xd3\xb7\x5f\xff\xf3\x37\xfc\xf8\xfa\xdb\xfb\x8f\x5f\x7e\xfe\xdf\x77\xf8\xed\xe7\xff\xbe\xff\x43\x5b\x3f\xfd\xf4\x87\xff\xf5\x81\x32\xb6\x81\x83\x71\xc0\xb3\xe8\x7b\x03\x89\x27\x68\xd8\xbb\xbd\x21\xd3\x40\xa2\x0e\x86\x02\x7b\x22\x4d\x02\x43\xa1\xcd\x94\xc0\x90\x63\x0f\xa4\xde\x91\x4a\x01\x43\x81\x2d\xbf\x7b\x82\x21\xdf\x1e\x09\x6b\x02\x0d\xa1\x3b\xb5\x3b\x23\xb7\x20\x8d\x06\x86\x02\xbb\x21\xd7\xeb\x09\x0f\x0a\xec\x8e\x75\x80\x06\xd7\xe5\x5c\x91\xf8\x11\xc7\x49\xa1\xcd\xa5\x83\xa1\xbd\x3d\x08\x2b\xd6\x0c\xcf\xa2\xef\x4d\xe4\xc2\xa0\x61\xef\x52\xea\x78\x75\xc4\x05\xbe\x5b\x58\xcb\x07\x6d\x6c\xce\x38\x3b\x36\x42\xca\x1d\x34\xb8\x2e\xa7\x89\xf3\xe1\x1e\xe0\xb8\x13\x29\x21\x11\xa8\x72\x60\x4e\x2c\x05\x34\x84\x6e\xd3\x6e\x0b\x5c\x6a\xf2\x0f\x0c\xf9\x36\x13\x72\xea\x60\x68\x6f\x53\x62\x2c\xc8\x35\x83\x06\xdf\x65\xc2\x02\xaa\xec\x9b\x54\x2b\x52\x49\x60\xd1\xf3\x33\xd2\xe0\x95\xc6\x16\x37\x7e\x49\x32\xb5\x31\x4b\x00\x0c\x86\x1c\x5b\xe6\x9e\x86\x3d\x83\x86\xd0\x95\x29\xd4\x50\x68\x73\x25\x30\x14\xd8\x03\x1b\x83\x86\xc0\x95\x79\xad\x83\x21\xdf\xe6\x84\xa5\x81\x86\xc0\x25\xe4\x7c\x3d\xe1\x41\x81\xcd\x92\x9e\x60\x28\xb0\x33\xaa\xa6\x05\x42\x97\xe6\x00\x43\x7b\xbb\xa7\xf5\x50\x5c\x96\xfd\x24\xc7\x6e\x48\x48\x7d\x75\xc7\xa3\xec\x9b\x8c\x05\x9e\xc5\xc8\xa3\xe3\xdd\x5d\xe0\xb8\x1d\x99\x07\x96\xf5\xea\x2e\x08\xdd\xa1\xdd\x11\xbb\x93\x41\x83\xef\x66\x79\x53\x04\x86\xf6\xf6\x90\xf1\x36\xb1\xac\xf7\x76\xc1\xde\x25\x99\xe4\x91\x6b\x05\x0d\xbe\x4b\x09\xfb\x00\x0d\x81\x4b\x38\x33\x68\x08\xdc\x82\x54\x27\x18\xf2\x6d\xe6\xf3\x7d\x5c\x10\x3c\x5d\x91\x55\x4f\x83\xe7\x16\xa4\xb2\x46\x1b\x58\xf4\xfc\x8a\x24\xcb\x83\x2a\x7b\xe6\xda\x00\x21\x97\xb3\xe5\x0b\x03\xbf\x12\xf2\x04\x43\x8e\xcd\xb4\x9a\xa3\xb1\x32\x49\xe1\xc6\xaf\x6b\xb8\xcb\x4b\x4e\xa0\xca\xa1\x49\xca\xdc\x65\xdc\x59\x2b\x63\x68\x80\x86\xd0\x7d\x06\xb0\xc0\x77\x7b\xc3\x7c\xb9\x0b\x62\x97\xb4\x1b\xc4\x2b\xd5\xac\xdd\xa8\xbf\x06\xe6\x02\x1a\x62\xb7\x6a\x77\x37\x9a\x54\x75\xd3\xee\x6e\x5e\xbb\xba\x29\x21\x75\x30\x74\x63\x0f\x63\x87\xef\x23\x21\x4d\x63\xef\xb2\xed\xaa\x2f\xa6\xed\x72\xd3\x76\x31\x6d\x97\xdb\xb6\x75\x6a\x14\x3f\x37\xf2\x40\x2a\x6b\xb2\x35\x74\x63\x4f\x63\x7b\x91\x9c\xf5\x32\x25\x59\x74\x7c\xd9\x9e\xca\xde\xfb\x78\x99\x17\x79\xf6\x1a\xfc\x98\x33\x18\x8a\xed\x33\x94\x8b\x22\x5b\xb6\x88\x15\x2c\x06\x7e\x5d\xf3\x98\x21\xcf\xee\x6b\xcb\x30\x8e\x81\x73\x51\x6c\x53\xe9\x60\x31\xf2\x33\xd2\x39\x7e\x9e\xe8\xf9\x03\x25\x9d\xfa\x19\xfb\x83\x3c\x7b\xca\x59\x9b\xce\x09\xe2\xa2\xc0\xce\x98\x41\x95\x03\x53\x0e\x33\xa0\xc1\x77\x89\x33\x96\x01\x86\x02\x7b\xc8\xef\x06\x43\x8e\xdd\x8f\xc5\xfe\x48\x93\x07\x78\x6e\x91\x65\xf3\x91\xaf\x17\x79\xb6\xa4\x7f\x5f\xeb\x97\xc5\xc0\x97\x15\x8b\x18\x2c\x06\xbe\xfc\x6b\x60\x28\xb0\xa7\xa4\xd1\x53\x3f\x30\xf2\xf3\x3a\x70\x59\xf4\x7d\x49\x3b\xce\x60\xc8\xb1\xa5\x97\x65\xab\xd0\x0f\xfd\x89\x9e\x2f\x5b\x1b\x49\xbc\x23\x9a\x27\x46\x7e\x45\x4e\xca\x5f\xe8\xf9\x1d\x5b\x92\xe3\x35\x18\xda\xdb\xcc\x73\xa5\x0a\xf3\x1a\x42\x0a\x23\x7f\x1d\xff\xc0\x62\xe4\x17\xd9\xc9\x18\x8a\x6d\xea\x0c\x16\x6f\x5a\x3f\x26\x52\x85\x91\x5f\xb1\xab\x68\x84\x1c\x3b\xcb\xf8\x99\xc8\xe5\xd0\x9f\xe8\xf9\x6d\xdd\x68\xe4\x53\x7f\x50\x60\x67\xe4\xc4\x60\x68\x63\xb7\x82\x05\x1b\x52\x4a\xf0\x2c\xee\xbc\x8a\xd2\x54\x43\x1e\xa0\xca\xae\x49\x29\x61\x07\x55\x0e\xcd\xa9\xcc\xdd\x33\x3d\x6b\x89\x40\x43\xdc\xaa\x76\xb7\xf7\x8f\xaa\x9a\xb5\xbb\xed\xa9\x67\x75\xd6\xee\x2e\x1f\x54\x75\xd1\xee\x2e\xf3\xcf\xea\x46\xd8\x2e\x77\x81\xff\x16\x68\xae\x3b\x1b\x43\x8e\x5d\x91\x27\x72\x3e\x5e\xda\x03\x5c\x37\x4f\xa4\x04\xaa\xec\x9a\xa5\x60\x25\x50\xe5\xd0\x2c\xca\xf4\x9e\x6b\xd5\x52\x1a\xa0\x21\x76\xa7\x76\xbd\xbc\xa9\x6b\xad\xe2\xc7\x63\x1d\xe0\xba\xc7\x69\x12\x34\xc4\x2e\x6b\xd7\xcb\x9b\xb3\x3a\x6b\xd7\xcb\x9b\x8a\x94\xd7\x2d\xb4\x06\xdf\xed\x0d\xe7\xe5\x2e\xf0\x33\xa1\x32\x96\x47\x0c\x07\x84\x6e\xd3\x6e\x8b\xdd\x9e\x40\x43\xec\x92\x76\xfd\xfe\x5d\xd5\xac\x5d\xbf\x7f\xa5\x7a\xea\x78\xdd\x71\x79\x54\xd3\xd4\x01\xd3\x4d\xaf\xc9\x4c\x6a\x68\x67\x37\x24\x9a\x6b\xf3\x22\xdb\x40\x8b\x1b\x9f\x52\xc1\xb5\x79\xee\xd8\x33\x18\xf2\x6c\xc9\x9a\x8e\xad\x81\xa1\xc8\x9e\x72\xc2\x36\x14\xd8\x45\x16\xe7\x0c\x16\x7d\x9f\x79\xac\x2b\x7f\x4d\xb1\x2d\xdd\x68\x31\xf0\x73\x97\x5d\x29\x58\xf4\x7c\x19\x53\x48\xb3\x82\x21\xdf\x66\xd9\x46\x11\x83\x45\xcf\x6f\x28\x1b\xcc\xb3\x23\x4f\xf0\xdd\x3c\x64\x26\xd7\xe0\xbb\x35\x21\x71\x05\x43\x8e\xcd\x94\xb0\x60\xef\xa0\x21\x72\x93\x9c\x5e\x0d\x05\x36\x93\xec\xd1\x33\xfc\xc0\xee\x4f\x14\x5c\x9f\x83\x0a\x58\xdc\xf9\x44\xc7\xbd\xf1\x94\x89\xd5\xd0\x8d\x9d\x8d\xbd\x8d\x45\xd7\x17\xab\xdf\xc4\xc2\xd5\x34\xbf\xff\x92\x41\x99\xa4\x06\xdb\xea\x4a\x05\xa1\x4b\x29\x83\xa1\xc0\x5e\x97\x91\x4f\xfd\xc0\xd8\xe7\x4c\x60\x31\xf0\xb3\x08\x09\x2c\xde\xf9\xc5\xfa\xfb\x6f\x6e\x4a\xe8\xd6\x8f\x7a\x47\x84\x92\xc1\xe2\x9d\x6f\xdb\x77\xbe\x41\x2a\x61\x5a\x7f\xff\xbd\xf7\x29\x54\x06\x8b\x77\x7e\xb5\xfe\x76\xc4\x9e\x42\x49\xa8\xba\x67\xd1\xd6\x2e\xeb\x6c\x94\xd3\x31\x47\x1a\xbc\xf1\x65\x82\x37\x18\xf8\xb2\xd4\xd5\xa7\x7f\x60\xe0\x53\x92\x93\x38\x58\xbc\xf1\xcb\x00\x8b\x37\xfe\x6c\x60\x31\xf4\x87\x8d\x67\xdc\xc5\x33\x6c\x3c\xe3\x2e\x9e\x21\x3b\x0e\x8b\x77\xf1\xfc\x18\x50\x1c\xd1\xfa\x16\x05\x16\x6f\x7c\xfd\x04\x0b\x6f\x7c\xfd\x04\x0b\x6f\x7c\xfd\x06\x16\x46\x7e\x1f\x38\x3b\x58\x0c\xfc\xf5\x37\x06\xcf\xf6\x0f\xdc\xfa\x7d\x7d\xab\x1e\x74\x74\x8f\xa2\x9d\x5d\x3b\xd6\x86\xf2\x5f\x50\x65\xdf\x94\x93\x7b\x4d\x60\xc8\xb7\x27\xad\x75\x56\x81\xef\x52\x6a\x48\xa3\x80\xc5\x3b\xbf\x5a\x3f\x88\xfc\x10\xa6\xf5\xb7\x33\xda\x29\x50\x46\xa6\x2b\xfa\x13\x03\x9f\x09\x55\xf3\x8b\x22\xbb\xac\xa5\x50\x53\x60\x97\xa9\xbb\xfd\xc4\x9d\xdf\x06\x36\x5a\x37\xac\x85\xc0\x90\x6f\x53\x69\x28\x7b\x27\x4d\x91\x3d\x51\xba\x45\x53\x60\xf7\x75\x4c\x31\xe4\xd9\xc7\x4d\x98\xec\x56\x34\x79\x76\x5e\x37\x01\xed\x6c\xfb\x41\x91\x3d\xd6\x1d\x94\xc5\x9d\x3f\x69\x5d\xf5\x90\x1c\x72\x13\x58\x74\xfd\xbe\xfe\xb4\x80\xf3\x84\x1f\xd8\xfd\x89\x89\xb5\xa0\x2c\x99\x9a\x36\xb6\x1c\x65\x4a\x3b\x0e\x35\x0c\x86\x7c\x9b\xce\xf5\xd5\xa2\xe3\xb7\x81\xd4\x8e\xbf\x10\xb2\xf8\xff\x00\x00\x00\xff\xff\x52\x1a\x32\x8c\x7c\x27\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 10108, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\x3d\x73\x1a\x3d\x10\xc0\xf1\x9e\x4f\x71\x33\xd4\xbb\x68\x57\xef\x94\x4f\xff\x54\x29\x52\x13\x4c\x62\x26\x31\x30\x18\x8f\xe3\x7c\xfa\x8c\x0e\xc8\x69\xf1\x9e\xd4\xdd\xdf\xfa\x09\x0b\x71\x3a\x58\x2e\x97\xc3\xd7\xfd\xe1\xe9\xf8\xfe\xfa\xe5\xf4\xf1\xdf\xaf\xe3\xf6\xe7\xee\x3c\x9c\xf8\x34\xbc\xef\x0f\x64\x86\xb7\xd3\xd3\xe6\xb2\x5b\x14\xf6\xff\xf1\xbc\x1b\xf6\x87\xef\xc7\xf5\xf0\x7c\xb9\x9c\x5e\xd7\xab\xd5\x8f\xfd\xe5\xf9\xed\x1b\x6e\x8f\x2f\xab\xed\x79\xf3\xe7\x03\x5e\x36\xbf\x57\x9f\x5e\x6e\xb1\xf8\xf4\xa7\x35\x59\x0c\x09\x53\x44\x17\xa1\xba\x6e\x49\x8a\x1e\xea\x98\xb5\xd9\x22\x99\x0c\x75\xe8\x36\x3a\xa4\x98\x91\x68\x5c\xc3\x54\x33\x3a\x21\x85\x84\x6c\x0d\x88\x9a\xd5\x6c\x0d\x92\x75\x20\x4a\xd7\x64\x22\x3a\xf4\xe3\x2b\xdf\xaf\x9b\x92\x2b\xc9\x8a\xe4\x32\x6a\x91\x52\x46\xe2\x00\x32\x3b\xde\x47\x90\xd9\xf3\x49\xfa\xa4\x78\x67\x30\x46\x64\xce\x68\x3d\xd4\xd1\xb4\xde\x42\x1d\x8a\xf5\x3c\x8e\x51\x24\x64\xc3\x20\x53\xf1\xc1\x95\x1d\x73\x48\x09\xa6\xcb\x86\x63\x86\xe9\x52\x73\x1e\xbd\x47\xb2\x09\x0d\x4c\xd7\xec\xb5\xf7\x75\x1b\x0f\x16\x99\x32\x88\x6a\x6b\x36\x20\xaa\xa3\x49\x68\xea\x68\x16\x5a\x7d\x8f\x01\x89\x32\x92\x73\xe3\xbd\x21\xb3\xe7\x93\xf4\xea\x5e\x57\x20\x65\x90\xd9\xf1\xd9\x80\x4c\xf5\xd4\x10\xb2\xb7\x68\xed\xf5\x84\x55\xd5\xd6\x6c\x2c\xc8\x54\x7d\x79\x6e\x18\xf4\x84\x94\xca\x83\xa4\xce\x9e\x4f\xd2\x6b\xbb\x53\x83\x6c\x40\x66\xdb\xb3\x0b\x20\xb3\xe7\xa3\xf4\x9d\xf5\xb3\x4b\xd2\x37\xd7\x6f\x91\x33\x88\x6a\x6b\x6b\x40\x54\x4b\x97\xe3\x57\x85\x7e\xfe\xee\x80\xa8\xdc\xf0\x20\xb3\xe7\x83\xf4\xad\x9d\x2c\x20\x18\x90\xd9\xf3\x2c\xbd\x76\x0e\xff\x81\xe0\xc5\xd6\xdf\xba\x3b\x23\x3f\xcc\x68\xed\xff\x28\x3c\xc1\x43\x77\x67\xd8\x87\x19\xea\x89\xf1\xf1\xfa\xa0\x2c\x47\xca\x81\xcc\x79\xcf\xce\x60\xca\x20\xaa\xad\xcb\x83\x53\xe6\x9c\x0f\xe5\x4b\x86\x6c\x02\x51\x1d\x9d\x85\x9e\x5d\xcb\x75\xdc\x19\x10\xd5\xd1\x24\xb4\xba\xef\xd5\xb8\x58\xb7\x7e\x27\x54\xe3\x62\xdd\xfa\x5d\x70\x1d\xcf\x01\xbd\x83\x3a\xda\x36\xd5\xb6\xb1\x8a\x1c\x90\xd8\x82\x28\x4d\x67\x42\xb6\x8c\xa9\x3c\x00\x40\x54\x47\x27\xa1\xd5\x95\x4c\xe3\xe5\xa8\xd6\xd5\xd1\x2c\xb4\x7a\x4e\x6f\xe3\x64\x33\x52\x9a\xfc\xad\x3b\x33\xb8\x7a\xaf\xb7\xee\xce\x70\x0f\x33\xd4\xcf\x69\x14\x0e\x23\x23\xa5\xfb\xbf\xb8\x67\xcf\x07\xe9\xd5\xa7\x5f\x0d\x92\xf4\xf3\x9f\xc0\x15\x64\x03\x32\xb5\x5f\x9c\xe5\xc7\x6e\xf9\xaa\x77\xe5\xf3\x15\xd5\xd6\x81\x40\xd4\xdf\x00\x00\x00\xff\xff\x98\x1d\x5a\x4f\xf3\x0c\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 3315, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd2\xcf\x4e\x83\x40\x10\xc7\xf1\x7b\x9f\x82\xa4\xe7\xf9\xb1\x33\x3b\xfb\x87\x1e\xbd\x7b\xf2\xe0\xb9\xd6\x6a\x89\xb6\x10\x8a\x69\xeb\xd3\x1b\x8c\x9a\x5d\xbb\xf4\x36\x5f\xf8\x30\x10\xb2\xcb\xe5\xb2\x7a\x6c\x0f\xcf\xdd\xe9\xf8\xd0\x5f\xee\xde\xbb\xcd\xdb\x76\xa8\x7a\xe9\xab\x53\x7b\x08\xd5\xf6\x3c\x0e\xeb\xc5\x84\xee\xbb\x61\x5b\xb5\x87\x97\x6e\x55\xed\xc6\xb1\x3f\xae\xea\xfa\xb5\x1d\x77\x1f\x4f\xd8\x74\xfb\x7a\x33\xac\x3f\x2f\xb4\x5f\x9f\xeb\xab\x65\x8b\xc5\xd5\xa5\x15\x5b\x84\x06\x62\x1b\xf8\x86\xd2\x28\xdb\x68\xc0\x02\xa7\x94\xcc\x05\xa9\x06\xcc\x11\x6c\x2c\x02\xa5\x31\x63\x25\x80\x55\x10\x3c\x65\x55\xd0\x8e\xc1\x6a\xe0\x1d\xa2\x52\x1a\x73\x96\x61\x05\x8e\x29\x8d\x92\x15\xb0\xf7\x60\x36\xf0\x4a\x59\xdd\xd0\x62\x10\x02\x65\x35\xa3\x43\x04\x7b\x86\x32\x65\x75\x4b\x5b\x44\x47\x59\x95\xb5\xd8\xe9\xfd\x3f\x1f\xf2\x17\x05\xeb\x15\x0a\xb1\x30\xf4\x3b\x89\x2b\xed\xfc\xbe\xeb\x14\xe2\x2c\x25\xf3\x4d\xa9\x89\x2c\xfd\x31\xef\xe0\x04\x4d\x84\x58\xa6\x34\x66\x2d\x9b\x08\x9e\xf6\xa6\x55\x3c\x95\x01\xcc\x01\x62\x1d\xd8\x53\x9e\x25\xdf\x30\xc4\x06\xc8\xb4\x51\x3c\xfd\xeb\xc2\x13\x62\x02\xd4\x83\x1b\x05\x2b\x65\xf5\x15\x00\x00\xff\xff\x48\x12\xc9\x0b\xb5\x03\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 949, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x8e\x1a\x31\x10\xc7\xf1\x9e\xa7\x58\x89\x7a\x7e\x78\xc6\xff\x29\xd3\xa7\x4a\x91\xfa\x42\x2e\x39\x94\x1c\xbb\x02\xa2\x0b\x79\xfa\x68\x77\x4f\xc8\xa3\xb3\x4d\x81\xc4\x17\x7f\xb4\x32\xb2\x19\xb6\xdb\xed\xf0\xf5\x78\xfa\x3e\xbe\x5d\xbe\x4c\xb7\x4f\xbf\xc7\xc3\xaf\xe7\xf3\x30\xc9\x34\xbc\x1d\x4f\x71\xb8\x4c\xb7\xcd\x4c\x3e\x8f\xe7\xe7\xe1\x78\xfa\x31\xee\x87\x97\xeb\x75\xba\xec\x77\xbb\x9f\xc7\xeb\xcb\x9f\x6f\x38\x8c\xaf\xbb\xc3\xf9\xe9\xdf\x8d\x5e\x9f\xfe\xee\x3e\x3c\x6a\xb3\xf9\xf0\xd1\x9e\x2d\x62\x02\xa7\x04\x76\x91\x54\x35\xb5\x58\x0b\xb6\x96\x54\xd5\x75\x62\x78\xf8\x85\xbe\xbf\x6d\xbb\x0c\x71\x42\x65\x54\xac\x33\x08\x09\x22\x02\x61\x21\x55\x75\x1d\x0d\x44\x0c\xc4\x25\x52\xd5\xd1\x0c\x71\x99\x54\x35\x74\x84\x48\xb8\xeb\x7b\xf5\xb5\x37\xa4\xaa\xae\x99\x13\xd8\x04\xb0\x5d\x78\x91\x15\xef\x05\x6c\xe7\x43\x4b\x48\x91\x54\x3d\xd0\x59\xe9\xda\xce\x8b\x75\xf6\x8a\xb3\x6f\xf9\xe0\x20\xce\xe0\x9d\xdf\xab\xa7\x19\x62\x3c\xe9\xec\x78\xcf\x70\x8e\x54\x35\x74\x4c\x98\xf7\xeb\x99\x54\xb5\x35\xbb\x38\xef\x97\x74\x76\xbc\xe7\xe5\x32\xea\xec\xf8\xf9\x15\x48\x55\x47\x67\x0b\x2e\xf8\x9a\x6d\x2f\x62\x21\x96\x54\x35\x74\x8a\x08\x06\x6c\xd6\x1b\x73\xaf\x8a\x0e\x1e\xde\xc3\x39\xb0\x49\x54\x46\xdf\xe6\xd2\xd6\x4e\x7f\x5d\x66\xb6\x60\xa1\x32\xfa\xd6\x96\xb6\xf6\xed\xd6\x65\xf1\x82\xc8\x54\x46\xd7\x66\x4b\x65\x74\x2d\x67\x43\xaa\x6a\x73\xcd\x38\xb8\x79\x87\x11\x21\x90\xaa\x9e\xce\x10\x26\x55\x6d\x2d\x92\x96\xf1\x5a\x56\x5f\x8b\x11\xd2\xd9\xf1\x36\x82\x43\x26\x9d\x35\xcf\xbc\x4e\xca\x3c\x1f\x8e\xaa\x47\xda\x69\x5e\xfb\x15\x17\x40\xbc\x7a\xbc\x34\xfe\x4f\x1c\x38\x1a\xd8\x65\x7c\x93\xce\xff\x01\x00\x00\xff\xff\x78\xad\xeb\x8f\x65\x07\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 1893, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\x3d\x73\xda\x40\x10\xc6\xf1\x9e\x4f\xa1\x19\xea\x5d\x6e\xf7\xde\x29\xd3\xa7\x4a\x91\x9a\x60\x12\x6b\x12\x23\x0d\x96\xc7\x71\x3e\x7d\x46\x60\x32\x7a\xe4\xcb\x5d\xe7\xbf\xf5\x5b\x18\x2d\x7a\xd9\x6e\xb7\xdd\xd7\xfe\xfc\x30\xbc\x3e\x7f\x19\xdf\x3e\xfd\x1a\x8e\x3f\x4f\x97\x6e\xd4\xb1\x7b\xed\xcf\xb1\x7b\x19\x1f\x0e\xd3\x69\x33\xab\xcf\xc3\xe5\xd4\xf5\xe7\xef\xc3\xbe\x7b\x9c\xa6\xf1\x79\xbf\xdb\xfd\xe8\xa7\xc7\x97\x6f\x7c\x1c\x9e\x76\xc7\xcb\xe1\xcf\x1b\x3d\x1d\x7e\xef\x3e\x7c\xda\x66\xf3\xe1\x5f\x7b\xb1\x2c\x26\xb2\x63\x6f\x68\xf1\x77\x41\xea\x7c\xd4\xb2\xa4\xcc\xa2\x9e\x30\x5b\x3e\xa0\x0f\x0d\xef\x23\x61\xb6\x7c\x42\x9f\x0a\xde\x19\x8e\x91\x55\x33\x5b\x4f\xcb\xa8\x5a\x6f\x69\x19\x05\x1b\x3c\x7b\xcf\x62\x13\x8b\x28\x41\x35\xb4\x03\xed\xea\x5a\x03\x41\xd5\x75\x02\x9d\x2a\x3a\x58\x56\xc9\x04\x55\xd7\x6a\x08\xaa\xa1\x05\xb4\x34\xb4\x82\x2e\x6e\x30\xb0\x48\x66\x71\xee\x7a\x9d\x60\xb6\x7c\x42\x5f\xba\x4e\x96\x20\x65\xc2\x6c\xf8\x6c\x08\xb3\x78\xc7\x39\x96\x68\xd8\xcb\xd5\x63\xd6\xbd\xba\x40\x98\x2d\x1f\xd1\x97\xf6\x03\x20\xa1\x2f\xed\xe7\x1f\xb0\xac\x99\xa0\xea\xda\x1a\x82\xaa\xe9\xc4\x0b\x9c\x58\x7d\xe9\x2e\xbd\x03\x11\xcf\x41\x09\xb3\xe6\x83\x87\x53\x7d\xef\xe6\x44\x5e\x4d\xd4\xce\xf7\x2a\xbc\xd0\xaa\x9b\x13\x76\x35\x51\x7a\xe2\x88\x8f\xec\x03\xe7\xc0\xa2\x96\xa0\x4a\x3a\x0b\xab\x55\x4e\xf3\x26\x09\xaa\xae\x83\x21\xa8\x86\x56\xd0\xc5\xfd\xbf\x1f\x17\x9b\x6f\x67\x8a\xdd\x9c\x70\xab\x89\xd2\x13\xf3\x26\x1c\x47\x65\x49\xf7\xaf\xb8\x67\xcb\x07\xf4\xc5\xbb\x6b\x09\x12\xfa\xff\xef\xf3\x06\xb2\x21\xcc\xd2\x5b\x6d\x7e\x01\xcf\x8f\x10\x37\xff\x5a\x50\x7f\x03\x00\x00\xff\xff\x33\xf9\xc5\xaf\x22\x08\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 2082, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xc1\x8e\xd3\x30\x10\xc6\xf1\x7b\x9f\x22\x52\xcf\xf3\x75\xbe\xb1\xc7\x8e\x7b\xe4\xce\x89\x03\xe7\x52\x0a\x5b\xc1\x36\x55\xb7\x68\x77\x79\x7a\x14\x04\xc8\xa6\x6e\xf6\xe6\x7f\xfb\x8b\x13\x5b\x4e\xd6\xeb\xf5\xf0\xf1\x78\xfa\x3c\x3d\x3f\x7d\x38\xbf\xbe\xfb\x3e\xed\xbf\x1d\x2e\xc3\xd9\xce\xc3\xf3\xf1\x34\x72\x38\xbc\x5c\x2f\xbb\xd5\xac\xde\x4f\x97\xc3\x70\x3c\x7d\x99\xb6\xc3\xc3\xf5\x7a\x7e\xda\x6e\x36\x5f\x8f\xd7\x87\x1f\x9f\xb0\x9f\x1e\x37\xfb\xcb\xee\xe7\xab\x3c\xee\x5e\x36\x37\xb3\xad\x56\x37\x3f\x6d\x19\x90\x0b\x2c\x14\xa4\x22\x75\xf4\xed\xa8\xa0\xc1\xa3\x54\xe3\x8e\x8c\x0a\x72\x04\x35\x20\x4b\x1d\x4b\x36\x81\x41\xa5\xcd\x8e\x77\x82\x51\x91\x1c\x63\x94\x3a\xee\x5b\x5a\x06\x4b\x96\x36\xef\x79\x22\x18\x9c\x52\x47\xcf\x1a\x98\x12\x48\x45\x8a\xd2\xd4\x82\x36\x45\xce\xd2\xd4\x3d\x5d\x90\x09\xba\x4a\x53\x77\x74\x1e\xc1\x44\x44\x4a\x53\x4b\x3a\x60\x74\x69\xaa\xaf\x2d\xcc\xf7\xff\xf3\xd8\xff\xa2\x63\x53\x44\x84\x05\xa8\xfc\x1d\x99\xf7\xe6\xfc\xfd\xaf\x47\x98\x07\xa9\xc6\x8b\x32\x56\xb2\xb7\xbf\xc9\x31\x2f\x45\x47\x58\x91\x3a\x16\xad\xd7\xd6\xbb\x67\x5e\x23\xa2\x63\x3e\x91\x39\x4b\x53\xdd\x37\x84\xf3\x4a\x90\x08\x95\x2a\xfa\xfb\xc0\x90\x41\x66\x58\x70\x30\x49\x9b\x3d\xef\x19\xee\x60\x88\xf3\x31\x96\x36\x97\xbc\x83\x36\x4a\x9b\x6f\xf8\xa0\xd2\x66\xcf\x17\xc2\x42\x86\xe9\x08\x5a\x92\xff\xba\x73\x85\x69\x9c\xbf\x30\x2c\x19\x2a\x55\xf4\xf7\xc7\x34\x23\x26\xb0\xcc\x0b\x94\xa6\x7e\x05\x00\x00\xff\xff\x2c\x6d\x69\xe9\x2e\x05\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 1326, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xb1\x6e\xdb\x30\x10\xc6\xf1\x3d\x4f\x21\xc0\xf3\x7d\xe6\x1d\x8f\x22\xe9\xb1\x7b\xa7\x0e\x9d\x53\x37\x6d\x8c\x36\xb6\x60\xbb\x48\xdd\xa7\x2f\x68\xb5\x31\x0f\xa1\xe8\x21\x80\xfe\xe1\x2f\xcc\x29\x8a\xe8\xd5\x6a\x35\x7c\xde\xed\xbf\x1e\x5e\x4f\x9f\xa6\xcb\x87\x9f\x87\xed\x8f\xa7\xe3\x30\xc9\x34\xbc\xee\xf6\x89\x87\xd3\x74\x79\x28\xe6\xe3\xe1\xf8\x34\xec\xf6\xdf\x0e\x9b\xe1\xf9\x7c\x9e\x4e\x9b\xf5\xfa\xfb\xee\xfc\xfc\xeb\x0b\xb6\x87\x97\xf5\xf6\xf8\xf8\xe7\x42\x2f\x8f\xbf\xd7\xef\xf6\x7a\x78\x78\xf7\xad\x0d\x7b\xc4\x04\xf1\x01\x2c\x23\x99\x6a\xeb\xc4\x08\x08\x9e\x6e\x97\xcb\x2e\x43\x54\xa8\x8e\x86\x15\x8f\x9c\xa0\x19\xac\x54\x5d\x2f\xc8\x7c\x5d\x15\xa6\x3a\x1a\x56\x1d\x62\x84\xc8\x08\xd1\x4c\xa6\xfa\x3a\x38\x32\xd5\xd1\x09\x59\xa8\x8e\x86\x0d\x02\xf6\x09\xac\x09\x29\x92\xa9\x3b\x3a\x1b\xdd\x9a\xba\x5a\xe7\x60\x38\x87\x25\x3f\x2a\xc4\x33\x24\x90\xa9\x8e\x56\x87\x7f\x9b\xbf\x55\x4f\x33\xc4\xdd\x36\x9f\xb3\xe3\x03\x43\x95\x4c\x2d\xe8\x58\x6e\x2d\x96\x09\xc8\x66\xc7\x07\x86\xb0\x90\xcd\x8e\x2f\x5f\x23\x99\xea\xe8\xec\xc1\x15\x9f\x73\xd9\x8b\x78\x88\x27\x53\x0b\x3a\x95\xad\x14\x1c\x67\x7e\xcb\x25\x1f\x31\x3a\xb0\x9b\xff\xc3\xde\xaa\xad\xc5\x7b\x70\xce\xd7\x17\xc3\x66\xc3\x8f\x01\x21\x40\x15\xec\x12\xd5\xb1\x68\x99\xcb\xb4\x54\x47\xdf\x4a\x6d\x5b\x4f\xa7\x5a\xf6\xb5\x6d\xfd\x35\xe6\x65\x09\x02\xfd\x6f\xe7\xe8\xda\x5c\xdb\xdc\xb7\x9c\x1d\x99\xea\x6a\x71\x42\xa6\x5a\xa7\xa5\x53\x68\xb9\x9f\x88\x71\x24\x53\x3d\x9d\x21\x4c\xa6\x96\x75\x39\x9f\xca\xa1\x5d\x57\x5f\x97\xc1\x6d\x76\xbc\x8f\xe0\x31\x93\xcd\x96\x67\x86\x08\x43\x32\xd8\x2b\xd9\xec\x7b\x09\xc6\x4b\x68\x7a\x5f\xde\x12\x07\xef\xe6\xf9\x4d\xde\xf3\xde\xfa\xf6\xe7\x5a\x05\xd4\xfa\x7b\xf3\x94\x87\x65\xb2\xe9\x63\x39\x43\xae\x8f\x93\xb9\xfc\x02\xd3\xad\x9f\x08\x11\x61\x04\x67\x45\x14\x32\x75\x47\x7b\xa3\x9b\x77\x5b\xad\xab\xd1\xcd\x49\x32\x43\x7c\x46\x70\xe0\x44\xa6\xfa\x3a\x46\x32\xd5\xd3\x02\x76\x8e\x6c\xf6\xbc\x22\x08\x99\xfa\x1b\x00\x00\xff\xff\x0d\x88\x23\xb8\x66\x09\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2406, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\x3f\x53\x1b\x3d\x10\xc7\xf1\x9e\x57\xe1\x19\xea\x5d\x6b\x57\xff\x29\x9f\xfe\xa9\x52\xa4\x26\x40\x82\x27\x01\x7b\xc0\x0c\x21\xaf\x3e\x23\x63\x62\xfd\xcc\x9e\xd4\xf9\x8b\x3e\xc2\xf2\x9d\x4e\xf6\xe5\xe5\xe5\xea\xeb\xe6\xf1\x76\xfb\xfa\xfc\x65\xf7\xf6\xdf\xaf\xed\xcd\xcf\xbb\xa7\xd5\x4e\x77\xab\xd7\xcd\x63\x91\xd5\xcb\xee\xf6\x7a\x7f\x77\xd1\xd8\xff\xdb\xa7\xbb\xd5\xe6\xf1\xfb\xf6\x6a\x75\xbf\xdf\xef\x9e\xaf\xd6\xeb\x1f\x9b\xfd\xfd\xcb\x37\xbe\xd9\x3e\xac\x6f\x9e\xae\xff\xbc\xd1\xc3\xf5\xef\xf5\xa7\x7f\x77\x71\xf1\xe9\x4f\x57\xe2\x39\x15\x2e\x99\x25\x47\xea\x63\xd1\x56\xcf\xe2\x2a\xf5\x61\xdb\x1c\x58\x72\x65\x91\x4c\x50\x0b\xba\xb0\xa4\xc2\xea\x1d\x41\x2d\xeb\x12\x38\x04\xea\x63\xd1\xaa\x77\x2c\xfe\x03\x1f\xcb\xd6\xe2\x32\x07\x8e\x87\x55\x7c\xbc\x36\xa4\xb6\x51\xcf\x52\x2a\x8b\x46\xc2\x9c\xf9\x84\x3e\x4d\x7c\xcc\x84\x39\xf3\x05\x7d\x31\x7c\x70\x9c\x33\xab\x56\xf6\x91\xfa\x18\xda\xe8\xa9\x0f\xc3\x46\x65\x29\x9e\x43\xdb\x43\x89\xa0\x96\xb5\x48\x61\xc9\x42\x98\xb6\x6f\xef\x2c\x59\x58\x9d\x12\xa6\xe1\x53\xe0\xc0\x9a\xdb\xed\x3c\xbd\xb4\x5c\xe4\xf6\xde\xae\xb0\x44\x4f\x50\x0b\x3a\xb2\xf8\xc2\x8e\x4e\xaf\x35\x5a\xd7\xee\x38\x9e\x3c\xab\x54\x82\x1a\x6b\x75\x04\x35\xd1\x02\xda\xba\x76\xfd\xb8\x82\x36\xaf\xdc\x61\x5c\x83\xb2\xc6\x40\x50\x96\x4e\x2c\x52\x59\x42\x38\xec\x56\xcc\x99\x2f\xe8\xad\xdd\xda\x83\x52\x09\x73\xe2\xab\x23\x4c\xf3\xb9\x17\xd6\xe8\x59\xc2\x61\x03\x60\x9a\xbe\x9d\x66\x8e\xa3\xb0\x94\x76\xbc\xf5\x39\xf3\x05\xbd\xf5\x79\x7b\x50\x1d\x61\x8e\xbd\x86\x44\x98\x33\x9f\xd1\x4f\xd6\xaf\xa1\xa0\x1f\xae\xdf\xb3\x56\x82\x1a\x6b\xef\x08\x6a\xa4\xdb\xe3\xd7\x85\xfd\xfc\x7d\x00\x91\xb6\x85\x09\x73\xe6\x13\xfa\xd1\x95\x6c\x20\x39\xc2\x9c\x79\x45\x6f\x3d\x87\xff\x40\x8a\x70\xe9\x8f\x3d\x9d\x51\xcf\x66\x8c\xae\xff\x41\x44\xa1\xb3\x9e\xce\xf0\x67\x33\xcc\x27\x26\xe6\xf7\x83\xd2\xb3\xba\x40\x98\xcb\x5e\x83\xe3\x52\x09\x6a\xac\xdb\xb7\x2b\xe6\xd8\xb7\x83\x16\x73\xc9\xa7\xf6\xc5\x27\xbe\x10\xd4\x44\x57\xd0\x8b\x6b\x7f\x1f\x0f\x8e\xa0\x26\x5a\x40\x9b\xf7\xa9\x1b\x87\x75\xdb\x3b\xa7\x1b\x87\x75\xdb\xbb\xe6\x7d\xbc\x26\x8e\x81\xfa\x18\xdb\xd2\xdb\xc1\x2a\x6a\x62\x51\x4f\x50\x63\x1d\x33\x41\x59\xba\x0a\xab\x57\x2e\xed\x78\x21\xa8\x89\x2e\xa0\xcd\x75\x9f\xc6\xdb\x41\xd0\xd7\x44\x2b\x68\xf3\x14\x38\x8e\x8b\xaf\x2c\xe5\xe4\x8f\x3d\x99\xa1\xdd\x67\x3d\xf6\x74\x46\x38\x9b\x61\xde\xd5\x83\x08\x9c\x0f\x3f\xdb\x08\x73\xe6\x13\x7a\xf3\x29\xed\x41\x41\x6f\xdd\x01\x6d\x3f\xd7\xdb\x57\x7d\x68\xf7\x0b\x6a\xac\x93\x10\xd4\xdf\x00\x00\x00\xff\xff\x78\x74\x49\xee\x8d\x0d\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 3469, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x72\xab\x4c\x0c\xdc\xe7\x28\xa9\x42\x8b\x6c\x73\x1a\x45\x23\x06\x95\x19\x69\xbe\x91\x6c\xec\xef\xf4\xaf\xc0\xf0\x8c\x21\x6f\x89\x5a\xad\xbf\xee\xe1\x13\xbe\x4a\x52\x50\x8e\xef\x8f\x4f\x28\xec\xce\x9a\xb9\xc1\x28\x37\x06\xb2\xb2\x44\x9d\x53\xe6\xbf\x39\xde\x87\x92\xcb\x86\x7a\xc1\x16\x4e\x8d\x59\xa1\x08\x35\x73\xeb\x63\x03\x6f\x36\xb3\x49\xd3\xc6\x9e\x18\x63\xe0\x76\xce\xbc\xff\xd8\xfd\xd5\x14\xd5\x27\x6e\x7e\x4c\xc3\x5a\x1d\xfc\xf2\xa8\x6b\x1a\xa1\xa6\x07\xb5\xab\x0f\x6e\x09\xe1\x22\x9a\x57\x20\x29\x90\x69\xb0\x06\xd4\x66\x09\xa8\x38\x14\xd7\x17\x6a\xca\x6a\xb1\x6e\x45\x83\x09\xf1\xb1\xdb\x6f\x51\x50\xc7\xa0\x95\x35\xca\x5c\x7f\x52\x87\x49\x34\xd9\xe4\x2b\x6f\x89\x93\x69\x2f\x19\x2a\xba\x57\x6b\xf1\xa4\x24\xae\xa3\x3d\xc0\x03\x43\x08\xf0\x82\x05\x25\x98\x06\xb5\xd1\xb2\xf0\x5a\x20\x95\x04\x85\x03\x9d\xdb\x4d\x88\x4f\x67\xe8\x99\xd3\x0f\xd2\xe5\x15\xef\x06\x1b\xca\x01\x74\xc6\x46\xc3\x3f\xb9\x6f\x23\xe7\x9d\xe0\xc2\x74\x1b\xc5\xe3\xc8\x94\x92\x3b\xef\x8a\x6b\x37\xdf\xe1\x39\xfb\xff\xbc\x2a\x2b\xea\x92\xb8\xd5\x59\x99\xd1\xae\x09\x6b\x7d\x03\xd6\x55\x8e\x35\x47\x21\x56\x9f\x65\x2b\xf5\x84\x59\x16\xdd\xcd\x55\x60\xb0\x28\x28\xe3\xfa\xc9\x49\xb0\x71\x92\xc6\x74\x9a\xf5\xdd\xa4\xd6\xf7\x42\xbc\xca\x75\xc8\x34\xdd\x00\xef\xef\x50\xfc\xfb\xa3\x36\x21\x5e\x0e\xb0\x73\x5a\x0d\x01\x0f\x6b\xa7\x0d\xfe\xbb\x72\x7b\xbc\x3c\xd6\x4e\x0d\x1a\x67\xf1\xe0\x06\x94\x2a\x9d\xa4\xdc\x44\xda\xac\x39\xf7\xc0\xcc\xbb\xb5\x97\xae\x9d\x14\xcc\xec\xe0\xdd\x91\x3f\xa3\xf3\xf3\xec\x13\x24\xbf\xff\x72\x46\xbf\xd6\xc5\x7f\x87\x70\x48\xe1\x77\x0f\xc4\xe5\x0b\xea\x18\xaf\x59\xae\xb2\xbf\xc0\x94\xe8\x54\x7b\x8e\xe1\x78\xaa\x3d\xf9\xfc\xf6\x60\x79\xad\x47\x68\x9a\x96\x3f\x08\x99\x2a\x53\x04\xfb\x13\xf8\x13\x00\x00\xff\xff\x6e\xd5\x0d\xa2\x88\x04\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 1160, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd4\x49\xce\xe4\x20\x0c\x05\xe0\x7d\xdd\xe5\x7f\xf2\xf3\x80\x41\xb9\xff\xbd\x5a\x06\x92\x90\x5e\x94\xc4\x17\xc2\x60\x97\x1d\x1a\x72\x40\x6d\xa0\x8d\xeb\xf7\xaa\xeb\x54\x17\x50\x11\x3e\x41\x49\x18\xa8\xfd\x51\xa0\xcb\x89\x77\xa6\xd6\xbe\x52\x42\x45\xae\x9f\x1a\x46\x43\x28\xc2\x6e\xa8\xf4\xfa\x2d\x26\x98\x1d\xcc\x35\x4b\xa9\xd3\x15\xcc\xb8\x7e\x2e\xc8\x84\xaa\xa3\x9f\x20\x3f\xf2\xcf\x9b\x5a\x17\xbf\x19\x50\x3f\x96\x36\xa8\x8f\x0f\x43\x1e\x9a\x60\xef\xd4\x2b\xe0\x44\xac\x63\x86\x80\xd6\xf0\xc5\x38\xa5\x6b\x13\x0a\xe1\xad\xa2\x59\xa4\x43\x9d\xa0\x73\x3b\xc1\x21\x48\xdd\xec\xa0\x18\x72\xa9\xb2\x55\x89\x8b\xb1\x9d\xa0\x2b\xb2\x5d\xbf\xa8\x3d\x04\x2d\xd0\xfd\xd1\x7c\x61\xe4\x36\x51\xc1\xe8\x78\x68\x3a\xaf\x1f\x0a\x36\x07\x07\x11\xf1\x50\x35\x57\xfa\xa7\x1b\x48\x41\xf3\x97\x5a\x09\xd9\x1c\x48\x82\x95\xa6\x62\x8d\x67\xc0\xb7\x3b\xd8\x08\xe7\x41\x43\x5f\x47\xa9\xd5\x06\xf7\x56\x53\x63\x05\xb4\xd4\xc6\xda\xb8\x39\x1c\x6a\x90\xbf\x7b\xa4\x75\xd9\x89\xa8\x3f\xd4\x4e\xf8\xf5\x6b\x51\xe5\x34\x2b\x85\xa7\x86\xbd\xea\xa8\x6c\xbc\x8a\xad\x58\x73\x76\x4b\xd7\xc1\xcf\x78\x1d\xbd\x18\x0a\xb7\xeb\x47\x71\xb8\x40\x29\x30\x3d\x48\x58\x6c\xfa\x6c\x9a\xd4\x97\x1d\xea\x1f\xf5\x53\x94\x7b\xdf\x40\xd5\x41\xe5\xa8\xa8\xf4\x55\x9a\xbc\x1d\xa0\xef\x84\xd3\x58\xc9\x40\x23\xe4\xef\xc0\xbc\x32\xcd\xc1\x14\xb0\x07\x52\x4e\xf7\xd5\x03\x8c\xac\xa0\xa2\xd5\xe2\x67\xbc\xd6\x2e\x52\x46\x55\xe3\x21\x9d\x31\x9c\x6e\xff\xb9\x7f\x6d\xf2\x5a\x07\x66\x18\x9b\x75\x1f\x6b\xff\xb9\x7f\xed\xc7\x72\x8b\xfd\xd5\x69\x1d\xcd\x2a\x4b\x59\x1f\xab\x41\xa8\xcd\xf2\x05\xe7\x6d\xe6\x83\xb1\x9a\xa7\xfa\x41\xc5\xeb\x7b\xc6\x91\x90\xbf\x03\x33\xd2\x32\xab\x22\xaa\x63\xdc\xeb\x41\x56\xcf\xd6\xb4\x3e\xaa\x46\xae\xea\xb9\x19\xd5\x97\xf1\x7a\xd4\x55\x3f\xd4\xef\xac\xd9\x87\x15\xd6\x66\x95\xd8\xd8\x6b\x5b\x9f\xed\x56\x25\xfd\x2f\x00\x00\xff\xff\x9b\x3c\xb2\x99\x92\x05\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 1426, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9b\xed\x92\xa3\x2a\x13\xc7\xbf\x9f\x4b\xd9\xaa\x58\x34\xa8\xd1\x3a\x57\x43\x94\x49\xac\x49\xd4\x47\x4c\xb2\xb9\xfb\xa7\x30\x99\x04\xc6\xb6\xff\x67\x3f\xed\xc0\x2f\xd0\x6f\xd0\x80\xf0\x27\xb3\xbb\x8b\x77\xed\xd1\x65\xbd\x9b\xff\xfd\xe7\x4f\x66\xdb\xfe\xaf\xcf\x9a\xe1\xf2\xfc\xc3\xff\xc9\x2e\xde\xb6\xfe\x53\xbd\x94\xf4\x6f\xe2\xb2\xfc\xed\x9a\xfe\x4d\xcc\xed\x65\xfe\xa9\x6e\x9b\x5f\xcd\x1f\xcf\x87\xb6\xf7\x3a\xbb\x74\xcd\x34\xf8\xe1\xeb\x4d\x9e\x87\xc6\xce\xdd\xd0\x67\xe7\xee\xf6\xa6\xd3\xdf\x4e\xb6\x8d\xbb\x9e\x82\x58\xd1\xdf\xde\x4d\xb7\xae\x71\x3e\xf3\x43\xd3\xd9\xf3\xba\x8b\xd9\x9d\xdd\xc5\xcd\xd3\x83\xa9\x9a\xec\xd7\x57\xd7\x5c\x6c\x6f\x8f\x6e\xfa\xe9\xf0\xd6\x4d\xf3\xd5\x9e\x9d\x9d\xe6\xd3\xbb\x6c\x98\x66\xf7\xf7\x4f\xd6\xda\xd9\x66\xa1\xb5\x1f\x91\x9b\xe1\x92\xf5\xde\xce\x0d\x4f\xfe\xee\xf1\x59\xcb\x56\xa6\x2e\xb1\x8d\xf9\x68\x69\x9b\xb9\xbb\x75\xf3\x23\xbb\x77\x7d\x3b\xdc\x5f\x8e\xb2\x6d\xef\xfe\x5e\x5f\x3e\x8a\x1c\x98\x18\xc8\xb6\x9e\x62\x5f\xbe\xfe\xfe\xa9\xfd\xb6\xbb\xa6\xed\x77\xbd\xcf\x6c\x3b\xbb\xe6\x94\xb5\xee\xdf\x7f\xec\x34\xd9\xc7\x9f\xdd\x38\x0d\x6d\xd6\x0e\x59\xeb\xc7\xec\x32\xfe\x16\xf7\xd0\xf5\xc7\xa5\xa7\x5f\xc5\x67\x63\x14\xed\x6c\x46\xed\x74\x4b\x8a\x9a\x75\xd1\x31\x2e\xea\xc9\xa8\x7c\xe7\x7e\x17\x95\x69\x5b\xcf\x22\x86\x4a\xdb\xd2\x87\x5d\x33\x4c\x4a\x51\x66\xc7\x2e\x1b\xc3\x7f\xb8\x6a\x2d\x57\x1b\xb9\x3a\xdf\xa8\xbe\xf7\x9e\xb2\x7b\xef\x53\x77\x1d\x7a\x33\x8a\x42\x19\xdf\x9c\x94\x56\x8a\x54\x51\x2a\xf6\xf7\x6f\xa0\xa4\x0a\x00\xba\x06\x80\xe1\x45\x8c\x80\x02\x01\x25\x00\x0a\x59\x0b\xda\xeb\xbd\x08\xe8\x4a\x6e\x41\x2b\xa3\xb5\x0c\xec\x73\xd1\x0e\x5a\x1b\x2d\x5a\x52\x6b\x23\xdb\x41\x6b\x53\xb2\x96\xcc\x7d\x73\x22\x45\xa4\x55\x45\x39\x02\x58\x19\x3e\x40\x4d\x46\x04\x48\x11\xab\xe6\x07\x20\x85\x00\x20\x03\x69\x0d\x64\xc8\x15\xeb\xcd\x0f\xb0\x11\xb4\x1f\x60\xaf\x64\x43\xd1\x1e\x69\xb1\x07\xa6\xa6\x5a\xc9\x32\x68\x22\x59\x0b\x6d\x88\x8d\xc9\x18\x60\x63\xf2\x03\xe4\x5a\x0e\x18\x43\x40\x48\x43\x40\x06\xa3\x95\x20\x43\x88\x06\xd2\x9c\xa1\xfc\x33\x9b\xf6\xc7\x9d\x7f\xfc\x94\x3d\xd6\xf3\xf9\x63\x3d\x9f\x3f\x8b\xe2\x69\xb9\xf9\x64\x99\xc6\x36\x27\xb7\xe4\xbc\x8b\x9d\xe6\xb4\xcf\xa6\xf5\xa4\x55\x9e\x9d\x43\x42\x3d\xf7\xf7\x67\x96\x5a\x4a\xab\x9a\x2b\xad\x0d\x53\x6a\xf4\x7e\x5d\xaa\x55\x4e\xfb\xec\xdc\x3c\x56\xc5\x86\xd8\xe2\x42\xf1\xc5\x7c\x23\xfb\x82\x29\x26\x9d\x33\xba\xe8\xba\x5e\xb3\xb9\x62\x1a\xc8\x35\x57\x58\x70\x3f\xaf\xf3\x75\x61\x5d\x16\xbf\x7b\x3f\x91\x90\x74\xde\xb5\x6c\x22\x6c\x4e\x2b\x47\xbf\x8a\xdc\xba\xe8\xf8\xbb\x48\xaf\x7f\xa8\xd3\x1f\x0e\x97\xd1\xce\xee\x6f\x73\xb2\xfd\xd1\x65\xcd\x79\xb8\xb6\x76\x1c\x5f\x72\x0f\xfd\xdc\xf5\xd7\xeb\x25\x6b\xd7\x8b\x8c\x66\x98\xc6\xcc\xcf\xeb\xf2\x91\x14\x81\x75\x4b\x33\xea\xff\xc0\xe4\x98\x09\x39\x7e\x6c\xb2\x9b\x6a\xda\xd7\x2a\xb8\x3d\x98\x7b\xef\xb5\xa2\xf0\x6f\x3d\xbc\xda\x03\x93\x49\xda\x43\xf1\x1a\xb5\x21\xe1\x31\xa3\x36\x05\x98\xc9\x29\x06\x2a\x2e\xab\xa7\x00\x90\xa1\xe6\xe6\xbf\x04\xd0\xa8\x05\x2e\xa3\x26\x80\x91\x81\xa0\x28\x00\x80\xa1\x48\x71\xd3\x5b\x02\x00\x43\x91\x32\xa8\x85\x1c\xc9\x90\x83\x16\x90\xbb\xc3\x44\x8e\x00\xd9\x17\x44\xc0\x17\x44\xdc\x3a\x31\x01\x0c\x92\x21\x07\x32\x68\x2e\x69\x27\x00\x97\x0f\x53\x00\x68\xa1\x91\x37\xb5\x91\xa3\x9a\x0c\x08\x7b\x32\x28\xa2\x0c\xb2\xa4\x41\x96\x34\x28\xe4\x0c\x1a\x38\x39\xb7\x0c\x4c\x00\xa4\x45\xae\x99\x45\x7d\x0a\x00\x43\xe5\x86\x59\x9b\x24\x00\x0a\x98\x62\x63\xf2\x8c\x00\xa0\x66\x81\x7c\x51\x80\x69\x90\x8a\x1c\xc9\x90\x03\x6f\x96\xdc\x22\x2e\x01\xb8\xe5\x70\x02\x20\x2d\xd8\x3d\x5c\x0a\x20\x21\x73\xe0\xac\x3d\xf2\xc5\x1e\x4d\x62\x7b\x03\xb4\xd8\xa3\x78\xa8\xb8\xdd\x4f\x02\x68\xa0\x45\x85\xa2\xba\x42\x33\x0c\xca\x9b\x54\xa1\x19\xa6\x42\xe9\xa0\xe6\xd6\xec\x29\x00\xba\xa8\xb9\xdd\x4f\x02\xa0\x88\xaa\x91\xb3\x6a\x30\x2e\xb4\x22\xd9\x50\x5a\x81\x99\x56\xb3\x7b\xd9\x04\x00\x69\x51\x2b\x90\x16\xb5\x32\xb2\xa9\xb5\x92\x07\x4e\xc8\xee\x62\xc0\x04\x40\xd4\x62\x49\x9c\x00\x90\x43\x6e\x99\x8b\x65\x40\x73\xfb\xe9\x14\x10\xc7\x45\xd8\x2a\xa2\x16\x64\x53\x93\xd2\xb2\xa9\xc3\x4a\x0d\xb4\x60\xe4\x88\x22\x65\xe4\x78\x08\x00\x6c\x01\x78\xd3\xc8\x33\x6d\x58\x2d\x42\x00\x09\x89\xec\x90\x2b\xd0\x02\xc8\xfe\x61\xc5\x0a\xd4\xcc\x51\xc8\xe5\xf2\x0a\x24\xac\x79\x81\xbb\x0b\x79\x6d\x4f\xaa\x90\x17\x18\xa4\x0a\x34\x36\x41\x62\x25\x55\xca\x0b\xce\x00\x00\x2d\x4a\x79\x1d\x15\x00\x30\xb2\x4a\x79\xb1\x47\x6a\xaf\x80\x2f\xf6\x72\x5a\x24\xb5\x47\x42\xee\xe5\xec\x4f\xaa\xe2\xce\x99\x52\x00\xa8\x59\x21\x53\x57\xc8\xd4\x15\x1a\xbc\x20\x77\x07\x00\x8c\x0b\xb0\x6b\x26\xb4\x6b\x26\x55\xa3\xa1\x57\x23\x3b\xd4\x68\x12\x13\x73\xb7\x51\x15\xb1\xc7\xcc\x31\xc0\x9e\x22\x47\x80\x56\xd2\x62\x2f\x00\x5b\xc7\x1a\x6f\xc0\x48\x69\x31\x00\xb9\x94\x71\x9e\x80\xac\xa6\x2e\x21\x80\x84\x64\x4f\x91\x13\x80\x3b\xc1\x8d\x81\x4a\xd6\xa2\x56\x24\xe5\xac\x00\xe4\xb2\xb3\x02\x00\x5a\x28\x64\x6f\x06\x00\xb4\x20\xee\x50\x02\x00\xd5\x04\x21\x57\x87\x4e\x44\x80\x40\xc8\x05\x40\xf4\x45\x1d\xa6\x52\x04\xc8\x6a\x92\x46\x5d\x18\x24\x24\xf2\xa6\xbc\xa5\x0d\x00\x88\xea\x9a\x4a\x69\xd9\x1c\x80\x3d\x70\x37\x55\xa8\x05\xf6\xdb\x48\x02\x00\x2d\xb4\x92\xf2\x45\x00\x90\x2f\xb4\xb8\x6c\x0e\x80\x78\x9a\xb4\x00\x48\x86\x42\x6c\x81\x96\x0f\x93\x00\x90\x26\xf3\x00\x88\x27\x5a\x01\x30\xe2\xe0\x5d\x00\x29\xa2\x48\xa9\x5c\x0c\x5a\x52\xaa\x10\xed\xb0\x00\x40\x48\x79\x22\x25\xa5\xe4\x79\x72\xd9\x49\x49\x31\xb9\x9c\x0d\x4a\xf1\x10\x00\xd4\x05\x32\x14\xe5\x40\x0b\xca\x81\x2f\x48\x9e\x69\x97\x93\x1c\xd9\xd4\x84\x2c\x49\xe2\x62\xcf\xa0\x73\x18\xb3\x1c\x0e\xc8\x51\x2d\x1f\x0e\x98\xb0\x17\x04\x2d\x68\x02\xbe\xd0\x5a\xda\xa1\x3c\x01\xd0\x05\xfb\x71\x35\x06\x72\x69\x4b\xbb\x00\xa8\x05\x79\xa6\x0d\x00\x6a\x01\xf9\x42\x57\x1b\xde\xbc\xf7\x9e\x5a\xae\xa6\x5c\x7e\xaa\xc3\xc2\x81\xd7\x2f\x06\x58\xf1\x23\x80\xf7\x52\x0c\xb0\x09\x33\x02\xf8\x25\xf9\x07\xd8\xf0\x73\x0c\x80\x2e\x36\xc6\x7d\x0c\x00\x35\x35\xef\x84\x18\x00\x5a\x18\xde\x4b\x31\x00\xb4\xd8\x58\xed\x46\x00\x12\x72\x23\x0f\x7c\x80\x8d\x70\x8e\x01\xa0\x66\x81\x22\x6a\x23\x51\xc4\x00\xea\x02\x69\x51\xf0\x73\x4f\x0c\x00\x77\x97\xa8\x8b\x12\xb5\xb0\xb1\x97\x8d\x01\xe0\xac\x8d\x03\xda\x18\x00\x11\xb5\x71\x82\x1b\x03\x20\xa2\x6a\xa4\xc5\xc6\x1a\xed\x0d\x84\xb5\x05\x02\x64\x21\x49\x01\x21\x69\x23\x93\x44\x00\x12\x92\x90\x90\x1b\x2b\x8b\x0f\xb0\x71\xf6\x19\x03\x40\x48\x34\x3f\x90\x41\x86\x42\xf3\x03\x19\x28\x03\x18\x38\x84\x86\x3f\x15\xc8\x92\x05\xd2\xa2\x40\x5a\x94\x60\x5c\x50\x89\x64\x28\xc1\x4c\x4b\x25\x2b\x64\x67\x8f\xfd\xe0\xe7\xae\xf1\x99\xbf\x8e\xe3\x30\xcd\xbf\x2f\x69\xb4\x9d\x6f\xf0\x95\x90\x40\xe1\x4b\x21\x81\xc2\xd7\x42\xbe\xce\xee\xef\xe7\xe6\xd3\xd7\xea\x8a\xca\xf1\x53\x79\x74\x03\x68\xec\xe8\x86\x9b\x9b\x00\x74\x8a\xee\xf3\x9e\x74\xf4\xff\x6f\xc6\x2d\xa7\x6f\x1d\x8c\x6a\x96\xbb\x91\xdc\x2e\x25\x05\x18\xbf\xa5\x00\xe3\xb7\x14\x60\x02\x3c\x01\xb8\xcf\x03\x31\x50\x71\x87\x98\x09\xc0\x1d\xac\x27\x40\x01\xd4\xac\x0a\xd4\x45\xc1\xcc\x04\x31\x50\x23\x21\x6b\xee\xae\x6c\x02\x70\x47\xb1\x09\x50\xa0\x16\x0a\x66\x98\x26\x00\x77\x4f\x35\x02\x88\xfd\x32\x97\x00\xc0\x9b\xa4\xb8\x73\xd2\x18\x20\xee\x2b\x69\x02\x70\xdf\x0f\x12\xa0\x90\xdd\x4d\x1a\x69\xa1\x73\xd9\x92\xa4\xb9\x3b\xc3\x09\xc0\x5d\xcf\x4e\x01\x39\x1e\x88\xbd\xb7\x9c\x02\x40\x4d\xf6\xba\x49\x02\x70\x1f\x18\x12\x00\x69\x91\x83\xb1\x49\x39\xf7\x25\x26\x05\x40\x3c\xe4\x28\x1e\x72\x30\x2e\x28\xe7\xae\x88\xc7\x40\xc1\x7d\x0d\x4a\x00\x64\xea\x02\xcc\x72\xc4\x7e\xb2\x4a\x00\xee\xdb\x7f\x02\x80\x29\x88\xbf\x2c\x92\x00\xc8\xdd\x25\xf7\xe9\x2e\x01\xd0\xb8\x28\x0b\x10\x0f\x25\xd4\xa2\x00\x86\x42\x19\x87\x50\xc6\xe1\xdf\x14\x24\x00\x77\x3f\x29\x05\xc0\x3c\xb9\x47\x6a\xb2\x1f\x9c\x12\x00\xc9\x50\xa1\x91\x55\xa1\x71\x51\xa1\x89\x14\xa5\x45\xaa\x90\xbb\x6b\x64\x6a\xf6\x26\x68\x0a\x00\x43\xa1\xa4\xa6\x51\xc6\xd1\x8a\xfb\x30\x9f\x02\xb2\x0c\x9a\xbd\x87\x71\xfa\xde\x78\xe5\xf3\xaa\x38\xac\x6b\xba\xdd\xe1\x5c\x4a\x2f\x80\xba\xdd\xe1\x21\x3e\x11\x8a\x01\xf6\xc2\x76\xb7\x93\xaf\x7b\x47\xf5\x1b\xbf\xf7\xbd\x16\x7f\xff\xae\x67\x7f\xff\x7d\xc3\x8b\xed\xef\x1b\x5e\x6a\x7f\xdf\xf0\x42\xfb\x7c\xa0\xec\x7e\xbf\x67\x17\x9f\xd9\x6f\xdb\xf6\xaf\xf7\x6d\x67\xaf\xef\xee\x90\x4d\xae\xbd\x0c\x7d\x9b\x2d\x37\xc5\x7f\xfd\xf2\x32\x1c\xba\xb3\xcb\xc6\x6e\x74\x99\x9d\xba\xd5\x43\xbc\xf8\x19\xde\xc5\xf7\xb3\xf3\xf3\xfa\x5d\xc4\xf3\xe9\xdd\xf0\xf5\xd5\x35\xce\x8e\xa3\x7f\xbf\x06\x7c\x55\x4d\xd7\xb3\xdb\xa8\x1f\x7a\xe7\xdd\x3c\x77\xfd\xd1\xef\x0e\xbd\x96\x9e\x13\xc6\x68\xf3\xf8\xcf\x68\x7b\x28\xfe\x2b\x1a\x76\x09\x02\x3a\x4e\x2e\xfb\x1a\x86\x79\x9c\xba\x7e\x1e\x27\xd7\x76\xcd\xcb\x4a\xe3\xe4\x6e\x9d\xbb\x7f\xf6\x1b\x93\x6d\x23\x25\x93\x57\x9b\xe1\x77\x53\xe8\xc6\xbe\x5f\x6b\xfe\xb2\xb9\x6f\x4e\xee\x62\xe3\xe2\xd8\xa9\xde\x35\xd7\x20\xc8\xd9\xfa\xd3\x6c\xcf\xdf\x5d\x7f\x7c\xfd\xec\x47\x0d\x6f\xfb\xf6\x30\xf0\x0f\x2b\xdf\xd0\xbd\xeb\x77\xe3\xe8\x20\x24\x02\x7c\x65\xbf\x7a\x29\xf1\x2a\x72\xeb\xa2\xf8\xa5\x84\x1f\x1f\xbd\x9b\x57\x0f\x63\x9f\xc5\xf6\xbc\xda\xd0\x3e\x2b\xdc\x75\x1a\x46\xb7\x65\x2c\x7f\x8f\xfc\xe0\xe7\x61\x72\x8d\x9d\xed\x79\x38\x4e\xee\xf6\xf3\xdc\x76\x29\xfe\xdf\xd5\x9e\xbb\x79\xf5\x2e\xd6\x5f\xa7\x9b\x7b\x64\x77\x3b\xfb\xa1\xff\x5d\xf9\x79\x4d\x6b\xc7\xd1\xfd\xcd\x0e\xc1\x17\x4b\xbf\x9b\xef\x6c\x3f\x15\xd7\x69\xe5\xf8\x65\x74\xf1\xef\x5b\x67\xff\xe5\x7e\x9e\xe8\xfa\x93\x1d\x43\x4f\xfc\x5c\x70\x73\x93\x0f\x5a\x9d\x1e\x87\xa9\x6b\x97\x99\xe9\xe4\xa6\x97\x05\x9e\x4f\x6e\x77\x7f\xa4\x30\x7f\x31\x52\x14\xbd\x90\xad\xf0\x48\x1e\xf6\xa2\x8e\xd8\x16\x5e\xf6\xfe\xb8\x8e\x77\xc0\xbd\xeb\x49\x65\xdd\x78\x2b\xb9\x9a\x3d\x5f\xf7\xff\x00\x00\x00\xff\xff\xbd\x4c\x20\xd8\xf1\x3d\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 15857, mode: os.FileMode(438), modTime: time.Unix(1522108931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd6\x5b\x92\x05\x11\x0c\x06\xe0\xf7\x59\xcc\x5f\x72\x21\xd4\xd9\xff\xbe\xa6\x12\xb7\xe8\x87\x99\xea\xef\xd0\x68\x22\x90\xa0\x75\x74\x46\xff\xfd\xad\xe7\x0e\xe2\x11\xb2\x06\xa6\x0e\x22\xbb\x1c\xa0\x41\x99\x4c\x65\xb2\x83\xcc\x40\xaa\x97\x5e\x79\x1c\xf6\x82\x5a\xb2\x46\x92\x82\x7a\xbb\x6c\xe0\x7a\x1b\xea\x86\xda\xb7\x58\x2a\x88\x5b\x26\xeb\x1c\x61\x27\x54\x54\x39\xcf\x03\xac\x1c\xa2\x62\xb8\x6d\xba\x94\x27\x59\x30\x0c\x8d\x40\x62\x5b\x5c\x06\xc6\xd2\x00\x15\x10\x5d\x0c\xa8\x66\xb5\x2b\x6a\xfe\x77\xc8\x04\x2e\xb3\x19\x2a\x0c\x05\xfb\xd8\x96\x98\xa0\x07\x54\x2b\x48\xcb\xb2\x80\x3a\xcf\x6f\xd4\xe2\x6b\xc2\xec\xf5\x79\xd2\xa7\xbc\xc1\x24\x2b\x56\xec\x92\x2b\x5d\x76\xb4\xf4\xa6\x2f\x89\x1d\x72\x81\xb6\x2b\x02\xcb\x6d\x88\xd9\xbf\xef\x52\x20\x8f\x68\xf4\xa0\x95\x68\x88\x75\xb1\x81\x40\xd6\x0e\xd8\x3f\xf4\x3c\xd3\x1a\x8d\x19\x98\x3b\xd4\xb2\xfa\xa3\x71\x6b\x8a\x8f\x65\x7e\x54\xf7\xe9\x19\xd0\x39\x16\xf2\xa5\x06\xd7\x7a\x44\x05\xd6\xaf\x08\x43\xae\x14\x54\xef\x8b\xcc\xbb\xff\x68\x46\x23\x76\x42\x0a\xd2\x98\x9f\xe5\x0a\x8a\x65\x0f\x44\x94\x83\xb5\x5c\x57\xc2\x5a\x02\x5f\x75\x2f\xa6\xce\xbf\xbf\x1a\x53\xe8\x03\x2c\x19\x74\xe0\x13\xd2\xb3\x52\x45\x6b\x90\x57\xf4\x28\xb5\xdf\x21\xfa\xa8\x3e\x6a\xa9\x87\x02\xdf\xce\x99\xfd\xe5\x48\xd4\xb7\x54\xbf\xa5\x7b\xb4\xd2\x41\x3a\x97\x2f\x73\x3c\x8c\x99\x77\xfb\x66\xf3\x4d\xbb\x86\xd5\x62\x2e\x21\xf2\xf0\x54\x76\xfa\x46\xaa\xd7\x75\x2e\x46\xd0\x22\x50\xf7\x64\x2f\x92\x5a\xb2\x80\xf6\x84\xf8\x66\x52\x90\xed\xb7\x87\xe7\x3e\xda\x13\xeb\x14\xc8\x85\xa7\x89\x23\x62\x81\xf6\xcb\xee\xb5\x27\x6d\x86\xe5\x1a\xb2\xa9\x47\xd6\xf9\x3e\xcf\x60\x6a\x33\x5e\xb6\x3d\x5e\x88\xaf\xfd\x2f\x55\x1f\xfe\x09\xd9\x32\x13\xcb\xb2\x7f\x12\xaf\xae\xbd\x5f\x0f\x57\xdb\xf6\x10\xf7\x6f\x6a\xc9\x15\x5c\xb6\x0d\xad\x78\x06\x0c\x32\x8f\x18\x3d\xb3\x26\x47\x42\x4a\xd6\x08\xee\x44\x32\x7e\x8b\xd7\xe2\x4d\x57\xd8\xaa\x2e\x3e\x29\x9e\x85\xb7\x5b\xe4\x5d\x49\x14\x70\xe1\xdf\x5f\x53\x28\x1a\xa8\x94\xdf\x5f\xab\xf0\xd2\x06\xee\x1b\x54\x0a\x2c\x63\x64\x78\x7a\x4e\x45\xaf\xf8\x91\x3c\xd2\xa3\x46\x91\xc8\x57\xd7\x7e\xae\x95\xd5\x5f\x05\x0f\xb0\xf4\x2d\xf1\xb4\xbf\xa1\x8a\x4a\x19\x9a\x40\xa5\x3f\x1a\x5b\xbe\x66\x7c\xda\x98\x69\xea\x11\x3f\x92\x23\x99\x47\xe8\x92\xb5\x38\x42\xd7\x20\x2b\x43\x25\xab\x3d\xb2\xa7\xa6\xd1\x23\xce\x1a\xcf\x7b\xf4\x76\x31\x17\xcb\xcf\xb9\x11\x51\x1d\x7b\x87\x8a\x22\xf6\xa8\xc5\xb9\x14\xf4\x71\x1b\x5a\x4b\x1c\x91\xf9\x36\xd5\xa3\xee\xd6\xf6\x84\x5f\x5f\x46\x5f\xdb\x62\xbe\xeb\x96\x7d\x62\x40\xa3\x1e\xb2\x6f\x01\xda\xd5\xfd\x04\x62\xa2\x23\xe9\xb1\xb8\x4b\xd5\x93\xf4\x7a\x95\xa9\x40\x61\x96\x54\x22\x8d\x6d\xb2\xe7\x64\x95\xfd\x83\x22\xae\x1b\xde\x18\xd1\x3c\x31\x47\x2c\x5e\xa6\x7c\xf8\xd6\xe6\x79\x41\x21\x7f\x40\x9b\x9d\x1d\x51\x49\x85\x71\x5a\xbd\xe6\x98\xee\x65\x71\x97\x8f\xf5\x63\x7b\xad\xf2\xf1\xb7\x7c\xbc\xae\xfc\x71\xbd\xf6\xa4\x1d\xaf\x6b\xe4\x10\x29\x6b\xc5\x92\x63\xc1\x97\x3d\x98\x6a\xb2\xdf\xc2\x58\x5f\x6b\x7f\x3d\x5a\x76\xff\xd4\xef\x9f\xfa\x3d\x22\xf9\xa9\xff\xbc\x10\xb7\x94\xd7\x4f\x03\x5c\xde\x06\xb8\xbc\x03\xb0\x1e\xd7\xc2\xed\xb8\x89\x46\xb9\xc5\xdd\xaf\xd3\x6c\xbe\x1a\x6a\x83\xff\x3f\xf0\x1c\x19\x97\xdf\xc9\x41\x33\xe6\xa6\xa8\x34\xcf\xd3\x1f\xd7\x8f\xc7\xb5\x5f\x5d\x28\xbd\xcf\x84\x5c\xcc\x3a\xa3\x6a\xd1\x2f\x32\xd1\x77\xeb\x7e\xcf\xf5\xf3\x4f\xe9\x90\xd4\xef\x8b\x89\x23\x2e\x08\x9b\x36\x73\x45\x70\x9e\x1e\x11\xde\x4e\x89\x1c\xda\x28\xb1\xcf\x93\x80\x06\x45\x72\xf7\x83\xa7\x97\x6d\x8b\xcb\x68\x24\xff\xf9\xc3\x40\x55\x78\x80\x79\xe2\xd0\x36\x53\xc8\x25\xed\x78\x73\x37\x3f\x20\xe7\x0d\xfe\x3f\x00\x00\xff\xff\x53\x7d\x02\x1b\xb4\x0c\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 3252, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1522108932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x5b\xd2\xac\x20\x0c\x04\xe0\x77\xf7\x72\xba\xe8\x5c\x20\x94\xfb\xdf\xd7\xa9\xe0\x3f\x4a\x78\xe3\xcb\x48\x26\xd5\x46\x2a\x7a\x20\x06\x6c\xdc\xd7\x0b\x0e\xff\x69\x2a\xd8\xe6\xd2\x30\x70\x4c\x90\xcf\xa3\x23\xc0\x1e\x10\x6d\x3f\x8a\x36\x50\x6d\x91\x6d\xc0\xe0\x6d\x87\xdc\x97\x24\x14\x8c\x09\x4a\xaf\xf6\x71\x38\xee\xcb\x1a\xc6\x80\xc8\x84\xfa\x2e\xd7\xfb\x72\x59\x47\x0e\x42\x9a\xdc\x57\xb7\xfc\x13\x03\xe3\x3b\x4b\xd6\x1d\xee\xa0\x06\xda\xbf\xef\x2c\xee\xef\x4f\x5d\x21\x9c\x85\xd2\x2a\x59\x99\x6d\x3b\xc8\x09\x9a\x3d\xa3\x17\x47\x75\xcc\xea\xb9\x72\x21\xc4\x15\xaa\x7f\x31\xbd\x94\xa6\xe9\x8c\xbb\xc1\x09\xc6\x38\x1c\xd5\x4f\xbb\xd7\x62\xfd\xf0\x38\xbc\xdf\x57\xc8\x2c\xd4\xbd\x5b\x86\xb6\x61\xa5\xf6\x33\x99\x89\x1c\xee\xd5\xbd\x1d\x96\xcd\xdd\xeb\x2c\x4f\x61\x1e\x05\xe7\x59\xc8\x78\x7c\x3c\x6f\x32\xe3\xb2\xd7\x62\x0d\x19\xf6\xc6\xf5\x2a\x97\x7b\x6e\x0f\x35\x2a\x67\xa1\xd5\x87\x8d\x95\xf5\xae\x7d\x77\x67\x87\x5b\x51\xec\xa2\xe4\xcc\x93\x10\x15\x44\x5b\xfb\xbb\x33\x0a\x57\x68\x1b\xe5\x23\x75\x82\x71\x14\x64\x6f\xf7\x14\xec\x57\x30\x0c\x01\x43\x0f\xf7\xc3\x51\x9d\x1b\x25\xf9\xd5\xe6\xd2\xda\x9a\x6f\x63\xe7\xfd\x3f\x00\x00\xff\xff\xec\x43\x91\xf4\x39\x04\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 1081, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6e\xc4\x20\x0c\x45\xf7\x3d\x4a\x17\x56\x3b\x5d\xce\x69\x18\xe3\x50\x57\x36\x8e\xb0\x03\xd7\xef\x22\x23\x75\x1a\x92\x1d\x3c\xfb\x3f\xf1\x79\x07\xf5\x25\x2a\x3a\x03\x9a\xde\xdf\x12\x06\xf7\x14\x6c\x15\x5c\x1c\x94\xb1\x99\xdb\x12\xcf\xe9\xca\xf0\xe0\x5a\xf6\x1b\xda\xed\x6c\x09\x9b\x1c\x51\xd6\x0c\x4a\x91\x9c\x5a\x67\xa4\x29\x52\x5e\xac\x05\x84\x3b\x3d\xcf\x62\x8f\x24\xe0\x49\x41\xbd\xee\x8c\x09\xbb\xb0\xc7\xd1\x21\x56\xb8\xbe\x64\xff\xf7\xb2\x58\xfe\x14\xed\xf6\xe1\xe3\xe7\xf3\x4b\xdb\x51\x12\xb0\xb5\xe9\x75\xc1\x4a\x30\xb8\x66\x1b\xbe\x93\xed\x7b\x39\x2e\x9d\xe4\x7a\x12\xce\x97\x7f\x39\x32\xae\x67\x2c\xc9\x54\x6d\x38\x5a\x0d\x48\xeb\x3a\x5b\xae\x46\x40\xb9\x90\x6f\x1c\x04\x95\xe2\xfe\x1b\x00\x00\xff\xff\xf7\xed\xef\x11\xe8\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 488, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\x49\xae\x64\x31\x08\x05\xd1\xb9\xf7\x52\x21\x2e\xad\x2d\xef\x7f\x5f\xa5\x97\x8d\x7e\xce\x38\x10\x28\x98\x83\xc7\xa1\xcf\x5d\x0a\xb6\x21\xa7\xf2\xae\x34\xa4\x8d\x2c\x98\xb7\x7c\x50\x3a\xd3\x77\x95\x50\x1a\x5d\xec\xfc\x48\x84\x53\xba\xab\x1c\x75\x23\x19\x9d\x7f\x74\x63\xe6\xcd\xd9\xa8\x45\xea\x87\xc1\xae\x17\x3d\x9e\x87\x57\xdb\x49\xe2\x81\xfd\xfb\x4e\x5e\xf5\x59\x57\xe2\x15\xbf\xc8\xbb\xba\x28\xe7\x6c\x3c\xf4\x95\x6c\xa3\xe7\xa8\x18\xa4\xc1\xa3\x50\xdf\xa5\x23\x3c\x06\x7f\x02\xef\xbb\xdc\x86\x6c\x74\x12\xe5\xfd\x1f\x00\x00\xff\xff\x3e\xd2\x68\x20\x1b\x01\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 283, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xdf\x8a\xea\x30\x10\x06\xf0\xfb\xf3\x28\x82\x43\xf3\xa7\xad\x72\x9e\x26\xdb\x4c\x4b\xd8\x34\x91\x24\x1a\xfb\xf6\x8b\x5b\x04\x6d\xbf\x05\x6f\x7f\xf9\x66\x46\x87\xce\x81\xcc\x71\xce\x6c\x27\xa6\xc0\xe5\xff\xbf\x03\xd9\x61\x03\x85\x3d\xcf\x5c\xd2\x42\xb3\x1b\x52\xcc\x71\x2c\x34\xc4\xf9\xf7\x29\x99\x71\x74\xc3\x6c\x82\x99\x38\x3d\x0b\x6e\x31\x15\xbe\x93\x35\xc5\x6c\x4b\x8c\xf5\x54\x5d\xb0\xb1\xe6\x15\x06\x9b\x85\xd0\x8a\x7c\x0c\xe4\x7d\xa8\x6b\x8f\x87\xca\x06\xeb\x19\xa9\xd6\x48\xdb\x1e\x69\x07\x3b\x9c\x50\xb6\xef\xc9\x5e\xf3\x3b\xca\x46\x0b\x41\x7e\x58\x76\x2c\x35\xe6\x16\xb2\xc2\xac\x31\x77\x78\xe4\x19\xa5\x85\x54\x60\x75\x52\xc8\x47\x13\xc4\xe0\xaf\x4b\xa1\xd0\xa6\xa5\x50\x12\x34\x51\xcd\x69\xff\x3b\x94\x3a\x03\xd4\x60\x49\xba\xe9\x10\xf6\x34\x26\xb3\x41\xdd\x83\x64\x0b\xa6\xc3\x8d\xe9\x7e\x87\x8b\xa4\xcc\xa5\xb8\x30\x65\xf0\xc5\x92\xf9\x36\x36\xe4\x35\x6b\xbf\xda\x8f\xb3\x13\xc7\xcf\xb3\xf5\xfe\x7e\x14\xcf\xc2\x63\x75\x01\x9e\x51\xbe\x2c\x81\x8b\xc4\xcc\xd7\x14\x2f\xfc\xf2\xf6\x3a\xab\x70\x62\x1b\xc9\x5d\x6e\xdd\xb6\x7a\x3d\xdb\x3f\x67\x56\x53\x72\x0c\x1b\xfd\x09\x00\x00\xff\xff\xa2\x86\xf2\xc0\x3f\x04\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 1087, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x51\xaa\xee\x20\x0c\x04\xe0\xf7\x2e\x66\xc8\x4c\xa2\x89\xb8\xff\x7d\x5d\x5a\x6f\x7f\x2b\xe7\x41\xf0\x43\x8c\x91\x09\x1d\x59\x60\x15\x18\x39\xaf\x45\xb9\x83\xee\x0f\x8b\x68\x68\x7b\x3f\xa0\xd0\xbc\xc2\xd0\x0b\x92\x20\x2e\xa6\x41\x32\x28\x6a\x93\x50\x8c\xc5\x84\xd4\xff\xb0\xd9\x43\xb2\x40\xeb\xa0\xdb\xbc\x9a\x40\xbf\xfb\x29\x54\x9e\x1c\x07\xd9\xfe\xbb\x07\x14\x86\x83\x84\xac\x6d\x37\x22\x62\x31\x0b\x77\x81\xc6\x1f\x19\x79\x17\xd8\x6e\x5c\xdf\x7a\x7d\xaf\xbe\x39\x1c\xfc\x58\x72\xc8\x17\x2b\xd1\x0d\xb4\x9c\x57\x6f\x68\x0d\x11\xa0\xd5\xa1\xf1\x8a\x74\xdc\xcf\x7c\xe4\xaf\xd4\x84\xe4\x57\xe3\x38\xe3\xb0\x79\xd1\x02\x71\xdf\x4a\xf4\xfe\xe1\x80\xf8\xa3\x54\x2b\xc0\x4d\x99\xb6\x3d\xc1\x3e\xe6\x45\x72\x45\x36\x9e\x36\x0e\xc6\x61\xad\x79\x08\x30\x0d\xfe\x04\x3d\xff\x05\x00\x00\xff\xff\xfd\x0b\x07\x61\x49\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 585, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1522108925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x5d\x6a\x45\x21\x0c\x04\xe0\xf7\xb3\x97\x0e\x4e\xfe\x4c\x70\xff\xfb\x2a\x72\x5b\x8e\xf1\x3e\x7e\x23\x64\x82\x4a\x05\xc7\x84\xc1\xc7\x7a\x64\x43\xc1\x2c\x50\xfc\x72\x74\xfb\xbc\x9c\xeb\xb1\x81\x39\x21\x52\x50\x3f\xe5\xba\x9e\x70\xb8\x83\x9a\x20\xa5\xd3\x1a\x77\xd1\xc1\x7c\x19\x0a\x61\x35\xca\xe8\x64\xe7\x2e\x0a\x90\x05\x9a\x7d\x76\x6e\xce\xee\xac\xee\x1a\xeb\xa1\x1a\x38\x07\x9c\x5f\x16\x8b\xcb\xf3\x72\x1e\x56\x48\x35\xea\x39\x2d\x31\x7e\x0e\x88\xfb\x7b\x48\x3a\x42\x0e\x87\xf7\xd9\x9f\xa0\xae\xc0\x79\x07\xba\x1e\xfa\x84\x07\x2a\x40\xd9\x2c\x42\x54\x90\xbb\xb5\x31\x46\xa7\xbc\xa4\xd6\xdf\xb0\x16\xd8\x7f\x60\x98\x02\xa6\x5e\x8e\xcb\xd9\xbd\x2f\x57\xf6\x57\xdc\x0f\x60\x7b\x9d\xdf\x00\x00\x00\xff\xff\x88\x7c\x3f\xb5\x9c\x02\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 668, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\x4b\xae\x65\x21\x08\x85\xe1\xfe\x9e\xcb\xf9\xc3\xe2\x21\x1a\xe7\x3f\xaf\x8a\xbb\x4e\xd5\xf5\xf6\xfc\x4c\x58\x04\x50\xd0\x0b\x8f\xc5\x58\xfb\x51\x30\x0d\x39\x95\xfb\x49\x43\x9a\xc8\x82\xbe\x34\x50\xd8\x7e\x4a\x28\x8d\x51\xcc\xfc\x2f\x79\xa3\xd5\x5f\x8b\x70\x4a\xfb\x29\x47\x63\x20\x19\x23\x7f\xe8\x46\xf7\x97\x8b\x16\x2a\xfb\xcb\x9e\x68\x88\xd4\xc5\x60\xd6\x4b\x8f\x53\xf0\x96\x8e\x24\xf1\xc0\x3e\xff\x5e\x5e\xf5\xfd\xae\xc4\x2b\x6e\xe4\x7e\x46\x71\x02\x6d\xe2\xeb\x56\x9d\xe1\x2d\xc9\xe2\x0c\x79\xb2\x15\x3a\x01\x0c\x61\x9f\x0b\x6f\x07\x45\x23\x35\x1e\x85\xc6\x7e\x54\x4d\x15\x8a\x3c\x7b\xb8\x5c\xc8\xe7\x6f\x9f\xed\x69\x09\x8f\xc6\x6d\x22\x1f\xfb\x71\xcb\x73\x08\xad\xc6\x3e\x17\xde\x6e\x6e\x4d\x0e\xb4\x4e\xfa\xfe\x13\x00\x00\xff\xff\xc8\x65\xa3\x18\xb3\x01\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 435, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x51\x6a\xc3\x30\x0c\x06\xe0\xf7\x1d\xa5\x50\x61\x2b\x49\xe3\xb0\xd3\x88\x44\x09\x66\x8e\x1d\x6c\xb5\x59\x6e\x3f\xb6\x32\xe8\x62\xed\xf5\xfb\x6d\x24\xc4\x7f\x01\xba\xae\x85\xa7\x85\x21\xb2\xbc\xbf\x5d\x40\x38\xf0\xca\x92\x0f\x58\xfd\x98\x53\x49\xb3\xc0\x98\xd6\x9f\x28\xd3\x3c\xfb\x71\xa5\x48\x0b\xe7\xdf\x0f\xf7\x6d\x22\xe1\xfa\xf5\x23\x65\xe1\x4f\x98\x48\xa8\x0e\xf7\x72\xb6\xbf\x7b\x8c\x53\xb1\x68\x07\x08\x29\x42\x08\x71\x7f\x51\x74\x9a\xb6\xad\xa6\xb7\x4e\xd3\xbe\xd1\xd4\xa9\x6f\x5d\x5f\x2b\x1a\x63\x3a\x28\x52\x71\x6b\x5a\x08\xe3\x51\x71\x87\x2a\x3b\x8d\x2d\xa2\xb2\xc8\x37\x2b\xd7\x40\x8b\xdd\x4d\xe5\x5e\xb9\x12\x5a\x74\x56\xe5\x41\xb9\x48\x63\x4d\xbd\x5e\xd3\x0c\x35\x3a\xab\x0c\x73\x0d\x2a\xd8\x9a\x13\x16\x16\xf1\x71\x29\xd7\xdd\x47\xb5\x2b\x65\x3b\x22\x0b\xea\x4c\x41\xf4\x80\xef\x39\x6d\xaf\xa5\xa4\x0f\x9a\x62\x79\xce\x7c\x36\xf3\xdf\x89\xbb\x8f\x0e\xfc\xf6\xb8\x9d\x82\xaf\x00\x00\x00\xff\xff\x50\x1a\xd4\xdb\x2c\x03\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 812, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x41\xae\xc4\x20\x0c\x03\xd0\x7d\x0f\x63\xc5\x4e\x02\x44\xdc\xff\x5e\x5f\xb4\x33\xbf\x30\x8b\x4a\x7d\x0a\xa6\x34\x81\x8e\x3e\x20\x4f\x50\x6d\x5e\x74\x0c\x22\x91\xfe\xff\x5e\x50\x68\x5e\x72\xd4\x40\x14\x18\x0f\xea\x86\x38\xaf\x30\xf4\x0e\xa9\x41\x51\x07\xd3\x5e\x0e\x94\xe6\x95\x02\x7d\x80\x31\x30\xfa\xc9\x3a\xc8\xfc\xb8\x05\xe4\x84\xf2\x65\x18\xf6\x6a\x10\xb2\xad\x9c\x44\xc4\xc3\xbe\x36\xeb\x2b\xf1\x3a\x09\x51\xaf\xd7\xd3\x5e\x96\x83\x9b\x25\x87\xfc\xe1\x58\xa5\x00\xfb\xd7\x1d\xcd\x40\x7b\x7e\x44\xee\x60\xd5\xd3\x84\x96\xc8\x44\x04\x68\xe3\x2b\x72\xe5\x0f\xe9\x90\x7f\xa5\x14\xe2\x50\x1d\x62\xd9\x4e\x99\xe6\x45\x0b\xc4\xda\xa4\xa3\xb5\x8d\x85\x35\xa3\x0f\xd7\x18\xee\xd9\xbe\xdc\xc3\xf2\x0e\xb6\x9a\x17\x49\x48\x84\x0a\xf4\x38\xac\x5c\xf6\xd5\x06\x83\xdb\x27\xbf\xdb\x7f\xfc\xb3\xfe\x3e\xce\xfa\x10\xdb\x7d\x3c\xae\x1b\xc5\xec\xc8\x06\x56\xa0\xeb\xa4\x9f\x5c\x8b\x8b\x90\x17\xd2\xc0\x71\xb0\xf7\x8d\x02\xcd\x36\x07\x52\xf3\x2f\x00\x00\xff\xff\x80\x5e\x2e\xfc\xf1\x02\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 753, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x4d\xce\xee\x20\x08\x05\xe0\x79\xf7\x72\x4f\x3c\xfc\x89\xe9\xfe\xf7\x75\xa3\xe6\xed\x27\xce\xfa\x50\x31\x88\x48\x45\x24\xb2\x83\xdd\xdf\x67\x6b\x28\xd8\xc6\x52\x37\xb0\x0f\x90\x7d\x33\xc1\x48\x88\xb6\x8f\x69\x30\xfb\x49\xb4\x81\xba\xc9\xd6\x61\xf0\xf6\x3e\x32\xa1\x60\x0e\x50\xfc\x72\x54\x7b\xbf\x9c\xef\x63\x0d\xbd\x43\x64\x40\xfd\x94\xeb\xfb\xb8\x80\xa9\xb0\x79\x80\xf8\x48\x26\xd8\xb9\x3c\x57\xb2\x13\xd2\xe4\x7d\xc2\x60\x90\xbe\xca\x0a\xc7\x5c\xde\x12\x9c\x3b\x4d\x3a\xa8\x89\xf6\xef\xef\x5b\xdc\xbf\x5f\xa1\x10\x8e\x42\x69\x95\xac\x94\x1f\xc5\x04\xe2\xf6\x3e\x11\x20\x07\x68\xb6\xcf\x5a\x9c\xd5\x39\xaa\xc7\xea\x3a\x21\xae\xa0\xed\xaa\xa9\xf3\x86\x1a\x9c\x60\xf6\xcb\x59\xbd\xf3\x3f\x8b\xc5\xe5\x7e\xf9\xcc\x57\xc8\x28\xd4\x73\xb7\xd9\xb4\x03\xab\x6b\x3f\x93\xb3\x05\x97\xa3\x3a\xda\x65\x39\x1c\x5e\x6b\xd9\x81\x71\x05\x9c\x77\x60\xb6\xc7\xfb\xbe\x49\x85\x34\xfb\x2c\xd6\x30\xbb\x7b\x70\x4d\xe2\xe1\x75\xb5\xcb\x31\xe7\x8d\x9a\x95\xa3\xd0\xea\x62\x63\x65\xcd\xb5\xbf\xdc\x11\x70\x2b\xca\x53\x14\x2d\x9c\x13\xc3\x41\x88\x0a\xb2\xad\x07\x70\x32\x0b\x57\x4f\x0f\xca\x1f\xa9\x03\xcc\x2b\x20\xe7\x76\x3b\x60\xbf\x80\xa1\xaf\x97\x75\x39\x2e\xe7\xfb\xc8\x7c\xf6\x73\x68\x6d\xd5\x73\x30\xf8\xfe\x0f\x00\x00\xff\xff\xe8\x75\x37\xc5\x6e\x04\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 1134, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9a\x4b\x6f\xdb\x46\x10\x80\xcf\xf5\xaf\x60\x75\x6d\x35\x9a\x99\x7d\x1b\x76\x02\xf4\xdc\x9c\x52\xa0\x47\x43\xb6\xd9\x46\xa8\x2d\x1a\x94\xdc\x38\xfd\xf5\xc5\x52\x14\xf7\x41\x39\x28\x50\x0c\x0f\x01\xc8\x2f\x94\xbf\xd9\xe7\x2c\x77\x79\xf3\xe3\x7a\xdd\xfc\xbe\xdb\x3f\x76\x5f\x0f\x9f\x5f\xbe\xfd\xf2\xd4\x3d\xfc\xd5\xf6\xcd\xd7\xdd\x9e\xb0\x69\xdf\x8e\xfd\xb6\x59\xaf\x3f\x5c\x0d\x8f\x7d\xee\x5e\xfb\x87\xf6\xba\xf9\x72\x3c\xbe\x1c\xae\x37\x9b\x3f\x77\xc7\x2f\xaf\xf7\xf0\xd0\x3d\x6f\x1e\xfa\xed\x3f\xdf\xd6\xcf\xdb\xb7\xcd\xfc\x6f\x4d\xbf\xff\x75\x7b\x38\xae\x3f\x75\x8f\xbb\x3f\x76\xed\xe3\x75\xf3\xdb\x6b\xfb\x73\xc3\xae\xf9\xb4\xed\x1b\x46\xf2\x0d\xf2\x35\xd2\xb5\xc6\xe6\x27\x64\xc4\xe1\x77\x57\x37\x1f\xdf\x9e\x9f\x9a\xbf\xdb\xfe\xb0\xeb\xf6\xb7\x2b\x02\x5c\x7d\xfc\x70\x75\xd3\x77\xdd\xf1\xc3\xd5\x0f\x37\xbb\x63\xfb\xdc\xec\xb7\xcf\xed\xed\x6a\x08\xf9\x6e\x08\xf9\x8e\x14\xb8\x00\xac\x02\xd8\xb0\x6a\xfa\xd7\xa7\xf6\x76\x55\xb2\xc7\x5d\x7f\xbb\xc2\x55\xf3\xd2\x77\xc7\xee\xa1\x7b\x1a\x6e\x26\x0d\xae\x9a\xdd\xe1\xee\x3e\x16\xe0\x76\x45\xc3\x4d\xbb\xdf\xde\x3f\xb5\x8f\xc3\xed\xe6\x3f\xa9\x3d\xcf\xd5\x91\x49\xaa\x3d\x02\x31\x18\x9d\x99\x13\x92\x14\x13\x3a\x50\x40\xec\x33\x73\xc6\xa4\xd5\x06\x3c\x56\xe6\x13\x5a\x40\x5c\x17\xf9\x84\xa4\xc5\xb1\x65\x6b\xf3\xc8\xa4\xd5\x4c\xc0\x58\x57\xf7\x19\x8a\xc9\x59\x41\xb0\x60\x18\x8c\x3a\xab\x0b\x24\x2c\x66\xf4\xf1\x5f\xa9\x9e\xa0\xa8\xdc\x01\x39\x0f\xe4\x8a\x72\x67\x50\x52\x4e\x18\xa7\x0f\x06\x72\x26\xb3\x17\x54\x4c\xaf\x11\x9c\x03\x66\x0d\x53\xb5\x17\x68\x01\x31\xd1\xdc\x1c\xd9\x12\x6a\x6d\x2e\xb8\xf5\x32\x15\xce\x29\x85\x54\x50\x5c\x6e\x80\xf5\xac\xbd\x47\x28\x2e\xb7\xc0\x3a\xd4\xf2\x11\x2e\x21\x37\x78\x41\x6e\x24\xa7\xd5\xd1\xa3\x10\x66\xfd\x6d\x64\x92\x6a\x1f\xd7\x07\x0e\x4c\x3e\xcc\x32\x26\xa9\x0e\x08\xa4\x2c\xe4\xe6\x84\x96\x10\x87\x0b\x66\xe1\x6e\x36\x6a\x18\xe7\x6a\x16\xee\x64\x84\x04\xda\xc6\xa4\x95\xb9\x73\x28\x2a\x27\x0d\xac\x09\x48\xe7\xcd\x5d\x50\x59\xbd\x03\x0a\x08\x8e\x0b\x7b\x82\xb2\x72\x0f\x84\x0a\x5c\xe1\x9e\x98\xa8\x3a\x2e\x0a\xe3\xfa\xd0\xe4\x7d\xbd\xa0\xb2\x7a\x07\xa4\x19\x9c\x2d\xec\x09\x8a\xc9\x4d\xec\x54\x08\xd6\x80\x9f\xf2\x68\xc9\xa4\xd5\x43\x31\x83\xab\xe4\x13\x95\xd5\x13\xc4\xb4\xc5\xa1\xb0\x27\x28\x2d\x57\x9c\x25\x94\x92\xc9\xa9\x19\xc8\x6a\xa0\x40\x60\xa6\x3c\x5a\x41\x69\x39\xb3\xcb\x5f\x51\x6a\x2a\xab\xb7\x40\x84\x60\x75\x61\x4f\x50\x5c\xce\x71\xcd\x52\xcb\x47\x28\x2b\x0f\xe0\x08\x28\xad\xdc\x2a\x28\x2a\x8f\x92\x21\x79\x17\xf6\x9c\xca\xea\x3d\x90\x25\x48\x59\xb5\x82\xf2\x72\x05\xde\xcc\xe4\x27\x28\x29\x67\x15\x1b\xb9\xec\x71\x19\x13\x57\x87\x2c\xa9\x95\x4c\x5a\x6d\x43\xd5\xd7\x73\x28\x26\xb7\x1a\x34\xb0\x02\x5c\x9f\xaf\x38\x4d\xb3\xef\xfc\xa7\x6c\x30\x26\xbe\x0f\xab\x22\x84\x33\x5a\x40\xac\xe7\x62\xc9\x49\xd6\x1a\x88\x83\x0b\x31\xdb\x10\x29\xd9\x02\xea\xa0\xe6\xea\x20\x5a\xdd\xa3\xc6\x43\x5a\xca\x94\x6c\x01\xb5\xb9\xa0\x16\x5d\x38\x47\x8d\x39\x95\xb0\xa8\xf0\xc4\x84\xd5\x7c\x1a\xca\xd3\x75\x3e\xd2\xdf\x7f\x40\x3a\x28\xc3\xa0\xab\xfa\x38\x33\xb9\xfd\x76\xd4\xa0\x11\x98\x10\x54\x3a\x4c\x2a\xa1\xbc\x9c\x40\x99\x99\xfc\x04\x65\xe5\x7a\x38\xbb\x72\x65\xc9\x13\x14\x97\x7b\x60\x5d\xbb\x4f\x6c\x09\xb5\xbf\xa0\x16\x3d\xdc\x99\x34\x84\x6a\xee\x1e\xa0\xac\xdc\x00\x79\xa0\xb4\xa6\xaa\xa0\xa8\x9c\x49\x9f\xf6\x5b\x29\xb7\xe7\x54\x58\x6f\x80\x74\xb1\x90\x9f\x61\xc1\x63\x3d\x8a\x0b\x17\xb0\x04\xb8\xce\x6e\xb2\x89\xf7\xbb\x8f\x08\x06\xa6\x81\x1c\x02\x79\x03\x2e\x3b\x70\x2c\xe9\x02\x7a\x9f\x9f\x49\xcc\xb0\x5c\x00\xc6\xc5\x3c\x63\x6c\xac\xf4\xe9\x3a\x6f\x96\xf7\x1f\x90\x0e\x8a\x30\xa4\x2d\xc5\x92\x2d\xa1\xe6\x6c\x6a\xae\xe8\x32\x7a\x7b\x51\x2f\xf9\x02\x56\x88\xfc\x45\xfd\x02\x9d\x71\x10\x29\xbc\xa4\x57\xa2\x83\x71\x14\x71\x80\x6c\x8e\x2e\xa1\xb8\x3c\x8e\x7c\x35\x6b\xf9\x33\x5d\x46\x3f\x6b\xf9\x33\x5d\x44\xaf\x67\x2d\x7f\xa6\xf2\x7a\x53\x7c\x5f\x54\x51\x39\xbd\xf5\x60\x55\x5c\x85\xb8\xf4\x2d\x59\xc1\xe4\xd4\x81\x80\xd5\xb0\x7d\x0b\x94\xcd\x38\x35\x16\x0e\x20\x9c\x8e\x6b\xd2\x69\xc2\x0c\xcb\x7d\x81\x82\x1a\x5c\x88\x12\xc0\x75\x76\x93\xe5\xc0\xef\x3e\x22\x1a\x18\xc5\xd7\x71\x4d\xc0\x5a\xe7\xc1\x14\x58\x30\x00\x07\xda\x42\x2c\x27\x27\x7b\xce\xa4\xd5\x84\x94\x6d\x8c\x54\x50\x5c\x6e\x14\x50\xde\x09\x4a\x2a\xae\x0f\x71\xd6\xab\xed\x23\x5c\x42\xce\xb3\xa2\x8f\x70\x09\xb9\x52\x17\xe4\x4a\xf4\x4b\xb4\xe4\x49\x19\xa8\x82\xd2\x72\x66\x05\xa1\x6e\xf3\x33\x14\x95\x5b\x3f\x1c\x67\x65\xdb\xbe\x35\xfd\xbf\xfa\x9b\xcd\xf0\x45\xf5\xbf\x01\x00\x00\xff\xff\xa6\x11\xc7\xf6\x0e\x2e\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 11790, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xdd\x4b\x6f\xdc\xc8\xd5\xc6\xf1\xf5\xeb\x4f\xd1\xaf\xb6\x89\x8e\xea\x9c\xba\x1b\xb6\x07\xc8\x3a\xb3\x9a\x00\x59\x1a\xb2\xdd\xc9\x08\xb1\xd5\x82\x24\x67\xc6\xf9\xf4\x01\xab\x79\x39\x75\x58\x41\x16\xc1\xc3\x85\x07\xd0\x1f\x63\xff\xcc\x6a\x5e\x8a\x6c\x92\x7e\xf7\xff\xb7\xb7\xa7\xbf\x3e\x3c\x7e\xb9\xfc\xf6\xf2\xcb\xd3\x8f\x3f\x7d\xbd\x7c\xfe\xc7\xf9\xf9\xf4\xdb\xc3\x23\xbb\xd3\xcb\xd3\x8f\xd3\xed\xed\x87\x37\xed\x7f\xfa\xe5\xf2\xfd\xf9\xf3\xf9\xed\xe9\xd7\xd7\xd7\xa7\x97\xb7\x77\x77\x7f\x7f\x78\xfd\xf5\xfb\x27\xfa\x7c\xf9\x76\xf7\xf9\xf9\xfe\x5f\x3f\x6e\xbf\xdd\xff\x7e\xb7\xff\x93\xd6\xdf\xff\xe7\xfb\x97\xd7\xdb\x9f\x2f\x5f\x1e\xfe\xf6\x70\xfe\xf2\xf6\xf4\x97\xef\xe7\x3f\x9e\x24\x9f\x7e\xbe\x7f\x3e\x89\xe3\x72\x72\xf2\xd6\xf1\xdb\xe0\x4e\x7f\x70\xe2\x5c\xfb\x7d\x6f\xde\xfd\xf4\xfb\xb7\xaf\xa7\x7f\x9e\x9f\x5f\x1e\x2e\x8f\xef\x6f\x98\xdc\xcd\x4f\x1f\xde\xbc\x7b\xbe\x5c\x5e\x3f\xbc\xf9\xbf\x77\x0f\xaf\xe7\x6f\xa7\xc7\xfb\x6f\xe7\xf7\x37\xed\x2f\xfc\xf1\xe5\xe9\xc7\x47\xf6\x94\x0a\x15\xa1\x72\x73\x7a\xfe\xfe\xf5\xfc\xfe\x46\x97\x2f\x0f\xcf\xef\x6f\xdc\xcd\xe9\xe9\xf9\xf2\x7a\xf9\x7c\xf9\xda\x7e\x58\x01\x77\x73\x7a\x78\xf9\xf8\x69\xfa\xab\xbf\xbf\xe1\xf6\xc3\xf9\xf1\xfe\xd3\xd7\xf3\x97\xf6\xe3\xdd\x7f\x43\x0b\xb1\x54\xc3\xce\x0d\x07\xe7\x44\xc2\x85\x98\xb3\x92\x75\x04\xd3\x95\xb8\xb2\xa5\xe7\x08\xa7\x85\xdd\x9e\x6e\x11\x48\x17\xe2\x9c\x89\x43\xd0\xb4\x8a\x60\x7a\x1a\xdb\x6a\xe9\x39\x62\xe9\xe2\x28\x3a\x23\xcf\x0d\x0e\xd7\x01\x5c\xf1\x70\x20\x2e\xc9\xca\x73\x04\xd3\x89\x24\xda\x55\x6c\x89\x60\x3a\x53\x2c\x56\xbe\x36\x28\x2c\x3e\x12\x8b\x19\xee\x35\xc2\x69\x09\x79\x4f\xb7\x88\xa3\x0b\x53\xa4\xe8\x95\xbb\x16\x2c\x5a\x49\x82\x18\x76\x6e\x38\x98\x5d\x26\xbb\x5a\xab\x86\x85\x83\x0c\xe4\x25\x82\x68\xf1\x54\x33\x25\x26\xf6\xeb\xba\xd5\x37\x28\x2c\xae\x52\x35\xf0\xd2\x80\x70\x25\x76\xc4\xac\xdd\x35\x81\xd9\x4a\xdb\x61\xb9\x6f\x70\x38\x0d\xe0\x04\x87\x39\x4d\xbf\x8c\xbc\x44\x2c\x2d\x4c\xe2\xb2\xa1\x97\x88\xa3\xd9\x09\x05\x92\x6d\xa7\xd9\x37\x2c\x2c\x4c\xc1\xb8\xd7\x84\x65\x39\x46\xe2\xe0\x8c\xbc\x56\x24\xee\x89\x8b\xe8\xc3\xb2\xad\x20\x3c\xb8\xe9\xfc\x49\x64\x1a\xe0\xf5\x40\x65\x22\x90\x9e\x4e\x23\x12\x65\xaf\xe5\xad\xc1\x61\x75\x22\x69\x22\x9c\x96\xc8\x7b\xba\x45\x30\x5d\x28\x89\x95\xaf\x0d\x0c\x4f\x27\x4f\xd9\xca\x73\xc4\xd2\xe2\x28\x24\x23\xcf\x0d\x0c\x33\x89\xb7\xab\xd8\x12\xc1\xb4\x4c\x87\x46\x4b\xcf\x11\x4c\x7b\xda\x2f\xf4\xb5\xc1\x61\xae\x65\x2f\xb7\x88\xa3\xb3\x6b\xab\x93\x04\x4d\xeb\x08\xa4\x13\x31\x71\xd6\x2b\xf7\x96\xb0\xac\x6c\x87\x68\x5d\xd0\x28\x77\x7b\x2f\xd5\x80\x70\x26\x91\x42\x41\xef\xbc\x54\x83\xc3\x65\x00\x97\x23\xe0\x2a\x7b\xb8\xc2\x87\xda\x4f\x3b\x29\x36\xf2\x12\x71\x74\x99\x26\x5b\x95\x82\xde\x73\xa9\x86\x83\x99\x3d\x15\x92\x18\x15\xac\x1a\x16\x66\x47\xb9\x18\x78\x6e\x60\x98\xa9\x7a\x0b\x5f\x1b\x18\x0e\xc4\xb1\x5a\x79\x8e\x58\x5a\xa4\xdf\x89\xa8\x06\x5e\xbd\x82\xba\xfa\xd5\x37\x24\x1c\x88\x43\x9b\x6a\x75\xb4\xaa\x48\x3c\x12\xab\xab\x14\x5d\x42\xb2\xed\xdb\x09\x92\xd0\x2f\xb3\xaa\x60\x3c\x32\x49\xb5\xf6\x1c\x81\xb4\x70\x5b\x42\x2e\xfa\x90\xd1\x55\x10\x1e\xdb\x94\x76\xda\x59\xae\x23\xde\x25\x38\xcb\x7b\x16\x77\x9c\x9a\x8d\x69\xce\x53\x8c\x3b\x37\x38\xbc\x1b\xe7\xb9\x61\xe1\x9c\xc8\x5b\x78\x6e\x78\xd8\x7e\xc4\x73\xc3\xc3\x32\x80\xf1\x9b\x52\x21\x1f\xec\x4a\x7d\x6d\x78\x38\x0e\x60\xdc\x24\x48\x21\x69\x00\xe3\xce\xa1\xd6\x4d\xc7\xd1\x76\x47\x81\x89\x07\xd0\xfb\x7d\x88\x3b\x64\x27\xe2\x88\xeb\x88\xc6\x1d\xa3\x56\x25\x8c\x96\x3a\x1c\xb2\xd4\x61\xb4\xd4\xe1\xa0\xa5\x1e\xec\xb6\x03\x7a\xbf\xed\x0b\x71\xd0\xe7\xaf\x26\x1e\x40\xd7\x11\x8d\x1d\xf0\x59\x51\x27\x19\xb6\x02\xf1\xc4\xc4\x91\x24\x74\xbb\x33\x15\x91\x74\x9b\xe0\x92\xf7\x1d\xbd\x45\x3c\xdd\x8f\xb8\x8a\x68\x9a\x49\x5c\xdc\xd9\x73\x05\xe3\x51\x9f\xe6\x98\x88\xa4\x73\xbb\x9c\x5c\xba\x29\x8a\x8a\x78\x9a\x43\x1e\xd8\x0c\x3c\x9b\x5e\x19\x4f\xdc\xcf\x54\x74\x45\xe2\x85\xa6\x03\x46\xee\x3f\xef\x2d\x22\xe9\x4a\x65\xda\x8d\x75\x73\x61\x15\xc1\xb4\x27\x6f\xe1\x96\xc0\x6c\xa6\x20\xd6\xbd\x36\x2c\xcc\xe2\x29\x14\x23\x2f\x11\x4c\x97\x69\x6c\x2d\x3d\x47\x20\x9d\xaf\x97\x5b\xbb\x5d\xf8\xd6\x90\x70\x20\x11\x7b\xc8\x54\x11\x49\x4f\x93\x82\xac\xaf\x16\xd9\x0a\xc6\x23\xeb\xef\xfd\x6d\x05\xe3\xd3\xaf\x64\xed\x39\x82\xe9\x3a\x1d\x28\x76\xf6\x52\xd1\xb8\xd7\x37\x13\xd9\x8a\xc5\xa7\xa3\x94\x78\x63\x2f\x11\x48\x4f\x9b\x31\x4f\x47\xa9\xce\xd6\x15\x89\x07\xe2\x36\x07\xef\x06\x5d\x57\x34\x1e\x49\xdc\x1e\x9f\x2b\x12\xcf\x94\x1c\xb1\xeb\x66\x4a\x2a\xe2\x68\x91\xda\xf6\xdf\x22\x7a\xb2\xd2\x55\x34\xde\x6e\xdd\xda\xe1\x73\x45\xe3\x41\x5d\x86\x37\x11\x4f\x73\x96\x81\xdd\xea\x01\xcb\xdd\x9d\x01\x76\x15\x8d\x47\xca\xfb\x41\xbf\x46\x20\xed\xa7\x29\x4a\x25\x09\x9d\xad\x2b\x12\x4f\xed\xee\x6a\xdf\xdb\x5b\x04\xd3\x9e\xc4\x89\xa5\xe7\x08\xa2\x53\xa0\x40\x89\xd8\xad\x93\x26\x5d\x50\x68\xa4\x69\xe9\x12\xc9\x3a\x2b\xef\x12\x94\x65\xe7\x28\xf7\xec\x9c\xe0\x6c\xdd\xb3\xb8\x95\x6a\x33\xb6\xdb\xda\xfb\x86\x5f\xde\x01\x0c\x7c\xc6\x4e\x21\x32\x80\x81\x1b\xd1\x86\xf8\x01\x8c\xdb\x57\x2b\x24\x0c\x60\xdc\xb4\x60\x46\x12\xab\x47\x08\xfa\x86\xdd\x75\x70\xd5\xf7\xf1\x9b\x08\xa4\x23\x49\x25\xf1\xdd\x6e\x6b\x6b\x50\xd8\x57\xda\x9e\x1c\xed\x12\x94\x0d\x81\x22\xf7\xec\x9c\xe0\x6c\xd8\xb3\xd8\x15\xab\x19\xec\xca\xce\x6d\x0d\x0f\xd7\x01\x8c\x3d\x40\xc4\x76\x49\x48\xcc\x7a\xb5\x34\x28\x7c\xbd\x47\xad\x87\x97\x86\x87\x65\x00\x63\x0f\x10\x33\xe2\x07\x30\xf6\x00\x11\x89\xbd\x7e\x0a\xba\x6f\x58\x38\x27\xf5\x14\x74\xdf\xb0\x7b\xe9\x28\x14\xcc\x50\x2f\x0d\x0e\xa7\x01\x9c\x8e\x80\xb3\xdb\xc3\xf9\x88\xa1\xce\x3c\x80\xd1\xdb\x71\x43\x64\x00\xa3\xb7\xe3\x09\xa9\x83\xcf\x18\x3c\xd1\xbb\x22\x6c\xb7\xa7\x35\xc2\x69\x75\x72\x6a\x22\x8a\x4e\xc4\x5c\xdb\xf5\x7b\xf5\x5d\x99\xad\x20\x9c\x5d\xa0\xf6\xad\x73\x56\x8f\xd4\x99\x88\xa4\xa7\xe3\x42\xa6\x94\x3a\x7a\x8b\x68\xba\xaa\x9b\x31\x4d\x04\xd3\xc1\x91\x88\xb7\xf6\x52\xb1\xb8\x48\xd1\xaf\x36\xe8\x23\x9e\x56\x5b\x98\xad\x60\xdc\x67\xe2\x54\x2d\xbe\x54\x24\x3e\xcd\x81\x88\x6b\xec\xec\x2d\x62\x69\xe1\x40\xcc\x62\xec\xb5\x22\xf1\x44\x4c\xc2\xfd\x36\xb6\x36\x2c\xec\x8b\x3a\x6d\xef\x1b\x16\x8e\x8e\x58\xa2\x91\x97\x08\xa4\x85\x1d\x05\xca\x59\xcb\x5b\x43\xc3\x4e\xdd\xb4\x67\x22\x98\x16\x16\x92\xe0\x2d\xbe\x66\x28\x1f\xa8\xbd\x8b\x26\xf4\xfa\x56\x51\x38\xf3\xf5\xb1\xe0\xaa\x4e\x2f\x4d\x3c\x80\xf6\x23\x1a\x38\xe4\x5a\x09\x43\xfb\x90\x21\x57\xef\xb8\xb0\x15\x85\x7b\x9e\xfe\x7c\x4a\x7a\x2b\xeb\x1a\x1c\x66\xe7\xf7\x72\x8b\x60\xba\x3d\x69\xb7\xb3\x97\x8a\xc7\xc5\xf3\x00\x17\xe4\xac\x7c\x66\xfc\xc4\x38\x8b\x2f\xf5\x08\x3c\x0c\x71\xe4\x2b\xa1\x14\xb3\x5b\xd3\x97\x7a\x00\x1e\x76\x2b\xdc\x52\x8f\xc0\x87\x4b\x0e\x7d\xe1\x99\x62\xea\x10\x47\xbe\xc4\x70\x63\xa2\x8c\xf0\x88\x7c\xf9\x99\x62\xe2\x10\x07\xce\xda\x66\x26\x38\xda\xaf\xec\x73\x84\xd1\xa1\xdd\x56\xe3\x5d\x77\x3e\x66\xea\x01\xb8\x3a\x01\x37\x15\x8c\x47\x21\x8e\x3b\x7c\xa9\x60\x9c\x5d\x26\x09\x16\x5f\xea\x01\x78\x28\x23\x1c\x78\xaf\xb0\x66\x6a\x1a\xe1\x15\xf9\x2e\xc9\x85\x29\xc3\x61\x2f\xc7\x0c\x7b\x19\x0e\x7b\x39\x66\xd8\x8b\xba\x8e\x6c\xeb\x11\xc3\xfe\x1f\xc6\xfd\x88\x81\x6f\x6f\xd5\xd9\xe9\x73\x3d\x00\x1f\x7c\xea\x73\x3d\x00\x1f\x7c\xea\x73\x3d\x00\x1f\x6c\xe9\x73\x45\xe3\xb9\xa8\x37\x6c\xda\x0a\xc6\xdb\xab\x71\x77\x4b\xbe\x54\x18\x9e\xdb\x0b\x26\x0b\x77\x2b\x7b\x17\x51\x74\xcc\x14\x13\x4d\xff\x5d\x61\x9d\xb0\x6c\x9e\x26\x69\xce\xc0\x4b\xc4\xd2\x95\xf5\xf5\xb6\xae\x61\x61\x76\x89\xb8\x04\x43\xaf\xf5\x08\xdc\x7e\xd4\x6b\x3d\x02\xaf\x43\x1c\x78\x8e\x32\x33\xec\x49\xd8\x7e\xe2\x6b\x05\xe3\xc2\xb4\x5f\xf0\x39\xa2\xe9\xa0\x2f\x3c\xf5\x11\x4c\x87\x3a\xd8\xbc\xd7\x8a\xc2\x53\xa1\xc4\xed\x29\xc9\xb0\x9d\x23\xf4\x11\x4b\x73\x48\xa4\xbe\x45\xe8\x23\x9a\xae\xea\x1d\x13\x26\x82\xe9\xac\xef\xb3\x30\x11\x49\x5f\x1f\x72\x51\x17\xb4\xfb\x88\xa4\x7d\xbb\x8f\x35\xf5\x4b\xbd\x45\x34\x5d\xf4\xe3\x17\xb6\xa2\xf0\xca\xed\xbe\x7f\x8e\x91\xca\xb6\x6d\x9b\x0a\xc5\x73\x7b\x89\xad\x7a\x0a\x62\x97\xa1\x7c\xa5\x18\x48\x5d\xed\xea\x23\x88\x96\xe9\x14\x3f\x5d\xef\xed\x58\x69\x13\xb1\x34\xf7\xd7\xd9\x6c\x05\xe2\xa9\x10\xa7\xee\xdf\x38\xb0\xf5\x7f\xc5\xdf\xdd\xb5\x7f\x00\xe9\xdf\x01\x00\x00\xff\xff\x98\x95\x6f\xfd\xbb\x69\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 27067, mode: os.FileMode(438), modTime: time.Unix(1522108929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xda\x41\x6f\xc2\x36\x14\x07\xf0\xf3\xf8\x14\x5e\xae\x1b\x0f\xbf\x67\x3b\xb6\x11\xb4\xd2\xce\xeb\xa9\x93\x76\xac\x28\x64\x6b\x34\x20\x28\x84\xb5\xdd\xa7\x9f\x12\x4a\x70\x12\xab\xda\x61\xcf\xb7\xe6\xaf\xd0\xdf\xc3\x71\x9e\x5e\x22\x56\x3f\xce\xe7\xe2\xf7\xf2\xb8\xab\xde\xcf\xcf\xa7\xcf\x5f\xf6\xd5\xf6\xaf\xa2\x16\xef\xe5\x11\xa5\xb8\x9c\x76\x9b\xa6\x10\xf3\xf9\xc3\xac\x3b\xef\xb9\xba\xd4\xdb\x62\x29\xde\x9a\xe6\x74\x5e\x2e\x16\x7f\x96\xcd\xdb\xe5\x15\xb6\xd5\x61\xb1\xad\x37\xff\x7c\xce\x0f\x9b\x8f\xc5\xf4\x9f\xf5\x9f\xff\x75\x73\x6e\xe6\x4f\xd5\xae\xfc\xa3\x2c\x76\x4b\xf1\xdb\xa5\xf8\x59\x90\x15\x4f\x9b\x5a\x90\x44\x27\x24\x2d\x25\x2e\xb5\x14\x3f\x49\x92\xb2\xfb\xdc\x6c\xf5\xf8\x71\xd8\x8b\xbf\x8b\xfa\x5c\x56\xc7\x75\x86\x20\xb3\xc7\x87\xd9\xaa\xae\xaa\xe6\x61\xf6\xc3\xaa\x6c\x8a\x83\x38\x6e\x0e\xc5\x3a\xeb\x6a\x7e\xb9\xd6\xfc\x82\x0a\x72\x07\xce\x82\xb6\x99\xa8\x2f\xfb\x62\x9d\x0d\xa2\x5d\x59\xaf\x33\x99\x89\x53\x5d\x35\xd5\xb6\xda\x77\x07\xbd\x22\x33\x51\x9e\x5f\x5e\xdb\xfa\xd7\x19\x76\x07\xc5\x71\xf3\xba\x2f\x76\xdd\xe1\xe2\x3f\xc9\x68\xcd\x84\xee\x32\x6e\xdb\x2b\x40\xe9\x87\xf6\x2d\x63\xb5\xad\x06\xb4\x1e\x10\xc3\x35\x0f\x43\x5e\xdd\x01\xe6\x0e\x48\xc9\x50\x0f\x42\x6e\x9d\x94\x04\x54\x7a\xa8\xf7\x21\xab\x8e\xd2\x82\x06\x13\x7e\xf3\x7b\x94\x42\xa6\xa9\x4c\x9c\x32\xb5\x8c\x02\x74\x1e\x90\xf2\x1b\x3e\x4e\xd3\xf8\xc6\xc6\x7c\xc3\xba\xdf\x07\x92\x8b\xfa\x8e\xd3\xd7\x12\xac\x05\x22\x0f\xaa\xef\x72\xc3\x2c\x85\x6d\xd4\xd4\x6e\x33\x3e\xdb\x50\x87\xa0\x45\x20\xd9\x6f\xfa\x71\xca\xe7\xe7\xba\xbd\xb5\x34\x60\x7f\xcd\xc3\x84\xdf\x25\x1a\xbb\xc4\xfb\x7d\x0d\x18\x03\xa8\x1c\xc8\xf9\xfd\x6f\x32\xfd\xa6\xfb\xe6\x04\xf6\xaa\x72\x05\x84\x7e\x54\xc9\x2d\x4c\xa2\x93\x8c\xe8\xc4\xda\xf3\x43\x08\x63\x3a\xa6\xd2\x29\xa6\xf3\xee\xc6\x1c\x10\x3d\xa0\xd6\x61\xd7\x1f\xa7\x89\x7c\x17\xf5\x79\xbb\x40\x20\x39\x1f\xf3\x1d\xef\xce\x0f\x24\x2f\x63\xbe\x67\x9e\x77\x10\xc8\x28\x50\x6a\x30\x6b\x0d\xc2\x24\x3a\x49\x15\xe1\xbb\x94\xd3\x6f\x47\x79\x09\x06\x01\x5d\x30\xe2\x0f\xd3\x44\xbe\x8b\xfa\xac\xbb\x3f\x94\xbc\x8c\xf9\xdc\xbb\xaf\x97\x48\xe7\x11\xbf\x4b\x13\xf9\xb1\xeb\x4f\xdc\x4f\xd6\x81\x14\xbb\xfe\x5d\x9a\xc0\x57\x40\x7e\xc2\x5f\xc3\x24\xba\x9a\x6e\xbe\x6b\x98\x40\x6f\xe7\xac\xe0\x20\x98\xc4\xbe\x3d\x85\xbf\x32\xc4\x76\x0a\x18\x17\x73\x4b\x13\xf9\x93\xbb\xf2\x96\xa6\xf1\xf3\xc9\xc6\xb8\xa5\x89\x7c\x8a\xfa\xac\x33\x59\x2f\xe5\x26\xd6\x16\xfa\x38\x55\x05\x93\xce\xd0\xc7\x89\x2a\x30\x18\xad\xc0\xb0\xce\xe5\x43\x4a\xc5\x2b\xe0\x9d\x4e\x8c\xbd\x3e\xfd\xb5\x73\xd0\xfd\x25\xdc\x28\x65\xf7\x49\x4b\xb8\x8f\xc6\xa3\x30\x89\x1e\x3c\x14\x8e\x53\x66\x3f\x07\x6b\xdb\xc7\xef\x01\x7f\x0f\xd3\xe8\x3e\xa6\xf3\xaf\xfd\x15\xd2\x32\xa2\xeb\x54\x2b\xaf\x31\xa6\xf3\xde\xf7\x01\x14\xbb\xee\xcc\x9d\x37\x80\x62\xd7\x9d\xb9\xeb\x5e\x21\x9f\x83\xd1\x23\xfc\x2b\x4b\x62\x8f\x97\xfd\x2b\x4b\x61\x23\xa9\x29\xde\x85\x8c\xba\x47\x20\x45\xe0\x64\xf0\xfa\x77\x14\xa6\xd1\x5d\x4c\xe7\x5d\xf9\x3b\x14\x8c\x7a\xc3\x30\x8d\x4e\x31\x9d\x77\xce\xfb\x82\x50\x79\x40\x37\xf1\xfb\x38\x4d\x05\x34\xdd\x7b\x7d\x9c\xaa\x02\x1d\xaf\x80\xb7\xef\x74\x94\x06\x4b\x80\x6e\xb4\x04\xf7\x34\x91\x9f\x47\x7d\xde\xa7\xad\x50\x72\x51\x3f\x41\x07\xb8\x4a\x5e\xc6\x7c\xde\x77\x50\x24\x2d\xe8\x1c\x10\x75\xd0\xff\x46\x61\x12\x3d\xc7\x88\x9e\xff\x0f\xb3\xce\x6a\xd1\xfd\xb6\xe4\xdf\x00\x00\x00\xff\xff\xf1\x05\xae\x70\x19\x23\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 8985, mode: os.FileMode(438), modTime: time.Unix(1522108930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x4d\x8f\xda\x30\x10\x86\xcf\xe5\x57\xb8\xb9\xb6\x79\xe3\x19\x7f\x25\x08\x58\xa9\xe7\xee\x69\x2b\xf5\x88\x02\xb8\xdd\xa8\x80\x51\x12\xba\x6c\x7f\x7d\x45\x5a\x42\x02\x6a\x2f\x2b\xdf\x32\x4f\xe2\x3c\xef\x8c\x12\xd9\xb3\xf7\x69\x2a\xbe\x56\xfb\x4d\x78\x69\x9e\x0e\xaf\x9f\xb6\x61\xfd\xc3\xd7\xe2\xa5\xda\x3b\xe1\x4f\x6d\x5d\x8a\x34\x5d\x4c\xba\xa7\x9e\xc2\xb1\x5e\xfb\xa9\x78\x6e\xdb\x43\x33\xcd\xb2\xef\x55\xfb\x7c\x5c\x61\x1d\x76\xd9\xba\x2e\x7f\xbd\xa6\xbb\xf2\x94\xdd\xbf\xaa\x5f\xff\xb9\x6c\xda\xf4\x31\x6c\xaa\x6f\x95\xdf\x4c\xc5\x97\xa3\xff\x28\xd8\x89\xc7\xb2\x16\x2c\x29\x17\x92\xa7\x92\xa6\x5a\x8a\x0f\x92\xa5\xec\xd6\x4d\x66\x0f\xa7\xdd\x56\xfc\xf4\x75\x53\x85\xfd\x3c\x21\xc8\xe4\x61\x31\x99\xd5\x21\xb4\x8b\xc9\xbb\x59\xd5\xfa\x9d\xd8\x97\x3b\x3f\x4f\xce\x89\x97\x5d\xe2\x25\x29\xb8\x02\xac\x0a\xd8\x22\x11\xf5\x71\xeb\xe7\xc9\x98\x6d\xaa\x7a\x9e\xc8\x44\x1c\xea\xd0\x86\x75\xd8\x76\x45\x6f\x91\x89\xa8\x9a\xe5\xea\x9c\x7f\x9e\x50\x57\xf8\x7d\xb9\xda\xfa\x4d\x57\x66\xff\x35\xe7\x12\xc4\x30\x7a\x20\xbe\xa2\x58\x5e\x2d\x41\x94\x83\xa4\x82\xbb\x88\xc7\x2c\xa6\x99\x1d\x48\x33\x9c\x1d\xaa\x07\x30\x96\xdb\x10\x48\x4b\x58\x83\xbc\x1f\xf7\x98\x45\x35\x13\x14\xc3\xd0\xc8\xdc\xb3\x68\x66\x06\x59\x0b\x22\x09\x7b\x6d\x7a\x0c\x63\xbb\x59\xc2\xb9\x5b\xf7\x5f\x18\xd3\xed\x72\x90\x25\x68\x1a\xba\x07\x30\xba\x5b\x21\x37\x77\xee\x3f\x30\xa2\x9b\xd5\x79\xc4\xe3\x91\x0f\x58\x2c\xb3\xd5\xd0\x60\x05\x99\x5e\xae\xd8\xf4\xdd\xff\xe3\x66\xd4\x2c\x46\x83\x8d\x1a\x25\xb8\xa0\xf8\x5e\x7d\xef\x8d\xf8\xa7\x59\x03\xc3\x28\x72\xb0\xea\x3f\xf6\x31\x8b\x6b\x26\x99\x83\x06\x3d\x8f\x61\xbc\xdd\xd3\x81\xc8\x81\x95\x01\xd9\xeb\x06\x3a\xa6\xd1\xec\x05\x81\x95\x03\x9f\xdb\xe4\xab\xfe\x16\xc7\xf2\xb3\x74\xd0\x16\x54\x68\x50\x3f\xf9\x1b\xf8\x56\xf7\x2c\xeb\x4e\x4e\xbf\x03\x00\x00\xff\xff\xee\xea\xf8\x03\xf5\x09\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 2549, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\x41\x6f\xda\x30\x14\xc0\xf1\xf3\xf8\x14\x5e\xae\x1b\x2f\x7e\xcf\x76\xec\x20\x68\xa5\x9d\xd7\x53\x27\xed\x58\x05\xc8\xd6\x68\x40\x50\x12\xd6\xb2\x4f\x3f\x25\x40\xea\x38\xd1\x2e\xd3\xeb\x81\x43\xfe\x22\xfc\x12\x19\x4c\xec\xe5\xc7\xf9\x5c\x7c\x2f\x0e\xdb\xf2\xa5\x7e\x3c\x9e\xbf\xec\xca\xcd\xaf\xbc\x12\x2f\xc5\xc1\x8a\xfa\x78\x16\xf3\xf9\xdd\xac\x7b\xcf\x63\x79\xaa\x36\xf9\x42\x3c\x37\xcd\xb1\x5e\xc4\xf1\xcf\xa2\x79\x3e\xad\x61\x53\xee\xe3\x4d\x95\xfd\x39\xcf\xf7\xd9\x6b\x3c\xfe\xa0\xfe\xfc\xaf\x59\xdd\xcc\x1f\xca\x6d\xf1\xa3\xc8\xb7\x0b\xf1\xed\x94\x7f\x16\x64\xc5\x43\x56\x09\x92\xe8\x84\xa4\x85\xc4\x85\x96\xe2\x93\x24\x29\xbb\xf3\x66\xcb\xfb\xd7\xfd\x4e\xfc\xce\xab\xba\x28\x0f\xab\x08\x41\x46\xf7\x77\xb3\x65\x55\x96\xcd\xdd\xec\xc3\xb2\x68\xf2\xbd\x38\x64\xfb\x7c\x15\xb5\xd7\xfb\x54\x1f\xcf\x4f\xa8\xc0\x3a\x40\xe7\x00\xb5\x8d\x44\x75\xda\xe5\xab\x28\x88\xdb\xa2\x5a\x45\x32\x12\xc7\xaa\x6c\xca\x4d\xb9\xeb\x0e\x7a\x45\x46\xa2\xa8\x9f\xd6\xed\xf5\xaf\x22\xec\x0e\xf2\x43\xb6\xde\xe5\xdb\xee\x30\xfe\xb7\x4c\x4a\x01\x2a\x35\x94\xfb\xc8\x26\x3b\x04\x03\xc6\x67\xfb\xc2\x6a\xa6\x40\x9a\x02\xf5\xda\x78\x5c\x2d\x21\x71\x40\x44\x40\xd8\xc3\x41\x64\x93\xad\x04\x22\x09\xa4\x9d\x27\xfb\x91\x57\x46\x20\x9d\x86\xf2\x35\xf2\xc9\x16\x88\x92\x50\xf6\x22\xbb\x6c\xe4\x84\xdc\x46\x36\x19\xd1\x01\xca\x04\x50\xf9\xf4\xa0\xf2\xd8\x86\x00\x55\x3b\x4b\x39\x70\xfd\xec\x15\x44\x7e\x39\x9d\x92\xd9\x46\xda\x43\xd0\x4c\xd1\x5d\xe5\xb3\x13\x0d\xa4\x25\x0c\x69\x2f\x32\xcb\x08\x24\xcd\x88\xbe\x56\x5e\xdb\x20\x68\x1d\xd2\xd7\xc8\x27\x5b\x07\xed\xc0\x1a\xf4\x65\x2f\xb2\xca\xa8\x6d\x3b\xb0\x01\xdd\x57\x5e\xdb\xa0\xff\xa7\x15\x56\x5e\xbb\x7d\x25\x21\x7d\x8d\xbc\x72\xaa\x00\xc7\xf4\xad\xb2\xda\x44\x0a\x48\x05\xf4\x2d\xf2\xc9\xce\x42\x22\x01\xe5\x60\x06\xf7\x22\x8f\x9c\x18\x30\x06\xb4\x06\x94\xfd\xe3\xc9\xb0\xb1\xbb\xe9\x84\xcb\x36\x83\x5e\x0c\x44\x05\x6f\xbf\xa9\x61\x63\x77\xd5\x84\xcb\xf6\xcd\xba\x18\x64\x08\x2c\x0e\xdd\x5b\xe3\x76\x53\x35\x76\xd3\x77\xb8\x5f\x4c\xe5\x18\xee\x22\xd3\xda\x46\x6a\xd0\xed\x50\x5a\x48\xfa\x89\x2b\x88\xcc\x72\x0a\x84\x23\xf9\x12\x59\x65\x22\xe7\x2f\x23\x87\x91\x5d\x26\x49\x13\x74\x57\x79\x6d\x65\x01\x93\x34\xb4\x6f\x95\xc9\x46\xbc\x2c\xdf\x52\x6f\x22\x09\xe2\x3b\xc8\x7a\x92\x66\x7b\x02\xf4\x14\x32\x53\xb7\x4d\x9c\x7b\x16\x1a\xd0\x4a\x50\xdd\xba\xf9\x6d\xd7\x62\x58\xff\xd7\x5e\xc6\xdd\xfe\xd4\xdf\x00\x00\x00\xff\xff\x9e\x1b\xd1\xa2\x59\x13\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 4953, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xcd\x8e\xda\x3c\x14\x06\xe0\xf5\xc7\x55\xf8\xcb\xb6\xcd\x89\x8f\xff\x62\x23\x98\x91\xba\xee\xac\xa6\x52\x97\x28\x90\xb4\x13\x15\x08\x0a\xa1\x33\xd3\xab\xaf\x12\x4a\xc8\xcf\x51\x37\x95\xbd\xf4\xab\x64\x9e\x57\xc3\xb1\x65\x58\xfd\x1f\xc7\xec\x6b\x79\xcc\xab\xd7\xf3\xf3\xe9\xfd\xd3\xbe\xda\xfd\x28\x6a\xf6\x5a\x1e\x53\x76\x39\xe5\x59\x53\xb0\x38\x7e\x58\x74\x8f\x3d\x57\x97\x7a\x57\x2c\xd9\x4b\xd3\x9c\xce\xcb\x24\xf9\x5e\x36\x2f\x97\x2d\xec\xaa\x43\xb2\xab\xb3\x5f\xef\xf1\x21\x7b\x4b\xe6\x7f\xab\x7f\xff\x73\x76\x6e\xe2\xa7\x2a\x2f\xbf\x95\x45\xbe\x64\x5f\x2e\xc5\x47\x26\x52\xf6\x94\xd5\x4c\x70\xb4\x8c\x8b\x25\xc7\xa5\xe2\xec\x03\x17\x9c\x77\xef\x2d\x56\x8f\x6f\x87\x3d\xfb\x59\xd4\xe7\xb2\x3a\xae\x23\x04\x1e\x3d\x3e\x2c\x56\x75\x55\x35\x0f\x8b\xff\x56\x65\x53\x1c\xd8\x31\x3b\x14\xeb\xa8\xad\xbc\xb9\x56\xde\xa0\x04\xe4\x29\x28\xd0\x3c\x62\xf5\x65\x5f\xac\xa3\x51\x94\x97\xf5\x3a\xe2\x11\x3b\xd5\x55\x53\xed\xaa\x7d\xb7\xe8\x11\x1e\xb1\xf2\xbc\xd9\xb6\xf5\xd7\x11\x76\x8b\xe2\x98\x6d\xf7\x45\xde\x2d\x93\xbf\xc0\xa2\x55\x24\xa0\x75\x80\x42\xdf\xec\x69\x1a\x86\x37\x24\x6f\x02\xf1\x3a\xa5\xf8\x36\x0d\xc3\x5b\x92\xb7\x1e\x79\xc5\x21\x4d\x41\x08\x07\xb2\xff\xe4\xc7\x59\x00\x5a\xcb\x39\xdd\x66\xde\x68\xa3\x41\x6b\x40\x69\x01\x51\xdc\xec\x49\x18\x04\x57\x14\xae\xc2\xe0\xf7\xbd\x36\x09\x43\xe0\x96\xc2\x6d\x00\xdc\x48\x10\xe8\x26\xf8\x2d\x0c\x81\x0b\x4e\xe0\xc2\xe7\xf9\x3e\x74\x90\xc2\x31\x10\x3e\xdd\x6a\xb7\xd0\x1f\x6e\x00\xd1\x01\x2a\x35\x3c\xdb\xa7\x69\x18\xde\x92\xbc\xcf\xb3\x7d\x08\x59\x47\xf1\xd6\xeb\xcc\x0f\x20\xc7\x29\xde\xf9\x9c\x7a\x94\x0a\x30\xe5\xa0\x71\xc8\x4f\xd3\x10\xbc\x50\x86\xe0\xbb\x34\x0c\x9f\x92\xbc\xcf\xc9\x1f\x41\x96\xe4\x7d\x4e\x7e\x0f\x49\x10\x6e\xa6\x5f\xc3\x10\xb8\x9c\xcf\xdd\x35\xf4\x8f\x5b\xe0\xf1\x60\x21\xb4\x9e\x55\xa1\x1e\xf1\x5e\x0c\x51\x83\x11\xd3\x2e\xb7\xd4\x3f\x6f\x34\x35\x91\x7d\x1c\xa8\xc0\x6c\x28\xfb\x38\x4c\x01\x8d\x64\x01\xed\xf3\x26\x30\x96\x24\x5d\xc0\xe7\xad\x1f\x75\x0a\xda\x80\x33\x80\xe2\xce\x8f\x43\x7f\xb8\x43\x10\x52\x80\x6d\xf7\x5a\x8f\x8f\xc3\x10\xb8\xe1\x04\x6e\xbc\x1e\x49\x03\x47\x50\xb8\xd7\x7d\xff\xc7\x41\xe9\x46\x43\x37\x8d\x03\x15\x50\x74\x01\x9f\xdf\xf8\xae\x92\x82\x54\x00\xda\xc9\x3f\xe0\x9e\x86\xe1\x0d\xc9\x7b\xbd\x07\x0d\x21\x4b\xf2\xfe\x37\xde\x15\x72\x9c\xe2\xbd\x5e\x42\x05\x4f\x41\xb5\x17\x6e\x35\x38\x74\x26\xe1\xbf\xe2\xab\xa4\xfb\x5d\xf3\x77\x00\x00\x00\xff\xff\xd9\x81\x73\xa7\x94\x15\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 5524, mode: os.FileMode(438), modTime: time.Unix(1522108924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x97\x4d\xaf\x9a\x40\x14\x86\xd7\xf5\x57\x4c\xd9\xb6\xbc\x9c\x33\x9f\x60\xf4\xde\xa4\xeb\xde\xd5\x6d\xd2\xa5\x41\xa5\xbd\xa4\x2a\x06\xb1\xd7\xdb\x5f\xdf\x40\x95\x0f\x69\xdd\x34\xe3\xce\xf3\x38\xf0\xbc\x33\x1c\x32\xc3\xec\x7d\x18\x8a\xaf\xf9\x6e\x5d\xbc\x1e\x9e\xf7\x6f\x9f\x36\xc5\xea\x47\x56\x8a\xd7\x7c\x17\xb3\xc8\x4e\x55\x99\x8a\x30\x7c\x98\x34\xc3\x9e\x8b\x63\xb9\xca\xa6\xe2\xa5\xaa\xf6\x87\x69\x14\x7d\xcf\xab\x97\xe3\x12\xab\x62\x1b\xad\xca\xf4\xd7\x5b\xb8\x4d\x4f\xd1\xf8\x5e\xed\xf5\x9f\xd3\x43\x15\x3e\x15\xeb\xfc\x5b\x9e\xad\xa7\xe2\xcb\x31\xfb\x28\xa4\x13\x4f\x69\x29\x24\x71\x2c\x48\x4e\x89\xa7\x9a\xc4\x07\x92\x44\xcd\x75\x93\xd9\xe3\x69\xbb\x11\x3f\xb3\xf2\x90\x17\xbb\x79\xc0\xa0\xe0\xf1\x61\x32\x2b\x8b\xa2\x7a\x98\xbc\x9b\xe5\x55\xb6\x15\xbb\x74\x9b\xcd\x83\x26\xf2\xa2\x89\xbc\x60\x05\x97\x40\xaa\x04\x36\x09\x44\x79\xdc\x64\xf3\x60\xc8\xd6\x79\x39\x0f\x28\x10\xfb\xb2\xa8\x8a\x55\xb1\x69\x8a\x56\x43\x81\xc8\x0f\x8b\x65\x3d\x81\x79\xc0\x4d\x91\xed\xd2\xe5\x26\x5b\x37\x65\x74\x5b\x1d\x13\x58\xc2\xe8\x9e\xb9\x43\xde\xc4\x9a\xc0\x1c\x83\x49\xc1\x5d\xcc\x43\xe6\x5f\x6d\xc1\x8a\x46\xf2\x33\xf5\xa6\x37\x0c\xd6\x04\x6b\x10\xb7\x6b\x3e\x64\xbe\xd5\x2c\x1d\x38\x71\x57\xf2\x96\xfa\xd5\x33\x94\x84\xe1\x81\xbc\x65\xfe\xd4\x12\x6c\x2d\x98\x09\xb6\x5b\xf5\x21\xf4\x2e\x97\x04\xe7\xae\xe5\x67\xe8\x57\x9e\xc0\x31\xd8\xd0\x40\xde\x41\xaf\x72\x17\x83\x2d\x43\x73\x5f\xde\x83\xfe\xe5\x0a\xb1\x19\xc9\xff\x40\x9f\x72\xa9\xea\x55\x1e\x3e\xf2\x1e\xf3\xa6\xb6\x1a\x1a\x52\x81\xc2\xcb\x2f\x69\xda\xf9\xff\xe3\x4f\xbf\x61\x8c\x86\x34\x6a\x10\xe1\x82\xee\x20\xd6\x63\xb1\xcf\xb7\xdd\x1a\xd4\x4d\x46\x31\x64\xbb\x9b\x0f\xd9\x1d\xd4\xe6\x2f\x6a\xe3\xf5\x20\x41\x1a\xda\xa0\xde\x41\xbb\x86\xbf\x82\x1e\x4f\x31\x5c\x77\x13\x2c\x83\xc2\x5e\xd1\xeb\xfb\x9b\x43\x3c\x06\x73\x60\x76\x90\xca\x80\x6d\x97\x65\x48\xfd\xe9\x8d\x83\x31\x60\xa5\xeb\x1d\xbe\xd5\x5f\x51\xff\x7a\x03\x96\xf1\x48\x7f\xa6\x77\xd1\xab\xf1\xec\x8d\xe7\x73\x1e\x27\x0c\xa9\x1c\x24\xc5\x60\xd9\x3d\xfc\x6b\xec\x2d\x80\x24\x5d\x7f\x43\x70\xe2\x40\x61\xaf\xe8\xbd\x15\x37\x87\x78\x0c\xe6\xa0\x2d\x38\xa9\x1b\xb0\x8b\x32\x80\xff\x2b\x9f\x45\xcd\x47\xd7\xef\x00\x00\x00\xff\xff\x4a\x87\xbf\xd2\x31\x0e\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 3633, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x41\x6f\xda\x30\x14\xc0\xf1\xf3\xf8\x14\x5e\xae\x1b\x0f\xbf\x67\x3b\x8e\x11\xb4\xd2\xce\xeb\xa9\x93\x76\xac\x28\x64\x6b\x34\x20\x28\x09\x6b\xd9\xa7\x9f\xe2\x12\x70\x9c\x68\x97\xe9\x71\xe8\x21\x7f\x95\xfe\xea\xd8\x4a\xed\x74\xf1\x71\x3a\x15\xdf\x8b\xfd\xa6\x7c\xad\x1f\x0f\xa7\x2f\xdb\x72\xfd\x2b\xaf\xc4\x6b\xb1\xcf\x50\xd4\x87\x93\x98\x4e\xef\x26\xfe\x9b\x1e\xcb\x63\xb5\xce\xe7\xe2\xa5\x69\x0e\xf5\x7c\x36\xfb\x59\x34\x2f\xc7\x67\x58\x97\xbb\xd9\xba\x5a\xfd\x39\x4d\x77\xab\xb7\xd9\xf0\x27\x5d\x3e\xff\x75\x55\x37\xd3\x87\x72\x53\xfc\x28\xf2\xcd\x5c\x7c\x3b\xe6\x9f\x05\x59\xf1\xb0\xaa\x04\x49\xcc\x84\xa4\xb9\xc4\xb9\x96\xe2\x93\x24\x29\xfd\xe7\x26\x8b\xfb\xb7\xdd\x56\xfc\xce\xab\xba\x28\xf7\xcb\x04\x41\x26\xf7\x77\x93\x45\x55\x96\xcd\xdd\xe4\xc3\xa2\x68\xf2\x9d\xd8\xaf\x76\xf9\x32\xf1\xbf\xf0\x53\x7d\x38\x3d\xa1\x02\x9b\x01\x29\x03\x48\x69\x22\xaa\xe3\x36\x5f\x26\x51\xdc\x14\xd5\x32\x91\x89\x38\x54\x65\x53\xae\xcb\xad\xbf\xb8\x30\x32\x11\x45\xfd\xf4\xdc\x0e\x60\x99\xa0\xbf\xc8\xf7\xab\xe7\x6d\xbe\xf1\x97\xb3\x7f\xd1\x19\x82\x01\xa3\x02\xf7\x52\x78\x51\x07\xa4\x29\x62\xcf\x8d\x09\x26\x05\x2e\x03\xed\x00\x75\xe7\xf6\x12\x23\xeb\xbc\x41\x18\xba\xd7\xc6\x04\x6b\x09\xd6\x02\x51\x0a\xa4\x5d\x27\x47\x91\x9f\x36\x72\x84\x6e\x23\x33\x9d\x81\xa3\x58\x7e\x6f\x4c\xb0\x21\x40\x95\x01\xea\x0c\x32\xdb\xc9\x51\xbc\x01\xed\xc6\x68\xbe\x99\x0e\x14\x34\x63\xb6\xaf\x8c\x78\xaa\x81\x14\x02\x99\xd0\x0e\x22\x33\xad\x25\xf4\x87\x1d\x44\x6e\x1a\x81\xe4\x60\xd8\x5d\x65\xc6\x0d\x82\xd6\xb1\x7d\x8e\x8c\xb4\x6d\x17\x95\x6d\xef\x70\x68\x87\x95\x19\x37\x08\x84\x14\xe3\x5d\x65\xc6\xdb\xaf\x34\xb6\xcf\x91\x99\x76\x0a\x70\x68\x77\x95\x17\x27\x52\x40\x2a\xb2\xbb\xc8\x48\x67\xed\xe8\x34\xa0\xed\xd9\x61\xe5\xc4\x2d\xa4\x12\x50\xf6\xfe\x94\x04\x91\x8f\x26\xa5\x00\x9d\x0b\x77\x0d\x71\x65\xc2\x53\x03\xc6\x80\xd6\x80\x32\xeb\xe8\x7e\x63\x85\x11\xdb\xa9\xed\xc3\x5d\xe3\x87\x69\x04\xe6\x7b\xa4\x04\x88\x1a\x81\xf9\xd6\xf6\x3b\x42\x86\x40\x47\x70\xd7\xd8\x61\x37\x02\xbb\x5b\xc0\xe8\xe4\x50\xf6\x91\x9d\x26\x49\x43\xda\x47\xae\x63\x9e\xd4\xa0\xdb\x95\x64\x21\xbd\x1e\x6b\xfb\x91\x9b\x76\x70\x3d\x72\x45\x91\x97\x6e\x8f\x1a\xc1\xa1\xba\x1f\xf9\xe9\x60\xb2\xe3\xca\x8c\x2b\x0b\x98\xba\x18\xef\x2a\x17\x8e\x08\x44\x08\xe4\x00\xd5\x65\x53\x1a\x57\x7e\x9c\xcc\x18\xee\x2b\xdb\xbb\x94\x76\x23\x22\x41\xc9\xde\x9c\x47\xf5\x16\xb8\x1a\xc5\x39\xdf\x22\x05\x8c\x1e\xc5\x6f\x73\xdb\x83\x27\x4c\x54\xd9\x70\xdb\x6e\xba\xfd\x93\x0c\x31\x18\x7a\x94\xb9\x78\x63\xc1\xa4\x80\x4e\x83\xbd\xae\xb8\x7e\xbc\x01\xad\xc6\x68\xc6\xe5\x16\x28\x7a\x8c\x66\xbc\xe1\x0e\x81\x94\x03\x23\x01\x2f\xbb\xe2\x28\xf2\xd3\xd6\x8e\xd0\x96\xef\x1c\x72\x51\x08\x50\xca\x81\x7d\xae\xdc\xb8\x06\x43\x03\xfb\x3d\xfe\x2f\xbd\x98\xf9\xff\x0a\xfc\x0d\x00\x00\xff\xff\xea\x30\xed\xc6\xd0\x18\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 6352, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xda\xcd\x72\xa3\x46\x10\x07\xf0\x73\xfc\x14\x84\x6b\xa2\xd6\x74\xcf\xb7\x4a\xf2\x56\xe5\x9c\x3d\x6d\xaa\x72\x74\xc9\x12\xc9\x52\x91\x84\x0b\xa1\xec\x6e\x9e\x3e\x05\xb2\x60\x18\x26\xc9\x25\x3d\x37\xf3\x2f\xe4\x5f\x9b\xf9\xa0\x41\xde\x7e\xbf\x5a\x15\xbf\xd6\x97\x63\xf3\xe5\xfa\xe9\xed\xdb\x4f\xa7\xe6\xf0\x47\xd5\x16\x5f\xea\x8b\xc3\xe2\xf6\x76\xdc\x77\x55\xb1\x5a\x3d\x3f\x0d\xe7\x7d\x6a\x6e\xed\xa1\xda\x14\x9f\xbb\xee\xed\xba\x59\xaf\x7f\xaf\xbb\xcf\xb7\x57\x38\x34\xe7\xf5\xa1\xdd\xff\xf5\x6d\x75\xde\x7f\x5d\x2f\x7f\xd9\xf8\xf9\x9f\xf7\xd7\x6e\xf5\xb1\x39\xd6\xbf\xd5\xd5\x71\x53\xfc\x72\xab\x7e\x2c\xc8\x16\x1f\xf7\x6d\x41\x02\x5d\x21\x68\x23\x70\xa3\x44\xf1\x83\x20\x21\x86\xcf\x3d\x6d\x3f\x7c\x3d\x9f\x8a\x3f\xab\xf6\x5a\x37\x97\x5d\x89\x20\xca\x0f\xcf\x4f\xdb\xb6\x69\xba\xe7\xa7\xef\xb6\x75\x57\x9d\x8b\xcb\xfe\x5c\xed\xca\xa1\xe6\x97\x7b\xcd\x2f\x28\xc1\x38\x70\x16\xd0\xea\xb2\x68\x6f\xa7\x6a\x57\xce\xb3\x63\xdd\xee\x4a\x51\x16\x6f\x6d\xd3\x35\x87\xe6\x34\x1c\x8c\x8e\x28\x8b\xfa\xfa\xf2\xda\xff\x05\xbb\x12\x87\x83\xea\xb2\x7f\x3d\x55\xc7\xe1\x70\xfd\xdf\xb6\x97\x80\xc2\xcf\xed\x47\xc6\x6a\x5b\x05\x68\x3d\x20\xda\x00\x0f\x43\x5e\xdd\x01\x1a\x07\x24\x45\xa8\x07\x21\xbb\xee\x14\x28\x15\xe1\xef\x19\xb7\x4d\x52\x00\xca\x08\x1f\x43\x56\x1d\x85\x05\x05\x3a\xbc\xea\x53\xc4\x27\x53\xcf\x48\x40\xe7\x01\x69\x5c\x69\x71\x9a\xc9\x37\x49\xdf\xe4\xf2\xb5\x4d\xf9\x9a\x75\xc5\xcd\x24\x97\xf4\x1d\xa7\xaf\x04\x58\x0b\x44\x1e\xe4\x38\xfa\xf3\x2c\x87\xad\xe5\xd2\xee\x33\x3e\x5b\x13\xa0\x93\xa0\xfa\x9b\xc9\x38\xed\xa2\x90\x5d\x47\x74\x80\x16\x23\x7e\x4c\x59\xfd\xfe\x12\xa3\x45\x20\x41\x81\x3f\x4b\xf9\x7c\xa3\x40\x01\xd9\x60\xbb\x0b\x13\x46\x57\x43\x7f\x91\x85\x03\x9c\xa6\x5c\x14\xf2\xea\x1a\x50\x3a\x10\xab\xe9\x67\xd2\x3a\xac\xe4\x1f\x4e\x60\xaf\xca\x48\x20\xf4\x51\x25\x8f\x30\x8b\x4e\x22\xa1\x13\xfb\x7c\x78\x40\x98\xd2\x59\x57\x61\x08\x51\x4a\xe7\x5d\x83\x03\x44\x8a\x80\xb4\x9a\xeb\x63\xc8\xa8\x1b\x40\xf4\x80\x4a\x85\xf7\xdd\x38\xcd\xe4\xbb\xa4\xcf\x7a\xdf\x0d\x25\xe7\x53\xbe\xe3\x5d\x77\x81\xe4\x45\xca\xf7\xcc\xbd\x3e\x02\x69\x09\xa8\xc2\xad\x38\x4e\x39\xfd\xfe\x81\x4a\x80\x46\x40\x17\x3c\x68\xcd\xd3\x4c\xbe\x4b\xfa\xac\xf3\x2f\x94\xbc\x48\xf9\xdc\xe3\x3f\x4a\xa4\x4c\xc2\x1f\xd2\x4c\x7e\x6a\xfc\x87\x34\x93\x9f\x1a\xff\x21\xcd\xe0\x4b\x20\xbf\xe0\xef\x61\x16\x5d\x2e\x27\xdf\x3d\xcc\xa0\xf7\x7d\x56\x70\x10\x74\x62\xff\x7a\x0a\x7f\x65\x88\xfd\x7d\x38\x2e\xe6\x91\x66\xf2\x17\xab\xf2\x91\xe6\xf1\xcd\x62\x62\x3c\xd2\x4c\x3e\x25\x7d\xd6\x9e\x6c\x94\x8c\x4e\x6d\x0b\x63\x9c\xab\x82\xc5\xce\x30\xc6\x99\x2a\xd0\x98\xac\x40\xb3\xf6\xe5\x73\x4a\xa6\x2b\xe0\xed\x4e\xb4\xbd\x3f\xfd\x49\x20\x31\xbd\x8e\x8c\x52\x76\x9f\x94\x80\xa9\x39\x8d\xc2\x2c\x7a\xf0\x4e\x30\x4e\xb3\xf8\xc1\x43\x69\x9c\x32\xfb\x06\xac\xed\x1f\xff\x67\xfc\x14\xe6\xd1\x7d\x4a\xe7\x1f\xfb\x3b\xa4\x44\x42\x57\xb9\xae\xbc\xc2\x94\xce\xbb\xef\x04\x50\x6a\xdc\x99\x77\xfe\x00\x4a\x8d\x3b\xf3\xae\x7f\x87\xbc\x01\xad\x22\xfc\x3d\xcb\x62\xc7\x97\xfd\x3d\xcb\x61\x23\xc9\x25\x3e\x84\x59\xf4\xe9\x25\x4c\x14\x32\xea\x1e\x81\x24\x81\x13\xc1\x17\x00\x51\x98\x47\x77\x29\x9d\x77\xdc\x27\x28\x68\x74\xe7\x61\x1e\x9d\x52\x3a\x6f\x97\xfb\x0e\xa1\xf4\x80\x6e\xe1\x8f\x71\x9e\x0a\x68\x39\xf7\xc6\x38\x57\x05\x2a\x5d\x01\xef\xae\x37\x50\x0a\xec\xf0\xad\xd3\xbc\x80\x29\xcd\xe4\x9b\xa4\xcf\xdb\xe5\x85\x92\x4b\xfa\xac\x3b\x00\x09\x0b\xca\x00\xa2\x0a\xf6\x9f\x28\xcc\xa2\x1b\x4c\xe8\xe6\x7f\xe8\x74\xb6\xeb\xe1\xbf\x7c\xfe\x0e\x00\x00\xff\xff\xbe\x69\x34\x91\xa3\x24\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 9379, mode: os.FileMode(438), modTime: time.Unix(1522108927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\x1b\x37\xee\x76\x7d\x6d\xf6\x50\xd8\x6e\x03\x61\xc9\xa1\xf4\xa0\xc8\x63\x47\xd4\xd6\x08\x49\xce\x83\x25\xdf\x7d\x91\x92\xf8\x01\x3d\x2c\xc2\xa0\xf9\xcd\xcc\x7f\x1e\xf2\xdf\x09\x00\xdb\xa3\x75\x8a\x34\xcb\x81\x2d\xf8\x3c\xe5\xf7\xec\x2e\xe0\x02\xb7\x6d\xc5\x72\x28\x45\xed\x30\x92\xd6\xe1\xcf\x66\x8b\x45\x81\xc5\x52\x78\xc1\x72\xf0\xb6\xbd\xb8\x8c\xa5\xa3\x2a\x15\x5a\x96\x43\x10\x05\x60\x35\x55\x2b\xe1\x77\x41\xf6\x39\x4f\xfe\x38\xb4\x2e\x79\x6f\x1d\x5a\x2d\x1a\xfc\x48\x96\x24\xdb\x06\xb5\x77\xc9\xea\x96\x9b\xfc\xa2\x8a\xfb\xa3\x67\x13\x80\x73\x94\x75\x27\xd7\xc4\xce\xae\x9a\xb8\xf7\xc7\x81\xe8\xe6\xe5\xf7\xf2\x6d\xb3\x4e\xdc\xc9\x79\x6c\x1e\xd2\xe4\xa0\x34\xee\x7d\xd0\x71\xc9\xab\x92\x96\x1c\x95\x7e\xb6\x51\xba\xa0\x83\x9b\xad\xa3\xda\xb7\xc5\x9b\x41\x2b\xbc\x22\x2d\x6a\x1e\x14\xfb\x7a\x07\x65\xd1\xed\x84\xfd\xec\x4b\x1a\x29\x8c\xfe\xcf\x49\x36\xb7\xf4\x44\x0a\xc3\x2f\x99\x71\x99\x00\x4c\x0a\xe3\x5b\x8b\x9d\x30\x00\x53\xda\xa3\x2d\x85\x0c\x70\x7e\x77\xa3\xa5\xaa\x7d\xdc\x23\xd3\xe4\x41\x58\x03\x42\x17\x60\xc8\x7a\x08\x20\x7b\x88\x76\xb8\x2a\xd9\x98\x91\xf1\xd8\x59\x5b\x4b\xa2\x90\xc2\xc5\x5d\x02\x9c\xbb\x09\xf1\x28\xeb\xb6\xe8\xdb\x60\xca\x38\x96\xc3\xfb\xad\xfa\x3d\x8f\x87\x75\xed\xcc\xd3\xef\x11\xcd\x07\xe8\x47\xca\xe7\x8f\x4f\x01\xcf\xfa\x7b\x9a\x65\x7d\xc8\x13\x8f\x67\x0c\x16\x7c\xd1\x83\x34\xcb\xf8\xe0\xbb\xf4\xf9\x71\x5d\xd6\x8e\x9c\x1f\xb5\xf5\x7a\x7a\xa6\xc6\xb4\x61\x31\x9d\x42\x4d\x52\xd4\x21\xf2\x0b\xc4\xe3\xad\xa0\x46\x28\xdd\xbb\xa7\x17\xdc\x83\x13\xb5\xf6\x65\xbd\xe2\x92\x9a\x61\xd4\x97\xb8\xfb\x37\x38\xd9\x6a\x18\x3d\x76\x8c\xe6\x20\x5b\x8d\xc6\x98\x86\xd7\xde\x12\x7d\x4e\xaf\x71\xe1\x5d\x26\xe7\xc9\xbf\x00\x00\x00\xff\xff\x50\x45\x70\x39\x88\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 904, mode: os.FileMode(438), modTime: time.Unix(1522108514, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/settings.json": appSettingsJson,
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"settings.json": &bintree{appSettingsJson, map[string]*bintree{}},
	}},
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

