// Code generated by go-bindata.
// sources:
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xdd\x72\xeb\x3c\x08\xbc\xef\xa3\x74\xc6\x5c\xf4\x8d\x28\xc2\x36\x13\x01\xfa\x04\x89\x93\xef\xe9\xcf\xd8\x4e\xf3\xe3\x9e\x73\xa9\x05\x96\x65\x41\x9f\xf0\xa5\xc5\xc0\x38\x3f\x3e\x41\x39\x82\x6d\xe2\x0e\x55\x2e\x0c\xe4\xba\x82\x31\xa6\x51\xc8\xfd\x19\x8a\x3d\x83\x3a\xb3\x81\x0a\x75\x0f\x1f\xf3\x1e\xbb\x38\x68\x30\x59\xb9\xf3\x2d\x8c\x39\x73\xff\x95\x77\xfd\xf6\xeb\xa3\x03\x5a\x2c\xdc\xe3\x90\x84\xad\x05\xc4\xe9\xd6\xf6\x24\x42\x2b\x37\xea\xe7\x98\xc3\x0b\xc2\x49\x6c\xda\xf1\x62\x40\x6e\xc9\x96\xd0\xba\x17\x20\x0d\xd0\xb0\x47\xd0\x8d\xcd\x93\x37\x41\x34\xbb\x10\x1f\x1a\xfd\x0d\x04\x0b\x4c\xda\x6b\xaa\xac\xdc\x8b\x05\x2c\x62\xc5\x97\xd8\xab\x36\x98\xdc\x46\x99\xa0\x61\x44\xf3\x9e\x5b\x41\xe1\x56\xfd\x06\x91\x98\x42\x80\x27\x54\x94\x64\x9a\xcd\xab\x4f\xc2\x7b\x79\xd1\x02\xca\x89\xc1\xfd\x22\xc4\xc7\xe1\x47\xe6\xf2\x8d\x74\x7a\xc2\xc3\xec\xb3\xbe\xc7\x82\xb1\xd3\xfc\xaf\xca\x57\xb1\xd3\x73\x9d\xa2\xd3\x10\x83\x86\x0d\xeb\x98\xbb\xba\xff\x79\xdf\x97\x58\x48\xe1\xde\x56\xcb\xab\x9f\x0b\xb6\xb6\xe1\x55\x88\x2d\x56\xc7\xb5\x1d\xda\xad\x23\xd9\x93\x5d\x61\xf6\x54\x94\xba\xbf\x5e\x0f\xc7\xc7\x51\x88\xef\x6e\xbe\x93\xb8\xfd\xe0\x31\x5e\x41\xe3\xa3\x75\x21\xae\x12\xf9\x72\x00\xff\x9d\xb9\xdf\x9e\x2b\xee\x47\x92\x1f\x37\xee\xab\x8f\xf4\xce\x83\x28\x4e\x1c\x10\xc3\x21\x77\x0d\x72\x99\x78\x2c\x50\xe2\xfa\x7b\xac\x14\xe5\x37\x07\xf3\xf4\x05\xad\xe6\x83\xfe\x2c\x2f\xd2\x96\x42\x47\x82\x15\xc2\x7a\xd4\xb8\xc4\x7a\xaa\xb0\x9d\xf6\x21\xb2\x2c\xdb\x3f\x23\x37\x63\xca\xe4\xd8\xf0\x3f\x01\x00\x00\xff\xff\x03\x1a\x14\xa0\x9d\x03\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 925, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x98\xeb\x92\xbb\x2a\x0c\xc0\xbf\xff\x1f\x65\x67\xca\x70\xb1\xb6\x3e\x0e\x02\x55\x66\x15\x38\x40\x75\xfb\xf6\x67\xa8\x6d\xbd\xb1\x71\x77\x66\x67\x6c\x7e\x84\x84\x24\xa0\xe4\x0b\xf1\x53\x1f\x94\x6c\x14\x32\x2a\xfe\xfb\x42\x5c\x9a\x9f\x80\x84\xed\x9f\xcf\xe1\x0b\xf5\x81\xcb\xf0\x81\x4f\x81\x79\xf3\xfe\xf9\x53\x09\xf3\xe6\x51\xf6\xf1\x05\xa5\x58\x4f\xdc\x74\xb5\x34\x81\xa2\x5e\x0b\x6f\x83\xbd\xbd\xc7\x75\x56\xf0\xa8\xad\x41\x9d\x1e\xde\x63\x57\x8a\x9e\xcb\x85\x4d\x9f\xbc\x99\x7f\x06\xe5\x07\x2d\x54\x40\xc1\x0a\xcd\xbb\xdd\xec\x51\x75\xaa\x57\xd1\x3f\xf6\xc4\xf3\xdb\x4d\x8b\x9e\x1b\xde\x28\xff\xb2\x35\x68\x1f\xef\xbc\x53\xdc\xc7\xf6\x2d\xb2\x3e\xaa\x9f\x2f\x24\x79\xe4\x28\x4d\xf5\x76\x55\xd8\x1e\x99\xc0\xa3\xc8\x0e\xdc\x58\x9b\x60\x8e\xad\xe2\xcf\x05\xfb\x2c\x8e\x8b\xa8\x07\x1d\x1f\x68\xd4\x46\xda\x71\x4a\x0a\x97\x46\xfd\xdc\xa7\x7c\xcc\xa9\x5a\xc6\x84\xcb\x40\x16\x49\x7b\xfd\x7c\xb1\x6f\x7e\x12\xd2\x9c\x4c\x40\x5c\x46\x25\x5a\x24\xd5\x3f\xee\x3d\x7f\x7c\x9d\x9c\xb7\x12\x49\x8b\x64\x70\xa8\x77\x1b\x27\x6b\x6d\x9a\xa7\x91\xb5\xb4\x63\x0c\x93\x13\x47\x44\xfa\x61\x29\x11\x3b\x49\xb3\x90\x18\xc2\x70\x71\x52\x1b\x49\xb9\x9a\x67\x92\xec\xc7\xac\xe6\xa1\xf5\x49\x58\x8f\x31\x41\xdc\x69\xe4\xd2\x43\x86\x32\x90\x16\x79\x3a\x9a\x40\xd0\x68\xc2\x2a\xf8\xb5\x61\x0e\xb2\xc8\x82\x68\x31\xc5\x98\x52\x46\xaf\x7b\xed\x30\x55\xab\x69\x4e\xe1\xf1\x12\x3d\x76\x01\x7c\xec\x02\x38\x49\x16\xa1\x10\x9f\x7c\x0a\x2e\x5a\xf5\x2c\xaa\x9e\xfb\xb8\xb2\x26\x64\x28\xce\x15\xea\xc4\x03\x75\x9d\x19\x9f\xb5\x20\x64\xa8\xca\x33\xea\x52\x05\x7f\x64\x2d\xf9\x7d\x49\x1f\x48\xb3\x70\xeb\xea\x4b\xa2\x76\x92\x66\x23\xa1\x3b\x2d\xba\xd2\xb2\xbd\xe3\x51\xfd\x88\x96\x9b\x46\x21\xd1\xd9\xbb\xe4\xce\x4d\xfe\x5a\x13\xb5\xb9\xdf\x7b\x24\x77\xf5\x28\xac\x77\x28\xc4\x9d\xd8\x11\x4c\xe0\xfa\x16\x29\xdb\x4e\xa0\x01\x0b\x39\x1d\x66\xb2\x66\xa3\x09\x14\x93\xf4\xb7\xcb\xa5\xac\xcf\x39\x59\x10\x2d\xc1\x84\x60\x4c\x28\x3d\xe0\x17\x90\x5f\x19\x3c\x7f\x45\x60\xfd\x2a\x53\x7f\x0b\x9e\x3c\x80\x39\xec\x3f\xc1\xb4\x80\x39\x3b\x98\x9f\x1d\xe8\x17\x07\xf6\x0b\x58\x9f\x52\xd8\x3e\x3d\xf0\x8f\xc1\xf1\x25\xec\xc0\xff\x82\x54\x30\x67\x18\xe4\xe7\x7c\xcd\xcd\x1c\xae\x0f\x72\x2e\x60\xfd\xb2\x80\xed\x5f\x18\xec\xff\x95\x30\x98\x1f\xf8\x77\x65\x70\x7c\x2b\x02\xc7\xb7\x82\xfd\xa3\x98\x80\xf6\x29\xa6\x07\x9c\x81\xf5\x47\x31\x83\xd6\x9f\x0a\x14\xda\x7f\x89\x43\xfe\xa7\x7f\x68\xfd\xc9\x81\x23\x5e\xc2\x1c\x5c\x7f\xda\xde\x30\x67\x60\x7c\x09\x66\x14\x8e\x0f\x3b\xb0\x9f\x7b\x7f\xae\x78\x01\xcf\x5f\xe0\x03\xce\xe0\xf9\xcf\xe0\xf9\x4c\xf0\xf9\x20\xff\x25\x78\x7e\x26\x0e\xe7\xa7\x04\xcf\x17\x82\x2f\x18\x8e\xdf\x05\x3c\x9f\x09\xbe\x80\xfb\x9f\xe0\x2b\x39\xe2\xb0\xff\x57\xf0\xfc\x4d\x1c\x8e\xcf\xf5\x20\xff\x15\x50\x5f\x0c\x5f\xc9\x15\xd8\x3f\x2c\x79\x07\x9c\xaf\x89\x33\x60\xff\x26\x5e\x00\xfb\x2b\xf1\x0b\xb0\xbf\x9f\x9c\xfc\xbe\x7e\x86\xab\x54\x01\x20\x2f\x81\xf7\x53\xe2\x17\x60\x7f\x26\x5e\x81\xeb\xab\x28\x74\x7e\x25\x4e\xa1\xf5\xa5\xaf\x0b\xc8\x3f\x82\x31\x03\xde\x1f\x89\x9f\x81\xfa\x9b\x38\x90\xbf\xe7\xfb\x17\xe6\x67\xd8\x3e\x29\x0f\xf4\xa1\xfd\xc7\x08\xa6\x04\xca\x2f\xc1\xb4\xcc\xc7\x2f\xdd\x3a\x64\x06\x94\x4f\x45\x8a\xab\x5f\x3e\x2c\x67\xce\xb2\x8e\x2d\x78\x76\x61\x33\x2f\xb2\x8e\xcf\x3c\x9f\x98\x25\xcf\x05\x76\xe6\x65\xf6\xc3\x68\xe6\xd7\x03\xff\x2a\x9c\x2b\xac\x05\x87\xfd\x4b\x9f\xd6\x20\x27\x70\xfc\x08\xcb\x26\x6e\xe6\x07\xf1\x23\x65\xf6\xc5\xb4\xe4\x99\xf5\x69\xde\x18\x1b\xa2\x16\x01\x85\xbb\x73\xd6\xc7\xcd\xf5\x45\xea\x20\x0e\xef\x38\xb7\x4e\xfd\x7c\x6e\x8e\xcd\xfc\xa4\x2c\xac\xd7\x28\x3b\x28\x0f\x8f\x69\xe7\x1e\x43\x4b\x3f\x8f\xfa\x54\x3f\xa0\x1b\xb3\x3e\x81\xb7\x4f\x7d\x0a\x86\xfe\x09\xe7\xae\xa7\xdf\xc3\x61\x44\xba\x9a\xa0\x71\x1c\x51\x1f\x10\xff\xe6\xd2\x4c\x1d\x93\x2e\xd0\x51\xd5\xc8\x2b\xd9\x5b\x23\xd1\xf3\x52\xb9\xd6\xeb\x6d\xad\x3b\x85\x9c\x76\x0a\x71\xaf\xb7\x1d\x9d\x45\x3f\xa7\x0f\x26\xaa\x10\x77\x17\xff\xa9\x89\x63\x6f\x37\x2d\x14\x77\x2e\x7c\x3a\x4a\x13\xf1\xf7\x4e\xe5\xb1\x35\x2a\xa8\x18\xb5\x69\xc2\xa9\x36\x14\x68\x48\x2d\x47\x8a\xc7\x5f\x47\xa6\x8b\xed\xdf\x46\xb6\xdf\xd0\x9c\xce\x2b\x74\xb3\x36\x3a\xaf\x4d\x74\x5e\x49\x2d\xa6\xe0\x38\xaf\x06\xad\xc6\x4f\x8d\x78\x2e\xe7\xd5\x2d\x5b\x7d\x49\xc7\x27\x0b\xfc\xd3\xe3\x5b\x87\x39\x88\x56\xf5\x7c\x29\x5d\x24\x31\x28\x71\x4f\x2e\x74\x3c\xb4\x91\x77\xdf\xda\x34\x93\xd2\xdb\xfd\xc0\x8d\xac\x6d\xb6\x23\xf7\x19\x33\x6a\x03\xf1\x2c\x33\xdb\xa6\xc8\x4b\xa2\x76\x92\x45\x53\x24\xb8\x87\x51\x71\xdb\x1b\x9d\xa4\xbc\xdb\xee\xf6\x49\xae\xee\xde\x3a\xf5\xcb\xea\xc3\x38\x07\x35\x44\xeb\x95\xe0\x91\x77\xb6\xf1\x6a\x78\xb7\x5b\x9f\xe2\xff\xee\xbc\xd3\x71\xdb\x1c\x0d\x77\x3f\xa8\x07\x1a\x79\x0c\xd6\x6c\xd8\xdc\x50\xe5\xce\xa9\x1f\x54\xa7\xc8\x26\x9b\xbf\x75\x5a\x67\xf9\xdd\x6f\x53\x18\xc3\x4d\xbd\x1b\xb1\xa1\xe5\x2e\xcd\x95\xdd\xa9\x83\xf2\x21\x39\xdd\x3e\x6a\xaf\xe5\x73\xb7\xb7\xca\x4f\xeb\x9b\x5a\xab\xa7\x2f\xa0\x1a\x5f\x43\x80\x9c\xbf\x46\xfc\x92\xf1\x55\xf7\xf6\xc0\x4a\x4e\xff\x15\xc9\x4f\x4a\xb2\x91\x1d\xb5\x21\x18\x69\x37\x94\x6b\xf0\x7f\x00\x00\x00\xff\xff\xfa\x48\x46\xea\xa3\x17\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 6051, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1500213742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x0e\x02\x21\x0c\x45\xf7\x1e\xc5\x45\xa3\xe3\x89\xb0\x74\x48\x0d\xb4\x84\x56\xb8\xbe\xc9\xb8\x98\x88\x33\x3b\xfe\xfb\xf4\xa5\xbd\x42\xb1\xd5\x05\x8d\x01\xb5\x5c\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xd5\xbf\x65\x65\x78\xb2\xa4\x2d\xa0\x2e\x07\x5f\xb0\xe5\x89\xc4\x12\xa1\x90\x07\xa3\xd6\x19\x69\x1e\x48\xbb\x31\x41\xe6\x4e\xdb\x33\x6b\x62\xd9\xe3\xcf\x8a\x6d\xb9\xd9\x78\xdd\x1f\xa5\x4d\x2a\xe7\x42\x30\x58\xa2\x0e\xdb\x40\x0f\x99\xe3\xd9\x31\x23\x62\x3d\x40\x21\xfb\x4c\x0d\x55\x1c\x42\xad\x7f\x8a\xb3\x06\x28\x26\xb2\x37\x3b\x81\x90\x7f\x02\x00\x00\xff\xff\x48\xe0\xd8\x7d\x63\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 355, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x51\x6e\x83\x30\x0c\x06\xe0\xf7\x1d\xa5\x52\xad\x12\x52\xa6\x1e\xc7\x4b\x0c\x8a\x96\xd8\x28\xf6\xca\xb8\xfd\xd4\x6e\x93\x18\x30\x89\xd7\xcf\xff\xef\x28\xc9\x09\xf0\x5c\x94\xe2\x40\xc0\x64\x2f\x27\x30\xca\x54\xc8\xea\x0c\x25\x85\x2a\x2a\xbd\x41\x90\xf2\x98\x54\xec\xfb\x14\x0a\x32\x0e\x54\x7f\xe2\x77\xa9\x46\x9f\x10\xd1\x70\x55\x08\x51\x9b\xc6\xb7\x90\x85\x21\x67\x9e\x9e\x85\x07\xba\xee\xb6\x41\x77\xf1\xce\x43\x0e\xf3\x5a\xdb\xeb\x9e\x76\xcd\x46\xdb\xf6\xb6\x35\xbf\xdd\xe9\x2f\xaf\xd0\x57\x5c\xd8\xec\x40\xc9\x2c\xf1\xa0\x3b\xf7\x00\x7c\xc7\xc8\xfa\x8c\xc6\xb7\xeb\xd1\xe8\x40\x72\x34\xfa\x1b\x3b\x4f\x89\xf7\x1e\x52\xc7\x99\xc9\xdc\xae\xd2\x47\x95\x91\x16\xa3\xc5\x5e\xa3\x4a\x51\x20\x8d\xf7\x6e\xd5\xfd\xfe\xb4\xff\xce\x9b\xd0\x54\xf8\x2f\x7e\x05\x00\x00\xff\xff\x56\xde\xa0\x82\x27\x02\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 551, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd0\x4d\x6e\x03\x21\x0c\x05\xe0\x7d\x8f\x12\x29\x56\x86\xd0\x28\x39\x8e\x05\x9e\x11\x2a\x18\x84\x9d\xd0\xb9\x7d\xd5\x3f\xa9\x14\xb2\xfd\xfc\x84\xf1\x3b\x00\x1e\x93\x90\xdf\x08\x98\xf4\xe5\x00\x4a\x91\x12\x69\xdd\x21\x05\x57\xb3\xe4\x55\xc1\xe5\xf4\x39\xa9\xb8\xae\xc1\x25\x64\xdc\xa8\xfe\xc4\xef\xc5\xa3\xd2\x90\x7d\xe4\xaa\xf4\x0e\x1e\x15\x87\x59\x93\x7f\xd4\xfd\xc0\x79\x59\x8c\xb5\x10\x33\x43\x8c\xdc\x7e\xd1\x9c\xec\xc9\x42\x74\x7b\xaf\x8b\x31\xb7\x31\xbb\x98\xd7\xcb\x4c\xaf\xcb\xa0\xe7\xf3\xad\x7f\x55\x48\x35\xf0\x26\xc7\x16\x78\x76\x80\x94\x9d\x49\xcd\x54\x31\xea\xd4\xe9\x5e\x73\xf9\xdb\x12\xbe\xa1\x67\xf9\xda\xf7\x5d\xd5\xb3\x6d\x2d\xf0\x15\x42\x79\x5c\x7a\xff\x08\x00\x00\xff\xff\x9a\x95\xed\x04\xb7\x01\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 439, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\xbd\x6e\xdb\x40\x10\x04\xe0\xfe\x9e\x82\x80\x9a\xa4\xe0\x70\x67\x77\xef\x87\x2a\xd3\xa7\x4a\x91\x5a\x51\xe4\x98\x88\x2c\x1a\xb4\x02\xd9\x79\xfa\xe0\x2c\xf3\x27\xdd\x7c\xd8\x1b\x90\x8b\xdd\xed\x76\xcd\xc3\x30\x9d\x6e\x87\xf3\xb9\xb9\x0d\x17\x4a\x73\x7a\xbd\x4e\x87\xe6\x93\xf6\x9d\xa4\x4e\x85\xb9\x51\xdd\xb3\x7c\x0e\xf5\xed\xd7\x71\x3a\x35\xc3\xe5\x61\xdc\x37\x8f\xd7\xeb\xf3\xcb\xbe\xeb\x7e\x0d\xd7\xc7\x3f\x3f\x70\x1c\x9f\xba\xe3\x74\xf8\xfb\xd6\x3e\x1d\x5e\xbb\xef\xc3\xe5\xe7\x78\x7b\xf9\xf6\xfc\xf6\xe5\x3c\x1e\x7f\x9f\xa6\x10\x68\x28\x02\x2a\xa2\xd7\x4c\xc9\x30\x50\xcb\x0c\x25\x54\x24\xa8\xa1\xcf\x60\x2e\x60\xb6\xe0\x82\x9c\xa1\xea\x28\x4b\x8e\x50\x5f\x95\x20\xed\x9a\x35\xc6\x3a\x21\x0b\x28\x86\xfc\x0e\xcd\xa0\x2b\x72\x0a\xc9\xe1\x88\x0e\x69\xe7\x54\x0b\x29\x22\x2a\x28\xb5\xb7\x41\x6f\x0b\x4a\x6d\x2c\x79\xee\xc4\xbb\xec\x03\x1a\x15\x6e\x81\xe2\x70\x47\x29\xa8\xbb\x2d\xa0\xdc\x47\x4a\xbf\xff\x2c\x3f\x18\x41\x4f\xef\xab\xd3\x08\x8d\x06\x73\xa8\xad\x4c\x84\xb4\x1b\xd4\xcf\xd3\x1c\xcc\x02\x96\x88\x2c\x81\xa9\x20\x19\x58\x90\xfb\xa0\xe2\xc8\x3d\xd8\x67\x48\xbb\x41\xed\xa9\x64\x78\x42\x85\xce\xa0\x10\xda\x2f\x8a\x06\xae\x2f\xd9\x3b\xe8\x5b\xe9\x7f\x33\xb3\xad\x5c\x66\x69\xbd\xe3\xbd\x97\x0a\x98\xea\x69\xfc\x5f\x00\x00\x00\xff\xff\x17\x2f\xc0\x4b\x6e\x02\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 622, mode: os.FileMode(438), modTime: time.Unix(1498767493, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x96\x3b\x53\x25\x47\x0c\x85\xf3\xf9\x15\xb7\x6a\x13\x3b\xe0\x5c\x1d\xf5\x7b\x43\xe7\x8e\x1c\x38\xc6\x98\xf5\x52\x66\x81\x02\x5c\x18\xff\x7a\xd7\xe9\x9e\x47\x4f\x00\xa5\xaf\xf4\x68\xb5\x46\x52\xdf\x2f\x5f\xbe\x5c\xbe\x3d\xbc\xde\x7f\xdc\x3e\x3e\x5e\x3e\x1e\x9e\x68\x97\xb7\x97\xcf\xcb\x4f\xcc\x57\x2b\x57\x37\x96\x8b\x85\xaf\xc9\x7f\x5e\x64\xf9\xeb\xf3\xeb\xfd\xe5\xe1\xe9\xdb\xf3\xd7\xcb\xf7\xf7\xf7\x97\xb7\xaf\xd7\xeb\x5f\x0f\xef\xdf\xff\xf9\x03\x77\xcf\x3f\xae\x77\xaf\xb7\xff\x7d\xde\xfc\xb8\xfd\xf7\xfa\xfb\xc3\xd3\x9f\xcf\x1f\x6f\xbf\xbd\x7c\xfe\xf2\xf8\x7c\xf7\xf7\xfd\xeb\xb2\x30\x20\x57\xd4\x0a\x7a\x13\x94\x0c\x67\x05\x59\x76\x6a\x60\xe3\x44\x4e\xeb\xd4\xe0\xa1\x21\x77\xb7\x4a\x24\xa4\xb0\x89\x0d\x1e\x5d\x40\x2b\x48\xa8\x75\xf1\x80\x56\x90\x09\x86\xb2\x82\x5b\x43\x1b\xd0\x40\x03\xb9\xcb\x0d\x31\x4e\x90\x77\x60\xd6\xdf\x46\x4e\xb8\xf5\x08\x34\x47\x84\xa7\xb0\x81\x13\x71\x93\x99\x12\x18\x6d\x60\x00\xab\x83\x9e\x97\x68\xc8\x0d\xd1\xc0\x54\x04\x25\x83\x60\xc9\x9b\xec\x88\x87\xc8\xec\x1d\x0a\xdc\x2b\x5a\x87\xaa\x58\x0d\xb1\x09\xd8\x6f\x8b\x52\x77\x88\x60\xda\x55\xee\x88\x65\x40\x04\x63\x83\xbb\x6d\xe8\x91\x60\xe4\xc0\x04\xea\xf2\x5d\x2e\x60\x94\xda\x76\x4c\x84\x8f\x98\xce\xae\x64\xf5\x25\x75\x77\x04\x47\xe2\x92\x94\x6b\x77\x42\x08\x33\xa5\x76\x90\xea\x96\x06\xea\x42\x0e\x45\x39\x88\xb1\x1c\x18\xc0\xb0\xda\x56\x78\x04\x4b\x1c\xd4\xfa\xed\xeb\x38\xa4\x54\x79\xf5\x5c\x37\x54\xae\xf4\x1d\xf5\x97\x77\x6a\xa1\x7f\xc8\x15\x75\x8a\x8f\x40\x55\x65\x73\x30\xe4\x03\x13\xdc\x56\x2c\xc8\xa6\xae\x5a\x72\x44\x44\x06\xcd\x86\xe8\x01\x76\xb3\x49\x9e\xd2\x92\x13\x42\xeb\x55\xf3\x60\xa2\xe4\xf0\x0c\xaf\xab\x4c\x33\x79\xec\xf2\xea\xd3\xaf\x46\xb5\xdc\xea\xa2\x8e\xd7\x79\x09\xca\x43\x4d\x5f\x57\x50\x78\x5b\xe5\x18\x55\xfc\x43\x8e\x87\x4c\xab\x33\xb4\x15\xd4\x3d\xbe\xb9\xf7\x86\xe1\x0c\x3e\x43\xd8\x20\x18\xd2\xee\x53\x32\xda\x06\x3e\xee\xbf\xcb\xdb\x6d\x12\x3c\xf9\xa1\xd1\x85\xa4\xd1\x18\xb5\xfe\xc5\x18\xb8\x94\x02\x7d\xea\xd6\xbb\x9f\x16\xd1\x1b\xa4\xa0\x84\x41\xca\xa0\x20\xe7\x83\xb4\x05\x76\x8a\xa6\x23\x37\xd4\x7c\xa4\x13\xb9\xf9\x8e\xa1\xa8\x73\x06\xea\x72\x60\x4b\x1b\xb9\x46\x83\xab\xad\x86\xd1\xc9\x0d\x42\xd5\x27\x59\x21\xa9\xff\x87\x9b\xd3\x10\x51\xca\x01\x86\x7a\x90\xd3\xe1\x31\xac\x1c\x11\x12\x3c\xc6\x85\x24\x5c\xdb\x43\xf3\x3f\x13\x15\xe9\x40\x2d\x94\x13\x1e\xae\x39\xc2\x6e\x26\x50\x59\x19\x28\x17\x8d\xbe\xdd\x4c\x30\xeb\x34\x97\xda\xad\x1a\x24\x43\xb0\x51\x9d\x09\x55\xd8\x15\xd5\x8b\xe9\x40\x5a\xee\x71\x0f\x1a\x81\x37\xd6\xf8\x9d\x30\xd6\x13\xb6\x3c\x61\x3d\x1b\xd7\xb3\x71\x45\xf1\xb3\xf1\x6c\x4d\xce\x79\xa8\x06\x73\x1e\x6e\xa7\xd0\x6e\xa7\xd0\x6e\xa7\xd0\x6e\xa7\xb4\x4a\xd5\x93\x70\x60\xeb\x1f\x73\xc3\xaa\xa4\x8f\x58\x1e\x92\x56\x8a\x7a\x53\x0f\x43\xe5\x38\xb7\xac\x43\x3f\x94\xa9\xa8\xf1\xfb\x0c\x1c\x72\xcf\x77\xa5\x3c\x69\xf2\xac\xd1\xcb\xb3\xab\x04\xb3\xce\xc7\x04\xac\x14\x6c\xb2\x0c\x36\x5b\x2a\x8f\x5d\x27\x38\xe9\xf2\xac\x9b\x4e\xcf\xd0\xff\x4d\x2e\x6a\x21\xdb\xa8\xb1\xf7\xfb\x00\x75\x01\x6b\x3c\x63\x3a\x63\xdb\x51\x0f\x11\x0f\x5f\x27\x26\xa5\xc7\x5e\xec\x95\xf4\x44\xe9\xcc\x5c\xf5\x6a\x6b\xef\x47\x6e\xc4\xa8\x54\x0f\xd2\xdc\xec\x54\x1c\x65\xb5\x1c\x0b\x9b\x61\x50\xe8\x6b\x36\xf3\xa0\x0a\x0f\x61\x61\x63\xbf\xbc\xf6\x7c\xb5\x15\xf5\xf3\xa0\xf6\x67\x7a\x67\xca\xbc\xad\xdc\x90\x22\x92\x2f\x6c\xaa\x78\x55\xe5\x54\xca\x89\x54\x4b\x2d\xb1\xac\x77\x27\xf7\xd9\x75\xed\x52\xfd\x70\x28\xfa\xb2\x33\x79\x4a\xff\x07\x00\x00\xff\xff\x6f\xf3\xd5\xcc\x73\x09\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 2419, mode: os.FileMode(438), modTime: time.Unix(1500211330, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x3d\x6f\xf2\x40\x0c\x00\xe0\xfd\x7e\x45\x24\x96\xf7\x1d\x70\xfc\x71\x9f\x8c\xdd\x3b\x75\xe8\x9c\x42\x28\x51\x81\xa0\x10\x44\xe9\xaf\xaf\x8e\x08\x72\xee\xe6\x47\xb6\xe1\xec\xbb\x2c\x16\x8b\x6a\xdb\x0d\xed\xb5\xd9\xef\xab\x6b\x77\x24\xac\x2e\xa7\x4d\x33\xb6\xd5\x3f\xf2\x35\x86\x9a\x91\x42\x85\xb2\x72\xfc\xdf\xe4\xe2\xd7\x7e\x68\xab\xee\xb8\xed\x57\xd5\x6e\x1c\x4f\xe7\x55\x5d\x7f\x76\xe3\xee\xf2\x01\xeb\xfe\x50\xaf\x87\xe6\xe7\xb6\x3c\x34\xdf\xf5\x7b\x77\xdc\xf4\xd7\xf3\xdb\xe9\xf6\xb2\xef\xd7\x5f\xed\x60\x0c\x09\x10\x06\xb0\xe0\xb0\x88\xd9\x70\x8e\x05\x28\x26\x20\xf6\x8a\x2e\x68\x46\x63\x11\x42\x00\xe6\x04\xb8\x9c\x63\x76\xce\x78\x07\xce\x01\x49\x04\x5c\xce\x71\x91\xf1\x32\x67\xbc\x4c\x19\x0f\x44\x09\xc8\xda\xfb\x7f\x29\x46\xc5\x98\x14\x53\x1e\x81\x80\x9d\x80\xc8\x34\x90\x05\x0a\x08\x8e\x80\x62\xd0\x8c\x8a\x49\x15\xb3\xf5\x9a\x41\xb3\xe8\x15\xe0\x54\x4a\x8a\x1f\xca\x43\x17\xc8\xb3\x3d\x48\x94\x47\xd6\xf4\x8a\x1e\x35\x79\xa6\x77\xea\x0c\x93\x93\xb6\xa3\x3f\x16\x43\x2e\x4c\x17\x20\xc0\x68\x1f\x64\x8b\x10\x53\x29\x66\x9c\xe8\xf3\x4d\x92\x44\xa5\x54\xca\xaa\x4a\x4b\x4a\xaa\xcf\x3e\xfb\x92\x07\x67\x4b\xc4\x02\xc4\x62\x28\x11\xb0\x30\xc4\xbc\x50\xa5\x58\x2a\x2f\xa8\x10\x3f\x45\x92\xdf\x61\xa9\xfb\xe6\xef\xb6\x10\x18\x28\x8a\xa6\xd7\x8c\x8a\x09\x0d\xe7\xaf\x22\x3f\x34\x9b\xcf\x50\xc8\xd3\x6f\x00\x00\x00\xff\xff\xd4\x27\x23\x9f\xac\x03\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 940, mode: os.FileMode(438), modTime: time.Unix(1500211336, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbd\x4e\xc3\x30\x14\x47\xf1\xdd\x4f\x61\x29\x0b\x0c\xfc\x7d\xaf\x73\xfd\xd1\x8c\xec\x4c\x0c\xcc\x26\xb8\xd4\x22\x8d\x2b\xd7\x28\x0d\x4f\x8f\x90\x18\xba\x9d\x23\xfd\x86\x61\xd0\xc7\xd2\xf2\x96\x96\x45\x6f\x65\x0d\x3a\xdf\x7a\x4b\xfa\x81\x83\x21\x6f\x2c\x71\xd0\x96\x26\x17\x1e\xd5\x1f\x7d\xa9\x2d\xeb\xb2\x1e\xeb\xa4\x4f\xbd\x5f\xae\x93\x31\x9f\xa5\x9f\xbe\xdf\x31\xd7\xb3\x99\x5b\xfa\xd9\x9f\xce\xe9\x66\xde\xca\xfa\x51\xb7\xeb\xeb\x65\x7f\x5e\xea\xfc\x95\x9b\x52\x3c\x22\x12\xd8\xc2\x89\x12\x02\x73\x04\xd3\x88\xa0\xbc\x40\xe0\x04\xd6\x8d\x77\x2d\xca\x3b\x38\x8b\x43\x84\x1d\xf9\x7f\x98\x22\xd8\x89\xb2\x14\x20\x1e\x7c\x10\xb0\xfc\x06\x00\x00\xff\xff\x15\x4c\xc2\xac\xc3\x00\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 195, mode: os.FileMode(438), modTime: time.Unix(1497726486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\x31\xf3\x12\x31\x10\x05\xf0\x3e\x9f\xe2\x66\x68\xb4\xf0\xdd\xbe\x4d\x36\x9b\x50\xda\x5b\x59\x58\x23\xf2\xf7\x7f\x23\x70\x0c\xe0\x20\x7e\x7a\x27\x0c\x1e\x77\x45\x8a\x5f\x92\x97\xec\x64\xb3\x5a\xad\xba\xb7\xe1\xbc\xbb\x6d\xf6\xfb\xee\x36\x1c\xbd\xbb\x9c\xee\xdd\x07\xe6\x5e\xbc\x57\xa1\x77\x12\xd7\xa6\x1f\x43\xdb\xf8\x65\x3c\xef\xba\xe1\xf8\x36\xae\xbb\xf7\xeb\xf5\x74\x59\xf7\xfd\xcf\xe1\xfa\xfe\xfb\x3b\xb6\xe3\xa1\xdf\x9e\x37\x7f\xef\x9f\x0e\x9b\x3f\xfd\xb7\xe1\xf8\x63\xbc\x5d\xbe\x9e\xee\x9f\xf7\xe3\xf6\xd7\xee\x1c\x02\x23\xbc\x42\x63\x45\xae\x0d\x85\xb0\x0a\x4d\x1a\x92\xc0\x1d\xaa\x19\x9a\xea\x5c\x26\x4d\x64\x01\x25\x83\x51\x82\x11\x4c\x44\x54\x18\x83\x29\x98\x13\x34\x09\xac\xbe\x44\xa8\xd8\x44\x23\x52\x7a\xc8\x0b\x62\x01\x9f\x41\x2f\x60\xf2\x16\x9e\x68\x84\x52\x27\xb6\x91\x27\xd5\x08\xbe\xa8\x1a\xa1\xf1\xa1\xe2\xc8\x02\x8a\x87\x6c\x30\x43\x4a\xa0\x94\x39\xea\x13\x64\x04\x75\x8e\xf8\x84\x9a\xc2\x39\x43\x9d\xaf\xb0\x4a\xc8\x19\x64\x05\xdb\x81\xe6\x4b\x96\x05\x4b\x5d\xb0\x4a\xa0\x24\xa4\x76\x9b\x23\xe7\x97\x2a\x94\xff\xa5\x5a\x60\x71\x2e\x15\x9d\x18\x1d\x6c\x4d\x23\xa1\x4a\x68\x6d\x95\xcf\xa4\x2d\x1a\x13\xe8\x82\x28\x6d\x76\x62\x7b\xd3\x94\x97\xf4\x25\xcb\x8b\x11\xda\xfe\x86\x83\x74\x68\xb4\xd6\x00\x56\x3e\x2a\x50\x29\xa0\xe6\x7f\x01\x00\x00\xff\xff\x33\x40\x79\xc4\xaf\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 687, mode: os.FileMode(438), modTime: time.Unix(1500169956, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\xbf\x6e\xc2\x40\x0c\x06\xf0\xfd\x9e\xe2\x24\x96\x76\xc0\xb9\xcf\x3e\xdf\x1f\xc6\xee\x9d\x3a\x74\x4e\x21\x94\xa8\x40\x50\x08\xa2\xf4\xe9\xab\xa8\x55\xc8\xb1\xf9\x27\x5b\x9f\x25\x7b\xb1\x58\xd8\x6d\xdb\x37\xd7\x7a\xbf\xb7\xd7\xf6\x18\xed\xe5\xb4\xa9\x87\xc6\x3e\x39\xa9\x5c\xa8\xd8\x21\x5a\x87\x15\xe2\xb3\x19\x67\x5f\xbb\xbe\xb1\xed\x71\xdb\xad\xec\x6e\x18\x4e\xe7\x55\x55\x7d\xb6\xc3\xee\xf2\x41\xeb\xee\x50\xad\xfb\xfa\xe7\xb6\x3c\xd4\xdf\xd5\x7b\x7b\xdc\x74\xd7\xf3\xdb\xe9\xf6\xb2\xef\xd6\x5f\x4d\x6f\x0c\x84\xe0\x22\x79\x52\x67\x78\xac\x85\x90\x32\x81\xb5\x64\x28\xa8\xb1\x64\x32\x41\x49\x95\x20\x89\x00\x2e\xe4\xe7\xe2\x30\x57\x9a\x14\x84\x98\x51\x88\x0d\xc4\x13\xa2\x23\x05\x21\xbb\x3b\x85\x64\xa6\x44\x6e\x39\x03\xab\x4e\x3d\x40\x29\xdc\x73\x10\x94\xd8\xa7\x07\xe7\xd2\x8a\x07\x8b\x81\x46\xd2\x40\x39\x10\x58\x0c\x32\x88\x85\x29\x8d\xeb\xe6\x0a\xae\x10\x4f\x82\xe4\xbf\x9c\xc2\xfe\xdf\x9e\x22\x13\x92\x94\x0c\x25\x53\xc1\xec\x0c\x8f\x4f\x0b\xe3\x79\x49\xd3\x6f\x00\x00\x00\xff\xff\x49\x36\xe8\x29\x30\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 560, mode: os.FileMode(438), modTime: time.Unix(1496445494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\xb1\x6e\xab\x40\x10\x85\xe1\x7e\x9f\x62\x25\x9a\x7b\x0b\x9f\x9d\x99\x9d\xd9\x05\xca\xf4\xa9\x52\xa4\x26\x04\xc7\x28\x18\xac\x35\x11\x76\x9e\x3e\x72\x65\xba\xff\x93\xce\xa9\xaa\xca\x1f\xc7\x32\x6c\xdd\x34\xf9\x6d\x9c\x6b\xf6\xc3\x6d\x2d\x9d\xff\xc7\x39\x50\x0a\x42\x9c\xbd\x50\x6b\xf9\xbf\x7b\x6c\x5f\x97\x32\xf8\x71\x3e\x2e\xad\x3f\xad\xeb\xe5\xda\x86\xf0\x35\xae\xa7\x9f\x0f\xf4\xcb\x39\xf4\xa5\xfb\xbd\x1f\xce\xdd\x2d\xbc\x8f\xf3\xe7\xb2\x5d\xdf\x2e\xf7\x97\x69\xe9\xbf\x87\xe2\x1c\x47\xd4\x04\x16\x98\x3a\x25\x30\xd7\x60\x8a\xc8\x4f\x24\x70\x24\x97\x14\x0a\x53\x88\x3c\xd3\xe2\xae\xd5\x25\x83\x09\x98\x6a\x48\xb3\x83\xed\xc1\x16\x1d\x47\x7e\x7c\x91\x18\x74\xd8\x41\xcc\x9c\x90\x22\x37\xe0\x26\x43\x88\x9c\x50\x86\x26\x70\xa3\x60\xfd\x0b\x00\x00\xff\xff\x95\x29\x18\x1a\x16\x01\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 278, mode: os.FileMode(438), modTime: time.Unix(1497726508, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xbb\x8e\x1a\x4d\x10\x05\xe0\xbc\x9f\x62\x24\x92\xff\x0f\x7c\xa6\x4f\x5d\xfa\x42\xe8\xdc\x91\x03\xc7\x18\xb3\x5e\x64\x16\x10\x60\x61\xfc\xf4\x56\x8f\xd9\xb9\xc8\xc1\x48\xf5\x69\xba\xbb\x4a\xa7\x56\xab\x55\xf7\xb2\xbf\xec\xee\x9b\xc3\xa1\xbb\xef\x8f\x85\xdd\xf5\xfc\xe8\xfe\x63\xea\x63\xee\x25\x32\x77\x51\xd7\x2e\xff\x87\x76\xf2\xd3\xe9\xb2\xeb\xf6\xc7\x97\xd3\xba\x7b\xbd\xdd\xce\xd7\x75\xdf\x7f\xdf\xdf\x5e\x7f\x7e\xc5\xf6\xf4\xd6\x6f\x2f\x9b\xdf\x8f\x0f\x6f\x9b\x5f\xfd\x97\xfd\xf1\xdb\xe9\x7e\xfd\x7c\x7e\x7c\x3c\x9c\xb6\x3f\x76\x97\x10\xa8\xc8\x15\xa2\x15\xa9\x36\x14\xc2\xe1\xfa\x5e\x56\x88\x49\x10\x45\x2d\xb0\x0a\xda\x50\xd7\xa1\x16\x06\x8b\xc8\x19\x22\x09\x62\x75\x2e\x8f\xa3\x0a\xaa\x04\x27\x68\x84\x0a\x9c\xc1\x05\x4c\x06\x51\x42\x7c\x94\x45\x78\x9d\x44\x48\x9c\x7e\x3a\x61\x36\x28\x17\xd0\x72\x3b\x3e\xd2\x09\xa1\x8c\x6c\x5f\x1a\x55\x15\x9c\x28\xa2\x10\x1d\x54\x32\x52\x04\x63\x0e\xc9\x60\x90\x0c\x8f\x21\x39\xdc\x41\xb6\x4b\x73\xc8\x1c\xfa\x84\xb8\xc0\xe6\xa8\x73\xb0\xc6\x99\x24\x4a\x48\x09\x64\x0b\xd1\x40\xcf\x4b\x96\x05\x4b\x5d\xb0\xbd\xd4\xf2\xd2\x21\x0c\x96\x32\x31\x81\xb1\x04\x46\x83\xb5\xc9\x32\x52\x9a\x54\x21\x7c\x97\x68\x06\xdb\x8e\x9f\x94\x32\xac\x79\x52\x9b\x90\x6a\x60\x8e\xd0\xf8\x2f\x75\x49\x5b\xb0\xf5\x69\x0d\x98\x86\xb6\xa4\x3d\x9d\x21\xea\x6d\x1f\xf4\x3c\x04\xa8\xfa\xf7\x72\x63\x02\xab\x21\xcb\x42\xba\x90\x05\x56\x0e\xc3\x4b\x2c\xa0\xa4\xa7\x2b\x3c\x82\x65\xae\x9c\x27\x09\x18\xe3\x44\x83\xcb\x9f\x00\x00\x00\xff\xff\x2f\x16\xf4\x77\x53\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 851, mode: os.FileMode(438), modTime: time.Unix(1500169974, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x3f\xcf\xda\x30\x10\x06\xf0\xdd\x9f\x22\x12\x4b\x3b\x70\xf1\x73\xe7\xf3\x1f\xc6\xee\x9d\x3a\x74\x4e\x21\x94\xa8\x40\x50\x08\xa2\xf4\xd3\x57\x16\xef\x4b\x6c\x36\xff\x74\x7e\x94\xcb\x23\xaf\x56\xab\x66\x3f\x4c\xfd\xbd\x3b\x1e\x9b\xfb\x70\x8e\x68\x6e\x97\x5d\x37\xf7\xcd\x17\xf8\xd6\x86\x96\x2d\x42\x63\x65\xa3\xfc\xd5\xe4\xcb\xdf\xc7\xa9\x6f\x86\xf3\x7e\xdc\x34\x87\x79\xbe\x5c\x37\x6d\xfb\x7b\x98\x0f\xb7\x5f\xb4\x1d\x4f\xed\x76\xea\xfe\x3d\xd6\xa7\xee\x6f\xfb\x73\x38\xef\xc6\xfb\xf5\xc7\xe5\xf1\xed\x38\x6e\xff\xf4\x93\x31\x10\x82\x0d\xe4\x48\xad\xe1\x7c\x16\x42\x4c\x04\xd6\x9a\xbe\xa2\x86\x9a\xd1\x78\x25\x55\x82\x44\xb2\xeb\xe5\xcc\xaa\x9f\x13\x2f\xcb\xc4\x4b\x31\x61\xc7\xc4\xea\x0c\x04\xc4\x2a\x04\x47\x50\x31\x10\x47\x08\x96\x14\x64\xd7\x05\x72\xf0\x45\x21\x4e\xa5\xc4\x2e\x8a\x65\x2e\x56\x39\x20\x7f\xb9\xa6\xaf\xe8\x6d\x4d\x5e\xe8\xf3\xca\xf1\xcd\xa9\xb6\xe2\xcd\x62\xa0\xe1\xf9\xb7\x96\x62\x2a\x95\xbb\x2d\xc8\x6c\x9f\xf4\x14\x42\x2e\xb1\x52\x2a\xe5\xaa\x9b\x0e\x95\xaa\x9c\x7b\xe5\x92\xa7\xdc\xf5\x82\x58\x00\x2c\xa5\x34\x18\x24\x10\x0b\x53\xcc\xf5\x96\xca\x05\x15\xe2\x97\x20\x89\x10\x6b\x73\x91\x7d\xda\x7d\xd8\x51\x60\x42\x94\x9a\xd1\x70\x7e\x93\x9e\x00\x97\x37\x2c\xe4\xf1\x3f\x00\x00\xff\xff\x22\x3a\xd8\x33\x1e\x03\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 798, mode: os.FileMode(438), modTime: time.Unix(1500169977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xdb\x30\x0c\xdd\xf3\x2b\x74\x97\xa5\x1d\x04\x7f\x35\x49\x2f\x63\xf7\x5e\x87\x0e\x9d\x69\x12\x92\x70\x26\x01\x96\x80\x23\x2b\xbf\xbe\x27\xc7\x49\xaa\x5a\xba\xe6\xb4\xf1\x3d\xe2\x89\x0f\x0f\xb8\xbd\xbd\xad\x3a\x51\xd3\xaa\x27\xde\xac\x2b\x3c\x59\x71\xd5\xa7\xcd\xfd\x6a\xfd\xb0\xda\xae\x37\x0f\xd5\x7a\xf7\x78\xb7\xfd\x7c\x33\x12\xbf\x4b\xc1\x8a\xb8\x91\xc7\xaa\x33\xcb\xfa\xb8\x5a\xb5\x64\xdd\x71\x0f\x5e\xd2\xca\x17\xf7\x3c\xd4\xc9\x9d\x56\xbf\x88\x83\xf4\xfa\x33\x0f\xdf\xa2\xf8\x03\x96\x9b\x9b\x35\x9c\xbf\xca\xb1\xf6\x58\x14\x12\xf9\x22\x2a\x8d\x8d\x57\xdf\xd1\x9c\x15\xf4\x30\x64\x9c\x1e\x17\x05\x4d\xae\x98\xfa\x82\xc8\x4b\x97\x9f\x77\xf7\x9b\xaf\x9b\x7b\x78\x12\x48\x8a\x9e\x03\x30\xda\x5f\xf0\xdd\x66\xbb\xdb\x7d\x59\x80\xf7\x51\xf6\xd0\xa3\xb3\x0e\xcb\x82\x80\x77\x1c\x06\x5f\x8e\xda\xa9\x04\x07\x07\xe2\x76\x8a\x07\x06\x2f\x6c\xc8\x06\xb9\x48\x00\x9f\x14\x92\xf2\x15\x49\x18\x59\x0c\x27\xfa\xbe\x13\xf2\xb8\xa4\x3c\x03\x02\xab\x33\x3f\xad\x11\x69\xd4\xee\x59\xa1\x7f\x69\xc1\xb4\xca\x19\xae\x15\x5a\x67\xd8\xbb\x01\x12\xaa\x22\xb7\x58\x20\xd2\x13\xce\x70\xbd\x70\x43\x2d\x64\xa7\x9a\xa5\xd8\x44\x2c\x60\x8e\x32\x80\x9a\x33\xf2\xe0\x0e\x2e\x39\x32\xf4\x1d\x4b\x94\x96\x70\x2a\x1d\xf0\x69\x7c\x80\x3b\x5a\x07\xa7\xbd\x9c\xae\xf4\x42\x0a\x90\xd0\x9c\x62\x19\x99\x4b\x01\x09\x3c\x3a\xda\x18\x7b\xa5\x09\xd0\x20\x86\xbd\xf3\x87\xf7\x7b\x75\x27\x5d\x9a\xe7\x28\xba\xe2\xbb\x05\x89\x37\xd6\x9c\x85\xed\xb5\x53\x94\xda\x5a\xeb\xa4\x5c\x8f\x4d\x79\xf1\xe1\x19\xa7\xe1\x22\x56\x0a\x58\xf2\x98\xeb\x28\xc7\xe0\x72\x9e\xe0\x91\x3c\xb2\x8e\x79\x4a\x79\xe1\xb7\x46\x53\xf9\x5a\x3d\x41\x27\x96\x1c\xc5\xe9\xe9\x9c\x45\xd2\x34\xe4\xf1\x92\x91\x79\x11\xe1\x57\x5c\x9b\x13\x24\x7d\x03\x72\x21\x8f\x91\xd4\x66\xa6\xf3\xf7\x11\xcb\xf0\x1e\xf8\xb2\x54\xfc\x43\xb9\xd3\x35\x6c\x53\xe0\x89\x3b\xfa\x63\xe6\xec\xd2\xc2\x7f\xa6\x4b\xd1\x8c\xb8\xd5\x5a\x35\xce\x07\xed\x92\xd7\xeb\x82\x26\x05\x6b\x4a\xae\x45\x05\xad\x17\x9e\x30\x92\x30\xb4\xd8\x04\x08\x7a\x5a\xee\x96\x51\xc4\xfa\x92\xe5\xff\x6c\x15\xa3\x84\xb3\x59\xb3\xc3\x16\x72\xb4\xab\x37\x1e\x69\xa6\x09\xc7\x0f\xad\xc8\x3e\xf8\xa5\x3f\x1e\x21\x17\x97\x7a\xd7\xeb\xb8\xd8\xe0\xbc\x9f\x17\x18\x7d\x7f\x9e\x4c\x2f\xcc\xe8\xcd\x50\xe7\xf1\xd7\x58\xfe\x09\x00\x00\xff\xff\xaa\x87\xfd\xfb\x79\x06\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1657, mode: os.FileMode(438), modTime: time.Unix(1500169992, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9a\x3b\x93\xe3\x2e\x12\xc0\xf3\xfd\x14\x53\xb5\xc9\x5d\x60\x86\x87\xfc\xda\xf0\xf2\x8b\x2e\xb8\x18\x41\xdb\xa2\x46\x02\x16\xb0\x65\xdf\xa7\xbf\xc2\xf6\xac\xed\x11\xc2\x3d\xff\x47\x6d\xd5\x96\xfa\x27\xfa\x49\x83\x5b\xfb\xf3\xe7\xcf\xb7\xce\xc5\x14\xdf\x46\x63\x19\x7d\x8b\xfe\xfc\xf6\x0f\xb6\x7a\xa7\xeb\x77\x4e\xd9\xfa\x8d\x8a\x5f\x4b\xfe\xcf\x1f\x19\xfb\xb7\x0b\xf0\x66\xec\xce\xfd\x7a\xeb\x52\xf2\xf1\xd7\xfb\xfb\xde\xa4\xee\xd0\x12\xe5\x86\x77\x15\xe4\xff\xce\x8b\x41\x9e\xde\xff\x6b\xac\x76\x63\xfc\x8f\x3f\xff\xab\x77\xea\x03\xc2\x8f\x1f\x94\x5c\xfe\x7f\x93\x0b\x4a\x29\x23\x72\x31\x44\xd0\x7b\x20\x16\xd2\x57\x99\x56\xb3\x42\x5e\x79\x51\x54\x64\x4d\x45\xb6\xac\xc8\x56\x15\xd9\xba\x22\xdb\x54\x64\xdb\x79\x19\xa3\x15\x59\x25\x68\x6c\x36\x2e\xa5\x87\x44\xea\xc8\xc8\x10\x6d\xce\xda\xf3\x63\x4e\x86\x28\x75\x9c\xf2\xbc\xc0\x07\xa9\xa7\x4f\x95\x28\x3c\x4b\xe6\x68\xd2\x99\x8c\xd7\xb2\x78\x16\x6a\x0b\xa7\xc3\x17\x8d\xda\x9e\xbe\x52\x71\xba\xec\xd5\x8b\x89\xb9\x45\xe7\x8c\xf6\x91\xc8\xa4\x87\xf4\xfc\xfc\x43\x2e\x94\xb6\x0b\x1b\x89\xd4\x09\x54\x47\x34\xdc\x85\x21\xc8\x33\xa3\x6c\xe1\x83\xd3\x44\x3b\xa2\xa3\x27\x83\x27\x83\x51\xc1\x45\xb7\xfb\xb2\xd4\x95\xe6\xdf\xa2\xc5\xb7\xe8\x06\x47\xb7\xe5\x04\xb7\x73\x09\x6e\x8b\x99\x6c\x8d\xdd\x5f\xc2\x5e\xd6\xd1\x0b\x41\xd9\x42\x12\xa6\xc3\xb1\x24\x51\xb3\x92\x7d\x41\x62\x99\xa0\xcd\x02\x66\x24\xab\xa2\x9e\xab\x64\xfe\x9d\xa2\x1e\xde\x2e\x94\x0b\x97\x0e\xe4\x0d\xf1\xf9\x2f\x05\x4a\x78\x0c\xf5\xb9\x96\x40\x51\x4d\x9d\x1a\x6d\x64\x64\xb4\xb1\xb8\x49\x5a\x2b\xa2\xea\x28\xa7\x94\x73\xc1\x37\xf3\xdc\x79\x36\x2b\xe7\xd9\xac\x5c\x25\xa5\x38\x46\x12\x21\x1c\x8d\xdd\x2f\xe2\xf9\x59\x91\x2a\xec\x25\x35\x29\x21\x55\xeb\xe7\x4a\x92\x04\x3d\x0c\x90\xc2\x79\xa6\xc8\x94\x54\x1d\x10\x2d\x93\x1c\x64\x48\x45\x8f\x95\xb6\x25\x53\x74\xe4\x2b\x22\x87\xb8\x25\x43\x04\x65\x9f\x15\xeb\xd8\x2c\xb7\xa4\x57\x67\xd2\xf7\x76\xfc\x2a\xdb\xae\x96\xa4\x77\xb6\x20\xeb\xd8\xeb\xaa\xf8\x03\xf1\x2a\x34\x97\x8c\x9b\xa4\x90\x8c\x9b\xa4\x50\xd4\x17\x09\x9f\x5d\x8d\x17\x57\x73\x83\x97\x09\x4e\xaa\x93\x76\x0f\x44\xf5\xee\xa0\xa5\xf7\xcf\xfe\x3e\x31\x8c\xa4\x20\x77\x3b\xa3\x06\x69\xe5\x1e\xc2\x17\xd4\x26\x63\x0f\x87\x81\xe8\xd9\x8e\xa1\x5c\xf0\x24\xa6\x9a\x18\x4e\x89\x0c\xd1\x24\xa9\x77\x91\xec\xfb\x56\xdb\xdc\xaf\xca\xb8\x47\x37\x66\x95\x37\x96\x57\xe4\x48\x73\xb1\x3c\x9a\xad\x5b\x21\x7f\x1f\x0a\xf5\xa3\x5b\x31\xda\xc8\x29\xcb\xff\xcd\xee\x36\xdd\x2e\x6b\xb2\xa8\x3a\x46\x19\xcb\xa7\x33\x47\x72\x6b\x14\xb7\x11\x38\xbd\x5b\x86\x5b\x6f\x5b\xe9\x28\x0f\x5c\xb6\x10\xc7\xe1\xfc\x65\x94\x37\x38\x4e\x20\xf5\x0a\xe4\x7a\x0d\xd2\xbe\x06\xb7\x1e\xe7\x38\xfb\x38\xd2\x0f\x81\xcb\x1b\x13\x48\x7f\x1b\xb6\xc5\x71\x82\xa2\xb8\x65\x7d\x4f\xdc\x39\x5c\x9d\xb2\x65\x83\x5b\x6f\xd5\xe0\xec\x5b\x0b\x9c\xbf\x1b\x26\x70\x1c\xd2\x8f\x8d\xc0\xe5\x6d\xcb\x70\x79\xdb\xe2\xfc\xe0\x94\xa1\xec\xe3\x94\x23\x39\x81\xda\x1f\x9c\x0a\x4c\xfc\xf2\x46\xc2\xf4\x97\xcc\x61\xfc\xcd\x7f\x30\xf1\xcb\x06\x62\xb9\x15\x8e\x43\xc5\x2f\xb7\x35\x1c\x27\x50\x79\x63\x54\x70\x5c\x9c\x05\xd2\xbe\xda\x0d\xf2\x89\x6b\x70\x7a\x1b\x8a\xe4\x04\x4e\xef\x12\x75\x0e\x32\xba\x44\xd6\xdf\x0a\x75\x1e\x65\x0e\x57\x07\x2b\x54\xdf\x65\x74\x4d\x71\xf9\x58\xa3\xce\x41\x46\xd7\xa8\xfe\xc7\xe8\x86\x61\x39\x9c\xbf\x1b\xd4\xf9\x96\x39\x5c\x9c\x37\xc8\xfa\xdb\x22\xea\x5e\xd0\x0d\xdb\x20\xfa\x81\xc8\x5e\x20\xce\xad\xcc\x09\x44\xbf\xca\x5c\x83\xe8\x1b\x99\x5b\x23\xfa\xda\x85\x63\xaf\xe3\x27\xe8\x36\x57\x20\x8a\x5b\x21\xee\x11\x99\x5b\x23\xfa\x50\xe6\xb6\xa8\xb8\x6c\x39\xa6\xdf\x67\x8e\x63\xe2\x92\x6f\x9d\x18\x3f\x18\xa5\x02\x71\x9e\x67\x6e\x89\xd8\x1f\x57\x0e\x51\x2f\x97\xfb\x15\x8e\x5b\xe2\xec\x63\x2b\xe4\x7a\x98\xfe\x22\x18\xe5\x0c\x53\x57\x8c\xf2\x55\x3d\x1f\xa3\x8d\x4c\x57\x80\xd5\x65\x21\x4e\xb7\x2f\x7e\xf0\xdc\x39\x51\x75\xe0\x81\xab\x06\xe4\xce\x35\x55\x47\xef\x5c\xbd\x00\x1e\xb9\x5a\xc2\xee\xdc\xaa\x7a\xc1\xbe\x73\x1b\xa4\x1f\x5b\x5a\x2b\xf8\x07\x0e\xe7\x47\xfe\xc9\x88\xe2\x18\x2e\x1f\x4c\x54\x0b\xe5\xce\x21\xf3\xc1\x56\xd5\x0b\xc4\x23\x57\x89\x0b\x1c\xc9\xd1\x84\x74\x90\x3d\xc8\x90\xba\xe7\x1f\xfa\xbb\x97\xb3\x26\x6d\xa2\x42\x8f\x14\xb4\x91\x7b\xeb\x62\x32\x2a\x92\x78\xf0\xde\x85\x34\x43\x42\x69\x52\x06\xca\x92\xaa\xbd\x70\x20\x47\x17\x12\x9c\x2e\xc3\xaf\x99\xa5\x77\x3d\x9c\x26\x23\xb7\xfd\xf4\x09\x38\x9c\x53\x7b\x70\x47\x08\x38\xb6\x9b\x8e\x97\xbb\xe9\x27\x02\xb3\x68\xcf\x98\x51\xaa\x59\xa0\x66\x6b\x66\x11\x2d\xff\x16\x56\x1b\xc2\x19\x76\x9d\x6e\x2a\x88\x24\x3a\x65\x64\x3f\xe3\xeb\x2b\x90\xd8\x28\x93\x7a\xca\x9f\xb1\x3b\x08\x60\x15\x90\xde\x29\x99\x8c\xb3\xa4\x37\xc7\xe7\xf9\xe7\xc7\x11\x5d\x6e\x7d\xcb\xc8\x38\x8e\x64\x88\x44\x7e\x48\x6d\x9f\xc7\xf7\x97\x95\x43\xe9\x0b\x49\x1f\xf9\x08\x2d\x09\xa0\x07\x67\x35\xb9\x4c\xe0\xca\x1a\x06\x32\xfd\xe6\x32\xb8\xd6\xf4\x40\xbc\xf1\x40\x64\x30\x73\x65\x58\x18\xed\x0e\xd1\x26\x88\x69\x76\x7a\x7c\xfd\xe2\xe3\x76\x3b\xa3\x40\x7a\x1f\xaf\xc1\x99\x10\xe1\xd0\x43\x1d\x73\x88\x21\x72\x85\x29\x64\xce\x59\x88\x90\x92\xb1\xfb\xb8\x68\x2d\x27\xf9\xad\xcf\xec\xbd\x7e\x43\x9d\xbf\xfb\x86\x6e\x97\xdf\x7c\xa3\xfb\xc0\xe8\xf0\x01\xc8\xce\xb9\xe4\x83\xb1\xc9\x07\xd0\x46\x3d\x87\xc5\x07\x38\x1a\x18\x27\x35\x13\xa4\x9e\xc6\xb9\xf4\x7d\x28\xaf\x19\xb2\x25\xf2\xcf\xee\x28\x27\x20\x40\xee\x8f\x91\x8c\x10\x09\xa2\x11\x47\xd5\xc1\x20\x1f\x17\x2b\xd4\x7c\x04\x75\x08\x50\x28\xda\x9b\x60\xd7\xcb\xd8\x25\xd9\x7f\x18\xbb\xff\x22\xbf\xd9\x8a\xb5\xe6\x33\xec\x51\x5a\xdd\xba\x6a\x43\xfe\xc3\x8e\xc6\x62\xb8\x2b\x53\x9f\x73\x3f\xb3\x33\x8c\x9d\xfb\x9c\x70\x93\x14\x3e\x00\xdc\x24\x85\xcf\x09\xd1\x9f\x2d\xa4\x59\x7b\x2e\x52\xd9\xcf\x9d\x77\x57\x39\x1c\x82\xf3\xf0\x22\x85\xbf\x07\x54\x02\x7e\x0f\x7f\x87\x29\x6c\x8d\x18\xc7\x69\x85\xc7\xe4\x02\x28\x99\x64\xef\xf6\x01\x8e\x9f\x5d\xfb\xf2\xf8\xf7\x41\xf6\x26\xcd\x2a\x3f\x84\x23\x9c\xc9\x28\x53\x74\x76\x86\x49\x94\xc4\xd8\x13\xf9\x41\xf4\xd9\xca\xc1\x28\x92\x4c\xee\x6d\xb3\x17\x80\xfb\x0b\xaf\x40\xe8\x41\xb9\x61\x90\x56\xbf\x0c\x13\x82\x2d\x84\xeb\x4e\x4a\xef\xe1\x44\xda\xbc\xa5\x30\xc0\xaf\xa6\x11\x05\x68\xde\xb6\xab\xfc\x10\xe6\x1a\x49\x8a\x3b\xf8\xfc\x0a\x15\x3b\xe9\xb3\x9e\xea\xb9\x79\x64\xf4\x76\x8f\x7a\xd8\x92\x2f\x5b\x67\xf1\xad\xf2\xfa\x10\x62\xae\x92\xee\xdc\x06\xa3\x2f\x77\x8d\x0e\xc2\x73\x61\x5d\x9a\xec\xf4\x0a\x78\x53\x80\x3b\x62\x6e\x30\xee\x74\xb9\xc1\xb8\x83\xe5\x06\xe3\xce\x94\x1b\x8c\xe8\x84\x7f\x21\xe8\xb8\x80\x3f\x5c\x8a\xeb\x7d\xf3\xe9\xfa\x8c\xd4\x5e\xd3\x7c\xdb\xde\x93\xbe\x51\xdd\xf6\x37\xa1\xf7\xf0\x72\x6f\xde\xd0\xbf\x87\x15\x3c\xcb\xf7\x3f\x84\x77\xb8\xc3\xf0\xf2\xef\xc3\x88\xf1\xc7\xd5\x1c\x70\xb9\xa4\x7e\xde\x07\xff\x1f\x00\x00\xff\xff\xe3\x93\x51\x62\x59\x26\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 9817, mode: os.FileMode(438), modTime: time.Unix(1500169997, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\xcd\x52\xc2\x30\x10\x00\xe0\x3b\x4f\x91\x19\x2e\x7a\x60\x9b\x04\x10\xe1\xe8\xdd\x93\x07\xcf\x21\x3f\x25\x43\x9a\x74\xba\x29\xb5\x3e\xbd\x83\x20\xc2\x68\x9a\x32\x3d\xee\xb7\x3f\xd9\xed\x74\x3a\x25\xbb\x80\x11\x49\x67\x3d\xa3\xa4\xad\x95\x88\x9a\x3c\x70\x56\xd0\x65\xc1\x29\x5b\x11\xb6\xdc\x2c\x57\x8f\x93\xa3\x7c\x0d\x8d\x26\xd6\x9b\xb0\x21\xbb\x18\x6b\xdc\x14\x45\x69\xe3\xae\xdd\x82\x0c\x55\x21\x1b\xf1\xd9\xcf\x2a\xf1\x51\xbc\x5b\xaf\x42\x87\x6f\x75\xff\xe2\x82\xdc\xeb\x66\x32\xa1\xf0\xfd\x11\x4a\x29\xa7\x7c\xc6\xc0\x41\x77\x52\xa7\x96\xc7\x0a\x37\x48\xce\x47\x20\xa3\xb2\x88\x2d\xd6\x26\x8f\x9e\xd7\x2c\x8b\x38\x7d\xca\x0f\xce\x99\xa2\x19\x24\x5a\x50\xa1\xf3\x2e\x08\x35\xac\x0e\x8b\x31\x50\x46\xa7\x86\xda\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x78\xeb\x1c\x28\xed\xec\x41\x37\xfd\x00\xfa\x99\x27\x13\x4e\x8f\xa3\xab\xe3\xb4\x98\x28\x60\x34\x87\x73\xd2\x7d\x00\xc4\x5e\x28\x8f\xe0\x75\xbc\xb2\xf3\xdf\x27\x29\xac\xff\x3c\x0b\x3c\x8a\x28\xd3\x39\xc9\x35\x98\x12\x14\xc2\x96\x8d\xb9\x8f\x29\x47\x1e\xf2\xd2\xea\x96\x5c\x4f\x87\x0e\x87\xd7\x93\x02\xff\xad\x07\xa3\x88\x78\xcf\x3e\xcf\x09\x2c\x7d\xbe\x4b\xc9\xa4\x88\xae\x85\x51\x7f\xda\xb8\x9d\xe5\x22\xe7\x40\x68\xca\xaf\x00\x00\x00\xff\xff\xd8\xdd\xde\xe2\xea\x04\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1258, mode: os.FileMode(438), modTime: time.Unix(1495446719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x32\x31\x10\x84\x7b\x9e\xc2\x12\xcd\xff\x17\xd9\x3b\x0e\x25\x48\x94\xe9\x53\xa5\x48\x6d\xec\xe5\xd8\xc4\xf6\x5a\xde\xe5\x0c\x79\xfa\x88\xa4\x88\x4e\x60\x22\x77\xf3\x8d\x67\x47\xb3\x5c\x2e\xcd\x81\x45\xc5\x54\x4a\x1b\x83\x27\x2d\xd6\xfc\x5b\x3d\x75\xfd\xa6\x1b\xfa\xd5\xc6\xf4\xeb\xed\xe3\xf0\x7f\x71\xf1\xbd\x70\x41\x43\x69\xcf\x5b\x73\x50\xcd\xb2\xed\xba\x91\xf4\x70\xdc\x81\xe3\xd8\xb9\x62\x3f\xcf\x0f\xd1\x9e\xba\x37\x4a\x9e\xab\xbc\xe6\xf3\x73\x60\xf7\x81\x65\xb1\xe8\xe1\xfb\x19\xeb\x94\x26\xab\xc4\x09\x24\x08\x44\x72\x85\x85\xf7\x7a\x49\xf8\x35\x65\x82\x1d\xa5\x71\x26\x3a\x1e\xee\x7c\x71\x25\x34\x88\x8f\x1e\x22\xaa\x15\x2c\x13\x39\x6c\x05\xf8\x24\x10\x65\xaf\xc9\x09\xcd\xc0\x78\x5d\x65\x84\x40\x13\xce\xa4\xc0\x23\xa5\x6b\xf9\x66\x62\x19\x7a\xa9\xef\xab\x75\x2c\x8d\x2e\x4a\x11\xa1\xfe\x8c\x38\x03\x93\x0d\xe4\xff\x5a\xaf\x7a\x97\xef\x20\x1b\xb4\x45\x6b\xbd\x3d\x41\x15\xc7\x49\xc1\xe6\xdc\xbc\xd9\x72\x00\xfa\x11\xe5\x48\x8a\x90\x50\xbf\x02\x00\x00\xff\xff\x21\x60\x66\xf5\x6d\x02\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 621, mode: os.FileMode(438), modTime: time.Unix(1500169983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\xbd\x0e\xd3\x30\x10\xc0\xf1\xbd\x4f\x61\xa9\x0b\x0c\xb9\x38\x1f\x4d\xd4\x8e\xec\x4c\x0c\xcc\x57\xfb\x92\x58\x8d\x7d\xc1\xbe\x36\x0d\x4f\x8f\x0a\xa2\xa2\xa2\x29\x54\x19\x7f\x7f\xdf\x29\xb7\xdd\x6e\xd5\xc0\x49\x92\x9a\x5d\x68\x55\x9a\x16\xf5\xa1\x68\x72\xdd\xe6\xa5\x2e\x5a\xa5\xab\xc3\xae\xfc\xb8\xb9\x55\x9f\x39\x92\x72\xa1\xe3\x83\x1a\x44\xa6\x74\xc8\xf3\xde\xc9\x70\x3e\x82\x61\x9f\x9b\x88\xdf\x97\xcc\xe3\x35\xff\xea\x82\xe5\x39\x7d\x99\x96\x4f\x23\x9b\x13\xc5\xcd\x46\xc3\xcf\x4f\x61\xa6\xb5\xae\x00\x33\x9f\xc8\xf6\x04\x81\xe4\x6e\xc6\xa6\xa2\xa8\x2b\x18\x39\xc0\x38\x86\xf9\x2f\x2c\x9b\xfd\x2a\x96\xba\x2e\x6b\x18\xcd\xb2\xa6\xd5\xee\x95\x36\xc5\xaa\x56\xd5\x7e\xdd\xea\xf5\x9d\xb5\x6e\xa1\x8b\xf8\xc4\xd8\x4f\x28\x74\x35\x03\x86\x9e\x0a\x90\x88\x5d\xe7\x8c\xc7\x80\x3d\xc5\xc7\x74\x29\x21\x91\x88\x0b\x7d\x02\x8b\x82\xe0\x9d\x89\x9c\xb8\x93\xdb\xcd\x01\x4f\x68\x43\x7a\x78\x62\x8f\xbb\x77\x9f\xd0\x19\x2e\x1c\x85\xae\x4f\xfa\x7b\xd4\x13\xbf\x3b\xf7\x77\x9e\xcd\x2e\xbc\x1a\x9d\xa6\x25\x90\x94\x2f\x95\xce\x91\x27\xfa\x23\x79\xb6\xef\x9b\x07\xa1\x91\x3c\x49\x5c\x56\xa6\xdd\xdc\xb0\xf7\x18\xec\x7f\xb4\x91\x2c\x83\x9b\x2e\xcd\x4a\xf1\xeb\x6c\xff\xfa\xbf\x19\x25\x71\x78\xc4\x1f\x01\x00\x00\xff\xff\x43\xf6\x25\x23\x76\x03\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 886, mode: os.FileMode(438), modTime: time.Unix(1500169986, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbb\x6e\xac\x30\x14\x85\xe1\x9e\xa7\xb0\x44\x73\x4e\x31\xbe\x05\xc2\x88\x32\x7d\xaa\x14\xa9\x8d\x2f\x60\x05\xbc\x91\x6d\xe4\x4c\x9e\x3e\x9a\x30\x22\x89\x34\xc1\x88\x8e\xf5\xf1\x6f\xca\xb2\x44\x03\x84\x18\x50\xb2\xae\x41\xcb\xac\x44\xd4\xe8\x1f\x67\x84\xd6\x84\x53\xd6\x20\x56\xb7\xf5\xe3\xff\xe2\x0a\x9f\xc1\x6b\x64\x9d\x81\x16\x0d\x31\xce\xa1\x25\xa4\xb7\x71\x58\x3a\x2c\x61\x22\xd2\x8b\x8f\xcb\x69\x12\xef\xe4\xd5\x3a\x05\x29\xbc\xcc\x97\xa7\x11\xe4\x9b\xf6\x45\x41\xf1\xd7\x83\x28\xa5\xc2\x88\x13\xc3\x23\x4e\xab\x5a\x4f\x5e\x0b\x3f\x51\xa7\x4c\x1e\x99\x8a\x66\x11\x3b\x57\x5d\xbe\xc4\x1f\xce\x79\x54\x69\x9d\x45\x9c\x8b\xe6\x00\x92\x2c\x83\xc4\x82\x15\x24\x37\x82\x50\x3b\x4a\xc6\x51\xed\x55\xb6\xc4\x64\xa5\x87\x00\x26\xde\x9f\x77\x0a\xe1\xc8\x7f\x18\xcd\xf1\xed\xf5\xfd\x4b\xa6\xc7\x2a\xe0\x8e\x1d\x89\x6d\x85\xdf\xc4\xe9\xb8\x91\xbf\x3f\x5e\x97\xdb\x00\xbe\xff\x1e\x52\xda\x39\xfe\x19\x00\x00\xff\xff\x4d\x79\xc3\xf9\x07\x03\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 775, mode: os.FileMode(438), modTime: time.Unix(1495446680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x3d\xef\x9b\x30\x10\x06\xf0\x3d\x9f\xc2\x52\x96\x76\xc0\xd8\x0e\x81\x24\x63\xf7\x4e\x1d\x3a\x5f\xcd\x01\x56\xf0\x4b\xed\x23\x84\x7e\xfa\x8a\x56\xaa\xca\x5f\xc1\x11\x1b\xbf\x07\xee\xf4\xc8\xf2\xf1\x78\x64\x83\x4f\x94\xd8\x6c\xdc\x45\xb2\x14\x16\xf6\x49\x36\xa5\xa8\x4b\x25\x64\xc3\x94\xb8\x9d\x9b\xcf\x87\x35\xf6\xd5\x47\x64\xc6\x75\xfe\xc6\x06\xa2\x90\x6e\x65\xd9\x1b\x1a\xa6\x1f\x5c\x7b\x5b\xea\x08\xbf\x96\xc2\xc2\xb3\xfc\x6e\x5c\xeb\xe7\xf4\x2d\x2c\x5f\x46\xaf\xef\x18\x0f\x07\xc1\xff\x3c\x0c\x0a\x21\x84\xe4\x50\xd8\x84\x6d\x8f\xdc\x21\x6d\x4d\x65\xec\x94\xb1\x2a\x63\xe7\x8c\xd5\x19\x6b\x32\x76\xc9\xd8\x75\xdf\xa4\xc8\x58\xa6\x17\xb9\xdb\xcb\x8b\x97\xba\x4d\x52\x55\x15\x1f\xbd\xe3\xe3\xe8\xe6\x8f\xa8\x44\x25\x2a\x3e\xea\xe5\xb5\x4a\xa5\xae\xfb\xdf\x4a\x75\xae\x73\x7a\x91\xbb\x7a\x3a\x5d\x77\xa6\x7a\x1b\x80\xf0\xa9\x07\x70\x3d\x4a\x4e\x11\xba\xce\x68\x0b\x0e\x7a\x8c\x9b\x28\x4e\xfc\xe1\x23\xe1\x93\xb7\x40\xc0\xad\xd1\xd1\x27\xdf\xd1\x7a\x04\xff\x85\x12\x12\x19\xd7\xa7\x62\x36\x2e\x9b\x0b\x8b\x43\x52\x59\x85\x91\xb2\x8e\x53\xf4\x01\xff\x8b\xc0\x1d\x5a\x97\x36\x4b\xa7\x9f\x96\x13\x8e\x68\x91\xe2\xb2\xf7\x37\x02\x4a\x1d\x2a\x3e\x85\x16\x08\xdf\xa5\xe6\xb4\x93\x58\xe7\xe4\x0a\x5c\x5d\x7b\x6b\xc1\xb5\x6f\x77\xfa\xdb\xf4\xbb\x16\xd7\x7b\x83\x9b\xf0\xa8\xb7\xfe\x3b\x00\x00\xff\xff\x83\x7f\xa5\x53\x59\x04\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1113, mode: os.FileMode(438), modTime: time.Unix(1497726533, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\xb1\x6e\x83\x30\x10\x80\xe1\x3d\x4f\x61\x29\x4b\x3b\xc4\xdc\x39\x10\x92\x8c\xdd\x3b\x75\xe8\xec\xd8\x40\x50\x0d\x4e\xb1\xa9\x9b\x3e\x7d\x45\x13\x45\xad\x94\x72\x27\x36\xfc\xf1\xdf\x49\x66\xb9\x5c\x8a\xa3\x0f\x31\x88\xd4\xf6\x5b\x14\xe3\xc9\xea\x58\x89\x07\x2c\x33\xd8\x64\x0a\xb0\x14\x0a\xf6\x45\xf9\xb8\x98\xe4\xb3\x1f\x2a\xd1\xf6\xb5\xdf\x8b\x63\x8c\xa7\xb0\xcf\xb2\xa6\x8d\xc7\xf1\x20\x8d\xef\x32\x33\xe8\xaf\xf3\xaa\xd3\x9f\xd9\x6b\xdb\x5b\x9f\xc2\xcb\xe9\xfc\xe4\xbc\x79\xab\x86\xc5\x02\xe4\xcf\x23\x00\x00\x36\xb8\x42\xe9\x64\xba\xa8\xcb\xc8\xa9\xf0\x1b\xe5\xda\xd2\x68\xb7\xdd\xd1\xc8\x80\xa1\x11\xd4\x8a\x83\xe8\x71\x08\x50\xd2\x08\x91\xde\x09\x4b\x53\xd0\x48\x6f\xd7\x34\xb2\xc0\x58\xdc\x62\xcd\x40\x39\x5d\x52\xeb\x5d\x4e\x20\x3d\x4a\xeb\x53\xef\xbc\xb6\xf3\xea\x23\xe7\xc0\x43\x33\x41\x2d\xad\x93\x29\xc8\xae\x35\x83\x0f\xbe\x8e\x77\x4c\xd5\xcd\x1b\xe4\x84\x90\x53\x52\x9c\x92\xe2\x94\x72\x4e\x29\xe7\x94\x0a\x4e\xa9\xa0\x4b\x26\x3a\x3b\x77\xbd\x8c\x2b\xab\x2b\x25\xaf\xaf\xef\xcf\x98\x40\x7a\x9f\x3b\xfc\x6f\xbb\xba\x61\xfe\x36\xb7\xcf\xff\x92\xbe\x8a\x37\x12\x5c\x98\x5f\x93\x37\x89\x3a\xb9\x1e\xf8\xa1\xf9\x0e\x00\x00\xff\xff\x00\x69\x8c\x9d\x91\x05\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 1425, mode: os.FileMode(438), modTime: time.Unix(1497726536, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1495292715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xb1\x72\xdb\x30\x0c\xdd\xf3\x15\xbe\xcb\xd2\x0e\x82\xe3\xa4\xcd\xf5\x72\xd7\xa5\x7b\xaf\x43\x87\xce\x34\x09\x49\x38\x93\x00\x43\xc0\x96\x95\xaf\xef\x29\x71\xe3\x5a\x11\xdb\x8c\xe4\x7b\x04\xc0\x87\x07\x5c\x5f\x5f\xaf\x24\x23\x0f\xc5\x56\x03\xf1\xe6\x66\x85\x47\x2b\x6e\xf5\x61\x8d\xe6\xd7\x81\x35\x39\x7d\x04\x2f\xdc\x7e\xbc\x9a\xb8\xdf\xa5\xe0\x8a\xb8\x95\x87\x55\x6f\x96\xf5\x61\xbd\xee\xc8\xfa\xfd\x16\xbc\xa4\xb5\x2f\xee\x69\x6c\x92\x3b\xae\x7f\x11\x07\x19\xf4\x67\x1e\xbf\x45\xf1\x3b\x2c\x57\x57\x8a\xe5\x80\xe5\xeb\xda\xb1\x0e\x58\x14\x12\xf9\x22\x2a\xad\x3d\x3f\x3d\xc3\x39\x2b\xe8\x6e\xcc\x38\xbb\x2f\x0a\x9a\x5c\x31\xf5\x05\x91\xab\xcf\x9f\xee\xee\x37\x5f\x36\xf7\x70\x10\x48\x8a\x9e\x03\x30\xda\xdf\xf8\xe7\xcd\xed\xdd\xdd\xa7\x1a\xbe\x8d\xb2\x85\x01\x9d\xf5\x58\x6a\x39\xbc\xe3\x30\xfa\xb2\xd7\x5e\x25\x38\xd8\x11\x77\x33\x42\xe0\x49\x33\x43\x36\xc8\x45\x02\xf8\xa4\x90\x94\xdf\xb2\x84\x91\xc5\xf0\xb2\x06\xdf\x0b\x79\xac\x66\x5f\x40\x81\xd5\x99\x9f\x45\x89\x84\x6c\x8d\x42\xe7\x0c\x07\x37\x42\x42\x55\xe4\x0e\x0b\x44\x3a\xcc\xd4\x7d\x21\xc3\xc0\x0a\xc3\x4b\xeb\x96\xf0\xc9\x07\xd4\x41\x76\xaa\x59\x8a\x5d\xe6\x0b\x98\xa3\x8c\xa0\xe6\x8c\x3c\xb8\x9d\x4b\x8e\x0c\x7d\xcf\x12\xa5\x23\x9c\x05\x0c\x78\x98\x7e\xe1\xf6\xd6\xc3\x71\x2b\xc7\xb7\x25\x85\x14\x20\xa1\xb9\xe9\x4c\x1e\xab\x86\x09\x3c\x69\xdb\x1a\x7b\xa5\x4b\xa4\x45\x0c\x5b\xe7\x77\xe7\x97\x4d\x2f\x7d\xaa\x90\x14\x5d\xf1\x7d\x2d\xcb\x2b\x6d\x51\x9e\x6e\x41\x52\x4a\x5d\xa3\x4d\x52\x6e\xa6\x06\xbd\xe8\xf1\x84\x33\xbb\x11\x2b\x05\x2c\x79\x72\x7b\x94\x7d\x70\x39\x5f\x12\x22\x79\x64\x9d\x1c\x96\x72\xad\xb6\x49\x5f\x5e\xa8\x20\x41\x2f\x96\x1c\xc5\xd9\xf5\xa2\x58\xd2\xb6\xe4\xf1\xe4\x83\x4a\x22\xe1\x3f\x04\x6d\x8f\x90\xf4\x8c\xe4\x42\x1e\x23\xa9\x2d\x8d\xee\xe3\x1e\xcb\x78\x1e\x84\x52\x8d\xff\x3e\xaf\xea\x0d\xdc\xa6\xc0\x97\x3a\xe9\x8f\xa5\xcb\x53\x4b\xe7\x93\xa7\x68\x46\xdc\x69\xa3\x1a\x2b\xee\x3b\xd9\x78\x21\xa6\x49\xc1\x86\x92\xeb\x50\x41\x9b\xda\x4f\x26\x16\x86\x0e\xdb\x00\x41\x8f\xff\x68\x9e\x51\xc4\xe6\xe4\xf1\xff\x2d\x1e\xa3\x84\xcb\x06\xb4\xdd\x2d\xe4\x68\x6f\xbf\xba\xa7\xa5\x8e\xec\xdf\xb7\x4c\x87\xe0\xab\x75\x4f\x98\x8b\xd5\x56\x0e\x3a\x2d\x40\x78\xde\xe6\x35\xca\x30\x3c\x0f\xae\x17\x66\xf4\x66\xa8\x15\xc2\xab\x59\x7f\x07\x00\x00\xff\xff\x2b\xb4\xca\xf2\xae\x06\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1710, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\xbf\x6e\xdb\x3c\x14\x05\xf0\xdd\x4f\x71\x01\x2f\xdf\x37\xe8\x88\x97\x7f\xa5\x6c\x6d\x9d\x16\x1e\x1a\x07\x4a\x8a\xcc\x8a\x4c\x37\x6a\x1d\x49\xa0\x68\x38\xe9\xd3\x17\xaa\x91\x22\x1b\xd9\x59\x3f\x1d\x1c\x5c\x5e\x72\xbd\x5e\xd3\x38\xf9\xe1\x1c\x22\x9d\xfb\x81\x05\xf9\x97\x18\x5a\xfa\xaf\xf4\xb1\x2b\x0f\x7d\xf0\xe7\xf6\x78\xc4\x69\xf6\xe1\xff\xd5\x82\xbf\x8e\xc1\x53\x3f\x1c\xc6\x2b\x7a\x8a\x71\x9a\xaf\xca\xf2\x7b\x1f\x9f\x4e\x8f\xe8\xc6\xe7\xb2\x0b\xed\xaf\xd7\xe2\xb9\x7d\x29\x1f\xfa\x61\x3f\x9e\xe7\xbb\xe9\xf5\xe3\x71\xec\x7e\xfa\xb0\x5a\xad\xc9\x0f\x87\x31\x74\x9e\xc2\x78\x8a\x3e\xd0\xe6\xe6\x6e\xd5\x4f\xb1\x7d\x3c\xfa\x99\x8a\x48\x43\x1b\xa9\xd8\xd2\x6d\x73\xdd\xec\xbe\xdd\x6f\x6f\xbe\x50\x31\x51\xec\x26\x2a\x8a\xfd\x34\x86\x48\x46\x51\xf1\x83\x9a\xeb\xcd\xb6\xb9\xfe\x74\x4f\x45\x11\xc7\x62\xf9\x30\x93\x51\xe9\xa4\xd3\x3e\x33\x69\xb5\xa6\x70\x3a\xfa\xf9\x5d\xe4\x96\x3e\xef\x9a\x87\x0f\xcd\x66\xf9\x6d\xd3\xec\x6e\xa9\xd8\x13\x2b\x54\x02\x2c\x61\x74\x06\x65\xe1\xa0\xc0\xb2\xca\xb4\x92\x21\x85\x48\x61\xa9\x50\x3b\xb0\xab\xc0\x4e\xa5\xb0\x16\x70\x0e\x52\x6a\x24\x4b\xbc\x51\x03\xa9\xb3\xb1\x85\x28\x65\x72\x16\x5a\x80\xb9\x02\x0b\x05\x97\x63\xa5\x03\x6b\x09\x67\x53\xd8\x6a\x68\x18\x9d\x55\xc2\x1a\x18\x09\x16\x4b\x97\x7c\x5b\x27\x47\xfc\x66\xab\xec\x16\xe6\x8f\x96\x59\xc9\x06\xd2\x48\xe8\xa4\x65\xa1\xa1\x35\xaa\x0a\x19\xeb\xf6\xd7\xb2\xc8\x0a\x96\xac\x2f\xc7\x9d\x1c\xdc\x45\x1b\xb0\xb6\x39\xbb\xcc\x8a\x21\x8d\x82\xd2\x90\x2a\x5b\x5b\xce\x1a\x35\x2b\x0d\x76\x02\x5c\x19\xb8\x74\xb8\xad\x60\x15\xb8\x82\xab\x93\x57\x50\x68\xb8\x1a\x5c\xbb\xac\x22\x52\x38\x68\x0b\xb7\x1c\x65\xa6\x65\xc1\x90\x19\x3d\x2e\xd8\x28\xb0\x31\xb9\xba\xd6\xe0\xdc\xce\x0b\x96\xff\x92\xac\x92\x0b\xf5\x0e\xeb\xf4\x63\x77\xc1\x72\x79\xf4\xb2\x3a\xdb\x0a\x6c\x2d\xa4\xd1\xbf\x03\x00\x00\xff\xff\x45\x09\x77\x87\xe9\x06\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 1769, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9a\xcf\x6f\x23\xaf\x15\xc0\xef\xfb\x57\x44\xda\x4b\x7b\x30\xe1\x87\xed\xd8\x5f\xa9\x97\xde\x7b\xea\xa1\x67\x06\x9e\x3d\x28\x33\x40\x00\x7b\xe2\xfe\xf5\x15\x63\xef\xda\xb1\x01\xbf\x74\x57\x5a\x29\x9a\xf7\x01\xde\x6f\x08\xe4\xe7\xcf\x9f\x2f\xce\x83\x9d\x42\x7a\x99\x8c\x65\xf4\x25\xfa\xd3\xcb\xdf\x5e\x21\xa9\x57\x6d\xe3\x28\xe3\x07\x51\xce\xee\xfe\xfe\x23\x93\xff\x72\x01\x5e\x8c\xdd\xb9\xbf\x5e\xfa\x94\x7c\xfc\xeb\xf5\x75\x6f\x52\x7f\xe8\x88\x72\xe3\xab\x0a\xf2\xbf\xa7\xc5\x28\x3f\x5f\xff\x63\xac\x76\x53\xfc\xb7\x3f\xfd\x73\x70\xea\x1d\xc2\x8f\x1f\x11\xc2\x11\xc2\x3f\x5e\xe5\x82\x52\xca\x88\x5c\x8c\x11\xf4\x1e\x88\x85\xf4\x7a\x2f\xd4\xaa\x2e\xe5\xad\xa1\xa2\x25\x5c\xb6\x84\xab\x96\x70\xdd\x12\xbe\xb5\x84\x9b\x96\x70\xdb\x10\x32\xda\x12\xb6\xfc\xc7\xea\x1e\x2a\x7e\x25\x52\x47\x46\xc6\x68\xe7\x18\x7e\xfd\xce\xc9\x18\xa5\x8e\x85\x11\xbc\x34\x22\x48\x5d\xf8\xac\x44\xe9\x63\x32\x47\x93\x4e\x64\x3a\x67\xca\x9d\x54\x5b\xf8\x3c\xdc\x2f\xab\xed\xe7\x03\x17\x0b\x53\x9f\xcd\x79\x54\xbb\x6c\xa6\xd1\x3e\x12\x99\xf4\x98\xee\x04\xef\x72\xa1\xb4\x5d\xd8\x48\xa4\x4e\xa0\x7a\xa2\xe1\x46\x1a\x82\x3c\x31\xca\x16\x3e\x38\x4d\xb4\x23\x3a\x7a\x32\x7a\x32\x1a\x15\x5c\x74\xbb\xfb\xc9\xce\x38\xff\x1e\x2e\xbe\x87\x2f\x91\x78\x57\x89\x78\x57\x8d\x78\x57\x8e\x6c\x67\xec\x7e\x0e\x41\x65\x9d\x41\x08\xca\x16\x92\x30\x1d\x8e\x45\x91\xaa\x8b\xf6\x25\x91\x65\x82\x2e\x17\x50\x13\xad\xcb\x6b\x9d\x45\x8d\x51\xe5\xb5\x78\xb7\x50\x2e\xcc\xbd\xca\x1b\xe2\xf3\x0f\x2d\x4c\xe0\xb0\xe5\x13\x6c\xb2\x91\x91\xc9\xc6\x72\x61\x74\x56\x78\x94\x56\x22\xaa\x9e\x72\x4a\x39\x17\x7c\xd3\x98\x2f\x92\xfc\xa3\xb1\xfb\x45\x3c\xdd\xcb\x4e\xf5\xf0\x9d\xea\xe1\x3b\x8b\x4a\xde\x56\xcd\xe6\xae\x4a\x45\xa8\x1e\x93\x4e\x49\x92\x60\x80\x11\x52\x38\xd5\x32\x4f\x49\xd5\x03\xd1\x32\xc9\x51\x86\x54\x36\x5d\x69\x5b\x5c\x51\x47\xbe\x26\x72\x8c\x5b\x32\x46\x50\xf6\x4e\x49\x1d\x97\xab\x2d\x19\xd4\x89\x0c\x83\x9d\x1e\x84\xdb\xf5\x8a\x0c\xce\x96\x84\x3d\x43\x04\xee\x37\xc5\xdb\x54\xd5\xfd\x17\x51\xd1\xfd\x7d\xb5\xb0\x66\x11\xaf\x4f\xc8\xcb\x13\xba\xd1\xcb\x04\x9f\xaa\x97\x76\x0f\x44\x0d\xee\xa0\xa5\xf7\x77\x76\x7f\x81\x18\x49\x41\xee\x76\x46\x8d\xd2\xca\x3d\x84\x7b\xd6\x26\x63\x0f\x87\x91\xe8\x7a\x57\x51\x2e\x78\x12\x53\x53\x0e\x9f\x89\x8c\xd1\x24\xa9\x77\x91\xec\x87\x4e\xdb\xdc\xd7\x2a\xbc\xc7\xb7\x71\x95\x6b\xd3\x2b\x72\xa4\x39\x7b\xbe\xe8\xae\x3b\x21\x3f\x0e\xa5\x8c\xd2\x9d\x98\x6c\xe4\x94\xe5\x7f\xf5\x52\xd4\xdd\xaa\x29\x8c\xaa\x67\x94\xb1\xbc\xbf\x73\x2c\xf8\x86\x03\x37\x02\xb9\xf4\x96\x21\x67\xdc\xb6\x9a\xce\x0d\x98\xb5\x44\x82\x48\xab\x19\xe5\x4b\x24\x28\xb0\x4b\x0b\xec\x8c\x4b\xac\x8e\x4b\xe4\x8c\x9c\x23\x75\xe4\x58\x63\x04\x32\x84\x4c\x60\xad\x5e\xb2\x2d\x12\x14\x14\x07\xae\x9e\xd4\xc9\x15\x44\x26\x2e\x5b\x2d\x91\x33\xae\x97\x48\x1d\xdf\x04\xd2\xea\x0d\x13\x48\x10\x6b\xcc\x46\x20\x43\xb8\x65\xc8\x10\x6e\x91\xc6\x70\xca\x70\x3a\x72\xca\xb1\xa0\xc0\xd5\x0c\xa7\x02\xe5\xc7\x5c\x5d\xa8\xde\x93\x41\x94\xd5\xf9\x3f\xca\x8f\x59\x49\x34\xb8\x46\x82\x38\x3f\xe6\xae\x87\x04\x05\x2e\x84\x8c\x0a\x8e\x74\xb8\xc0\xea\xd8\x3c\x8a\x7e\x01\x97\xc8\xa5\x97\x14\x0b\x0a\xe4\xd2\x2b\xdc\xa6\xc9\xe8\x0a\x9b\x8f\x6b\xdc\xce\x95\x41\x64\x52\xac\x71\xad\x99\xd1\x37\x8a\x8c\xcc\x1b\x6e\xd3\x64\xf4\x0d\xd7\x1f\x19\xdd\x30\x34\x88\xb4\x7a\x83\xdb\x0b\x33\x88\x74\xf8\x06\x9b\x8f\x5b\x4c\x29\x08\xba\x61\x1b\x4c\xa7\x10\xd9\x14\xcc\x16\x97\x41\x81\xe9\x66\x19\x5c\x62\x5a\x4a\x06\xdf\x30\x6d\x6f\x06\x19\xc2\x8f\x82\x6e\x73\x46\xe2\xc0\x35\xe6\xf0\x91\xc1\x37\x4c\x93\xca\xe0\x16\xe7\x9e\x2d\x47\xed\x0a\x19\xe4\x28\xf7\xe4\x83\x2b\xca\x18\x46\xa9\xc0\x9c\x00\x32\xb8\xc2\xd4\xcc\x19\xc4\x64\xcf\x7c\x36\x43\x82\x2b\xa4\x8e\x6c\x8d\x9d\x11\xd5\x7b\x04\xa3\x9c\xa1\xd2\x8c\x51\xbe\x7e\x12\x99\xc9\x46\xa6\x5b\xc4\x7a\x9e\x8a\xd3\xed\xb3\xdf\xa1\xae\xa0\x68\x5b\x71\x03\xb6\xfd\x72\x05\x97\x6d\x73\xaf\xe0\x93\x6c\xb8\x05\x9b\xb1\xbb\x82\xeb\xf6\x49\xfd\x0a\x6e\xb0\xc6\x6c\x69\xb3\x06\x6e\x40\xa4\x31\xf9\xb7\x51\x1c\xc8\x90\x91\x61\xa2\x9d\x36\x57\x10\x1b\x19\xb6\x6e\x9f\x3a\x6e\xc1\x96\x7b\xe0\x48\x8e\x26\xa4\x83\x1c\x40\x86\xd4\xdf\xdd\x27\xec\x9e\x5f\x73\x69\x23\xf7\xd6\xc5\x64\x54\x24\xf1\xe0\xbd\x0b\xa9\x8e\x46\x85\xbf\xe7\x80\xe2\x65\x1c\x28\x4b\xda\x4a\xc3\x81\x1c\x5d\x48\xf0\x39\xdf\xbd\xd5\x66\xdf\x0d\xf0\xf9\x78\xaf\xb7\x2f\x7c\x02\x87\x54\x78\x0f\xee\x08\x01\x09\xf7\x85\xbb\xef\xbe\xf0\x9e\x61\x16\xdd\x09\x75\xdd\x6a\x16\xb8\xdb\x3d\xb3\x88\x96\x7f\x8f\x6b\xde\x03\x1a\x76\xbe\xbd\x55\x10\x49\x74\xca\xc8\xa1\x66\xf2\x33\x92\xd8\x28\x93\xfa\x1a\x4c\x63\x77\x10\xc0\x2a\x20\x83\x53\x32\x19\x67\xc9\x60\x8e\x77\xb7\xb6\xef\x47\x7c\x56\x0d\x1d\x23\xd3\x34\x91\x31\x12\xf9\x2e\xb5\xbd\x7b\x64\x98\x27\x0f\xc5\x27\x9d\x21\xf2\x09\x3a\x12\x40\x8f\xce\x6a\x32\x5f\x01\x56\x16\x19\x49\xe1\x9d\x68\x74\x9d\x19\x80\x78\xe3\x81\xc8\x60\xaa\x99\x59\xba\x97\x1e\xa3\x4d\x10\x53\xfd\x9e\xfc\xfc\x54\xe5\x76\x3b\xa3\x40\x7a\x1f\xcf\x5e\x7a\x44\xc2\x61\x80\x27\x9c\xc3\x5c\x6e\x37\xa0\x52\x18\x9d\x85\x08\x29\x19\xbb\x8f\x8b\xce\x72\x92\x87\xfd\x0a\x25\x62\x88\x3a\x7d\x7b\x88\xee\x56\xdf\x1d\xd2\xbf\xa3\x56\xf1\x01\xc8\xce\xb9\xe4\x83\xb1\xc9\x07\xd0\x46\xdd\x39\xc7\x07\x38\x1a\x98\x1e\x53\x28\x48\x5d\x70\x78\xf1\x59\x2b\xcf\x1b\xb2\x3a\xf2\x77\xcd\x54\x42\x11\x20\xf7\xdc\x48\x26\x88\x04\xd3\xb0\xa3\xea\x61\x94\xb7\xd3\x95\x0a\x21\x82\x3a\x04\x28\xe5\xf1\x45\xb2\x1b\x64\xec\x93\x1c\xde\x8d\xdd\xdf\x03\x17\x85\xd1\x1a\xfd\x8a\x40\x94\x56\x77\xae\xdd\xb8\x7f\xc3\x93\xb1\x28\xf0\x0c\x3d\xb9\x80\xff\x0a\xd7\x20\x5b\x7d\xf2\xb8\x88\x4a\x2f\x14\x17\x51\xe9\xc9\x23\xfa\x93\x85\x54\x57\x6a\x16\xcb\xa1\xba\xa1\x9e\x01\x38\x04\xe7\xe1\x59\x3c\x3f\x46\x5c\x2c\x3e\xc6\x3f\x82\x4a\x15\x13\xe3\x54\x48\xfb\x98\x5c\x00\x25\x93\x1c\xdc\x3e\xc0\xf1\x57\x7b\x9f\x3f\x7f\x1c\xe4\x60\x52\x7d\xfd\x43\x38\xc2\x89\x4c\x32\x45\x67\x6b\x50\xa2\x24\xc6\x81\xc8\x77\xa2\x4f\x56\x8e\x46\x91\x64\x72\xf3\xab\x9f\x1c\xae\x23\x9e\x92\x30\x80\x72\xe3\x28\xad\x7e\xee\x2d\x04\x5c\xf2\xda\x15\x95\xde\xc3\x27\xe9\x72\xa1\x55\x88\xc6\xca\x67\xe0\x10\xaa\xfd\x23\xc5\x1d\xfc\x7a\x11\x8b\xbd\xf4\x79\x99\xf6\x1e\x7a\x64\xf4\x72\xc4\xba\x29\xc2\xe7\x8d\xb3\x38\xac\xb2\x02\x84\x98\x93\xa1\x3f\x75\xc1\xe8\xf9\xf8\xd1\x43\xb8\x4b\xa0\xb9\xc7\x16\x8e\x88\x97\x35\x90\xfb\xcc\x85\x46\x6e\x31\x17\x1a\xb9\xbb\x5c\x68\xe4\xc6\x72\xa1\x31\x4d\xf0\xff\xf1\x3e\xd2\xf3\x37\x47\xe7\x27\x3d\xf3\xcb\x29\x1b\xab\x40\x73\xf1\x4b\x41\x3f\xf6\x8a\x76\xa5\x5f\xa4\xde\xc3\xf3\x62\xbc\xb0\x7f\xc8\x95\xec\xcb\x87\x43\x8c\x8d\xc8\x4d\x71\xfe\x3b\x38\x62\xfc\x71\x5d\x25\xe6\x63\xec\xef\xc3\xe2\xff\x02\x00\x00\xff\xff\x2a\xe2\x9a\x5d\x45\x27\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 10053, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x98\x3b\x6f\x1b\x47\x10\xc7\x7b\x7d\x8a\x05\xd4\x24\x05\xff\xdc\x99\x7d\xbb\x4b\x22\x27\x50\x11\xdb\xa0\x1d\xb8\x96\x29\x2a\x66\x22\x93\x04\x79\x82\xa2\x7c\xfa\x60\xf6\x8e\x92\xdc\x64\xe6\x8a\x53\xa3\x1f\x07\xf3\x7e\xec\xe5\xe5\xa5\xdb\x1f\x36\xbb\xc7\xe3\xe0\x1e\xb7\x3b\xf2\xee\x74\x78\x72\x3f\x2c\x37\xc3\x7a\x79\xb7\x3d\x6e\x1e\x6f\xee\xef\xf1\x70\xda\x1c\x7f\xbc\x10\xf4\xf7\xfd\x71\xe3\xb6\xbb\xbb\xfd\x1b\xf7\x75\x18\x0e\xa7\x37\xcb\xe5\x9f\xdb\xe1\xeb\xc3\x17\xac\xf7\xdf\x96\xeb\xe3\xcd\xbf\x4f\x8b\x6f\x37\xff\x2c\x3f\x6f\x77\xb7\xfb\xc7\xd3\xc7\xc3\xd3\xcf\xf7\xfb\xf5\xdf\x9b\xe3\xc5\xc5\xa5\xdb\xec\xee\xf6\xc7\xf5\xc6\x1d\xf7\x0f\xc3\xe6\xe8\xae\xde\x7d\xbc\xd8\x1e\x86\x9b\x2f\xf7\x9b\x93\x5b\x0c\x6e\x77\x33\xb8\xc5\xb5\xfb\xb0\x7a\xbb\x7a\xff\xc7\xa7\xeb\x77\xbf\xb9\xc5\xc1\x0d\xeb\x83\x5b\x2c\x6e\x0f\xfb\xe3\xe0\x52\x70\x8b\xbf\xdc\xea\xed\xd5\xf5\xea\xed\x2f\x9f\xdc\x62\x31\xec\x17\xf2\x8f\x93\x4b\x41\x97\xf4\x70\x6b\x94\x74\x71\xe9\x8e\x0f\xf7\x9b\xd3\x2b\x91\xd7\xee\xd7\xf7\xab\xcf\x3f\xad\xae\xe4\x67\x57\xab\xf7\x1f\xdc\xe2\xd6\x51\x40\xae\xa8\x15\xc4\xcd\xc0\x96\x0c\xa6\x0a\xa2\x62\x85\x1b\xa8\x91\x1d\x66\xf2\x16\xb8\x81\x43\x43\xb6\xa8\x5c\x09\x09\xdf\xf9\xf6\xff\xc8\x06\x8e\x6c\x60\xc9\x17\x24\xd4\xaa\xa1\x1c\xd0\x0a\x32\x81\x82\xea\xb2\x91\x65\xdf\xd0\x4c\x6c\x03\x79\x90\xea\xdc\x33\xda\x10\xa3\x9d\xcd\x56\x96\xb2\x7c\x46\x98\x09\xec\x2d\xc6\x91\x67\x44\xb0\x1e\xb7\x89\x65\x82\x45\x61\x41\x29\x25\x50\x54\xd3\xac\xd3\x01\x54\x19\xc4\xaa\x7d\xd1\x23\x37\x44\x0f\x4a\xaa\x79\xd1\x4b\xb6\x13\xa8\x58\xc4\x0a\xca\xba\x71\xcf\x24\x65\x35\x7f\x85\x2d\x60\xae\x68\x16\xb6\x8a\x17\x1a\xa2\x5a\x6d\x62\x7e\xaf\x0d\x14\xb5\x30\xce\x6c\x04\x25\xab\x60\x66\x44\x8b\x77\x49\xa4\xc6\x06\x66\x35\xca\x13\xcd\x91\x40\x51\x2d\xa5\x4e\x27\x90\xa1\x92\x3a\x5a\x40\x51\x84\xdb\xd4\x28\xa0\x44\xd0\xfb\xb0\xc0\x4c\x5d\x34\x55\x35\x80\xa9\x5b\x86\xc0\x48\xaa\x7d\x49\xd2\xa7\x2b\x8c\xa0\x56\xde\x2b\x58\x8f\xe0\x33\x2c\x0d\x20\x99\x68\xc9\x50\x86\xc1\xc0\x17\x98\xf4\xf4\x78\xa6\x03\x28\xd8\x14\xa9\xe0\x08\x2a\x6a\xc8\x3b\xdc\x7a\xad\x54\x93\xf7\x4a\x15\x8d\x2d\xf9\x71\xa6\x25\x3f\xc8\xe4\x11\xa1\xe5\x53\x5b\xcc\x19\x6e\xc1\xd2\xc7\x27\x5a\xdc\xc7\x26\x1b\xab\x14\x38\x83\x82\x49\x74\xa7\x13\xd8\xdb\xe8\x82\xec\x65\x14\x6b\x70\x8e\x88\xc8\x20\xaf\x3a\xba\x93\x1c\xe0\x97\xac\xc6\x3b\x27\x84\xd6\xeb\x96\x83\x2e\x38\x21\x31\x38\x83\xd5\xd6\x38\xa2\xe4\xbd\x55\x8b\x9e\x78\x64\x18\xd9\x93\x12\xb2\x67\x19\x9c\x96\x20\xa1\x90\x55\xcb\xa4\xf2\xe8\x0d\x93\x23\x12\x62\x34\xb4\xa3\x17\xd4\x64\x59\x47\xc9\x1b\x95\xed\xac\xda\xb7\x46\x56\x26\xa0\x3e\x4b\x46\xb6\x4f\x35\xa3\x69\x9d\x55\xcb\xf9\x15\xab\x96\xdc\xc4\x06\x8f\x64\xd5\xb7\x64\x34\x23\xcb\xf6\xca\x10\x3a\xb1\x8d\x96\x0d\xb2\xf5\x56\x48\x41\xf5\x5c\x29\x90\xfe\xdd\x2c\xeb\x13\xf9\x88\x3e\x71\x0a\x8a\x7e\x01\x08\x2c\x3e\x2e\xc8\x36\xc9\x02\xcb\xc9\x62\x85\xa3\x17\x0f\x1a\x69\x59\xcf\x0c\x67\xcb\x0b\xcc\x5e\x3f\x5c\x26\x3a\x14\x99\x54\x26\x5a\x12\x0f\xd4\xd4\x49\x39\xc1\x2c\xab\x97\x9e\xd2\x9d\x96\x1d\x98\xf5\x52\x99\xd8\x50\x0d\x0d\x6e\x62\x93\x6c\x48\x26\x95\x99\x3c\x22\x8a\x7e\xce\x9e\x59\x8f\x6a\x86\x99\x18\x1c\x4d\x31\x14\xbf\x85\x04\xd6\x17\x4b\x22\x02\xcb\x1d\x25\xe7\xc6\x0c\x98\x0c\x46\xbe\xd0\x86\xcb\xeb\x3b\xda\xac\x76\x8e\xa6\x9e\x40\x81\x44\x07\xb9\x0f\xe6\xe0\xb2\xb8\x1a\x9e\x26\x64\x9d\xf3\x08\xde\x54\x33\xaf\x68\x43\xa9\x4f\xb4\x8c\x64\x7d\xc0\x9d\x69\xf2\xd9\x68\xe6\x99\x97\xad\x71\x0e\x1d\xd5\xa9\xf8\x9a\x6e\x7a\xff\x7b\xa6\xeb\x2c\x4d\xea\x2c\x4d\x2a\x8a\x39\x3e\x5d\x93\x19\xaa\x10\xcd\x73\x39\xfb\x39\x86\xb2\x9f\x63\x28\xfb\x39\x86\xb2\x9f\x13\xa0\x52\x0d\xcf\x49\x2f\x74\xb3\xf4\xb7\x33\x5d\x25\xf8\x66\x33\x39\x24\xc3\x3d\x22\xf3\x97\x28\xa3\x92\xc9\xdf\x65\x5a\xc0\x4d\xa2\x53\x91\xbd\xc4\xb8\x96\x9c\x69\x63\x69\x8e\x34\xf9\x36\x0b\x67\xd3\xfe\x30\xc1\xc1\x76\x11\x4c\xb8\xf8\x64\x16\x3e\xc3\xd0\x0c\xf9\x6b\x44\x4b\x04\xeb\xdb\xe8\x04\x37\xb2\x4c\xe3\x91\x95\xb6\x49\xd5\xaa\xf1\x48\x5b\x95\x1e\x69\x7d\x47\x9a\x68\x0a\x60\xc3\xa3\xf8\x44\x33\xc1\x2e\x9a\xa3\xa5\x24\x27\x38\x36\x93\xaf\x73\x45\xa6\xfe\xac\xa1\x3f\x7a\x4d\x30\xc5\x0c\xc3\x4e\x75\x86\x65\xe1\xb0\xc2\x85\x51\x6c\x6a\x8c\x47\xbf\x7e\x06\x75\x38\xf4\x1b\x3a\xdb\x24\x87\x71\x80\xe8\xcf\x5e\xd4\xa8\xd7\x0a\xc9\x5d\xa8\x7b\xba\xd3\x05\xec\xab\xe5\x19\xf9\x19\x27\xd1\x45\x4f\x91\x8e\x37\xa4\x88\xa4\xcf\x8f\x26\x2d\xa4\x82\x93\xad\x2f\xc8\xd5\x94\x2b\x28\x67\xcb\x7e\xc7\x72\x9e\xb6\xd6\x27\x88\x48\xff\x2f\x00\x00\xff\xff\x27\x5a\xce\xe7\x94\x1b\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 7060, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x00\xe3\x08\x33\x5e\xbc\x7b\xf2\xe0\x39\xe4\xa5\x64\x48\x93\x98\xdd\x52\xeb\xa7\x77\x90\x0a\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\x9b\x44\x45\x63\x3d\x9f\x17\x75\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x04\xbe\x82\x0c\xde\xfc\x9f\x1c\xf1\x53\x48\xba\xb0\xde\x84\x4d\xb1\x23\x8a\xb8\x61\xac\xb4\xb4\xab\xb7\x20\x43\xc5\x64\x12\xef\xed\xac\x12\x6f\xec\xc5\x7a\x15\x1a\x7c\x8e\xed\xa3\x0b\x72\xaf\xd3\x64\x82\x3a\x1d\x74\x7a\x60\x7c\xb5\x36\x33\x0e\x0e\x9a\x93\x39\x4d\xfc\xec\xbf\x98\xfb\x35\xcf\x99\xc5\x7c\x91\x27\x77\x79\xc3\xd5\x3c\x6b\xe4\x32\x4b\x8c\xca\x11\x51\x83\x0a\x8d\x77\x41\xa8\x0c\x3b\xac\x46\x49\x49\x4e\x0d\x4e\x54\x16\xa3\x13\xad\x14\x24\x5c\x28\xa1\x8a\x50\x59\x99\x02\x06\x43\x3f\xa0\x03\xa5\x9d\x3d\xe8\xd4\x0e\xa9\xaf\x9d\x72\xf5\x81\x95\x74\x75\x5c\x19\xfb\x3e\x61\xf4\x02\xba\xb6\x1b\x05\x88\xbd\x50\x1e\xc1\x6b\xfa\x8e\x97\x97\x87\x29\x8c\xbf\x1e\x07\x1e\x05\xc9\x81\xa6\xfe\x34\x4c\x09\x0a\x61\xcb\x47\x9d\xca\x94\x63\x8f\x7a\x9e\x76\x6d\xae\x36\x44\x87\x99\x94\xfa\xc4\x9f\x29\x21\x09\x42\xa3\xf9\xc0\x5d\x3a\x72\x43\xf4\xe7\x8e\xfe\x8f\x92\xab\x61\xdc\x9f\x37\x32\xbb\x6c\xa9\xab\x84\x54\xb2\x8f\x00\x00\x00\xff\xff\x6d\x9e\x36\x8f\xfb\x04\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1275, mode: os.FileMode(438), modTime: time.Unix(1500213742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xcd\x72\x9b\x30\x10\x07\xf0\xbb\x9f\x62\x67\x7c\x69\x0f\x2c\xac\x3e\xf8\xc8\xad\xad\xdd\x8e\x0f\x8d\x33\x24\x9d\x9c\x09\x96\x1b\x5a\x07\x18\x10\xe3\xa6\x4f\xdf\x51\x48\x13\x7c\xd2\xea\xec\x9f\x35\xff\x5d\xad\x24\xd6\xeb\x35\x74\xbd\x69\xcf\x83\x85\x73\xd3\x52\x02\x53\x7f\xa8\xac\x81\x0f\xb1\xb1\x75\x7c\x6c\x06\x73\xae\x4e\x27\x9c\x46\x33\x7c\x5c\x39\xfd\xbd\x1b\x0c\x34\xed\xb1\xbb\x82\x47\x6b\xfb\xf1\x2a\x8e\x7f\x36\xf6\x71\x7a\xc0\xba\x7b\x8a\xeb\xa1\xfa\xfb\x1c\x3d\x55\x7f\xe2\xfb\xa6\x3d\x74\xe7\xf1\xb6\x7f\xfe\x7c\xea\xea\xdf\x66\x58\xad\xd6\x60\xda\x63\x37\xd4\x06\x86\x6e\xb2\x66\x80\xcd\xf5\xed\xaa\xe9\x6d\xf5\x70\x32\x23\x44\x16\xda\xca\x42\xb4\x83\x9b\x72\x5b\xee\x7f\xdc\xed\xae\xbf\x41\xd4\x83\xad\x7b\x88\xa2\x43\xdf\x0d\x16\xb4\x84\xe8\x17\x94\xdb\xcd\xae\xdc\x7e\xb9\x83\x28\xb2\x5d\xe4\x7e\x18\x41\x4b\xff\x4a\xd3\x81\xb9\xd2\x6a\x0d\xc3\x74\x32\xe3\x62\xc9\x1d\x7c\xdd\x97\xf7\x9f\xca\x8d\xfb\xdb\xa6\xdc\xdf\x40\x74\x00\x92\x48\x49\x86\x0a\x75\xc2\xa7\xc2\x47\x85\xa3\x12\x29\x2f\x90\x44\x1a\xa2\x75\x16\xa4\x73\x9f\x56\x09\x66\x19\x0a\x51\x60\x12\x0b\xe5\xd3\xa9\x46\xad\x91\x64\x1e\xa2\x53\xc9\xd3\x29\x12\x15\x48\x4a\x71\xaa\xbc\xd0\xde\x2a\x97\x3a\x2f\x42\x74\xc1\xd8\x76\x42\xa1\x25\x4a\xc9\x9a\x11\x85\x94\x25\xa8\x09\x29\xf7\x16\x79\xa1\xbd\x45\x2e\x35\x27\xf6\x9b\x16\xca\x3b\x82\x17\x3a\x24\xb7\x50\xfc\xdc\x12\x85\x77\x6f\x16\x58\xf2\x6b\xe4\xcd\xeb\x7f\x4e\xe4\x06\x37\x48\xb3\x1b\xe8\x74\xca\x0e\xfe\xa2\xbd\xb7\xc9\x9b\x4e\x75\x48\xbf\x67\xce\xee\xf8\x0b\xd7\x14\xc6\xa5\x97\xeb\x6c\xbe\x52\x24\x8a\xc4\xbf\x43\xb3\x16\x2a\x41\xff\x31\x5e\x60\x21\xfc\x2d\x77\x3a\x75\x97\x21\x49\x7f\x0b\x17\x98\x97\x63\xc6\x2a\x24\x86\xf2\xf7\x7a\x81\x43\x32\x33\x36\x7d\xc6\x45\x8a\x9a\xb7\x29\xb3\xe5\x86\x28\x52\x24\xe1\x9f\x8d\x82\x50\x48\x81\xb9\x3b\xee\x21\xd8\x1f\xe3\x1d\x33\x0e\xe3\x02\xfb\xcf\xe2\x2b\x26\xc9\x7b\x51\x67\xaf\x30\x13\x48\x39\xb3\xc8\x57\xed\xbf\x73\x96\x9a\xd9\x93\x59\xfb\x9f\x0f\xe1\xbe\x74\xdc\x3b\xa9\x18\xed\x5e\xe0\x94\xfe\x05\x00\x00\xff\xff\x28\x69\xc5\x4e\x90\x0a\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 2704, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfe\x8a\x93\xba\xc0\x40\x02\x65\x40\xaa\xc4\xc2\xce\xc4\xc0\x9c\x3a\xbe\xab\x21\xb1\x43\xec\x5e\x5a\x7e\x3d\x2a\x0c\x70\xd2\x5d\x19\xfd\xbe\xe7\xa7\xa7\xb7\x5e\xaf\x3b\x29\xc8\xad\x5a\xd7\x88\x1f\x3a\x3c\x5a\x0d\xdd\x95\x47\x03\x1f\x59\x73\xd0\x0f\x07\xc2\xfd\xf5\xea\x6c\x7d\x96\x8a\x1d\x71\x2f\xdb\x6e\x6f\x56\x74\xeb\xfd\x40\xb6\x3f\xec\x1c\x48\xf6\x50\xc3\xe7\xe9\x26\x87\xa3\x7f\x25\x8e\xd2\xf4\xa5\x9c\x9e\x92\xc0\x3b\xd6\xd5\x4a\xb1\x8e\x58\x1f\x7d\x00\xa3\x31\x18\x09\x3b\x4d\xea\x32\x41\x15\x95\xde\xbe\x13\x7e\x5d\x85\xdc\x8e\x78\x98\xaa\x20\x9b\x4b\x4f\x50\xd3\x12\x8a\x39\xba\x8c\x16\xce\x37\x01\x2e\x46\x44\x56\x97\xb5\x37\x06\xa5\x29\x19\x66\xfa\x0c\x2e\xd1\x88\x53\x2d\xc9\x40\x3c\xa3\xcf\xa7\xd6\xcd\xad\xb6\xb7\xbb\xfb\x5c\x97\x1a\x19\x65\x74\xed\x67\xcf\x29\x19\x43\xa2\xf8\xef\x92\x2d\x42\xb9\xc4\x42\xb2\x45\xac\x20\x6c\x2e\x94\xb2\x9c\xbe\x64\x71\x18\x07\xd4\x03\x19\x3a\x46\xfb\xf3\xd0\xda\x74\xe0\xaf\x00\x00\x00\xff\xff\xfe\xad\xae\xa8\x82\x02\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 642, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x72\x82\x40\x10\xc6\xf1\x9e\xa7\xf8\x66\x68\x92\xe2\x16\x0e\x0e\x45\xbb\x24\x98\x0c\x45\xd4\x39\xcd\x58\x23\x9c\x91\x04\xb9\x9b\xe3\x18\x34\x4f\x9f\xa1\x4b\x2a\xac\xf7\xb7\xff\xd9\xf5\x7d\x1f\xda\xa8\x76\xb0\x0e\x43\xdd\xce\xa1\xae\xce\x16\x78\x08\x94\x2b\x83\x53\x6d\xd5\x50\x34\x0d\xf5\x9d\xb2\x8f\xde\x68\xdf\xb5\x55\xa8\xdb\x93\x5e\xe2\xec\x9c\xe9\x96\x41\xf0\x59\xbb\x73\x7f\xa4\x52\x5f\x82\xd2\x16\x3f\x37\x76\x29\xae\xc1\xa1\x6e\x2b\x3d\x74\x3b\x73\x7b\x6e\x74\xf9\xad\xac\xe7\xf9\x50\xed\x49\xdb\x52\xc1\xea\xde\x29\x8b\x6c\xbd\xf3\x6a\xe3\x8a\x63\xa3\x3a\x30\x87\xb6\x70\x60\x39\xb6\x72\x25\x37\x1f\xfb\x7c\xfd\x06\x66\xe0\x4a\x03\xc6\x2a\xa3\xad\x43\x12\x83\x7d\x41\xae\xb2\x5c\xae\x5e\xf6\x60\xcc\x69\x36\x0e\x3a\x24\xf1\x74\xa9\xaf\xee\x2c\x79\x3e\x6c\xdf\xa8\xee\x4f\x32\xc7\xeb\x46\x1e\x9e\x64\x36\xae\x65\x72\xb3\x05\xab\xc0\x63\x4a\x43\xe2\x11\x25\x62\x8a\x8a\x90\x38\x4f\x89\x87\x31\xcd\xa7\xec\x4c\x90\xa0\x44\x50\xf4\xef\xa9\x09\x3a\x79\xc1\x2c\xa1\x24\xa2\x45\x4a\x51\xcc\xef\xb3\x3c\x4c\x89\x4f\x87\xa3\x70\x4e\x62\x46\x7c\x21\x88\x8b\xdf\x00\x00\x00\xff\xff\xb2\xac\x49\x2b\x4f\x02\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 591, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbb\x8e\xdb\x30\x10\x45\x7b\x7f\x85\x00\x37\x49\xa1\xa1\x5e\xeb\xc5\x2e\x90\x26\x7d\xaa\x14\xa9\x67\xc9\x91\x4c\x58\x9c\xa1\xc9\xb1\x65\xe5\xeb\x03\x23\xc8\xcb\xb1\x94\xb8\x3e\xe7\xde\xc1\xdc\xed\x76\x5b\x48\x24\x9e\x92\x16\x93\xe7\xe7\x22\xc7\xb9\x78\x67\x48\xad\x71\x9c\x03\xe6\x23\x58\xe1\xfe\xfd\xe6\x2a\x7e\x92\x44\x85\xe7\x5e\x5e\x8b\xbd\x6a\xcc\xaf\xc6\x0c\x5e\xf7\xa7\x37\xb0\x12\x8c\x4d\xf8\x75\x2e\x03\x5e\xcc\x17\xcf\x4e\xa6\xfc\x39\xce\x1f\x47\xb1\x07\x4a\x9b\x4d\xa6\x74\xa6\xf4\xc1\x60\x59\x55\x55\x0b\x58\x86\x4c\x6e\x20\x60\x52\xf3\x13\x5a\x97\xeb\xba\x6b\x61\x14\x86\x71\xe4\xe9\x6f\xda\xec\x5e\x96\x69\x53\x75\x4d\x07\xa3\x9d\x17\x71\xfb\xb4\x8a\x77\xf5\x32\x6e\xdb\x97\x15\xd8\xad\xdc\xed\xaa\x67\xe8\x13\xde\x83\x12\x22\x2a\x5d\xec\x1e\x79\xa0\x1a\x34\x61\xdf\x7b\x1b\x90\x71\xa0\x74\xe3\xce\x0d\x64\x52\xf5\x3c\x64\x70\xa8\x08\xc1\xdb\x24\x59\x7a\xbd\xae\x0f\x78\x40\xc7\xf9\xcf\x8c\x7b\x7b\x7a\x38\x43\x27\x38\x4b\x52\xba\xdc\x09\xfc\xb2\x06\x92\x87\x9b\x7f\xf8\xe5\xe4\x79\xb5\x3c\xc7\x99\x49\x9b\x75\x4c\xa7\x24\x91\x7e\x73\xee\x9e\x3c\x06\x50\x1a\x29\x90\xa6\x79\xa9\xef\x2a\x58\x09\x01\xd9\xfd\x8f\x9c\xc8\x09\xf8\x78\xde\x2d\x29\xdf\xe7\xfb\xe7\x97\x13\x6a\x16\xbe\xa1\xdf\x02\x00\x00\xff\xff\x82\x5f\x3b\x31\x8f\x03\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 911, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x41\x6f\x9b\x4c\x10\x06\xe0\xbb\x7f\xc5\x48\xbe\x7c\xdf\x81\xd7\x3b\xb3\xbb\x2c\xe4\xd6\xd6\x69\xe5\x43\x93\x88\xa4\xca\xd9\xb1\x49\x43\xeb\x00\x82\xb5\xdc\xf4\xd7\x57\x34\x4d\x4a\x4f\xb3\x39\x70\xe2\xd9\xd1\xf0\xce\x68\x59\x2e\x97\xd4\xf5\x75\x7b\x1a\x22\x9d\x9a\x36\xd0\xd8\x3f\xd1\x7f\xab\x3a\xee\x56\xf7\xcd\x50\x9f\xb6\x87\x03\x8e\x63\x3d\xfc\xbf\x98\xe4\xe7\x6e\xa8\xa9\x69\xef\xbb\x33\x7a\x88\xb1\x1f\xcf\x56\xab\xaf\x4d\x7c\x38\xde\x61\xd7\x3d\xae\x76\xc3\xf6\xe7\x53\xf6\xb8\xfd\xb1\xba\x6d\xda\x7d\x77\x1a\xaf\xfb\xa7\xf7\x87\x6e\xf7\xbd\x1e\x16\x8b\x25\xd5\xed\x7d\x37\xec\x6a\x1a\xba\x63\xac\x07\x5a\x5f\x5c\x2f\x9a\x3e\x6e\xef\x0e\xf5\x48\x59\xa4\x76\x1b\x29\xdb\xd0\x55\x75\x5e\x5d\x7e\xb9\xd9\x5c\x7c\xa2\xac\xa7\xb8\xeb\x29\xcb\xf6\x7d\x37\x44\xf2\x96\xb2\x6f\x54\x9d\xaf\x37\xd5\xf9\x87\x1b\xca\xb2\xd8\x65\xd3\x8b\x91\xbc\xd5\x2b\x1d\xf7\x89\x95\x16\x4b\x1a\x8e\x87\x7a\x9c\x95\xdc\xd0\xc7\xcb\xea\xf6\x5d\xb5\x9e\x8e\xad\xab\xcb\x2b\xca\xf6\xc4\x16\xa1\x84\xd8\x12\x79\x99\x60\x0b\x86\x2f\x21\x4e\x34\xeb\x0c\x42\x80\x48\x0e\x71\x6a\xe1\x19\xf6\x26\x01\x33\x17\x60\x93\x83\xad\xaa\x3d\x83\x1d\xc3\x0a\x3c\xab\x56\xc0\xb9\x83\x38\x03\xaf\xf6\xfc\x8a\x19\x62\x7c\xaa\xf6\x0c\xe7\x52\x70\x28\x60\x0b\x70\x5a\xd3\xa1\x00\xbb\x30\x35\x9e\xaa\x3d\x43\x58\x1d\xe2\x8b\x9e\x9e\x3c\x15\x97\x16\x9c\xac\x45\x2c\xc4\xa6\xe0\x22\x20\x37\x60\x13\x34\x9c\x7b\x78\x0f\xe7\xc0\xa6\x78\x83\x55\x07\xfe\x6c\x99\x2d\xf4\xe0\x66\x56\xfd\xb8\x67\x2b\x5e\x10\xd4\x61\xff\xb5\xe5\x1b\xea\x72\xa9\xee\x45\x9e\x83\xb9\x04\x4f\x51\x78\x3d\xe2\xb9\xd6\x43\x9e\xe9\x42\x8f\x79\xa6\xf5\xbe\xd9\x38\xb8\x29\xe5\x80\x5c\xdd\xb9\x57\x5c\x42\xd4\xa8\xff\x60\x91\x02\x5e\xcd\x7a\x86\xc5\xa8\xdb\xf1\xa2\x6d\x00\x27\xdc\xba\xcc\x10\x61\x48\x99\xb0\x4c\x33\x2c\x09\x6d\x5b\x07\x0e\x06\xd6\x4c\x87\x52\xf5\x74\x77\x38\x3d\xec\xb9\x56\x37\xea\x1f\xad\x6e\xd4\xab\xb6\x90\x84\xbf\x56\x00\x73\x80\x58\x9f\x70\x8b\x71\xc9\xbf\x07\x23\xa6\x00\x4b\xfe\x2b\x00\x00\xff\xff\xae\x55\x59\xca\x59\x08\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2137, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4f\xc3\x30\x10\x05\xe0\x3d\xbf\xc2\x52\x16\x18\x6a\x93\x10\xa9\x55\x25\x16\x76\x26\x06\x66\xc7\x3e\xa7\x16\x89\xcf\xd8\x17\x4c\xf9\xf5\x08\x52\x05\x18\x6a\x67\xf5\xfb\x7c\xef\xd5\x75\xcd\xd0\x83\x4b\x81\x58\xb2\x6e\xcf\x66\xaf\x25\x01\xbb\x11\x40\x4a\x68\x17\x27\x19\xdf\xb8\x42\x67\x6e\xab\x6f\xfb\x84\x01\x98\x75\x06\x8f\xec\x44\xe4\xe3\x51\x88\xc1\xd2\x69\xee\xb9\xc2\x49\xa8\x20\x3f\xcf\xbb\x49\x7e\x88\x17\xeb\x34\xa6\xf8\xec\xcf\x8f\x23\xaa\x57\x08\x55\x15\x21\xbc\x43\x78\x10\xcd\xa1\xeb\x77\x0d\x1f\x79\x5a\xcc\xd2\xf8\xf3\x7f\x35\x6d\x2b\xf7\x65\xa3\x9a\xa2\xb9\x3f\x94\x48\x07\x50\x22\xd2\xc8\x22\x99\xb9\xc6\xe4\x46\x94\x3a\xc7\x7a\x6d\x4a\x97\x14\x8d\x3a\x0b\xd6\x9e\xc9\xaa\x80\x11\x0d\x5d\xc9\x73\x37\xe2\xa6\xb9\xa6\xbb\x2b\xcd\x35\xd0\xf2\xcb\xfb\x95\x3d\x66\xe0\x3a\xf2\xbe\xd9\xd4\xb8\xde\xf8\x6f\x1c\xd0\xaf\xc9\x7c\x5f\xa2\x4b\x82\x61\xf8\x93\xa4\x94\x1b\xf0\x15\x00\x00\xff\xff\x91\xff\x09\xc0\x08\x03\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 776, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\xc1\x6e\x9c\x30\x10\x06\xe0\x3b\x4f\x31\x12\x97\xf6\xe0\x61\xc7\xc6\x06\x72\x6b\xbb\xdb\x6a\x0f\xcd\x46\x24\x55\xce\x04\xbc\x0d\x2d\xc1\xc8\x18\x6d\xd3\xa7\xaf\x68\xb7\xd1\xee\x69\xe0\xcc\xc7\xc8\xf3\xff\xb2\xe3\x38\x06\x37\xd8\xfe\xe4\x03\x9c\xda\x3e\x83\x69\x68\xaa\x60\xe1\x5d\x62\x43\x9d\x1c\x5b\x6f\x4f\x55\xd7\xe1\x34\x5a\xff\x3e\x9a\xf1\x57\xe7\x2d\xb4\xfd\xd1\xdd\xc0\x73\x08\xc3\x78\x93\x24\xdf\xdb\xf0\x3c\x3d\x61\xed\x5e\x92\xda\x57\xbf\x5f\xc5\x4b\xf5\x2b\x79\x6c\xfb\xc6\x9d\xc6\xfb\xe1\xf5\x63\xe7\xea\x9f\xd6\x47\x51\x0c\xb6\x3f\x3a\x5f\x5b\xf0\x6e\x0a\xd6\xc3\xf6\xf6\x3e\x6a\x87\x50\x3d\x75\x76\x04\x11\xa0\xaf\x02\x88\x3d\xdc\x95\xbb\xf2\xf0\xed\x61\x7f\xfb\x05\xc4\x00\xa1\x1e\x40\x88\x66\x70\x3e\x80\x56\x20\x7e\x40\xb9\xdb\xee\xcb\xdd\xa7\x07\x10\x22\x38\x31\x7f\x18\x41\x2b\x7e\xd2\xd4\x2c\x9c\x14\xc5\xe0\xa7\xce\x8e\x17\x23\xf7\xf0\xf9\x50\x3e\x7e\x28\xb7\xf3\x6f\xdb\xf2\x70\x07\xa2\x01\x52\x48\x9b\x0c\x53\xd4\x1b\x8e\xca\x99\x2a\xa4\xbc\x40\x92\x7a\x95\x36\x6b\xb4\xce\x56\xe9\x9c\xd3\x46\xa3\xd6\x48\x2a\x47\x22\xb9\x06\xa7\x2b\x30\xbf\xe2\x05\xce\x97\x62\xa3\x50\x4a\x5a\x83\xd9\x05\x49\xa5\x48\xd9\x06\x35\x21\x15\x6c\xe7\x6f\x5a\xa1\x5a\x8e\x73\xdc\x24\x92\x4d\xef\x3f\x27\xd2\x68\x16\x9f\x9b\x8c\x46\x99\xb2\xa5\x5f\xf3\x62\x15\xd7\x6c\xe2\xd7\x5c\xb1\x5c\x67\xa8\x0d\x16\x06\x49\xf2\xb8\x20\x94\x4a\x62\x3e\x07\xb9\x02\x1b\xbe\x9f\x0b\xcc\xe7\x7d\xc6\xa4\x8a\x45\x2b\x5e\x71\xbe\xfb\xbf\x3c\xc5\x4c\x22\xe5\x0b\x87\x9f\x35\x7b\x77\xae\xf4\xc2\x04\xff\x69\xfe\x3e\xc8\xf9\xad\x34\xf3\xdb\x80\x3a\xff\x13\x00\x00\xff\xff\x5f\x24\x5b\x78\x79\x06\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 1657, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\x3f\x93\x9b\x30\x10\x05\xf0\x9e\x4f\xb1\x33\x34\x49\xa1\x45\x2b\xc4\x3f\x77\x49\x70\x32\x14\xb1\x3d\xd8\x19\xd7\x18\xe4\x98\x3b\x8c\x18\x21\x06\xfb\x3e\xfd\x0d\xdd\x5d\x25\xae\xd6\x4f\x6f\xf6\x3d\xdf\xf7\x41\x0f\xaa\x9f\x8d\x85\xb9\xed\x53\x02\xf5\xb0\xa6\x82\x6f\x81\xb2\x75\x70\x6d\x8d\x9a\xab\xae\xc3\x69\x54\xe6\xbb\xb7\xe0\xbf\xda\x28\x68\xfb\xab\xde\xc0\xcd\xda\x61\xdc\x04\xc1\xff\xd6\xde\xa6\x0b\xd6\xfa\x1e\xd4\xa6\x7a\x7b\xb2\x7b\xf5\x08\xce\x6d\xdf\xe8\x79\x3c\x0e\xcf\x9f\x9d\xae\x5f\x95\xf1\x3c\x1f\x54\x7f\xd5\xa6\x56\x60\xf4\x64\x95\x81\x7c\x77\xf4\xda\xc1\x56\x97\x4e\x8d\xc0\x2c\xf4\x95\x05\x56\xc0\xa1\xdc\x96\xfb\x7f\xa7\x62\xf7\x07\xd8\x00\xb6\x1e\x80\xb1\x66\xd0\xc6\x42\x14\x02\x7b\x81\x72\x9b\x17\xe5\xf6\xd7\x09\x18\xb3\x9a\x2d\x0f\x23\x44\xa1\x3b\x69\x6a\x56\x26\x79\x3e\x98\xa9\x53\xe3\x87\xc8\x02\x7e\xef\xcb\xf3\x8f\x32\x5f\xbe\xe5\xe5\xfe\x00\xac\x01\x0a\x31\xe5\x48\x02\x23\xe9\xa2\x92\x23\x51\x8a\xc4\x43\x4c\x56\xdb\x18\x29\xe4\x2e\x1d\x4b\x94\x18\x49\x14\x62\xb5\xfc\x34\x96\x83\x3a\x9b\xc5\x11\x46\x02\x89\xa7\x28\xb2\xf5\x36\xfa\x82\x25\xf7\xbd\x14\xd2\x52\x0b\x63\x42\x1e\x08\xe7\xcd\x82\x4b\x4c\x32\xa4\x2c\x41\xc1\x9d\x0b\x0b\x9e\xa0\x8c\x91\x32\x89\x24\xdf\x03\x00\x00\xff\xff\x2a\x33\x85\x11\x31\x03\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 817, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xb1\xaf\xd3\x30\x10\xc7\xf1\xbd\x7f\x45\xa4\x2e\x30\xd4\x8e\xdd\xbc\xd2\x3e\x89\x85\x9d\x89\x81\xf9\xb0\x2f\xa9\xf5\xe2\xb3\x6b\x5f\x9b\x86\xbf\x1e\x05\x24\x44\x81\x5c\xd7\x7e\xbe\x8d\xad\x9f\xa2\x6c\xb7\xdb\x26\x65\xa4\xa9\x70\x33\x05\x3a\x9a\xa6\xe6\xb9\x79\xa7\x91\x9d\xf6\x54\x23\xd4\x8b\x72\x89\xfa\xf7\x9b\xa5\xfc\x9c\x0a\x36\x81\xfa\xf4\xda\x9c\x99\x73\x7d\xd5\x7a\x08\x7c\xbe\x7e\x53\x2e\x45\xed\x0a\x7c\x9f\x77\x11\xee\xfa\x6b\x20\x9f\xa6\xfa\x25\xcf\x9f\xc6\xe4\xde\xb0\x6c\x36\x15\xcb\x0d\xcb\x47\x0d\xbb\xb6\x6d\x8d\x82\x5d\xac\xe8\x07\x54\x84\xac\x1f\xd1\x4a\xb8\x97\xb0\x93\xf0\x45\xc2\x83\x84\x1f\x24\x3c\x4a\x78\x12\xd0\xb4\x12\x4a\x0b\x99\xf5\x85\xfe\xf7\xab\xf3\xd5\xd8\xae\x53\x63\x22\x35\x8e\x34\xfd\xa3\xb6\xed\xda\x4e\x8d\x6e\x5e\x61\x63\xed\x49\xf8\xb7\xb1\x2f\x07\x91\x8f\x66\x9d\xf7\xfb\xd3\xda\xc9\x29\x66\x60\xbc\xbb\x33\xd0\x80\x46\x71\x81\xbe\x0f\x2e\x02\xc1\x80\xe5\xb1\xc5\xab\xba\xa5\xc2\x78\x57\x1e\x18\x54\x0c\xae\xa4\x9a\x7a\xfe\xf9\x5a\xfe\xae\x2a\x32\x07\x1a\xea\x6e\x0a\x24\x87\x79\x26\x64\x2b\x33\x8c\x2c\x07\x78\x2d\x29\xe3\x1f\x0d\xbc\x81\xa7\xfa\x78\xf3\x7a\x89\x8a\x71\xc4\x88\x5c\xe6\xd5\xe7\x31\x70\xed\xd1\xaa\x6b\xf6\xc0\xf8\x34\x9b\xea\x5a\xb2\x1c\x25\x2e\xb9\x04\x2e\xc5\x08\xe4\x9f\xdf\xeb\xd7\xe6\x4f\xe7\x5c\xbe\x2b\x2a\xe4\xdb\xe1\xaf\xe0\x47\x00\x00\x00\xff\xff\x62\x18\x2c\xed\x7c\x04\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1148, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xc1\x72\xd3\x30\x10\x06\xe0\x7b\x9e\x42\x33\xb9\xc0\xc1\x7f\xb4\x2b\xc9\xb2\x7a\x03\x52\x98\x1c\x68\x3b\x6e\x99\x9e\xd3\xc4\xa5\x81\xd4\xf6\xd8\xce\x84\xf2\xf4\x8c\xdc\x36\x98\x0b\xab\x1e\x72\xca\x67\x8d\xf6\x5f\x69\x35\x9f\xcf\x55\xd3\x56\xf5\xb1\x1b\xd4\x71\x57\x17\xa4\xfa\xf6\x49\xbd\x5b\x54\xc3\x66\x71\xbf\xeb\xaa\xe3\x7a\xbf\xc7\xa1\xaf\xba\xf7\xb3\x48\xbf\x36\x5d\xa5\x76\xf5\x7d\x73\xa6\x1e\x86\xa1\xed\xcf\x16\x8b\xef\xbb\xe1\xe1\x70\x87\x4d\xf3\xb8\xd8\x74\xeb\xdf\x4f\xd9\xe3\xfa\xd7\xe2\x76\x57\x6f\x9b\x63\x7f\xdd\x3e\x7d\xdc\x37\x9b\x9f\x55\x37\x9b\xcd\x55\x55\xdf\x37\xdd\xa6\x52\x5d\x73\x18\xaa\x4e\x2d\x2f\xae\x67\xbb\x76\x58\xdf\xed\xab\x5e\x65\x83\xaa\xd7\x83\xca\x56\xea\xaa\x3c\x2f\x2f\xbf\xdd\xac\x2e\xbe\xa8\xac\x55\xc3\xa6\x55\x59\xb6\x6d\x9b\x6e\x50\xce\xa8\xec\x87\x2a\xcf\x97\xab\xf2\xfc\xd3\x8d\xca\xb2\xa1\xc9\xe2\x1f\xbd\x72\x46\x5e\xe9\xb0\x4d\x5c\x69\x36\x57\xdd\x61\x5f\xf5\x93\x25\x57\xea\xf3\x65\x79\xfb\xa1\x5c\xc6\xcf\x96\xe5\xe5\x95\xca\xb6\x8a\x0c\x7c\x00\x9b\x80\x3c\x24\xd8\x82\xe0\xf0\xcf\x46\xff\x27\x03\xd8\xb2\x64\xd9\x20\x14\xb0\x01\x64\x53\x68\x18\x29\x93\x64\xad\x86\xf7\x60\xce\xc1\x56\xac\x6c\x82\x9d\x4e\xc5\x05\x82\x58\x9c\x23\x90\x25\x18\x86\x13\x77\xec\x18\x94\x5b\xb0\x21\xb0\x4b\xc5\x56\xc3\x89\xe5\x9d\x30\x81\x75\xf2\xd2\x8e\x60\xc5\x96\x44\xec\x0b\x90\xf5\x71\x2f\xa9\xda\x11\x98\xe4\xf0\x5e\x74\xfc\xe5\xa9\x38\x18\x50\xb2\x66\x36\x60\xf1\x34\x47\x5c\x78\xe4\x1a\xa4\xbd\x84\x73\x0b\x0b\xf6\x90\xcf\xd1\xd8\x6b\x33\x66\x4d\x45\x91\xac\x73\x90\x96\xb5\x83\x73\x20\x8a\x61\xbc\xc1\x8a\x2d\x99\x58\x31\xb6\x67\xcb\x8e\x61\xdf\x60\xc3\x1b\x2c\x05\x39\xe4\x13\x66\x2d\x57\x97\x83\x28\x0e\x22\x0b\x72\x72\xa7\xa7\x5a\xee\xc8\x44\x17\xe2\x8d\x9d\x6a\xb9\x48\xd2\x16\x36\xb6\xc4\x23\x17\x8f\xfe\x09\x07\xc8\x53\xf4\x05\xc7\x61\x97\x30\xf5\xff\xe2\x84\xb0\x5f\xb5\xf1\xa0\x94\xb7\xc7\x82\xbc\x86\xd1\x49\x6b\x4f\x75\xc2\x6b\x35\xd1\xe2\xc4\x9b\xea\x84\x00\x63\x79\x94\x8f\x71\x93\xfc\xc2\x3d\x73\x0f\x36\x2e\x61\xe6\x91\xf3\xe3\x75\x34\x26\x69\xe3\x51\xe7\xa0\x60\xe1\xe5\x04\x27\x58\x0e\x70\x82\xe5\x6d\x04\x1a\x9b\xce\xba\x00\xb1\x5c\xe3\xc8\x03\x9c\x06\x89\x97\x6c\x82\xbd\x78\x7f\x4f\x98\x41\x5a\xbe\x63\xaf\xda\xc2\xf1\x9f\x00\x00\x00\xff\xff\x6f\xd9\xce\xcd\x71\x0a\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2673, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\xbd\x6e\xc2\x30\x10\xc0\xf1\x9d\xa7\x88\xc4\xd2\x0e\xd8\x71\x30\xe5\x43\xea\xd2\xbd\x53\x87\xce\xc6\x1f\x21\xaa\xe3\x0b\xb6\xc1\xa5\x4f\x5f\xa5\xa0\xa2\x4a\x85\xbb\x35\xfe\xe5\x7f\x4e\xe2\x4c\xa7\xd3\x0a\x06\x1b\x4a\xcc\x55\xe9\xc2\x4a\x54\x87\xc1\xa8\x6c\xab\x07\x6e\xb3\xe6\x26\xa4\x5e\xa5\x3d\xd3\x10\xdc\xe3\x64\xc4\xaf\x10\x6d\xd5\x05\x07\x9b\x6a\x97\xf3\x90\x36\x9c\xb7\x5d\xde\x1d\xb6\x4c\x43\xcf\x75\x54\x5f\xa7\x59\xaf\x3e\xf9\x7b\x17\x0c\x94\xf4\x36\x9c\x5e\x3c\xe8\x0f\x1b\x27\x93\x64\xe3\xd1\xc6\x67\x2e\xea\x7a\x39\x13\xcc\xb3\x72\x36\xe7\x89\x3f\xf7\x5f\x8d\x10\x1a\x35\x4b\xbd\x40\x8d\x5a\xcd\x51\x63\xea\x35\x6e\x84\xc3\x8d\x44\x3b\xcd\x7c\x2d\x31\x23\x95\xc1\xc8\x93\xc0\xc4\x7a\x85\xee\x45\x1d\x98\x81\x12\x3c\x28\x83\xb0\xa3\x24\xc9\x6d\x3b\x4a\xc5\x8c\x67\x25\xb1\xbe\xd3\x11\x12\xb8\xfc\x1f\xb2\x3d\x82\x04\x29\x25\x48\xad\x86\xd4\x6a\x48\x2d\x49\x6a\x49\x52\x6b\x41\x6a\x2d\x08\x2d\x5d\xa3\x7f\x8b\xce\xde\xdc\x05\x94\x2f\xec\x1a\x6c\x8c\x43\x8f\x9d\xb3\x0d\xbb\x5c\xbf\xf1\x34\xa3\x28\xfb\xbb\xab\x37\xdf\x84\x6b\xa9\xa7\xf5\x37\xf0\xd7\x04\x9b\xaf\x26\xf9\x84\xec\x95\x38\x0c\x5d\xba\xac\x40\x6c\xf9\x77\x00\x00\x00\xff\xff\x78\xfb\xfd\x4d\x94\x05\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 1428, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xbd\x6e\xdb\x30\x10\x07\xf0\xdd\x4f\x71\x80\x97\x76\xe0\xc9\x47\x8a\xfa\xc8\xd6\xd6\x6e\xe1\xa1\x71\xa0\xa4\xc8\xac\xc8\x74\xa3\x56\x11\x05\x8a\x82\x9b\x3e\x7d\x41\x3b\x4d\xe4\x21\x20\x39\xfb\xe7\xc3\xe1\xfe\x77\xd4\x72\xb9\x04\x3d\xa8\xfe\x68\x2c\x1c\xdb\xbe\x20\x98\x86\x7d\x6d\x15\x7c\x48\x94\x6d\x92\x43\x6b\xd4\xb1\xee\x3a\x9c\x46\x65\x3e\x2e\x9c\xfe\xae\x8d\x82\xb6\x3f\xe8\x2b\x78\xb4\x76\x18\xaf\x92\xe4\x67\x6b\x1f\xa7\x07\x6c\xf4\x53\xd2\x98\xfa\xef\x33\x7b\xaa\xff\x24\xf7\x6d\xbf\xd7\xc7\xf1\x76\x78\xfe\xdc\xe9\xe6\xb7\x32\x8b\xc5\x12\x54\x7f\xd0\xa6\x51\x60\xf4\x64\x95\x81\xf5\xf5\xed\xa2\x1d\x6c\xfd\xd0\xa9\x11\x98\x85\xbe\xb6\xc0\xb6\x70\x53\x6d\xaa\xdd\x8f\xbb\xed\xf5\x37\x60\x03\xd8\x66\x00\xc6\xf6\x83\x36\x16\xa4\x00\xf6\x0b\xaa\xcd\x7a\x5b\x6d\xbe\xdc\x01\x63\x56\x33\xf7\xc3\x08\x52\xf8\x2b\x4d\xfb\xc0\x4a\x8b\x25\x98\xa9\x53\xe3\xac\xe4\x16\xbe\xee\xaa\xfb\x4f\xd5\xda\xfd\x6d\x5d\xed\x6e\x80\xed\x81\x04\xd2\x2a\xc7\x14\xe5\xca\x47\xb9\xa3\x02\xa9\x28\x91\xb8\x8c\xd2\x59\x8c\x96\x79\x94\x2e\x7c\x3a\x93\x28\x25\x92\x28\x70\x95\xf0\x34\x50\x67\x22\x42\xf3\x94\x23\x97\x5e\x4c\x82\x90\x4b\x81\x94\x22\x5d\x84\xfd\x8e\x4e\x91\xf2\x15\x4a\x0a\xea\xe4\x95\x0b\xe4\x65\x04\x16\xde\xdc\x5f\x71\xd8\x00\xff\x73\x22\x37\x9b\x28\xed\x5d\x93\xb9\xce\x82\x1b\x3f\x69\x1e\xac\x33\x17\xa8\x77\xab\x2e\x79\xf0\xc4\x4f\x5c\x52\x1c\xf7\xef\x8a\xcc\xcf\x7b\xb8\xc2\xc2\xdf\xca\x1b\x0e\xb8\xcc\x99\xe6\xdc\x3f\x72\xa7\x33\xcc\x73\x77\x6f\x31\x38\xac\xeb\x33\x4e\x63\xda\x48\xfd\xb3\x9e\xe1\x98\x9e\x03\x42\x3f\xe3\x32\xc3\x80\xc7\xe1\xcd\x86\x36\x51\x66\x48\x3c\x6c\x37\xce\xd8\xff\xb2\x52\x49\xc8\x05\xc7\xc2\xbd\x0d\x11\x38\xe0\x18\x67\xd8\x7f\x8b\x2f\x98\x44\x89\x54\x44\xf1\x90\x6b\xb9\xe0\xfe\x64\x4e\x3c\xc5\x9c\x23\x15\x81\xc5\x5f\xb4\x37\x49\xee\xbe\xbd\x19\x12\xa5\x01\xb1\xcf\x70\x46\xff\x02\x00\x00\xff\xff\xa0\x71\xeb\xb1\xf7\x08\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 2295, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd4\xbf\x8e\xda\x40\x10\xc7\xf1\x9e\xa7\xb0\x44\x3d\x3f\x66\x66\x67\xff\x98\x32\x7d\xaa\x14\xa9\x09\x21\x39\x94\x1c\x46\x1c\xd1\xdd\xe5\xe9\x23\xc7\xe2\xd8\x15\xbb\xdb\xed\x17\x7f\x64\x46\x30\xf6\x7a\xbd\x1e\xbe\x1e\x4f\xdf\xa7\xd7\x97\x2f\xe7\xf7\x4f\xbf\xa7\xfd\xaf\xc3\x65\x38\xeb\x79\x78\x3d\x9e\x84\x87\xc3\xdb\xf5\xb2\x5b\xcd\xea\xf3\x74\x39\x0c\xc7\xd3\x8f\x69\x3b\x3c\x5d\xaf\xe7\x97\xed\x66\xf3\xf3\x78\x7d\xfa\xf3\x0d\xfb\xe9\x79\xb3\xbf\xec\xfe\xbe\xd3\xf3\xee\x6d\xf3\x70\xb7\xd5\xea\xe1\xa3\xad\x38\x24\x86\x28\xbc\x51\x76\xae\x4b\xe1\x08\x07\xd1\x44\x79\xb4\xad\x0a\x94\x99\x8a\xaa\x68\x75\x18\x23\x24\x26\x48\x74\x54\x54\x45\x1b\x23\x46\xa8\x1a\x12\x65\xe7\x8e\xf4\x50\xbb\xdb\xff\xd5\xd1\x01\x4c\xf7\xb3\x7a\x5f\xb7\x22\x09\xc2\x0e\x91\xf2\x68\x58\x8d\x10\x53\xc4\x40\x45\x55\x74\x30\x18\xbc\x81\xe9\x76\xaa\x4f\x10\x3c\xbc\x42\x78\xfe\x6e\xca\xa3\x6b\x47\x47\x79\x74\x6c\x9a\x27\xf8\x38\xb7\x67\xf0\xcb\xf5\xe5\xbe\xb7\x68\x5a\xf5\x0a\xbb\xd9\x25\x6a\xdb\xc3\x06\x33\xa4\x84\x79\xd3\xb2\xe8\x5a\x61\x47\x45\x35\xb4\x8a\x2d\x7f\xae\x50\x99\x4d\xef\x21\x16\x96\x4d\x2e\xbb\xba\xf9\x02\xf5\x0e\xce\xa0\x6e\x5e\xfd\x3c\x3b\x3e\x08\xee\x3a\x48\xe3\x17\x17\x67\x90\xc8\x90\xe4\x11\x67\x9f\x67\xcd\x87\x84\xe0\x20\x09\x71\xa4\x3c\x6a\x4f\x21\x1b\xe2\x08\x19\x23\x98\xb2\xa8\x4f\xa2\x1c\x61\x01\xf3\x65\xa5\x3c\xda\x56\x58\xa0\x23\x15\xd5\xd1\xde\x41\xbc\xa7\x32\x3b\x7e\x34\x88\x51\x51\x7d\xad\x9e\x8a\xea\x6b\xe7\xa8\xa8\xbe\x36\xa6\xa2\xda\x5a\xe7\xf7\xdd\xc7\xdc\x4b\x35\x74\x48\x90\x30\xbf\x92\x16\x7e\xcf\x7f\x01\x00\x00\xff\xff\x63\xaa\xbe\x9a\x3c\x06\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 1596, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x98\x3b\x93\x14\x47\x0c\x80\x73\x7e\xc5\x56\x11\x4b\xd7\x52\xbf\x09\x9d\x3b\x72\xe0\x18\x63\x6c\xae\x6c\xb8\x2b\xc0\x85\xf1\xaf\x77\xa9\x67\x1f\xd2\xd1\xd2\x06\x4b\xf5\xc7\x7c\xd3\x27\xcd\xf4\x43\x3d\xaf\x5f\xbf\x3e\xfd\xfa\xf8\xe9\xf7\xa7\x6f\x5f\x7e\x79\xfe\xfe\xd3\xdf\x4f\xef\xfe\x7a\xff\xf9\xf4\xcc\xcf\xa7\x6f\x8f\x9f\x28\x9d\xbe\x3c\x7f\x7f\x25\xce\xcf\x4f\x9f\xdf\x9f\x1e\x3f\xfd\xf1\xf4\xe6\xf4\xe1\xeb\xd7\xe7\x2f\x6f\x1e\x1e\xfe\x7c\xfc\xfa\xe1\x9f\xdf\xf0\xdd\xd3\xc7\x87\x77\x9f\xdf\xfe\xf7\x1d\x3e\xbe\xfd\xf7\xe1\x87\xbe\x5e\xbd\xfa\xe1\xbf\xde\x50\xc6\x36\x70\x0c\x24\x9e\xa0\x61\xef\xf6\x86\x4c\x03\x89\x3a\x18\x0a\xec\x89\x34\x09\x0c\x85\x36\x53\x02\x43\x8e\x3d\x91\xf3\xc4\xb6\xa2\xbe\xc2\xde\x1d\x84\x15\x6b\x86\x5b\xd3\xf7\x26\x72\x61\xd0\xb0\x77\x29\x75\xac\x38\x06\xa8\xf6\xc6\xe4\x8c\xb3\x63\x23\xa4\xdc\x41\x83\xeb\x72\x9a\x38\x2f\xee\x01\x8e\x3b\x91\x12\x12\x81\x6a\x07\xe6\xc4\x52\x40\x43\xe8\x36\xed\xb6\xc0\xa5\x26\x3f\x30\xe4\xdb\x4c\xc8\xa9\x83\xa1\xbd\x4d\x89\xb1\x20\xd7\x0c\x1a\x7c\x97\x09\x0b\xa8\xb6\x6f\x52\xad\x48\x25\x81\x45\xcf\xcf\x48\x83\x91\xb8\x81\xc5\x8d\x5f\x12\xb6\x89\x25\x21\xd5\x0e\x1a\xf6\x6e\x6f\x48\x48\xbd\x81\x6a\xfb\x26\x63\x81\x5b\x33\xf2\xa8\x31\x68\x70\xdc\x8e\xcc\x03\xe7\xe1\x5e\x60\xef\x0e\xc9\x7a\x62\x99\xa0\x61\xef\xd2\x9a\x0f\xd8\x07\x68\x08\xdc\x82\x54\x27\x18\xf2\x6d\x66\x2c\x1d\x34\x78\x6e\x41\x2a\x13\x99\x13\x58\xf4\x7d\x2e\x84\x54\x08\x2c\x7a\x7e\x45\x92\x09\xa5\xda\x9e\xd9\x91\x8a\x74\x77\x8e\xe4\x8a\x81\x5f\x09\x79\x82\x21\xc7\x66\x5a\xdd\xd1\x58\xef\x51\xe1\xc6\xaf\x2b\x21\xcc\x8c\x95\x40\xc3\xce\x95\xa1\xb3\xc2\xc4\x9c\xc1\x50\x6c\xd7\x09\x86\x22\x5b\xa6\x7f\x05\x8b\x9e\x2f\x23\x94\x71\x30\x18\x8a\x6d\x2a\x1d\x2c\x46\x7e\x46\xca\x15\x2c\x7a\xfe\x40\x2e\x48\xbd\x80\x21\xcf\x9e\x6b\xc6\x8c\xf3\x73\xbc\x90\x63\xf7\x21\x81\xae\xf1\x62\x31\xf0\x65\x84\x10\x83\xc5\xc0\x97\x5f\x03\x43\x81\x3d\xf3\x5a\xe2\x2d\xfa\xbe\x3c\x3a\xce\x60\xc8\xb1\x87\x4c\x77\x46\xca\x47\xef\x37\x8c\xfc\x8a\x9c\x94\xbf\xd0\xf3\x3b\xb6\x24\xdb\x33\x18\xda\xd8\xad\x60\xc1\x86\x94\x12\xdc\x9a\x9e\xc7\x19\xcf\x9a\x24\x57\x77\xa3\xa4\x55\xcc\x73\x4d\x5f\xce\x09\x0c\xed\xed\xca\xc8\x0d\x79\x80\x6a\xbb\x26\xa5\x84\x09\x6e\x6d\x37\x86\x35\xe0\x48\x76\x73\x0d\x7e\x04\x52\x71\xa5\x0e\x86\x1c\xbb\x22\x4b\xd5\x75\x04\x7c\x01\xd7\x95\xf4\x13\xa8\xb6\x6b\x96\x22\xcb\x93\x6a\x87\x66\x51\xa6\x97\xd7\xba\x4a\x69\x80\x86\xd8\x9d\xda\xdd\xad\x61\xc7\x65\xd9\x0b\xf9\x92\xd6\x01\xae\xbb\xb6\xb7\x4b\x62\x07\xc4\x2e\x6b\x77\x37\x9b\xd5\xe5\xac\xdd\xdd\x6c\x3b\x5f\xce\x09\xeb\x25\xde\x03\x7c\xb7\x37\x9c\x57\x77\x81\x3f\x12\x8e\x19\x71\x6d\xfb\xe3\xb1\x22\x57\xbe\xb9\x32\xca\xf6\xae\x14\x92\x73\x2d\x7d\x94\x09\x2c\x6e\xfc\xde\x51\x56\xed\xb9\x0a\x2a\x0d\xbb\xea\x3d\x15\x5c\x9b\x4d\xc7\x9e\xc1\x90\x67\xcb\x53\xed\xd8\x1a\x18\x8a\x6c\x39\xba\x80\xa1\xc0\x2e\x49\x1e\x1b\x58\xf4\x7d\xa9\xd5\xea\x55\x3f\x28\xb6\x39\x31\x58\x0c\xfc\xdc\x65\x97\x02\x8b\x9e\x2f\x63\x0e\x69\x56\x30\xe4\xdb\x2c\xa5\x18\x31\x58\xf4\x7c\x29\x8b\x99\xce\x0f\xf2\x0c\xbe\x9b\x87\xac\x74\x1a\x7c\xb7\x4a\xb5\x54\xc1\x90\x63\x33\x25\x2c\xd8\x3b\x68\x88\xdc\x84\x43\xc9\x42\x81\xcd\xc4\xc8\x25\xc3\x0b\x76\xef\x28\x98\x2b\x72\x29\x60\x71\xe7\x13\x21\xcb\x19\x4b\xce\x21\x60\x28\xb6\x49\x72\x35\x18\xfb\x72\x4a\xb3\x78\xcf\x2f\xd6\x8f\xa2\x6f\x05\x6f\xc1\x4b\x9d\xb8\x5d\x2f\x28\x93\xfc\x5d\x39\x40\x24\x50\x10\xdb\x52\xcf\x76\x30\xb4\xb5\xa5\xba\x4b\x98\xd3\x31\x8f\x0c\xde\xf1\x65\x11\x30\x18\xf8\xb2\x3f\xd7\x9b\x7f\x60\xe0\x53\x6a\x2b\xd9\x1b\x79\xd9\x5e\x0c\xa9\x23\xc1\xe2\x1d\xbf\x0c\xb0\x78\xc7\x9f\x0d\x2c\x86\xfe\xb0\xf1\x8c\x7b\xf1\x0c\x1b\xcf\xb8\x17\xcf\xc0\xce\x60\xf1\x5e\x3c\x2f\x03\x8a\x23\x22\xd2\x6f\x40\x06\x69\xfc\x06\x38\x99\x8c\x17\xde\xf1\x75\xc6\x0b\xef\xf8\x3a\xe3\x85\x77\x7c\xfd\xc6\x16\x46\x7e\x1f\x38\x3b\x58\x0c\xfd\xb9\x96\x42\x83\x91\x3f\x64\x08\xa8\x84\x0f\x0e\xee\xe0\x5c\xe5\x28\x63\x71\xeb\xf7\xf5\x75\x6a\xd0\xf1\x02\x14\xb9\x76\xbf\xf5\xae\x71\xe7\xd7\x2e\xe5\xcc\xaa\x6c\x6e\x6d\x67\x2c\x9c\xaf\x37\xe5\xba\x33\xf7\xb8\x4e\x69\xde\x64\x81\xd8\xe6\xa3\xf6\xd0\x14\xd8\x39\xa9\xbe\xb3\x77\x96\x38\x0b\xf2\x04\xae\xb6\xc0\x1d\xbb\x69\x3b\xcc\xb2\xa1\xfc\x0b\xaa\xed\x9b\x5d\xd6\xf5\x04\x86\x7c\x7b\xd2\xda\xbb\x15\xf8\xae\x2c\xa2\x34\x0a\x58\xbc\xe7\x57\xeb\x07\x91\x1f\xc2\xb4\xfe\xb6\xb6\x3a\x0b\x94\x91\xe9\x1a\xfd\x19\x03\x9f\x09\x55\xf7\x8b\x22\xbb\xac\xe9\xa9\x29\xb0\xcb\xd4\x8f\xfd\x8c\x3b\xbf\x0d\x6c\xb4\xbe\x89\x14\x02\x43\xbe\x4d\x45\x86\x07\x18\x8a\x6c\x29\x4b\xc0\x50\x60\x77\xc6\x7e\x8d\xe4\x20\xcf\x3e\xbe\x13\x50\x06\x43\x9e\x9d\xd7\xf1\xbb\x9d\xfb\xbe\x50\x64\x0f\xe4\x9c\xc1\xe2\xce\x9f\xb4\x66\x0c\xc9\xc1\x32\x81\x45\xd7\xef\xc8\x69\xac\x8f\xd5\x2f\x38\xba\x83\x24\x86\x09\x2f\xd8\xbd\x63\x62\x2d\x58\x19\x0c\x6d\x6d\x59\x4f\x86\xcc\x79\x59\x04\x14\xed\x57\x01\x39\x80\xb5\x81\xd4\xda\xaa\x0f\x2d\xee\x7c\x39\xea\xce\xb9\x36\x95\x04\x9a\xb8\xd6\xff\x03\x00\x00\xff\xff\x93\x67\x2e\x8f\x4c\x1b\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 6988, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\xbf\x72\x1a\x31\x10\xc7\xf1\x9e\xa7\xb8\x19\xea\x5d\xb4\xab\x3f\x27\x51\xa6\x4f\x95\x22\x35\xc1\x24\x66\x12\x03\x83\xf1\x38\xce\xd3\x67\x04\xc6\xe8\x87\x75\x52\x77\xdf\xe8\xa3\x8c\x4e\x16\x82\xf9\x7c\x3e\x7c\xdf\xee\x1e\xf6\xaf\xcf\xdf\x0e\x6f\x5f\xfe\xec\xd7\xbf\x37\xc7\xe1\xa0\x87\xe1\x75\xbb\x13\x33\xbc\x1c\x1e\x56\xa7\xcd\x2c\xb3\xaf\xfb\xe3\x66\xd8\xee\x7e\xee\x97\xc3\xe3\xe9\x74\x78\x5e\x2e\x16\xbf\xb6\xa7\xc7\x97\x1f\xbc\xde\x3f\x2d\xd6\xc7\xd5\xbf\x37\x7a\x5a\xfd\x5d\x7c\xfa\xef\x66\xb3\x4f\xff\xb4\x14\xcb\x62\x46\x76\xec\x0d\x15\xcf\x4d\xa9\x85\xd4\x8a\xd4\x3c\x6a\x59\x62\x62\xd1\x40\x98\x1d\xef\x47\xc2\xec\xf9\x88\x3e\x56\xbc\x33\x3c\x8e\xac\x9a\xd8\xd0\xed\x59\xbd\xaf\xd8\xe0\xd9\x7b\x16\x1b\xd9\xd0\xed\xb9\x69\x83\xbd\xd9\x60\xa7\x6c\x60\x91\xc4\xe2\xdc\xf9\x1d\x31\x7b\x3e\xa2\xaf\xbd\x63\x09\x62\x22\xcc\x8e\x4f\x86\x30\xab\x7f\x7d\x61\xf5\x96\xad\xbd\x9c\x94\xa2\xaa\xda\xb1\x8c\x86\xbd\xb0\xc4\x91\x30\x7b\x3e\xa2\xaf\xbd\x6d\x09\x92\x21\xcc\xb6\x57\x17\x08\xb3\xe7\x47\xf4\x9d\xf5\xab\x8b\xe8\x9b\xeb\xb7\xac\x89\xa0\xda\xda\x1a\x82\x6a\xe9\x7c\x84\x8b\xa8\x9f\xcb\x2b\x10\xc9\x07\x98\x30\x7b\x3e\xa0\x6f\xed\x64\x06\xc1\x10\x66\xcf\x2b\xfa\xda\x5d\xf3\x01\x82\x87\xad\x7f\xef\xee\x8c\x74\x37\xa3\xb5\xff\x67\xe1\x85\xee\xba\x3b\xc3\xde\xcd\xb0\xb5\x19\x7e\xbc\x5c\x36\x96\xd5\x38\xc2\x9c\xf6\xea\x0c\xc7\x44\x50\x6d\xad\x6a\x08\x73\xca\x87\x7c\x53\x8a\x8d\x04\xd5\xd1\x09\xf4\xe4\x5a\x2e\xe3\xce\x10\x54\x47\x0b\xe8\xea\xbe\x17\xe3\xb0\xee\xfa\x49\x28\xc6\x61\xdd\xf5\x53\x70\x19\x4f\x81\xbd\xa3\x32\xda\x36\x96\xb6\xb1\x8a\x14\x58\xd4\x12\x54\x4d\x27\x61\xb5\xca\x31\x5f\x00\x04\xd5\xd1\x11\x74\x75\x25\xb7\xf1\xfc\x51\x2d\xab\xa3\x15\x74\xf5\x73\xfa\x3e\x2e\x36\x7f\x0b\x97\x35\x71\x2f\x9d\x85\xe3\x51\x59\xe2\xf5\x45\xaf\xd9\xf3\x01\x7d\xf5\x5e\x2a\x41\x44\x3f\xbd\x37\x17\x90\x0c\x61\xd6\x7e\xa3\xe4\x9f\x47\xf9\x4b\xd5\xe5\x9d\x87\x6a\xeb\x20\x04\xf5\x3f\x00\x00\xff\xff\xed\x0b\xd5\x73\x19\x0a\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 2585, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x6e\xc3\x20\x14\x85\xe1\xdd\x4f\x81\xe4\x99\x03\x17\x2e\x36\xf1\xd8\xbd\x53\x87\xce\xae\xeb\x36\xa8\x8d\x41\x84\x2a\x49\x9f\xbe\xca\x46\x65\xda\xed\xfe\xe8\xd3\xa1\xef\x7b\xf1\x1c\xb6\xd7\x78\x39\x3f\xa5\xdb\xc3\x67\x5c\x3e\xd6\x2c\x92\x49\xe2\x12\xb6\x51\xac\xd7\x92\xe7\xee\x8e\x1e\x63\x5e\x45\xd8\xde\xe2\x24\x8e\xa5\xa4\xf3\xa4\xd4\x7b\x28\xc7\xaf\x17\x2c\xf1\xa4\x96\x3c\x7f\xdf\xe4\x69\xbe\xaa\xdd\x58\xd7\xed\x9e\x26\xb2\xf0\x1a\x64\xe0\x58\x56\x77\x43\xb2\x06\x91\x07\x69\x8b\x51\xd6\xd1\xb0\x03\x83\xe1\x18\xc6\x59\x59\xdd\xff\x4a\xae\x64\xeb\xff\xc1\xc1\x19\x1c\x3c\x8c\x25\x59\xc7\x9f\x96\xb4\x07\xdd\x77\xeb\x6a\x68\xa3\x47\xf0\x00\x3a\x30\x88\xe5\xaf\xfa\x09\x00\x00\xff\xff\xd9\x22\x69\x75\x95\x01\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 405, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x3d\x6f\x13\x41\x10\xc6\xf1\x3e\x9f\xe2\xa4\xd4\xf3\x78\x9f\xd9\xf7\x94\xf4\x54\x14\xd4\xc1\x04\x62\x41\x6c\xcb\x36\x0a\xe6\xd3\xa3\x8d\x25\xb4\x43\xd6\xeb\xc2\xc5\xdf\xf7\xd3\x69\xee\x6e\x35\xf7\xf7\xf7\xcb\xe7\xcd\xf6\xeb\xee\xf5\xf8\x69\x7f\xfe\xf0\x73\xb7\xfe\xf1\x74\x58\xf6\xba\x5f\x5e\x37\xdb\xbc\x1c\xf7\xe7\xbb\x46\x3e\xee\x0e\x4f\xcb\x66\xfb\x6d\xf7\xb0\x3c\x9f\x4e\xfb\xe3\xc3\x6a\xf5\x7d\x73\x7a\xfe\xf5\x05\xeb\xdd\xcb\x6a\x7d\x78\xfc\x73\x96\x97\xc7\xdf\xab\x77\xb7\xba\xbb\x7b\xf7\xd7\x03\x3d\x72\x85\xfa\x8a\x54\xa5\x8f\xb1\x2d\x44\xac\xd0\xa0\xd2\xc7\xc0\x06\x87\x9c\xa1\x9a\xa0\xa1\x8a\xa9\xb9\x8e\x4e\x4c\x8d\x35\x59\x40\x97\x40\xff\xc6\xbb\x1c\xf8\x48\x30\x10\x5e\x11\x29\x7d\x8c\xac\x82\x29\x40\x83\x43\xac\x62\x6a\xa6\x09\x75\x51\x6c\x4e\x7c\x24\x42\x10\x53\x57\x74\x2e\xf0\x05\x6c\x83\xf7\x75\x5d\x33\xe4\x36\xaf\xd8\x9c\xf8\x48\x28\x55\x6c\x4e\x7c\xfb\x25\x31\x35\xd1\xd5\x83\x1d\xbf\xe4\x75\xaf\xea\xa1\x5e\x4c\x5d\xd1\x25\x23\x39\xd0\x65\x31\x35\xd0\x29\x22\x46\x84\x00\xba\x22\x7d\xcc\x6d\xed\xed\xe8\xeb\x5f\x2e\x93\x1e\x54\xe9\x63\x6e\x7d\x6f\x47\x4f\x77\xb9\xac\x51\x91\x29\x7d\x4c\x6d\xf5\xd2\xc7\xd4\xb2\x3a\x31\x35\xd2\x09\x64\x05\xdb\xe3\xc7\x2c\x36\x6f\xf9\x62\xfd\xf0\x4d\x77\xa0\x54\xb1\x79\xc3\xb7\xf1\x4d\x8e\xb6\x95\x0b\x08\xed\x0d\x67\xa4\x24\xa6\x66\xba\x42\x29\xa6\xae\x6b\xd5\x82\xe8\xc5\xd4\x5c\xab\x53\xb1\x39\xf1\x3e\x83\x6d\x2b\x9b\x1c\x79\x12\xaa\x84\xd6\x76\xb8\x4c\xcd\xb5\x46\xc3\x75\x3c\xbd\x0f\x60\x76\xf0\xae\x39\xb1\x39\xf1\x6d\x91\x84\x24\x36\x6f\xf9\x6c\xfd\xe8\x9c\x19\x50\xac\x1f\x9d\xb3\x7f\xc0\x43\xab\x98\x1a\xea\x0c\x32\x43\x7d\x6c\x6b\xce\xe6\xc8\x57\xbe\x7d\x19\x75\x05\xd4\x24\xff\xf5\xdf\x00\x00\x00\xff\xff\xc5\x4c\x57\x8c\xd3\x07\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 2003, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x31\x6f\xea\x30\x10\xc0\xf1\x9d\x4f\x11\x89\xf9\x2e\xb9\xb3\xcf\xb1\x19\xdf\xfe\xa6\x37\xbc\x99\x02\x2d\x51\x0b\x89\x20\x88\xd2\x4f\x5f\x59\x14\x29\x17\x5c\x7b\xe3\x4f\x7e\x07\x8a\x13\x7b\xb9\x5c\x56\xff\xbb\xe3\xb6\xbf\x9e\xff\x0d\xb7\x3f\x1f\xfd\xe6\x7d\x77\xaa\x06\x1e\xaa\x6b\x77\x6c\xab\xcb\xb0\x5d\x8f\xbb\x45\x54\x7f\xfb\xd3\xae\xea\x8e\xaf\xfd\xaa\xda\x8f\xe3\x70\x5e\xd5\xf5\x5b\x37\xee\x2f\x2f\xb8\xe9\x0f\xf5\xe6\xb4\xfe\xba\xc1\x61\xfd\x59\x3f\xfd\xda\x62\xf1\xf4\xd5\x8a\x0c\x52\xd3\xa2\x45\x69\x60\xf2\x39\x21\x39\x5e\x35\x48\x3e\x20\xb1\x80\xce\x92\x77\xda\xbb\x82\x97\x16\x74\x96\xbc\xd7\xde\x27\xbc\x13\x14\x41\x32\x1e\x89\x18\x54\x15\xb4\x55\xda\xe6\x35\x3b\x50\x95\xd7\x5e\x69\x9f\xd1\xce\x20\x33\x81\xaa\x82\x66\xa5\x53\x77\x49\xc6\x22\xb5\x0d\x0a\x21\x85\xf8\x02\x4c\x33\xe7\x0d\x9a\x09\x8f\x95\xd3\x1e\x27\xd8\x23\x4b\xea\x7d\x79\x00\x22\x41\xc7\xa0\x33\xe7\x9d\x20\x5b\x0f\xb3\x2e\x4e\x84\xd9\x44\x28\x4d\x08\xc1\xac\x8b\x13\x66\x36\x61\x52\x13\xd2\xa2\x38\x0c\x0e\x89\x0d\xa8\x4a\xe9\x40\xc8\x86\xd1\xc7\x95\x04\x55\x79\xed\x1a\x50\x55\xd0\xac\x74\x72\xfd\x7f\xae\x93\x09\xf7\x3b\xd5\x5d\x9c\xb0\xb3\x89\xd4\xbe\xba\x0b\x8b\x2d\x23\xf9\xc7\x5f\x3c\xb2\xe4\x9d\xf6\xa9\xbd\xa5\x80\xd7\xfe\xf7\xf5\xbc\x83\xd0\x80\xce\xd4\x19\x15\x8f\x53\x17\x0f\x8d\xf8\xb4\x54\x7d\x07\x00\x00\xff\xff\x76\x10\xb2\xe0\xf0\x05\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 1520, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd1\xbf\x6e\x83\x30\x10\xc7\xf1\x9d\xa7\xb0\xc4\x7c\x3f\x7c\xe6\x8e\x7f\x63\xf7\x4e\x1d\x3a\x53\x4a\x1b\xd4\x06\x23\x42\x95\xa4\x4f\x5f\x31\xd5\x28\x96\xb7\xfb\x5a\x1f\x59\x3e\x39\xcf\x73\xf3\x3a\xcd\xef\xfe\x7a\x79\x59\xee\x4f\xdf\x7e\xf8\x1a\x57\xb3\xb8\xc5\x5c\xa7\xb9\x61\x33\xde\xb6\xb5\xcf\x76\xf5\xec\xd7\xd1\x4c\xf3\x87\xef\xcc\x69\xdb\x96\x4b\x57\x14\x9f\xd3\x76\xfa\x79\xc3\xe0\xcf\xc5\xb0\xf6\xbf\x77\x3a\xf7\xb7\xe2\xe1\xb6\x2c\x7b\x38\xea\xb8\x44\x63\xc1\x0e\x2a\x14\xcc\x11\x29\x16\xcc\x0d\xd8\x96\xa8\x29\x8c\x94\xad\xc0\xa5\xa5\x63\x46\x7c\x25\x10\xa8\xc0\x39\xfa\x1f\x53\x4e\x4b\x0a\xe6\xa4\x94\x40\xc6\xf6\xaa\x14\xea\xc0\xb6\x81\x6b\x29\x8c\xa4\xd5\xd0\x6a\xda\xf2\xfe\xda\xb0\xa2\xff\xc0\xfb\x26\xa8\x18\x96\x82\x70\xaa\x11\xed\xac\xa0\x6e\xc1\x6d\x0d\x67\x2d\x1d\x33\xea\x6b\x48\x05\x6e\x05\x2c\x74\xa8\xbf\x00\x00\x00\xff\xff\x23\x49\xd8\x37\x78\x02\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 632, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x6e\xdb\x30\x10\xc7\xf1\x3d\x4f\x21\x20\xf3\xfd\xcc\x3b\x1e\xff\x65\xec\xde\xa9\x43\xe7\x34\x4d\x1b\xa3\x8d\x6d\xd8\x2e\x52\xf7\xe9\x0b\x4a\x28\xcc\x6b\x28\x7a\x08\xa0\x6f\xf8\x91\x22\x91\x08\x79\x7f\x7f\x3f\x7d\xde\xee\xbe\xee\xdf\x4e\x9f\x0e\x97\x0f\x3f\xf7\x4f\x3f\x9e\x8f\xd3\x41\x0e\xd3\xdb\x76\x97\x79\x3a\x1d\x2e\x77\xd5\x7c\xdc\x1f\x9f\xa7\xed\xee\xdb\xfe\x61\x7a\x39\x9f\x0f\xa7\x87\xcd\xe6\xfb\xf6\xfc\xf2\xeb\x0b\x9e\xf6\xaf\x9b\xa7\xe3\xe3\x9f\x0b\xbd\x3e\xfe\xde\xbc\x7b\xd6\xdd\xdd\xbb\x5f\x3d\xb0\x47\x2a\x10\x5f\x10\x0b\xb5\xd1\xb7\x99\x11\x10\x3c\x5d\x2f\xd7\x5d\x81\xa8\x50\x1b\x1d\x2b\x1e\x25\x43\x0b\x58\xa9\xb9\x5e\x91\x65\x1e\x15\xa6\x36\x3a\x56\x1d\x52\x82\x48\x84\x68\x21\x53\x63\x1d\x1c\x99\x1a\xe8\x8c\x22\xd4\x46\xc7\x06\x06\x2b\xc3\x0b\x02\x53\x1b\x3d\x2b\xe0\xa8\x10\xcf\x90\x40\xa6\x06\x5a\x1d\x42\x21\x53\x23\xcd\x10\x77\x7d\xf8\x92\x03\x1f\x18\xaa\x64\x6a\x45\xa7\x0c\xd6\x54\xdf\x80\x6c\x0e\x7c\x60\x08\x0b\xd9\x1c\xf8\xfa\x13\xc9\xd4\x40\x17\x0f\x6e\xf8\x92\xeb\x5e\xc4\x43\x3c\x99\x5a\xd1\x39\x21\x3a\xb0\x4b\x64\xaa\xa3\xa3\x42\x21\x09\xc1\xd1\xf5\xb2\xef\xc4\xfb\x79\x96\x39\x67\xb2\x39\xf2\x11\xec\x1a\x3f\x67\xcf\x07\x84\x00\xe6\x3a\x07\xd4\xc6\xd8\x4a\x6b\x7b\x2b\xd3\x0c\xfb\xd6\xf6\x66\x6e\x19\x96\x20\xd0\x7f\x76\x89\xa1\x2d\xad\x2d\x63\xcb\xc5\x91\xa9\xa1\x16\x27\x64\xaa\xa7\x23\x98\xeb\x7e\xa4\xe0\x90\xc8\xe6\x2d\x9f\xad\xef\xae\x4b\x03\x72\x21\x9b\x37\x7c\xfd\x58\x93\xbd\x9d\xd8\x29\xb4\xae\x47\x42\x8c\x64\x6a\xa4\x0b\x84\xc9\xd4\xba\xae\x7b\x5f\x3d\x10\xda\x1a\xeb\x3a\xf1\x36\x07\xde\x27\x70\x3d\x99\x4c\x76\xcf\x1c\x05\x27\x07\xef\x96\xe7\x9b\xbc\xe5\xbd\xf5\xfd\x33\xad\x01\x6a\x7d\x6f\x4f\x6c\x41\x9d\x4c\x93\x5d\x9f\xea\xfe\x34\x4f\x37\x73\xfd\x03\xa6\x57\xef\x48\x10\x1f\xea\xb6\x68\xb3\xe7\x43\x9a\xff\x3f\xbd\x5f\xbe\xc0\xe4\x9a\x8f\xe0\xa2\x48\x42\xa6\x6e\x68\x6f\x74\x77\x36\x9b\x71\x35\xba\xfb\x26\x85\xe7\x95\x17\x97\xc1\x12\xe9\xbf\x5e\xbd\xa3\x20\x38\x70\x26\x53\x63\x9d\x12\x99\x1a\x69\x01\x3b\x47\x36\x47\x5e\x11\x84\x4c\xfd\x0d\x00\x00\xff\xff\xc5\x6a\xa7\x31\xf2\x09\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2546, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x95\xbf\x72\xdb\x30\x0c\x87\x77\x3f\x85\xee\x3c\x03\x22\xc0\xff\x1e\xbb\x77\xea\xd0\xd9\x75\xdc\x46\xd7\xc6\xd2\x39\xca\xa5\xe9\xd3\xf7\x18\xcb\x31\xa1\xd0\xe4\xa6\xcf\xf8\x60\xff\x0e\x04\xad\xed\x76\xdb\x7d\x1f\x4e\x0f\xe3\xeb\xf3\xb7\xe9\xed\xcb\x9f\xf1\xf0\xfb\x78\xee\x26\x9e\xba\xd7\xe1\x14\xa8\x7b\x99\x1e\xf6\xf3\x71\x93\xb4\xaf\xe3\xf9\xd8\x0d\xa7\x9f\xe3\xae\x7b\x9c\xe7\xe9\x79\xd7\xf7\xbf\x86\xf9\xf1\xe5\x07\x1e\xc6\xa7\xfe\x70\xde\xff\x7b\x83\xa7\xfd\xdf\xfe\xd3\xd7\x6d\x36\x9f\x3e\xda\x91\x46\x52\x1e\x0d\x5a\x05\xd9\x73\xc1\xe4\x54\xd5\x48\x21\x22\xb1\x05\x89\x2d\xdf\x49\xdf\x35\x7c\xeb\x41\x62\xcb\x0f\xd2\x0f\x05\xdf\x59\xb4\x16\x49\x07\x54\x70\x7b\x66\x5b\xca\xbe\xd4\x9d\xbe\xb9\x4e\x57\x5d\x36\x8c\x6c\x0d\x08\x2a\xce\x9b\x90\xad\x46\x32\x48\x56\x83\xc4\xa2\x6f\x90\xbc\x42\x4b\x98\x0e\xe8\x03\xca\x59\x3e\x04\x8d\x1c\x41\x50\xdd\xd6\x0a\x04\xd5\xec\x90\x27\xb9\x37\xc1\xab\x40\x94\x06\x02\x12\x5b\xbe\x93\x7e\x69\x5b\x72\xc1\x29\x90\xd8\xf2\x59\xfa\x5c\xf3\x5d\x3a\xcd\x00\x2b\x6e\x76\xc4\x55\x47\x6d\xfe\xef\x86\x25\x58\x71\xb3\x43\xaf\x3a\x8a\xfb\x63\xfd\x65\x21\x15\x86\x08\x82\xea\x76\xba\xb3\x12\xeb\x3e\xb3\x02\x89\xf7\x7c\x87\xde\xa7\xbb\x07\x82\x1a\x76\x14\xf6\xdd\xec\x97\xba\x51\x20\xa8\x61\x93\xb0\x8b\x73\xcf\xea\x22\x77\x79\x13\xb2\xba\xc8\x5d\xde\x82\x4b\x3d\x3a\xb4\x06\x72\xa8\xbb\x21\x77\x2b\x29\xa2\x43\x62\x0d\x82\xea\xb6\xf5\x20\xa8\x64\x47\x42\xd6\x8c\x21\xfd\x5d\x80\xa0\xba\x9d\xae\x6a\x4e\x0d\x9b\x85\x5d\xbc\xa7\x4b\x9d\x74\x44\x0a\x37\x7f\xe1\x46\x07\x67\xe9\x17\x6e\x76\x98\x55\x47\xf1\x9c\xde\x0d\x83\x9e\x91\xc2\xf5\x27\xae\xd8\xf2\x83\xf4\x4b\x67\xcb\xe9\x35\xed\x90\xc8\xa4\x45\x10\x54\xb7\x1d\x81\xa0\xff\x01\x00\x00\xff\xff\xe3\x71\x22\x71\x77\x08\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 2167, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xcb\x92\xe3\x30\x08\xbc\xcf\xa7\x4c\x95\x39\xcc\x75\xbe\x46\x83\xb0\x4d\x45\x80\x56\x90\x38\xd9\xaf\xdf\x72\x6c\x97\x13\x7b\xf6\x28\x1a\x9a\x47\xb7\x3e\xe1\x4b\xb2\x82\x52\x7c\x7f\x7c\x82\x90\x3b\xe9\x40\x0d\x0a\xdf\x08\xd0\xe4\x19\xf5\x3e\x14\x9d\xb7\xb7\x4b\x6a\xe1\xd8\x88\x14\x84\xb1\x99\x5b\x1f\x1b\x78\x33\x10\x27\xd4\xbc\x71\x4e\x94\x62\xa4\x76\xce\xbc\xff\xd8\x7d\x6f\x93\xd4\x27\x6a\x7e\x4c\x4b\xb5\x3a\xf8\xe5\x51\xd7\x34\x4c\x9a\x1f\xd8\xae\x3e\xba\xe5\x04\x17\xd6\x61\x05\xb2\x02\x9a\x06\x69\x40\x6d\x96\x01\xc5\x41\x5c\x77\xd4\x94\xd4\x82\x96\xb9\x70\x34\x46\x3a\x76\xfb\x2d\x0a\xea\x29\x70\xad\x2a\x3c\xf3\x4f\xea\x30\xb1\x66\x9b\x7c\xad\x7b\xc6\xd1\xb4\xe7\x01\x6a\x72\xaf\xd6\x62\x29\xc9\x54\x8b\x3d\xc0\x23\x05\x23\xa4\x4b\x92\xc4\x41\x38\xaa\x15\x1b\x98\x56\x82\x2c\x19\x84\x22\x39\xb5\x1b\x23\x9d\xce\xd0\x13\xe5\x9f\x84\x97\x3d\xde\x8d\x36\xca\x01\x74\x4a\x0d\xc7\xff\xd6\xbe\x8d\x3c\xbc\x48\xcc\x32\x74\xde\x89\x6b\x37\xef\xbb\xcc\xf8\x97\x56\x05\x59\x9d\x33\xb5\x3a\x2b\x50\xec\x9a\x53\xad\x0b\x50\x18\x49\x7d\x16\x40\xea\xb1\xe7\xbc\x9b\xbe\x74\x10\x18\x2d\x24\x71\x59\x9f\x6f\x8e\xb2\xbe\x67\xa4\xf5\xb6\x07\x22\xd3\x0d\xf0\xfe\x0e\xe2\xdf\x1f\xb5\x31\x52\x61\x8f\x57\x5b\xfc\xb9\x52\x7b\xec\xba\xb7\x13\xcf\x76\x9a\xcd\x10\x1e\xd6\xa8\x63\x49\x03\x39\x78\x77\xcc\x9e\x51\xca\x03\xf5\x19\xb2\xdf\x7f\x59\x30\x58\xe8\xfd\xa0\x71\xf9\x82\x5a\x62\x6f\x71\xe5\xd7\x09\xa7\x8c\x27\x92\x39\x96\xca\x69\xd6\xc9\x67\x23\xc3\xd3\xfa\x47\x68\x9a\x9e\xdf\x11\x4d\x95\x30\x82\x7c\x01\xfe\x05\x00\x00\xff\xff\x1d\xfd\x67\xc4\xc7\x03\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 967, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd1\x5b\xae\xc6\x20\x08\x04\xe0\x77\xf7\xd2\x09\xc3\x45\x30\xee\x7f\x5f\x27\xb6\xe7\xb7\xf6\x8d\x2f\x30\x09\x0a\x0d\x25\xa0\x22\x7c\x36\x1a\x28\x09\x03\xb5\xb6\x94\x50\x91\xd9\xd4\x30\x12\xcc\x02\xd3\x66\x73\x41\x26\x54\x1d\xf5\x22\xa0\x7e\xb0\x43\xae\xb7\xd6\x88\xbb\x45\x16\x28\x86\x7c\xa4\x09\xba\x22\xfb\x6c\xdd\xe1\x08\x87\x5c\xbf\xea\xce\xf4\x40\x28\x28\x2b\x7a\x6a\xd8\xab\x5a\xa1\x5d\xef\x58\x3c\xb4\x9f\x34\x14\x6e\xb3\x51\x1c\xee\xa8\xc2\xfd\xd2\x2d\xca\x7f\x53\xe9\xcf\xde\xfc\x39\x40\xef\xcf\x57\xd0\x08\x0d\x83\x39\xd4\x0e\x77\x42\xae\x03\xf7\x1a\x34\x07\x53\xc0\x0a\xe4\x1a\xee\x85\x6e\x60\x21\xc7\x6c\x2a\x8e\x1c\xe0\x48\xc8\x75\xe0\x8e\xaa\x24\xbc\x63\x49\xb7\x28\x84\x8e\x97\x61\xe0\x31\xcc\xe1\xa0\x7f\xa8\xdf\xae\xd9\x87\x2e\x9b\xba\x6e\xfc\x9f\xed\x05\xf6\x75\x34\x9f\x7f\x01\x00\x00\xff\xff\x68\x83\x7d\x76\x24\x02\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 548, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x98\xfb\x8e\xab\x2c\x10\xc0\xff\x3f\x8f\xb2\x49\x09\x17\xeb\xd6\x9c\xa7\x41\xa0\x4a\x56\x81\x0f\xa8\x6e\xdf\xfe\x0b\xad\xad\xb6\x52\xe6\x6c\xb2\x49\x9d\xf9\x01\x73\x03\x65\xbe\x10\x3f\x8c\x41\xc9\x4e\x21\xa3\xe2\xdf\x3f\x5f\x88\x4b\xf3\x1b\x90\xb0\xe3\xfd\x21\x7c\xa1\x31\x70\x19\x56\xf5\x4d\x62\x9e\xc4\x78\x7b\x56\xc2\x3c\x89\x28\xc7\xf8\x50\x4b\xf1\x36\x7d\x37\xb4\xd2\x04\x8a\x46\x2d\xbc\x0d\xf6\xfc\x24\x07\x2b\x78\xd4\xd6\xa0\x41\x4f\x4f\xfa\x75\xac\xe7\x72\xbb\xb4\x4f\x66\x6d\x9e\x83\xf2\x93\x16\x2a\xa0\x60\x85\xe6\xc3\x7e\x89\xa8\x06\x35\xaa\xe8\xaf\x19\x95\xe7\xe7\xb3\x16\x23\x37\xbc\x53\xfe\xb1\xe0\xa4\x7d\xbc\xf0\x41\x71\x1f\xfb\xa7\xcc\xfa\xa8\x7e\xbf\x90\xe4\x91\xa3\x34\xdb\xc3\x64\x61\x47\x64\x02\x8f\x22\x4f\xbe\xaf\x78\xd7\x66\x95\xaf\x29\xe1\x82\xad\x5e\x72\x11\xf5\xa4\xe3\x15\xcd\xda\x48\x3b\x2f\x89\xe2\xd2\xa8\xdf\xcb\x92\xa3\x4d\x02\x5f\x02\xc4\x65\x20\xdb\x5c\x2e\xcf\x0f\xed\x0f\x3f\x08\x69\x0e\x26\x20\x2e\xa3\x12\x3d\x92\xea\xef\x1f\xee\x3d\xbf\x7e\x1d\x9c\xb7\x12\x49\x8b\x64\x70\x68\x74\xef\xe6\xb6\xda\x74\xb7\x95\xde\xc4\x03\x63\x98\x1c\x38\x22\xd2\x4f\x2f\x22\xb1\x17\x75\x5b\x91\x21\x0c\x57\x07\xf5\x2e\xaa\x5f\xe7\xba\x8b\x32\xd4\xeb\x5c\xb4\x3d\x08\xeb\x31\x26\x88\x3b\x8d\x5c\xfa\x91\x53\xb3\xb2\xba\xfa\xa0\x9e\x4d\x20\x68\x36\xe1\x35\x1f\xad\x61\xae\xb8\x2a\x0b\xa2\xc7\x14\x63\x4a\x19\x3d\x65\xc6\x87\x7b\x31\x9b\xee\x10\xae\x0f\xd9\x75\x1f\xce\xeb\x3e\x9c\x77\xd1\x36\x2a\x62\x4d\xb2\xe0\xa2\x57\xb7\x92\x1b\xb9\x8f\xaf\x6b\x0a\x19\xaa\x63\x83\x06\x71\x45\xc3\x60\xe6\x7b\x8d\x08\x19\x9a\xfa\x88\x86\x54\xe3\xab\xb0\x27\x05\xe7\x9e\x5a\x9a\xd7\xee\x4c\x5e\x44\x6a\x2f\xea\xde\x45\x74\x3f\x90\xbe\x0e\xb4\xa3\xe3\x51\xfd\x8a\x9e\x9b\x4e\x21\x31\xd8\x8b\xe4\xce\x2d\x76\x5b\x13\xb5\xb9\x5c\x46\x24\xf7\xd5\x2a\xac\x77\x28\xc4\xbd\xdc\x11\x4c\x80\x0d\x20\x52\x0d\x38\x81\x26\x2c\xe4\x72\x0c\xca\x96\xcd\x26\x50\x4c\xd2\xdf\x3e\xc1\xb2\x3d\x66\x85\x41\xf4\x04\x13\x82\x31\xa1\x14\x02\xbe\xcb\xc0\x89\x01\x4b\x34\x04\x98\xa1\xc9\x95\xe6\x06\x48\x56\x00\x00\xe0\x05\xc1\xb4\x02\x00\x06\x2d\xc1\xa0\x19\x2a\xc8\x86\x0a\x98\x81\x52\xc0\x06\x0a\x19\xc9\x80\x50\x13\x06\x79\x51\x91\x06\x00\x18\x2e\x03\xc7\x0f\x75\xb8\x02\x40\xc1\x90\x63\x05\xcc\x50\x57\x80\x0d\xdf\x0c\xf0\xe2\x44\x18\x00\x40\x46\x9e\x18\x10\xea\x86\x00\xa1\x6e\x00\x23\x29\x26\x65\x1b\x28\xa6\x10\xc0\xca\x35\x49\x31\x2b\xc6\x21\x55\x6d\x71\x6f\x26\xa0\xe8\x45\xfa\x2f\xc6\x21\x19\x01\x02\x35\x00\x94\xe3\x90\x76\x3f\x00\xb0\x72\xa8\x09\x66\x14\x08\x14\x83\x6c\xc8\xbe\x80\x5f\x80\x0a\x58\xa2\xc2\x10\xc0\x80\x25\x8e\xe5\xc3\x9c\xe0\x23\x54\x0f\x75\xf9\xa4\x4d\x00\x90\xac\xba\x7c\x04\x11\xfc\x8d\x81\x48\x7e\x97\x0f\x73\x82\xbf\xcb\xe7\x03\xc1\x27\x02\x02\x80\x17\xa7\xf2\x59\x9d\x00\x20\x50\x27\xa8\x1e\x9a\x52\xc9\x31\x7c\x22\xa7\xd2\xce\x62\xc9\xc4\xd2\x51\x9c\x00\x56\xda\xdd\x09\xa8\x4a\x5b\x2f\x01\xdf\xa5\xed\x7f\x03\x48\x21\x0e\x0c\x37\xa9\x22\xca\x40\x5d\x7a\xa9\x25\xe0\xbb\xb4\x79\x13\xd0\x94\xdd\x6c\x68\xf1\x94\x4b\x00\x2d\xba\x99\x3e\x50\x8a\x46\x12\x8c\x59\xe9\x8d\x93\x80\x63\xa9\x26\xef\x40\x29\x9b\xb7\x77\x37\x00\x1c\x01\x1b\x48\x0d\xcd\x50\xdc\x9b\x8c\x60\x4a\x8a\xe9\x26\x98\xd6\x1f\x22\x99\x2e\x38\x32\xa7\xa9\x6f\x43\x29\x6e\x3e\x7d\xab\xae\x00\xcb\x5b\xb7\x01\xf2\xfe\xad\x40\x95\x37\x7f\x05\x3e\x64\x69\x0b\x64\x63\xbc\x02\x75\xfe\x0b\x6b\x05\x4e\x90\x91\x0d\xce\xd6\xda\x06\x00\x8c\x4c\x5f\xed\x65\x80\x00\x91\x24\x2c\x9f\xc6\x15\x80\x22\x49\xea\xfc\xdb\x6c\x0b\xe4\xdc\xd4\xbc\x33\x36\x44\x2d\x02\x0a\x17\xe7\xac\x8f\xef\xb7\x24\xa9\x83\x80\xef\x52\xe7\x41\xfd\xae\x17\xd6\x6e\xf3\x53\x59\x60\x68\xa7\xec\xa4\x3c\x00\xf5\x9b\x9e\x47\x4f\xd7\xdf\xfa\xd0\x5e\x8b\x97\x76\x7d\x28\xdf\x7b\xf5\x21\x18\xfa\x6f\xfa\xec\xcd\xf8\x67\x82\x83\x33\xb4\x04\xcd\xf3\x8c\xc6\x80\xf8\x0f\x97\x66\xe9\xe4\x0c\x81\xce\xaa\x45\x5e\xc9\xd1\x1a\x89\x6e\x57\xd9\xb7\x91\xa3\x6d\xf5\xa0\x90\xd3\x4e\x21\xee\xf5\xae\xe5\xb4\x6d\x38\x8d\xc1\x44\x15\xe2\xbe\x05\x71\x6f\x32\xd9\xf3\x59\x0b\xc5\x9d\x0b\xcf\xbe\xd7\xa2\xf2\x97\x41\x7d\xd0\x5b\xa3\x82\x8a\x51\x9b\x2e\x1c\x5a\x43\x4b\x8d\xb3\x2d\x2a\xae\xff\x8c\xa6\x2b\xf5\x3f\xa2\xfd\x4f\x71\x56\xe7\x15\x3a\x5b\x1b\x9d\xd7\x26\x3a\xaf\xa4\x16\x4b\x94\x9c\x57\x93\x56\xf3\x5a\x35\x9e\xcb\x8d\x93\x2f\xfd\xc9\x34\xce\xa7\x65\xf8\xb3\x2f\xf9\x16\xf3\x20\x7a\x35\xf2\xad\x78\x9b\xd4\xa0\xc4\x25\x19\x32\xf0\xd0\x47\x3e\xfc\x68\xd3\x2d\xc3\x1e\x6e\x04\x6e\x64\x6b\xf3\x2d\xc4\x27\x34\x6b\x53\x04\xf2\x4a\xb3\xeb\xd2\x2c\x22\xb5\x17\x6d\xbb\x34\xc1\x5d\x8d\x8a\xbb\xee\xee\x5d\xcc\x87\xdd\x99\x70\x57\xa8\x8b\xb7\x4e\x7d\x8a\x43\x98\x37\x21\x0e\xd1\x7a\x25\x78\xe4\x83\xed\xbc\x9a\x1e\x3d\xe3\x9b\xf8\xbf\x0b\x1f\x74\xdc\x35\x77\xc3\xc5\x4f\xea\x8a\x66\x1e\x83\x35\xef\xca\xb5\x25\xcc\x9d\x53\xbf\xa8\x4d\x61\xbe\xad\xfb\xb1\x59\xbc\x2a\x2e\x7e\x97\xd3\x18\xce\xea\xd1\x4c\x0e\x3d\x77\x69\xba\xfc\x5e\x9e\x94\x0f\xc9\xf4\xfe\xda\x7a\x2d\x6f\x27\x42\xaf\xfc\xe2\xe6\xbd\x39\x7c\xf8\x2a\x95\xe9\xc2\x94\xaa\x60\x41\x3e\xd5\xc0\x4b\x0b\x1a\x5a\x28\x3b\xc3\x12\xd4\x35\x3f\xf9\x28\xcf\xda\x10\x8c\xb4\x9b\xea\x37\xcd\xff\x01\x00\x00\xff\xff\xec\xf8\x95\x6d\x7f\x18\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 6271, mode: os.FileMode(438), modTime: time.Unix(1500213742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x96\x49\xb2\xc3\x30\x08\x44\xf7\xb9\xcb\xef\xa2\xd1\x5c\xb9\xff\xbd\x7e\x35\x96\x35\x64\x91\x94\x9e\x11\x08\x23\x06\x33\xa1\x76\xf4\x0e\xfa\xf8\x7e\x98\xd0\x2a\x9c\x1d\x64\xdb\x38\xc0\xc1\x13\x9d\xf6\xe0\x80\xa7\x81\xfa\xa8\x76\xa2\xa0\xa4\xb5\x1e\xf0\xec\x41\xb4\x86\x82\xde\xbf\x1f\x4f\x18\x0d\x95\x60\x6a\x2f\xb9\x0d\x8c\x49\x03\x34\x90\x1b\x06\x72\x3e\xa9\x6e\x62\xd5\x6f\xa1\x13\x6e\x8f\x19\x9a\x23\xc3\xe5\xcb\x24\x27\xf2\x02\x96\x02\x66\x9b\x9c\xc0\xee\xa0\xd7\xef\x27\x1b\xea\x40\x36\xb0\xb4\xa0\x56\x41\xb0\xd5\x05\x2e\x33\x6b\xcd\xea\x0f\x35\xb8\x77\x8c\x87\xba\x2c\x0e\xe4\x11\xc4\x78\x7f\xb4\xbe\x29\x83\x65\x0b\xdd\x91\xdb\xa4\x0c\xe6\x01\x77\x5b\xec\x99\x60\xe6\xe4\x02\x46\x3c\x02\x1a\x98\xb5\xc1\x36\x17\xc2\xa7\x65\x67\x88\xd9\xfd\xfb\x29\x61\x03\xc9\x51\xf8\xfd\x14\x39\x1e\x8a\x48\xe9\x42\x79\xb5\x50\xe1\x2c\x93\xf5\x7e\x8e\x30\xb5\x91\x72\x7b\x71\x02\xd3\xbb\xbd\xc3\x33\xd8\xf2\xc4\x11\xf1\xe8\xf3\xac\xd6\xa5\xf9\xf8\xfd\xb2\xfc\xa6\x6f\xd6\xaf\x6e\x1c\xe9\xb9\xe9\xc9\x3a\xcc\xa7\xb5\xae\x60\x3a\x98\xea\xc1\x05\x6e\x2f\x37\x54\x53\x02\x7e\x3f\x35\x23\xa3\x82\x66\x73\xed\x09\xf6\xf7\xae\xbc\x94\xef\xa7\x16\xa4\x11\xa1\xf4\x64\x81\xc5\xe1\x15\xde\x5f\xa0\x99\x94\xd6\xfa\x55\x8b\x17\x65\xa4\xe7\xd4\x52\x9d\xc4\xb1\x05\x72\x48\xa5\xd2\x5f\xd2\x21\xf6\x42\xce\x71\x2d\x1b\xf2\x01\xb4\x7e\xd1\x78\x49\x59\xe6\xcb\x46\xe4\x15\x2f\xf2\x8b\xd2\xa2\x64\x28\x5b\xaf\x55\x8c\x45\xfe\x44\x64\xad\xd7\xcb\x15\x78\xf1\x2d\xd2\xeb\x85\x48\x15\x38\xe2\x3a\x99\xf8\xfd\xb4\x06\xe5\xc2\x78\x4a\x86\x96\x11\x59\xd4\xd0\xd2\x44\x79\xd2\x50\xeb\x81\x6a\x27\x1b\xb3\xe9\xe4\xc5\x2a\xab\x72\xa3\x9b\x6f\x4e\x4d\xf9\x35\x59\xaf\x0a\x8e\xb2\xd0\x55\x50\x7c\xb7\xab\x96\x9d\x5c\x94\x7a\x5c\xd7\xa4\xa2\x9a\x99\xaa\x4e\x43\x46\x6b\x07\x19\xfa\x81\x4e\x87\xe7\xf4\x3e\xc8\x48\x05\xae\xc2\x24\x09\x57\x27\x52\x1b\xb9\x90\x61\x6e\x73\x74\xa7\x8b\x0f\xf5\x9a\x61\x7f\x07\x44\xb4\x99\x28\x2d\xf5\x0f\xfb\x3b\xe0\x12\xaa\xa8\xa3\x75\xab\x00\x0d\xc9\x66\xbc\x0e\x8e\x70\x4f\x56\xda\x96\x83\x69\x35\x8c\x6f\x9a\xd6\xdf\x07\x2a\xdc\x9b\x73\xbf\x79\xd4\x93\xfb\xcf\xfe\xfe\xb3\xbf\xa3\xf9\xcf\xfe\x4b\x81\x3c\xfd\x51\x44\x2e\x7f\xdc\x6e\xfb\x6e\xb7\x7d\xb7\xdb\xbe\xdb\xed\x5f\xeb\x31\x7a\x36\x8f\xe7\x9e\x5f\xee\xf2\xff\x30\xe8\xa9\x44\x67\x52\x16\x6b\x00\x75\xce\xf3\xdb\xec\x1a\x53\x5c\x9a\x0a\x25\x6a\x66\xaf\x1f\xd7\x27\xd6\x43\x54\x2f\x91\xc6\xdc\x92\x09\x2e\xa1\xcf\x7a\x99\x98\xec\xd8\x9b\xec\xda\x2b\x6f\x96\x50\x70\x0b\xeb\x29\x3c\x5d\xa8\xd0\xff\x82\xa6\x14\xb3\x85\x83\x4f\x65\x3c\xa4\x14\x61\xcf\x3f\x5c\x7e\x78\x6c\xd6\xc4\xe3\xa1\xef\xc4\x29\xf6\xfc\x5c\xc0\x44\x4d\xc3\x38\xbb\x76\x7d\x35\x68\xac\x68\x18\x4e\x64\x96\xdb\x07\xaa\xcc\x36\x36\x47\x7b\x37\x3f\xa3\x40\x6d\x30\x30\x45\xf3\xae\x3c\xb0\xc3\x35\x0e\x39\x18\xe1\xd0\x14\xe9\xf6\xb2\xbe\x52\xfa\xf3\x91\xb0\x1e\x50\x1a\xe3\x7d\x30\x50\x32\x8a\x72\x6d\xe8\x26\xba\xe2\xa9\x00\x1f\x14\x11\x56\x3b\xac\x1a\x6f\xf5\x29\x79\x57\x77\xd6\xf7\x4b\xd3\xad\x9f\xa4\xed\xff\x01\x00\x00\xff\xff\x09\x23\xf5\x6d\xa0\x09\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 2464, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1500213742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x49\xb2\xe4\x20\x0c\x04\xd0\xbd\xef\x52\x19\xa4\x26\x44\xf8\xfe\xf7\xea\xc0\x76\x7f\x10\x3b\x9e\x80\x2a\x34\x98\x0a\xb6\x0e\x83\xb7\xfb\x5a\x90\xfb\x92\x09\x05\x73\x80\x12\xd5\xde\x0f\xe7\x7d\x59\x43\xef\x10\x19\x68\xbf\xb5\x16\xf7\xfb\x0a\x87\x3b\xa8\x89\xf6\x5b\xeb\x7d\x2b\x74\x6d\x85\x7e\x5b\x01\x72\x80\x66\xef\x1f\x16\x67\x75\x8e\xea\xf1\x64\x43\x88\x2b\x54\xbf\xe4\x0c\xec\x0d\x4e\x30\xfb\xe1\xac\x1e\xf5\xbc\x58\x1c\xee\x87\xf7\xfb\x0a\x19\x85\xba\xff\xda\xac\xc1\x86\x27\xd3\xff\x26\x67\x05\x0e\x47\x75\xb4\xc3\xb2\x39\xbc\xbe\xe5\x0d\x8c\x23\xe0\x3c\x03\x7a\x5f\xf4\xfe\x36\x46\x21\xcd\xfe\x2c\xd6\x30\x8b\xbb\x51\xa4\x7d\x8e\xd9\x65\x6a\x56\x8e\x42\xab\x87\x8d\x95\xf5\xae\xad\xbb\x23\xe0\x56\x94\xbb\x28\xf3\xcd\x83\x10\x15\xe4\x2c\x73\x65\x16\x3e\x45\xdb\x28\x8b\xd4\x39\xb0\xbb\xde\x96\x3c\x01\x43\x17\x30\xf5\x70\x1c\xce\xea\x39\x3d\x32\xbf\xa3\x39\x90\xf6\xbc\x65\x63\xf0\xfe\x17\x00\x00\xff\xff\xbc\x0c\xf6\xcc\x75\x03\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 885, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3b\xb2\xc3\x20\x0c\x45\xfb\xb7\x94\x57\x68\x12\xa7\xf4\x6a\x88\x90\x19\x65\x40\x62\x90\x02\xdb\x4f\xe1\x14\x8e\x3f\x1d\xf7\x5c\x74\x46\xfa\x87\x62\x8b\x0b\x1a\x03\x6a\x99\xff\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xc5\xbf\x6d\x65\x78\xb2\xa4\x35\xa1\x4e\x67\x9f\xb0\xe5\x3d\x8a\x25\x42\x21\x0f\x46\xad\x33\xd2\x61\x24\x6d\xac\x09\x32\x77\x5a\xdf\x59\x13\xcb\x26\xff\xee\xda\xa6\x9b\x8d\xd7\xfd\x51\xda\xde\xe7\x5c\x08\x06\x4b\xd4\x61\x2b\xe9\x21\x73\xbc\xbc\x6b\x44\xac\x67\x2c\x64\x3f\x60\x43\x15\x87\x50\xeb\xd1\x72\x55\x01\xc5\x44\xf6\x66\x27\x10\xf2\xf9\x13\x00\x00\xff\xff\x0f\x64\x5d\xd5\x74\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 372, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc9\x41\x0a\x03\x41\x08\x44\xd1\x7d\x1f\xe6\x63\x69\xd9\xe3\xe0\xfd\xef\x15\xb2\x08\x64\xf9\x78\x2a\x26\x50\xd2\xde\xe3\x40\x1a\x14\xc5\xb3\xe7\x1a\xd3\x26\xbb\xfe\xe1\x3d\xb7\xe9\xe4\x1d\xb2\xf4\x93\x62\xd0\x37\x33\x1e\x7c\xd1\x6b\xe4\xfd\x04\x00\x00\xff\xff\xff\x0f\x28\x2b\x60\x00\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 96, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x51\x6a\xc3\x30\x0c\x06\xe0\xf7\x1d\xa5\x50\xd1\x38\x6e\x46\xd9\x69\x34\x5b\x09\x66\xb6\x14\x6c\xad\x99\x6f\x3f\xb6\x50\x08\x89\x0b\x7d\xfd\xf4\xff\x32\xb6\x4f\x80\xe7\x54\xc8\x4f\x04\x4c\xfa\xf1\x76\x02\xa5\x48\x89\x34\x57\x48\xc1\x65\x29\x32\x2a\x38\x49\xff\xa3\x8c\xe3\x18\x5c\x42\xc6\x89\xf2\xa3\x70\x97\xac\xf4\x03\x1e\x15\xf7\x15\xe7\x4b\xd7\xd9\x1e\xa2\x30\xc4\xc8\xcb\x5a\xf9\x53\x33\xdc\x8e\x6a\x2e\xd6\x58\x88\xae\x1e\xb8\xbf\x36\x79\xe8\x8e\xdc\xf7\xb7\x06\xda\xc6\x5e\x7b\x79\x87\x31\xe3\x16\xab\x81\x42\xaa\x81\xa7\xd2\xb8\x10\xe0\x17\x7a\x2e\x6b\xd6\x7f\x5e\x5f\xce\x4e\x24\x2f\x67\x1f\xb9\xf3\x12\xb8\xf9\xa8\x65\xae\x4c\x6a\xda\x4c\xdf\x59\x66\xda\xcc\xb6\xab\x95\x32\x79\x81\x30\xdf\x87\x7d\x7b\xfd\xc4\xa7\x67\x2e\xa8\x45\x78\xa7\xbf\x01\x00\x00\xff\xff\xdb\x70\x16\xd1\x3c\x02\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 572, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x41\xb2\xc4\x20\x08\x04\xd0\x7d\x0e\xd3\x45\x37\x20\x52\xb9\xff\xbd\x7e\xe9\xd4\xfc\x98\x59\x64\xf1\x62\x35\xa8\x48\x47\x35\xe4\x8d\xd1\xf7\x45\xc7\x24\xb2\xa1\xd0\x7d\x85\xa1\x0a\xd2\x80\xa2\x5f\x4c\xdb\x24\x27\x68\x03\x74\xbb\xaf\x24\x18\x84\x0b\xc9\xfb\x4a\x81\x23\xa0\x30\x64\x1f\x24\x64\xf9\x38\x89\x88\x0f\x6b\xc2\x27\xf8\x0d\xd7\x04\xa3\x56\x81\xc7\x49\x88\x7a\xbc\xbe\xf1\xb0\x1d\x3c\x2c\x39\xe4\x1f\xce\xc2\x30\xd0\xea\xbe\x46\x22\x13\x11\xa0\xcd\x97\xfa\x2b\xd2\xb1\xda\x1c\xf2\xaf\x94\x42\xf1\x54\xbf\xd6\xd8\x76\x5f\x63\x80\x6c\x70\x95\xcd\xfa\xf1\x7c\x7b\xf6\xdb\x2b\x4f\x0b\xc4\xea\x5a\x18\xe3\x60\x43\xfc\xa7\x34\x91\xfe\xa2\x4c\x8f\xbd\xc0\x3d\x53\x12\x12\xa1\xde\xc7\x38\xa8\x1d\xf7\x00\xcb\xe0\xb6\x7e\x3f\x5e\x77\x1d\xe3\xc7\xf5\xe3\x79\xd8\xa1\xfd\x82\x0a\x64\x41\x9e\x7b\x36\x6c\xee\xad\xc8\x26\xa8\x71\xff\x05\x00\x00\xff\xff\xa9\x3d\x18\xe9\x70\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 624, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x51\x8a\x40\x21\x08\x85\xe1\xf7\xf6\x32\x87\x8e\xa6\x19\xed\x7f\x5f\x83\x30\xc3\x4d\x1f\xbf\x3f\xb0\x30\x2a\x38\x37\x16\x6c\xde\x21\x09\x05\xe3\x80\x62\xcd\x5e\x6d\xbb\x39\xee\x70\x83\x19\xa8\x01\x52\x2a\x57\x61\x0e\x7b\x18\x1f\x5d\x21\xc2\x4a\xb9\x83\xba\xc0\x3d\x61\x04\xcf\x7c\xac\xd0\x97\x81\xf9\xf3\x40\xcc\xbe\x43\xd2\xe0\xcf\x2c\xba\x41\x56\xf4\x70\x5a\x30\xf6\xa0\x77\xd0\x36\xcc\x71\x1c\x94\xe4\x21\x44\x05\x91\xb7\x16\xfa\xac\x94\x8f\xd4\xf3\x37\xac\x84\xf5\x1f\x16\xb6\x80\xa1\xcd\xde\x1c\xd5\xb9\x1d\xc9\x1f\xf5\xdc\x7a\x3e\xe7\x37\x00\x00\xff\xff\x9e\xbc\x35\x00\xe3\x01\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 483, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xbb\x11\x84\x21\x0c\x03\xe1\x9c\x5e\x6e\xc7\x32\x32\x8f\xa1\xff\xbe\x6e\xc8\xf8\x33\x7d\x81\x56\x9d\x15\x28\x29\x9f\xe6\x40\x5a\x28\x3a\xf3\xd1\x40\x3d\x4e\x1b\xc6\x94\xc9\x7c\x76\xf5\x17\x3e\x6d\x14\x95\x28\x16\xb9\x5f\xd5\x47\xba\x3f\x75\xdd\x00\x43\xc4\xef\x41\x56\x9d\x96\x61\xe6\x46\x7b\x92\x11\xd7\x13\x0f\xb4\x8d\x7c\xfe\x01\x00\x00\xff\xff\x89\x0d\x54\xcc\xb7\x00\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 183, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xd1\x6a\x03\x21\x10\x45\xdf\xfb\x29\x81\x0c\xd1\xd8\x90\xd0\xaf\x19\x74\x76\x91\xea\x28\xce\x24\x76\xff\xbe\xd0\xd0\xd2\xba\xf6\xf5\x9c\xab\x57\xef\x01\xf0\x98\x85\xc2\x4a\xc0\xa4\x6f\x2f\x07\x50\x4a\x94\x49\xdb\x06\x39\xfa\x56\xa4\x2c\x0a\xbe\xe4\x2f\xd5\x70\x59\xa2\xcf\xc8\xb8\x52\xfb\x3e\x70\xaf\x01\x95\xf6\xe9\x47\x69\x4a\x1f\x10\x50\x71\x2f\xbb\x8c\xec\xef\x3b\x7c\x10\x63\x9d\x83\x54\x18\x52\xe2\xfe\x43\xed\xc9\x9d\x1c\x24\xbf\x0d\xd8\x58\x7b\x9b\xa4\x8d\x7d\xbd\x4c\xf1\xd5\xec\xf1\xf9\x7c\x1b\x6e\x16\x52\x8d\xbc\xca\xb1\x47\x9e\xfe\x44\xea\xc6\xa4\x76\x8e\x31\xe9\x5c\xd0\xbd\x95\xfa\x7b\x32\x7c\xc7\xc0\xf2\xec\x7c\xee\xf6\x6f\x63\x8f\x7c\x85\x58\x1f\x97\x41\x7c\x06\x00\x00\xff\xff\x23\x30\x1c\x41\xca\x01\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 458, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x51\xae\xae\x20\x0c\x04\xe0\x77\x17\x33\x61\xa6\x2d\xa5\x71\xff\xfb\xba\x01\x7f\xaf\x70\x1e\x4c\xfc\x40\xa7\x95\x4a\x43\x16\x64\x85\x5e\xf7\x45\xc3\x20\x02\x61\xff\xef\x0b\x72\xdd\x97\x0c\x35\xe0\x05\xfa\x83\x5a\x10\xef\xcb\x1b\x32\x21\x75\xc8\xeb\x60\xb4\x8f\x03\xa5\xfb\x0a\x82\x4e\x98\x10\xbc\xaf\x10\xd8\x1d\x32\x42\xf1\xd1\x1b\xa2\x36\x12\x6a\xdb\x76\x10\xee\x0f\x73\x80\x9e\xf3\x8d\xcf\x41\x88\xfa\x3c\xaf\xfe\xb1\x0c\xdc\x2c\x19\x64\x0f\x47\xa2\x37\xb0\xe5\x7d\x75\x87\x43\x89\xf9\x05\xab\x43\x5b\xb5\x39\xc6\xe6\x0e\xb6\xe9\x40\x04\xc8\x19\x7c\x48\x87\xec\x95\x42\xf0\x43\x75\x88\xd5\x76\xaa\xcd\x9c\x0e\x72\x1e\xbe\x83\x91\x7f\x3c\x4e\x8f\x3a\x3d\xe3\xd8\x1c\x3e\x9b\x48\xf4\xbe\xb1\x30\x27\xf8\xe3\x1c\xd2\x9a\xfc\xc7\x55\xfc\xb5\x25\xf8\xfc\x25\x0e\x66\x83\xb5\xdf\xfe\x6e\xfb\x63\x3f\xbd\xca\xcd\x20\xf6\x55\x9e\xf4\x77\x21\x21\x8b\x35\x2b\x46\xae\x63\x33\xfb\x05\x4c\x77\xb0\x1c\xa9\x93\x76\x72\x3e\x5c\x5c\xad\xaa\x0d\x50\xfd\x5d\x28\x44\x03\xc7\xc1\xcc\x8d\x02\x5b\xdb\xec\x08\xdd\xff\x02\x00\x00\xff\xff\x6d\x5a\xdc\x06\x1f\x03\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 799, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x5b\xd2\xac\x20\x0c\x04\xe0\x77\xf7\x32\x5d\x74\x6e\x84\x72\xff\xfb\x3a\x85\x73\xfe\x31\xe1\xcd\xaf\xb1\x4b\x88\x50\xc1\x31\x61\xf0\x71\x5f\xb2\xa1\x60\x2e\x50\xfc\x70\x74\xfb\x3c\x9c\xf7\x15\x0e\x77\x50\x13\xe3\xf3\x3e\x8b\xfb\x6f\x29\xf4\x5d\x0a\xad\x4b\x62\x02\x71\xbb\x2f\x2a\x21\xae\xa0\x81\xae\xdb\x06\xce\x01\x27\xc6\xa7\xe0\xe9\xfe\xac\x90\xd5\xa8\xa3\x30\x6b\x35\x7b\x95\xdc\xdf\x3f\x1c\xdd\x31\x0e\x4b\x71\xec\xcd\xe7\x19\xac\x23\x70\x9e\xc1\x3e\x9b\xcf\xef\xd9\x07\x72\x35\x3e\xf3\x2e\x16\x19\xff\x1d\x98\x73\xcf\xb5\x73\x35\x5a\x7f\xd9\xd8\xd9\xbb\xf6\x76\x57\xe0\xf9\x05\xaf\xb2\x8a\xa2\x8d\xfb\x0e\x70\x11\xa2\x82\xdc\x53\x6f\x7c\x86\x56\x28\x2f\xa9\x0b\xcc\x23\x90\xda\xff\x06\xf6\x17\x18\xa6\x80\xa9\x87\xf3\xbe\x64\xdf\xde\x00\x69\xcf\x66\x0b\x83\xf7\xbf\x00\x00\x00\xff\xff\x31\x45\xd0\x93\xde\x02\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 734, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x98\x4d\x6f\xda\x40\x10\x86\xcf\xe5\x57\x6c\x7d\x6d\xfd\x32\xb3\x9f\x36\x82\x44\xea\xb1\x6a\x4f\x39\xf4\x18\x11\x70\x1b\xab\x80\x23\x63\x9a\xa4\xbf\xbe\xc2\x89\x9d\xb5\x49\x72\xa9\x86\x9b\xf7\x61\xcd\xf3\x32\x23\xed\x07\xf3\x8f\x69\xaa\x7e\x94\xbb\x75\x75\xbf\xbf\xba\x7b\xfc\xb2\xa9\x56\xbf\x8b\x5a\xdd\x97\x3b\x26\x55\x3c\x34\xf5\x52\xa5\xe9\xc5\xa4\x9d\x76\x55\x1d\xea\x55\x31\x53\xb7\x4d\x73\xb7\x9f\x4d\xa7\xbf\xca\xe6\xf6\x70\x83\x55\xb5\x9d\xae\xea\xe5\xdf\xc7\x74\xbb\x7c\x98\x9e\x7e\x57\xff\xfe\xb7\xe5\xbe\x49\xbf\x57\xeb\xf2\x67\x59\xac\x67\xea\xea\xb0\xfb\xac\xd8\xab\xaf\x87\x8d\xd2\xc4\x41\xb1\x9f\x91\x9e\x91\x57\x9f\x48\x13\xb5\xef\x4d\xe6\x97\x0f\xdb\x8d\xfa\x53\xd4\xfb\xb2\xda\x2d\x12\x06\x25\x97\x17\x93\x79\x5d\x55\xcd\xc5\xe4\xc3\xbc\x6c\x8a\xad\xda\x2d\xb7\xc5\x22\x69\x23\x5f\xb7\x91\xaf\xd9\x20\x23\xb0\x86\xb3\x89\xaa\x0f\x9b\x62\x91\x0c\xd0\xba\xac\x17\x09\x25\xea\xae\xae\x9a\x6a\x55\x6d\xda\x41\x2f\xa1\x44\x95\xfb\xeb\x9b\x63\xfc\x45\xc2\xed\xa0\xd8\x2d\x6f\x36\xc5\xba\x1d\x4e\xdf\x17\x33\x05\x18\xb0\xce\x22\x73\xc4\xa4\xd5\x9a\xa1\x89\x46\xee\x0e\x8a\xc9\xb5\x41\x1e\xc0\x21\x03\x07\xd3\xc9\x47\x50\x4c\x6e\x09\x21\x40\x6b\x8b\xbe\xe6\x03\x24\x2e\x76\xd0\xf6\x44\xfd\x0c\xc5\xe5\x1e\x94\xbe\x3c\x6b\xe7\xc6\x41\x5e\x99\x20\x19\x8a\x39\x03\x93\x41\x88\x72\x44\x4c\x54\xad\x03\xd8\x6a\x04\x1f\xbb\x23\x28\x26\xf7\x16\x16\xce\x82\xd2\xee\x29\x6a\xc4\x1b\x1f\xca\x85\x71\x70\x1a\x4c\xc7\xba\xf7\x19\x06\xec\x0c\xea\xdc\x9c\xaa\x73\xc9\x55\xa0\xd3\x64\xc7\x3a\xf7\xcf\x71\x1b\xde\x9e\x20\x1a\xca\x3d\x79\x06\xf5\x78\x61\xc2\x6a\xed\x34\xec\x48\xdd\x31\xb9\xad\x88\x2c\xac\x45\x96\x21\xda\x05\x07\xec\x0c\x6a\x26\x73\xea\x6e\xa1\xa8\x5c\xb3\x7d\x5a\x6a\x39\xb6\xc7\x54\x58\xef\xc0\xd6\x0f\xce\x00\x63\x2c\x78\x04\x61\x68\x67\x60\x2c\xb4\x89\xce\x20\x43\x2a\xae\xf7\x0c\x4a\xa3\x41\xb4\x06\xbc\x3b\x45\x30\x98\x05\x07\x02\x67\x0e\x21\xaa\xcb\x90\xca\xe9\x7d\x06\x6f\xc0\x19\x42\xde\xcb\x07\x4c\xee\x5c\x48\x16\x21\x07\xe7\x01\x94\x46\x83\xa8\x25\xef\x4e\x11\x0c\x16\x60\x3d\x8e\x1a\xfd\x92\x24\x66\xd2\x6a\x26\x86\xce\x47\xee\x0e\x8a\xcb\x9d\x01\xc7\x3d\x18\x52\x71\x7d\x6e\xc1\x76\x6c\x7f\x86\xe7\x90\xeb\x93\x9f\xfe\x0c\xcf\x21\x37\xe6\x15\xb9\x91\xdc\x98\x22\x8f\xa5\x57\xe4\x56\xf4\x6e\xf8\xe4\xd1\xc7\xeb\xe0\xb8\xe7\x1d\x14\x95\xfb\x0c\xec\x8f\x37\x9f\x81\x3d\xa6\xff\xab\x9f\x4f\xdb\x3f\x24\xfe\x05\x00\x00\xff\xff\x60\x59\xd2\xd8\x4d\x11\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 4429, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9c\x4d\x73\xdb\x36\x13\xc7\xcf\x8f\x3f\x05\x1f\x5d\x5b\xad\xb1\x8b\x77\x8f\x9d\xcc\xf4\xd8\x69\x4f\x39\xf4\x98\x71\x6c\xb5\xd1\xd4\xb6\x3c\x92\xdc\xc4\xfd\xf4\x1d\x50\x24\xf1\x42\xda\x3d\x74\xfe\x3a\x38\x23\xfe\x02\xe7\xb7\x04\x16\xe0\x92\x84\x72\xfd\xff\xf5\xba\xfb\x6d\xfb\x74\xbf\xfb\x76\xf8\xf4\xfc\xfa\xd3\xc3\xee\xee\xcf\xcd\xbe\xfb\xb6\x7d\x62\xd5\x1d\x9e\x5f\xbb\xf5\xfa\xc3\x45\xdf\xe8\xd3\xee\x65\x7f\xb7\xb9\xea\xbe\x1e\x8f\xcf\x87\xab\xcb\xcb\x3f\xb6\xc7\xaf\x2f\x5f\xe8\x6e\xf7\x78\x79\xb7\xbf\xfd\xfb\x75\xfd\x78\xfb\xfd\x72\xfe\x2f\x4d\xbf\xff\xcb\xed\xe1\xb8\xfe\x75\x77\xbf\xfd\x7d\xbb\xb9\xbf\xea\x3e\xbd\x3c\xfd\xd8\xb1\xeb\x7e\x7e\x79\xe8\x44\xb1\xef\xd8\x5d\x29\xb9\x52\xae\xfb\x41\x89\x52\xfd\xef\x5d\x5c\x7f\xfc\xfe\xf8\xd0\xfd\xb5\xd9\x1f\xb6\xbb\xa7\x9b\x15\x93\x5a\x7d\xfc\x70\x71\xbd\xdf\xed\x8e\x1f\x2e\xfe\x77\xbd\x3d\x6e\x1e\xbb\xa7\xdb\xc7\xcd\xcd\xaa\x0f\xf8\xf3\xe1\xf9\xf5\x33\x6b\x72\x81\x42\x20\x96\xb8\xea\xf6\x2f\x0f\x9b\x9b\x55\xcd\xee\xb7\xfb\x9b\x95\x5a\x75\xcf\xfb\xdd\x71\x77\xb7\x7b\xe8\x0f\x26\x89\x5a\x75\xdb\xc3\xe7\x2f\x29\xfc\x9b\x15\xf7\x07\x9b\xa7\xdb\x2f\x0f\x9b\xfb\xfe\xf0\xf2\x3d\xb1\x77\x24\x1c\x88\xd9\x17\xe6\x12\x82\xd5\x91\x38\x72\xab\x1e\x20\x5c\x2d\xac\xe6\xea\x1e\x02\xd5\x91\x44\x47\x72\xe5\x48\x17\x0c\x27\x0e\x4c\x96\xac\x2e\xb4\x13\xc1\x4a\x23\x89\x91\x46\x3b\x30\x9c\x98\x95\x27\x4b\x21\x14\xde\x8c\x40\x5a\xd1\x14\x3d\x39\x26\xd6\xd3\x6c\xaa\x19\x54\x2c\x2a\x52\x6c\xc4\x23\x03\x8a\x23\xb1\x22\xe6\xd2\x3b\x21\xb0\x36\x92\x31\xad\xf7\xc4\xe0\x62\xb7\x20\x76\x70\x31\xbb\xf4\xd3\x98\x47\x88\x55\x0b\x93\x28\xdf\xa8\x47\x88\x53\xb3\x12\x32\x24\x79\xdd\xaa\x19\x56\x2c\x4c\xa6\xf1\x9e\x10\x56\xcb\xd6\x12\x1b\xd5\x98\x27\x8a\x94\x6b\xe2\x20\xc4\xe2\x2a\x79\x41\x41\x72\xa3\xc8\x45\x32\x8a\xd8\x4e\x39\x56\x33\x9c\xd8\x3b\x62\x62\xef\x0a\x6f\x46\x58\xad\xe4\xfc\x2a\x09\x5a\xca\x4e\x66\xda\x9e\x01\xc5\x9e\x44\x02\xc5\x4a\x9c\x19\x4e\x1c\x52\xf2\x46\x32\xb1\x10\x17\x0c\x27\xe6\xbe\xe4\x20\x1f\x0a\x71\xc1\xc0\x62\x43\x6c\x63\x6b\x1e\x20\x56\x2d\x42\xc6\x37\xe6\x81\x21\xc5\x86\xd8\x44\x12\x51\x95\xba\xa0\x58\xb9\x18\x26\x36\xdc\xc8\x27\x8a\x94\x5b\xe2\xa2\x0e\xaa\x10\x52\xeb\x89\x4d\x3a\xc3\xba\xc3\x0b\x0a\x96\x5b\x26\x89\xad\x7b\x80\x40\xb5\x70\x7f\x86\x1c\xca\x95\xac\xa2\x20\xb9\xed\x53\x89\xb4\x90\x9d\xd2\xac\x66\x28\x71\xba\x38\xf4\x63\x4a\x7a\x2a\xc3\x1a\x88\x57\xe7\xd5\xac\x81\x68\x75\x2a\x71\xed\xcc\x3d\x50\xa4\x3c\x5d\x1d\x85\x72\x9e\x35\x10\xaf\xe6\xbc\x8e\xb7\x14\x2d\xd7\xc4\xda\xce\xe4\x03\x45\xca\x03\x89\x21\xf6\xa6\x72\x67\x88\x54\xc7\xbe\x28\x09\xf5\x14\xcb\x10\xa8\xf6\x21\x8d\x6a\xb9\x96\xb7\x14\x2c\x4f\xcb\x36\x4b\x2b\x1f\x29\x58\x9e\x7e\x5c\xeb\x1e\x20\x58\x1d\x75\x79\x3f\xdf\x52\xac\x3c\x4d\x27\xd1\x8d\x7b\x84\x40\x75\x48\x55\xa8\x10\xeb\xea\xbc\x4b\x8a\x96\x5b\x12\x35\x97\x0f\x14\x29\xf7\xe4\x14\xb1\xaa\x56\xd5\x02\x82\xd4\xce\x90\x21\x47\xac\xa6\xd9\x5d\x12\xa4\x54\x34\xa9\xf5\xf8\x49\xac\xad\xfc\xf3\xbf\x44\x85\x62\x49\xc7\xbe\x3c\x14\x9d\xbb\xa0\x86\x38\xb5\x15\x12\x47\x12\x0a\x71\x46\x50\x2d\x2b\x95\x7a\x78\xfa\x5c\x0e\xc0\xdb\x0d\xb0\x21\x39\x2e\x9e\x9c\xd6\x0c\x3b\x04\x1c\xcb\xc7\x97\x0d\x04\xaa\x2d\x49\x24\xd1\xd5\xf0\x67\x06\x15\xa7\xfc\x56\xb5\x77\x40\x50\xad\x31\xc5\x0d\x4a\x85\xe0\x5a\x33\xd7\x62\x13\xab\x77\xb0\x0a\x33\x6f\xcf\xf0\xe2\xb8\x20\xc6\xdd\x12\x9d\x24\x41\x13\x4b\x93\x57\x23\x83\x8a\xfb\x47\x58\x4d\x66\x8d\x0c\x2f\x96\x05\x31\xae\x36\x2d\x24\x7a\x41\x8c\xab\xd0\x06\x89\x56\x64\x9b\x31\x1e\x19\x56\xec\x1d\xc5\x56\x3c\x30\xec\x2a\x7d\x2a\x47\xa6\xcf\xcd\xc5\xf2\x8d\x06\xd8\x90\xac\x64\x63\xba\x5c\xcd\x42\x5a\x6a\x80\x0a\xc9\x11\x73\xec\x6f\x08\x59\xe7\x49\xd8\x50\x90\xdc\x7b\x4a\xf7\xff\xb1\x7c\x4b\x53\x33\xd4\x46\x02\x65\xa8\x7f\xd4\xe3\xc9\xe7\x9d\x13\x35\x44\xaa\xd3\x54\xf7\xe4\x5c\xa5\xce\x10\xad\x8e\x24\x3c\x53\x9f\x20\x58\x6d\x54\x9a\x64\xad\x7b\xa4\x58\xb9\x48\x28\xf7\xc9\xd4\x10\xaf\x16\x25\x0b\xee\x9e\x82\xe5\xda\x13\x17\xfb\x92\x1a\x8a\x94\xa7\xcb\x1a\x71\xb4\x95\x3b\x43\xac\x5a\xd8\x10\xb3\x34\xee\x89\x22\xe5\x8e\x98\x84\xeb\x39\x36\x31\xac\x58\x87\xe2\x4e\xac\x66\x58\xb1\x55\xc4\x62\x1b\xf3\x08\x81\x6a\x61\x45\x86\xbc\x2f\xcd\x99\xa1\xc5\x8a\xc2\xdc\x7c\x82\x60\xb5\xb0\x90\x18\xdd\xca\x27\x0c\xd5\x1b\xd2\x96\xc4\x98\xda\x9e\x29\x4a\xce\x4c\x22\x9c\xca\x83\xfc\x4c\xbb\x81\x78\x35\x17\xc9\xd6\x50\xbc\xbc\xd8\x32\xd5\xd2\x73\xc8\xcd\xa2\x1c\x3f\xe2\xce\x90\x5a\x17\x07\x45\xd1\xfc\x6e\x13\xd8\x4e\x54\x4e\x7d\x4e\xdc\x3b\xf3\x41\x19\xd6\x7b\x4d\xc0\x61\x19\x45\xda\xb7\x81\x0c\x10\xa6\x36\xc4\x5e\x91\x56\x55\xa5\xd3\xd0\x33\xc8\x8b\xd2\xb6\xa1\x60\xb9\x15\x62\x3b\x93\x8f\x14\x2c\x67\xe5\xfa\x34\xcb\x47\x55\x2a\xbe\xdb\x08\x1e\x9a\x27\x31\xf3\x58\x4e\xf4\x0c\x72\x13\x96\xe4\x06\xf7\x24\xaf\xd4\x44\xb7\x24\x8f\xc0\xbb\xbc\x49\x13\x16\xbb\x3d\x9c\xa7\xdb\xc3\x62\xb7\x87\xf3\x74\x7b\x20\x3f\x5b\x82\x46\x7a\x8e\x6e\x7f\xa3\xdf\xcf\xd1\xf1\xcc\xe5\x14\x4f\x57\xc3\x85\x75\x60\xb9\x11\x3a\x34\x51\x4b\x09\x39\xd0\x33\xc8\x17\x12\x72\xa0\x67\x90\x2f\x24\xe4\x40\xcf\x20\x5f\x58\x84\x06\x8a\x96\xfb\x50\x7c\x77\xa5\xa5\x70\x79\x2c\xef\xce\x1a\x8a\x96\x87\xb4\xd0\xce\x33\x6e\xc4\x60\xbd\x68\x5b\xec\x7e\x69\x29\x4c\xee\xfb\xaf\xad\x04\xae\x26\x7a\x05\xa1\x6a\x3f\x3b\xef\x9a\xa2\xe4\xd6\x93\xed\x5f\x3d\xab\x75\xfe\x5c\x2e\xbc\x6f\x37\x00\x87\xe4\x0a\xa3\x5b\x0a\x69\xa1\x01\x36\x24\x56\x31\x2b\xd3\xc1\x3c\xa8\xe5\x26\xe0\xb0\xa4\x7a\x2a\x5e\x43\xb0\x5a\xab\xe2\x74\xb5\x5a\xea\x91\xc5\x26\xd8\xb0\xd2\xa4\x99\x9c\xe9\x60\x1e\xd6\x72\x13\x74\x58\xae\x74\x2e\x25\xf5\x72\x13\x64\x58\x8e\xd2\x9f\x55\x18\x23\xc2\x6a\xbd\x21\xc9\x6f\x74\x1b\x88\x55\x47\x2e\x9f\xba\x56\x0c\x2b\x4e\x37\xae\x1c\x4c\xa3\x9e\xe8\x39\xe4\xed\x50\x4f\xf4\x1c\xf2\xb8\x28\x07\xbe\xca\x19\x34\xac\x49\xb8\x1d\xf1\x89\x82\xe5\xc2\x34\x3f\xf1\x01\xa2\xd5\xa6\x2c\x23\x6b\x08\x56\x9b\xb8\x30\xbd\x27\x8a\x92\xbb\x40\x8e\xfb\xbd\xf1\xf9\x9b\x4f\x0d\xc4\xaa\xd9\xa4\x35\xbb\x51\x8f\x10\xad\x8e\x54\x24\x79\x0d\xc1\x6a\x2f\xe4\xdb\x0e\x1f\x21\x52\x7d\xda\xae\x9c\x77\x24\x35\x10\xa9\xd6\xfd\x0e\x55\x57\x9f\x75\x86\x68\x75\x20\xd1\x7a\xe6\x1e\x28\x4a\x1e\xb9\x2f\x4a\xd8\x5a\x0a\x79\x6e\x37\x14\x2a\xf7\x24\x2a\x94\x5f\x07\x9f\x61\xb4\x9e\x53\x1f\xc7\x99\x7e\xc4\x50\x7d\x24\x6b\xc8\x4a\x2d\x9f\x20\x4c\x9d\x0a\xf7\x90\x4a\xd1\x54\x9b\x16\x47\x65\xfd\xfa\x7e\x23\x50\x68\xa2\x3c\xb9\x40\xec\x5c\xf9\x82\xaf\xa5\x28\x39\x6b\xe2\x18\xfb\xc7\x32\x6a\x5d\x1e\x15\xfd\xf2\x2f\x8d\xfe\x6b\x68\xd7\x97\xfd\xff\xe3\xf4\x4f\x00\x00\x00\xff\xff\x65\x65\x94\xc0\x82\x4a\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 19074, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xc1\x6f\x9b\x3e\x14\x07\xf0\xf3\x2f\x7f\x85\x7f\x5c\x37\x5e\xfc\x6c\x63\x70\x94\xb4\xd2\x8e\xd3\x76\xea\x61\xc7\x2a\x4d\xd8\x8a\x96\x84\x88\x90\xb5\xdd\x5f\x3f\x41\x1a\x30\xf0\x14\xed\x30\xbf\x5b\xf8\xca\xe9\xe7\x2b\x30\x06\x37\xcb\xff\xe3\x58\x7c\x2b\x0e\xdb\xf2\xe5\xf4\x70\x7c\xfb\xb4\x2b\x37\x3f\xf3\x4a\xbc\x14\x07\x94\xe2\x7c\xdc\xae\xeb\x5c\xc4\xf1\xdd\xac\x1d\xf7\x50\x9e\xab\x4d\xbe\x10\xcf\x75\x7d\x3c\x2d\xe6\xf3\x1f\x45\xfd\x7c\x7e\x82\x4d\xb9\x9f\x6f\xaa\xf5\xef\xb7\x78\xbf\x7e\x9d\x4f\xff\x58\xf7\xfd\x2f\xeb\x53\x1d\x7f\x2d\xb7\xc5\xf7\x22\xdf\x2e\xc4\xc3\xf9\xf0\x51\xa0\x15\x9f\xcf\x3b\xa1\x24\xa6\x02\xed\x42\xaa\x85\xb4\xe2\x83\x54\x52\xb6\xdf\x9b\x2d\xef\x5f\xf7\x3b\xf1\x2b\xaf\x4e\x45\x79\x58\x45\x08\x32\xba\xbf\x9b\x2d\xab\xb2\xac\xef\x66\xff\x2d\x8b\x3a\xdf\x8b\xc3\x7a\x9f\xaf\xa2\xb6\xf3\xe3\xa5\xf3\x23\x6a\x40\x99\x82\x81\x44\x46\xa2\x3a\xef\xf2\x55\x34\x88\xb6\x45\xb5\x8a\x64\x24\x8e\x55\x59\x97\x9b\x72\xd7\x1e\x74\x8a\x8c\x44\x71\x7a\x7c\x6a\xfa\xaf\x22\x6c\x0f\xf2\xc3\xfa\x69\x97\x6f\xdb\xc3\xf9\xdf\xc9\x6a\x2a\xab\x90\xb2\x6a\x18\x0d\x98\x39\x40\x65\xaf\xf8\x38\xe5\xf1\x93\x94\xf2\x9b\x94\xc9\xcf\x48\x3f\x0b\xe9\x1b\x09\x69\x0a\x4a\x39\x90\x71\xff\x59\x25\xc9\xb5\xca\x8d\x01\xe1\x5a\xd9\x04\x92\x04\x50\x67\x20\xe3\xfe\xb3\xd7\xea\xc6\x80\xe0\xad\xac\xee\x51\xab\x89\x56\xd4\x80\x80\xad\x2c\x20\x3a\x40\x63\xfc\x19\x3c\x4e\x99\xfc\x8c\xf4\x83\xce\x60\x5f\xca\x1c\xe5\x37\x29\x8f\xef\x24\xe5\xbb\xc0\x6b\x37\x82\x4a\x34\x68\x3d\x78\x6e\x0c\xc2\x90\xba\x01\x4c\x25\x24\x08\x98\xa5\x3d\x3f\x4c\x99\xfc\x8c\xf4\x83\xce\x3e\x5f\x72\x92\xf2\x43\x5f\xfd\x4e\x52\xc6\x12\x7e\x9b\x32\xf9\xd4\xf5\x6f\x53\x26\x9f\xba\xfe\x6d\xca\xe0\x6b\x50\x6e\xc2\x5f\x42\x16\x5d\x4f\x27\xdf\x25\x64\xd0\x9b\xa7\xb0\x77\xe0\x3d\x11\x6f\x0e\x09\xdf\x0c\xb1\x79\x0a\x8f\xcb\x5c\x53\x26\x7f\x72\x57\x5e\x53\x1e\xdf\x4e\x26\xc6\x35\x65\xf2\x15\xe9\x07\xdd\x55\x74\x92\x4d\xa8\x65\xa1\x8b\xb9\x1a\x4c\x56\x86\x2e\x66\x6a\x90\x20\xd9\xa0\x89\xb9\x1a\x68\xba\x81\x0e\xda\x20\x49\x2f\x7b\x03\x0d\x4a\x9a\xae\xc0\x28\x0d\xee\x2b\x23\xa1\x7f\x35\x1d\x85\x2c\xba\x52\x92\xe0\xdb\x34\xb0\x6f\x9b\x2d\x23\xea\x6c\xc0\xf7\x21\x8f\xee\x28\x3d\xfc\xb9\xbf\x40\x46\x12\xba\xe1\x3a\xf3\x06\x29\x3d\xec\x7d\xef\x41\xd4\x75\x0f\xbc\xf2\x7a\x10\x75\xdd\x03\xaf\xba\x17\xc8\x59\x48\xcc\x08\x7f\xcf\x58\xec\xf1\x69\x7f\xcf\x38\x6c\x54\x7a\x8a\xb7\x61\x40\xdd\x21\x28\xad\x20\x6b\xde\x7a\x3b\x7d\x18\xf2\xe8\x19\xa5\x87\x3d\xf3\x3d\xe4\xbd\xea\x0d\x43\x1e\x5d\x51\x7a\xd8\xf7\xbc\x77\x08\xb5\x6b\xf6\x17\xde\x91\xbf\x07\xb9\x3d\x28\x74\x3b\x03\xa9\x02\xcc\x46\xd3\xb2\x4f\x99\x7c\x4b\xfa\x61\x77\x21\xbe\x94\x91\x3e\xc3\x9d\x71\x91\x9c\xa4\xfc\xb0\xff\x9b\x51\x32\x05\x63\x01\xd1\x78\xeb\xc2\x28\x64\xd1\x2d\x12\xba\xfd\x07\xef\x00\xcb\x79\xfb\x9b\xd6\x9f\x00\x00\x00\xff\xff\xb3\x76\x87\x6a\x91\x1b\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 7057, mode: os.FileMode(438), modTime: time.Unix(1500213741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd3\xcf\x6e\xa3\x30\x10\x06\xf0\xf3\xf2\x14\xb3\xbe\xee\x32\x78\x8c\xf9\x13\x04\x89\xb4\xc7\x55\x7b\xca\xa1\xc7\x88\x80\xdb\x58\x05\x1c\x19\xd3\x24\x7d\xfa\x2a\x48\x41\xa5\x51\x4f\x15\xc7\xf9\xc4\xf0\xfb\x6c\xc9\xf9\x6f\xdf\x87\x27\xdd\xd5\xe6\xd4\x6f\x8f\x97\x7f\x8d\xa9\x5e\x95\x85\x93\xee\x12\x50\x67\x67\x4b\xf0\xfd\xb5\x37\x7e\xb5\x35\x83\xad\x54\x06\x07\xe7\x8e\x7d\x16\x04\x2f\xda\x1d\x86\x3d\x56\xa6\x0d\x2a\x5b\xbe\x5f\xfc\xb6\x3c\x07\xf7\xbf\x9a\xf6\x1f\xca\xde\xf9\x8f\xa6\xd6\xcf\x5a\xd5\x19\x6c\x87\xee\x2f\x50\x0c\xff\x87\x06\x04\xa7\x04\x28\xce\xb8\xc8\x78\x0c\x7f\xb8\xe0\x7c\xdc\xf3\xf2\xcd\xb9\x6d\xe0\x4d\xd9\x5e\x9b\xae\x60\x84\x9c\x6d\xd6\x5e\x6e\x8d\x71\x6b\xef\x57\xae\x9d\x6a\xa1\x2b\x5b\x55\xb0\x6b\xe3\xdd\xd8\x78\x47\x21\xa6\x1c\x49\x60\x24\x19\xd8\xa1\x51\x05\x9b\x45\xb5\xb6\x05\xe3\x0c\x8e\xd6\x38\x53\x99\x66\x1c\x26\x83\x33\xd0\xfd\x6e\x7f\x6d\x5f\x30\x1a\x07\xd5\x95\xfb\x46\xd5\xe3\x18\x7c\xef\x4a\x8e\x44\x29\x12\x0f\x31\xb9\xc1\xf3\x6c\x29\x39\x96\x28\x31\x92\x28\xa2\xf0\x06\xcf\xa2\xe5\x5d\x79\xef\x2e\x78\xd3\x71\x84\x91\xc0\x55\x8a\x22\xa4\x09\x9e\x65\xcb\xca\xc4\x53\xa4\x4f\x67\x9e\x87\x4b\xd9\x82\x27\x28\x63\xa4\x95\x44\x9a\xec\x2f\xe1\x4f\xed\x3c\x18\xdf\xd6\x47\x00\x00\x00\xff\xff\x43\x6c\xd6\x37\x17\x04\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 1047, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\x4d\x6f\x9b\x4c\x10\xc0\xf1\xf3\xe3\x4f\xb1\x0f\xd7\xd6\xe3\x9d\xd9\x37\xd6\xb2\x13\xa9\xc7\xaa\x3d\xe5\xd0\x63\xe4\xd8\xb4\x41\xb5\x8d\x05\xb8\x89\xfb\xe9\x2b\x70\x20\xcb\x82\x7a\xa9\xc6\x87\x1c\xf8\x2b\xf8\x07\x5a\x96\xf5\x7a\xf5\xff\x7c\x2e\xbe\xe5\xc7\x5d\xf1\x52\x3d\x9c\x2e\x9f\xf6\xc5\xf6\x67\x56\x8a\x97\xfc\xe8\x44\x75\xba\x88\xf9\xfc\x6e\xd6\xfe\xcf\x43\x71\x2e\xb7\xd9\x52\x3c\xd7\xf5\xa9\x5a\x2e\x16\x3f\xf2\xfa\xf9\xfc\x04\xdb\xe2\xb0\xd8\x96\x9b\xdf\x97\xf9\x61\xf3\xba\x18\x7f\x50\x7f\xfe\x97\x4d\x55\xcf\xbf\x16\xbb\xfc\x7b\x9e\xed\x96\xe2\xe1\x7c\xfc\x28\xd0\x8a\xcf\xe7\xbd\x20\x89\x4e\xa0\x5d\x4a\x5a\x4a\x2b\x3e\x48\x92\xb2\x3d\x6f\xb6\xba\x7f\x3d\xec\xc5\xaf\xac\xac\xf2\xe2\xb8\x4e\x10\x64\x72\x7f\x37\x5b\x95\x45\x51\xdf\xcd\xfe\x5b\xe5\x75\x76\x10\xc7\xcd\x21\x5b\x27\xcd\xf5\x3e\x56\xa7\xcb\x23\x2a\x70\x1e\x48\x79\xb0\x3e\x11\xe5\x79\x9f\xad\x93\x61\xdb\xe5\xe5\x3a\x91\x89\x38\x95\x45\x5d\x6c\x8b\x7d\x7b\xd0\x1b\x32\x11\x79\xf5\xf8\xd4\x5c\xfd\x3a\xc1\xf6\x20\x3b\x6e\x9e\xf6\xd9\xae\x3d\x5c\xfc\xc5\x4d\x11\x8c\x07\xd2\x14\xb8\x41\xe3\x71\xb5\x04\xe7\x80\xc8\x02\xe9\xfe\x86\xa3\xc8\x2e\x1b\x39\x21\x37\x91\x4d\x46\x4c\x01\xa5\x05\x54\x21\x3d\xa8\x3c\xb6\x41\x40\x8d\xa0\x08\x0c\x76\xf2\xb0\x31\xb9\x04\x68\x35\x90\x96\x60\xfa\x71\x8e\x22\xb3\x8c\x40\xd2\x8c\xe8\xb7\xca\x6b\x1b\x04\xad\x63\xfa\x2d\xf2\xc9\x2e\x05\x95\x02\x06\x03\x3d\x8c\xac\x32\x6a\xd7\x0c\x6c\x44\xf7\x95\xd7\x36\x08\x84\x14\xdb\x5d\xe5\xb5\x9b\x3f\x1b\xd3\x6f\x91\x57\xf6\x0a\x70\x4c\x77\x95\xd5\x26\x52\x40\x2a\xa2\xbb\xc8\x27\xa7\x0e\xac\x04\x94\x2e\x94\x83\xc8\x23\x5b\x03\xc6\x80\xd6\x80\x32\xed\xe0\x61\x63\x77\xfd\x84\xcb\xf6\x06\xbd\x1a\x88\x0a\xde\xe7\xd4\xb0\xb1\xbb\x6a\xc2\x65\x7b\xb2\xae\x06\x19\x02\x87\x43\xb7\x6b\xdc\xae\x57\x63\xd7\xdf\xe0\x7e\xd1\xcb\x31\xdc\x46\x26\xd9\x02\xa2\x07\x6c\x9e\x5f\xd3\x4f\xe2\xb8\xde\xc0\x4e\x27\x6d\xbe\x99\x1c\x28\xa9\x9f\xb2\x53\xbe\xd9\x1c\x28\xc1\x70\x47\x95\x69\x97\x21\x35\xe8\x66\xea\x3a\xb0\xfd\x42\x15\x45\x66\xd9\x03\xe1\x48\xbe\x46\x56\x99\x28\x05\xa3\x22\xb9\x8b\xec\x32\x49\x9a\xa0\xdb\xca\x6b\x2b\x07\x18\xec\x64\xa3\xca\x64\x23\x02\x11\x02\xf9\x60\xe1\x88\x22\xbb\x4c\x66\x8a\x26\xc6\xd1\x56\x1a\xd0\x49\x50\xb2\xc1\xde\xf7\xf0\xc3\xca\x6b\x37\xdf\xb0\xb5\x8d\xed\xae\xde\xc0\x76\x93\x36\xdb\x1a\x32\x50\xd2\x49\x9b\x6d\x0d\xe9\x15\x05\xe4\x47\xf4\x35\x72\xc9\x0e\x10\x1d\x90\x32\xc1\x56\x27\xae\x4c\xb6\xc7\xf6\xf5\x41\x32\x05\xa4\x77\x3c\xce\xff\xaa\xaf\x16\xed\xaf\x74\x7f\x02\x00\x00\xff\xff\x3d\x03\x1e\xe0\x5f\x14\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 5215, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd7\xcd\x8e\x9b\x30\x14\x05\xe0\x75\xf3\x14\x2e\xdb\x96\x8b\xaf\x8d\x8d\x89\x92\x8c\xd4\x65\xd5\xae\xb2\xe8\x32\x22\xc1\xed\xa0\x02\x8e\xf8\xe9\xcc\xf4\xe9\x2b\x48\x49\x02\xb1\xba\xa9\xec\xa5\x8f\x20\xdf\x51\x64\x5b\x97\xcd\xfb\x30\x24\xdf\x8a\x3a\x37\x2f\xed\xfe\xfc\xf6\xa9\x34\xa7\x9f\xba\x21\x2f\x45\x9d\x90\xfe\x9c\x67\x9d\x26\x61\xb8\x5b\x8d\x8f\xed\x4d\xdf\x9c\xf4\x9a\x3c\x77\xdd\xb9\x5d\x47\xd1\x8f\xa2\x7b\xee\x8f\x70\x32\x55\x74\x6a\xb2\xdf\x6f\x61\x95\xbd\x46\x8f\xbf\x75\x7d\xff\x4b\xd6\x76\xe1\x57\x93\x17\xdf\x0b\x9d\xaf\xc9\xbe\xaf\x3f\x12\x94\xe4\x73\x5f\x12\x46\x31\x21\x28\xd7\x94\xad\xa9\x24\x1f\x28\xa3\x74\x7c\x6f\xb5\x79\x7a\xad\x4a\xf2\x4b\x37\x6d\x61\xea\x6d\x80\x40\x83\xa7\xdd\x6a\xd3\x18\xd3\xed\x56\xef\x36\x45\xa7\x2b\x52\x67\x95\xde\x06\x43\xe5\xc3\xa5\xf2\x01\x39\x20\x4d\x20\x06\x41\x03\xd2\xf4\xa5\xde\x06\xb3\x28\x2f\x9a\x6d\x40\x03\x72\x6e\x4c\x67\x4e\xa6\x1c\x17\x57\x84\x06\xa4\x68\x0f\xc7\xa1\xfe\x36\xc0\x71\xa1\xeb\xec\x58\xea\x7c\x5c\x46\xff\x80\xd9\xa0\x70\x40\x95\x02\x32\x31\xd9\xcb\xd4\x0f\x2f\xad\xbc\xf4\xc4\x8b\xc4\xc6\x0f\xa9\x1f\x5e\x59\x79\xe5\x90\x97\x02\x84\x00\xe4\x0a\x10\xd9\xa4\x2f\x42\x2f\x78\x6c\xc3\x63\x3f\xf8\x6d\xd7\x2d\x42\x1f\xb8\xb2\xe1\xca\x03\x2e\x39\x30\x86\x0b\x7c\x0a\xbd\xe0\xcb\x0d\x37\x85\xce\x70\xe4\x31\x60\x42\x41\x20\x60\x7a\x77\xcb\xce\x53\xf7\x3c\x07\xfe\xa8\x5f\x42\xf7\xb8\x02\x1a\xde\x2d\x98\x10\x0f\x55\x6c\x8f\x38\x2f\x86\x28\x40\xb2\x65\x97\x29\x75\xcf\x4b\x01\x2c\x56\x0f\xfe\x14\x7b\x2a\x90\xda\x0b\xa4\xbe\x0a\x08\xb4\x16\x10\x2e\xef\x84\xb9\xc4\xed\x05\xb8\xcb\x02\x22\x01\x21\x21\x95\x80\xec\xc6\xcf\x43\x77\x78\x8a\xc0\x38\x03\x35\x9c\xb5\x2b\x3e\x0f\x7d\xe0\x92\x5a\x70\xe9\xf4\x4a\xba\x73\x98\x0d\x77\x7a\xee\xff\x3a\xc8\xd3\xd9\xa6\x5b\xc6\x9e\x0a\xc4\xf6\x02\x2e\x27\xa0\x8b\x14\x43\xc2\x00\xd5\xe2\x0f\xb8\xa5\x7e\x78\x69\xe5\x5d\x4e\x41\x33\x48\x59\x79\xf7\x07\xef\x02\xa5\xd4\xc6\x3b\x1d\x45\xd8\xf0\x59\x29\x87\x11\xfb\xee\xd2\x59\x84\xff\x8b\x6f\xa2\xf1\x8b\xf7\x4f\x00\x00\x00\xff\xff\x1e\xf4\xd6\x26\xae\x0f\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 4014, mode: os.FileMode(438), modTime: time.Unix(1500213738, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd4\xc1\x8e\x9b\x30\x10\x06\xe0\x73\xf3\x14\x53\x5f\x5b\x86\x19\x63\x43\x82\x20\x2b\xf5\x58\xb5\xa7\x1c\x7a\x8c\x08\xb8\x5d\xab\x80\x23\x03\xdd\x6c\x9f\xbe\x0a\xea\x66\x43\xa9\x72\x59\x91\xe3\xfc\xb2\xf9\x7e\x09\xdb\xd9\xfb\x20\x80\x6f\xb6\xad\xdc\x53\xb7\x3b\x3e\x7f\xaa\x5d\xf9\xd3\x78\x78\xb2\xed\x9a\xc1\x9c\x7a\x5f\x40\x10\x6c\x57\xe3\xb2\x9d\x1b\x7c\x69\x52\x78\xec\xfb\x63\x97\x86\xe1\x0f\xdb\x3f\x0e\x07\x2c\x5d\x13\x96\xbe\xf8\xfd\x1c\x34\xc5\x29\x9c\x7f\xeb\xb2\xff\x4b\xd1\xf5\xc1\x57\x57\xd9\xef\xd6\x54\x29\xec\x86\xf6\x23\x70\x0c\x9f\x87\x1a\x24\x71\x02\x1c\xa7\x24\x53\x8a\xe1\x03\x49\xa2\x71\xdf\x2a\x7b\x38\x35\x35\xfc\x32\xbe\xb3\xae\xcd\x05\x23\x89\x87\xed\x2a\xf3\xce\xf5\xdb\xd5\xbb\xcc\xf6\xa6\x81\xb6\x68\x4c\x2e\xc6\xca\xfb\xb1\xf2\x9e\x23\x5c\x13\xb2\x44\xad\x04\xf8\xa1\x36\xb9\x98\x44\x95\xf5\xb9\x20\x01\x47\xef\x7a\x57\xba\x7a\x1c\x2e\x08\x09\xb0\xdd\xfe\x70\xae\x9f\x0b\x1e\x07\xd3\x16\x87\xda\x54\xe3\x18\xde\x80\x15\x21\xf3\x1a\x99\x22\x4c\x5e\xe4\x69\xb6\x3c\x1d\x23\x47\x34\xc3\xff\xa6\x8b\xf1\xb1\x42\x85\x5a\xa1\x94\x2f\xf4\x75\xb2\x3c\xab\xa3\x99\x7b\x8e\xee\x00\xab\x39\xbc\xe4\x11\x8b\x35\x6a\x89\x4c\x6b\x94\x9b\x8b\x3c\xc9\xee\x40\xeb\xff\xd0\xfa\x3e\x34\x5f\xfd\xe9\x69\xb8\x18\xce\x11\x9f\x4f\x13\xc6\x8c\x14\x5c\x0d\x52\xeb\xd7\xe7\xe5\xc6\x92\xc5\x8a\x49\x52\x98\x6c\x90\x37\x09\x4a\xba\xdc\xf9\x7f\xd3\x05\xf9\x04\x55\x8c\xbc\x51\xc8\xea\x55\x9f\x84\x6f\xc5\xb3\x70\x7c\xeb\xff\x04\x00\x00\xff\xff\xa9\xf3\x57\x54\xa8\x06\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 1704, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xc1\x6f\xda\x3e\x14\xc0\xf1\xf3\x8f\xbf\xc2\xbf\x5c\x37\x1e\x7e\xcf\x76\x1c\x23\x68\xa5\x1d\xa7\xed\xd4\xc3\x8e\x15\x85\x6c\x8d\x06\x04\x25\x61\x2d\xfb\xeb\xa7\x18\x08\x8e\x13\xed\x32\x3d\x0e\x3d\xe4\xab\xd2\x0f\x21\xb1\x1b\x9b\xc5\xff\xd3\xa9\xf8\x56\xec\x37\xe5\x5b\xfd\x74\x38\x7d\xda\x96\xeb\x9f\x79\x25\xde\x8a\x7d\x86\xa2\x3e\x9c\xc4\x74\xfa\x30\xf1\xbf\xf4\x54\x1e\xab\x75\x3e\x17\xaf\x4d\x73\xa8\xe7\xb3\xd9\x8f\xa2\x79\x3d\xbe\xc0\xba\xdc\xcd\xd6\xd5\xea\xf7\x69\xba\x5b\xbd\xcf\x86\x7f\xa9\x7b\xfd\x97\x55\xdd\x4c\xbf\x96\x9b\xe2\x7b\x91\x6f\xe6\xe2\xe9\xb8\xff\x28\x30\x15\x9f\x8f\x5b\x41\x12\xad\xc0\x74\x2e\x69\x2e\x53\xf1\x41\x92\x94\xfe\x75\x93\xc5\xe3\xfb\x6e\x2b\x7e\xe5\x55\x5d\x94\xfb\x65\x82\x20\x93\xc7\x87\xc9\xa2\x2a\xcb\xe6\x61\xf2\xdf\xa2\x68\xf2\x9d\xd8\xaf\x76\xf9\x32\xf1\x6f\xf8\xb9\x3e\x9c\x9e\x51\x81\x75\x40\xca\x41\xea\x12\x51\x1d\xb7\xf9\x32\xe9\xb7\x4d\x51\x2d\x13\x99\x88\x43\x55\x36\xe5\xba\xdc\xfa\x83\x0e\x91\x89\x28\xea\xe7\x97\xf6\xed\x2f\x13\xf4\x07\xf9\x7e\xf5\xb2\xcd\x37\xfe\x70\xf6\x37\x38\x43\x30\x60\x54\xc0\x76\x85\x17\x75\x40\x9a\x22\xf6\xd2\x98\x60\x52\xe0\x32\xd0\x0e\x50\x5f\xdd\x5e\x62\x64\x9d\x37\x08\x43\xf7\xd6\x98\x60\x2d\xc1\x5a\x20\x4a\x81\x74\x77\x5f\x45\x91\x9f\x36\x72\x84\x6e\x23\x33\x9d\x81\xa3\x58\x3e\x37\x26\xd8\x20\xa0\x46\x50\x04\xa6\xbb\xce\xfd\xc6\x05\x13\x60\xaa\x81\x14\x02\x99\x4e\xee\x47\x66\x5a\x4b\x30\x2e\xa6\x2f\x91\x9b\x46\x20\x39\x38\xed\x6b\x65\xc6\x0d\x82\xd6\xb1\x7d\x89\x8c\xb4\xcd\x00\xb5\x6d\x3f\xe1\xd0\x0e\x2b\x33\x6e\x10\x08\x29\xc6\xaf\x95\x19\x6f\x7f\xd2\xd8\xbe\x44\x66\xda\x29\xc0\xa1\x7d\xad\xbc\x38\x91\x02\x52\x91\x7d\x8d\x8c\x74\x66\x21\x95\x80\xd2\x86\x74\x10\x99\xe8\x54\x83\x06\xb2\x70\xfb\xff\x11\x16\x3e\x94\x94\xf2\xc3\x18\xb3\x2c\x80\x7b\x95\x1b\x4f\x01\xe5\x10\xbf\x54\x2e\xdc\x80\x31\x80\xd8\xde\xca\x1d\xdd\x6b\xfc\x30\x8d\xc0\x7c\xd3\x49\x80\xa8\x11\x98\x6f\x50\x9d\x11\x32\x04\x3a\x82\xaf\x8d\x1d\x76\x23\xb0\xbb\x07\x8c\x4e\x0e\x65\x1f\xd9\x69\x92\x34\xa4\x7d\xe4\xa2\x53\x40\x6c\x97\x16\x1a\xd0\x74\xb3\x67\x5c\xef\x81\x67\xa3\x38\xe3\x64\x12\x30\x99\x1b\xc3\x33\xbe\x07\xc3\x90\x09\xee\xb6\xa8\x72\x2d\x6e\xa5\x06\xdd\xce\x1e\x16\xd2\xee\x39\x21\x8a\xdc\xb4\x83\xdb\x42\x33\x8a\xbc\x74\xbb\xc0\x0a\xb6\x12\xfa\x91\x9f\x0e\x06\x78\x5c\x99\x71\x65\x01\x83\xad\x9b\xa8\xb2\xed\xa3\x68\x40\x2b\x41\xc9\xde\x99\x47\xf5\x1e\xb8\x1a\xc5\x39\x77\x90\x02\x46\x8f\xe2\x7c\xeb\xaf\x90\x09\xc6\x59\x54\xd9\x70\xdb\x2e\x35\xfc\x78\x46\x0c\x4e\x3d\xca\xac\xbc\x05\x52\x26\x58\x82\xc5\x95\x0b\x37\xd6\x3f\x9c\x29\xd5\xbb\xea\x51\xe5\xc4\x53\x40\xa7\xc1\x52\xcf\xbe\xc5\x3b\xd0\x6a\x8c\x66\x1c\x68\x81\xa2\xc7\x68\xc6\x0f\xdc\xa1\x9f\x41\x49\x66\x80\x74\xbb\xd7\xe2\xcc\xca\x3b\x30\x12\x30\xeb\xe3\x5d\xe4\xa7\xad\x1d\xa1\x2d\xdf\x43\x63\xa7\x10\xa0\x94\x03\xfb\x52\xb9\x71\x0d\x86\x06\xf6\x39\xfe\x2b\xbd\x98\xf9\x2f\x62\xfe\x04\x00\x00\xff\xff\x05\x38\xf9\x1d\x43\x1a\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 6723, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x98\x4d\x6f\x9b\x40\x10\x86\xcf\xf5\xaf\xd8\x72\x6d\x19\xef\xec\x17\x6b\xcb\x4e\xa4\x1e\xab\xf6\x94\x43\x8f\x11\x31\xb4\x41\xc5\x60\x61\x68\x92\xfe\xfa\x0a\x1c\xf3\xb9\xf2\xa9\x3b\xb7\xec\xa3\x25\xcf\xab\x1d\x98\x9d\x64\xf7\x31\x0c\xd9\x8f\xac\x48\xca\x97\xf3\xc3\xe9\xed\x4b\x5e\x1e\x7e\xa7\x15\x7b\xc9\x0a\x8b\xac\x39\x25\x71\x9d\xb2\x30\xbc\x5b\x75\xfb\x1e\xca\xa6\x3a\xa4\x5b\xf6\x5c\xd7\xa7\xf3\x76\xbd\xfe\x95\xd5\xcf\xcd\x13\x1c\xca\xe3\xfa\x50\xc5\x7f\xdf\xc2\x63\xfc\xba\x5e\xfe\xb2\xfe\xf9\x6f\xf1\xb9\x0e\xbf\x97\x49\xf6\x33\x4b\x93\x2d\x7b\x68\x8a\xcf\x0c\x0d\xfb\xda\xe4\x4c\x70\x8c\x18\x9a\x2d\x17\x5b\x6e\xd8\x27\x2e\x38\xef\x9e\x5b\xed\xee\x5f\x8f\x39\xfb\x93\x56\xe7\xac\x2c\xf6\x01\x02\x0f\xee\xef\x56\xbb\xaa\x2c\xeb\xbb\xd5\x87\x5d\x56\xa7\x47\x56\xc4\xc7\x74\x1f\x74\x99\x1f\x2f\x99\x1f\x51\x02\xf2\x08\x14\x68\x1e\xb0\xaa\xc9\xd3\x7d\x30\x41\x49\x56\xed\x03\x1e\xb0\x53\x55\xd6\xe5\xa1\xcc\xbb\x45\x6f\xe1\x01\xcb\xce\x8f\x4f\x6d\xfe\x7d\x80\xdd\x22\x2d\xe2\xa7\x3c\x4d\xba\xe5\xfa\x96\x59\xb4\x1a\x09\x68\x37\x80\x42\x5f\xe5\x73\x4a\xe4\x37\x4e\xbf\xa1\xf2\xeb\xc8\xe5\x6f\x29\x91\xdf\x3a\xfd\xd6\xa7\xdf\x68\xd0\x1a\x50\x5a\xe0\xe1\xf0\xb3\xd0\xfd\xab\x70\x63\x83\xf7\x54\x46\x0e\x52\x23\x1d\xa9\x5c\x1b\x7c\xa7\x12\x4a\x80\xd0\x6a\x9a\xa4\x87\xfe\xec\x28\x11\x84\x96\x80\x0a\x50\xcb\xa1\x4d\x4c\xa9\x4f\xbf\x02\x8c\x38\x68\x04\x1e\x8e\x16\xa3\xaa\xdc\xdc\x42\x90\x4c\x82\xd8\x2c\xb2\x5c\x20\x89\x5d\x72\x87\x5d\x7a\xed\xdf\xbd\xc8\x8e\x8f\xdc\x3a\xab\xe2\xda\xe2\x3f\x19\x62\xfb\x85\xcc\xc3\x5c\x29\x91\xdf\x38\xfd\x5e\x6f\x96\xb1\xc9\x2c\x5e\x8c\x2b\x25\xf2\x0b\xa7\x5f\x90\xf8\x4d\xdb\x1e\xed\x22\xc0\x15\x53\x25\x58\x74\x86\x1e\x13\x25\xd0\xe8\x4c\xd0\x62\xaa\x04\xd2\x9d\xc0\xef\xbd\xa1\xa3\xcb\x0d\xc9\xc1\x0e\x35\x98\x42\x12\xfb\x68\xbe\x9c\x53\x12\xbf\x10\xdc\xe1\xef\xa8\x67\xbf\x81\x28\x6a\xc7\xb6\x89\x7e\x80\x34\xf6\x8d\xcb\xee\xbf\xf6\x17\x91\xe2\x0e\xbb\xa2\x3a\x79\x85\x2e\xbb\xdf\xef\x7e\x24\x72\xd5\xdd\x73\xe7\x1d\x89\x5c\x75\xf7\xdc\x75\x2f\xa2\x8d\x81\x61\x4c\x9f\x32\x12\xf7\xfc\xd8\xdf\x19\x85\x1b\x85\x5c\xca\x3b\x48\x62\x1f\xfe\x90\x9e\x41\x8f\xf6\x0d\x82\x90\x02\x6c\x3b\x73\xf7\xf6\x29\x24\xb1\x8f\x46\xbd\x29\xa4\xb1\x0b\x97\xdd\xef\x9c\xf7\x2e\x42\xb9\x01\xb4\x0b\x7f\x8f\x69\x12\x88\x65\xf5\x7b\x4c\x95\x40\xb9\x13\xf8\xed\x3b\x9d\x4a\x41\x24\x00\xed\xec\x08\x06\x4a\xe4\xb7\x4e\xbf\xd7\xde\x27\x78\x04\xca\x00\xa2\x1a\x35\xde\x19\x24\xb1\x1b\x74\xd8\xcd\x7f\xb8\xeb\x77\xeb\xee\xbf\xc8\xff\x02\x00\x00\xff\xff\x24\xf8\xa1\xb1\x03\x17\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 5891, mode: os.FileMode(438), modTime: time.Unix(1500213740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\xd6\x6e\xdc\xcd\xfa\xda\x5e\x0a\xdb\x6d\x20\x2c\x39\x94\x1e\x14\x59\x76\x44\x6d\x8d\x90\xe4\x3c\x58\xf2\xdd\x17\x29\xf1\x0b\x72\x58\x84\x61\xe6\xa7\x99\xff\x3c\xe4\xbf\x33\x00\x72\x90\xd6\x29\xd4\x24\x07\xb2\xa4\x2b\x9a\x90\x87\x40\x0b\xb9\x6b\x2b\x92\x43\xc9\x6b\x27\x23\x31\x16\x4f\xaa\x54\xd2\x92\x1c\x42\x22\x00\xa9\xb1\x5a\x73\xbf\x0f\xa9\xcf\x39\xfb\xe3\xa4\x75\xec\xa3\x75\xd2\x6a\xde\xc8\x4f\xf6\x82\xa2\x6d\xa4\xf6\x8e\xad\xbb\x5c\xf6\x0b\x2b\xea\x4f\x9e\xcc\x00\x2e\x51\xd6\x9d\x5d\x13\xab\xdf\x34\xe5\xc1\x9f\x46\xa2\xdb\xd7\xdf\x2f\xef\xdb\x0d\x73\x67\xe7\x65\xf3\x98\xb2\xa3\xd2\xf2\xe0\x83\x8e\x63\x6f\x4a\x58\x74\x58\xfa\xc5\x56\xe9\x02\x8f\x6e\xb1\x89\x6a\xdf\x96\xef\x46\x5a\xee\x15\x6a\x5e\xd3\xa0\x38\xd4\x3b\x2a\x2b\xdd\x9e\xdb\xaf\xa1\xa4\x11\xdc\xe8\xff\x9c\x64\xdb\xa5\x33\xc1\x0d\xbd\x66\xc6\x8d\x01\x10\xc1\x8d\x6f\xad\xec\x85\x01\x88\xd2\x5e\xda\x92\x8b\x00\x93\x87\x8e\x96\xaa\xf6\x71\x8f\x44\xa3\x07\x6e\x0d\x70\x5d\x80\x41\xeb\x21\x80\xec\x31\xfa\xc1\x54\xa2\x31\x13\xe7\xa9\xf7\x76\x16\x79\x21\xb8\x8b\xbb\x04\xb8\xf4\x13\xca\x93\xa8\xdb\x62\x68\x83\x28\xe3\x48\x0e\x1f\x5d\xf5\xef\x34\x1e\xd2\xb7\x93\xa4\x3f\x22\x4a\x46\xe8\x67\x4a\x93\xa7\x55\xc0\x8b\xc1\x4e\xb3\x6c\x08\x59\xd1\x78\xa6\x60\x49\x97\x03\x48\xb3\x8c\x8e\xbe\x6b\x9f\x9f\xb7\x65\xed\xd1\xf9\x49\x5b\x6f\xe7\x67\x6c\x4c\x1b\x16\xd3\x2b\xd4\x28\x78\x1d\x22\xef\x20\x1a\xad\x02\x1b\xae\xf4\x70\x3d\xbf\xe2\x01\x9c\xb1\xb5\xaf\x9b\x35\x15\xd8\x8c\xa3\xee\xe2\xfe\xdf\xa0\x68\xab\x71\xf4\xf4\x62\x32\x07\xda\x6a\x32\xc6\x3c\xbc\xf6\x0e\xf1\x6b\x7e\x8b\x0b\xef\x32\xbb\xcc\xfe\x05\x00\x00\xff\xff\xb8\x13\x33\x04\x6c\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 876, mode: os.FileMode(438), modTime: time.Unix(1500147407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

