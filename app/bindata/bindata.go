// Code generated by go-bindata.
// sources:
// app/settings.json
// data/dnscrypt/win10/extra.txt
// data/dnscrypt/win10/spy.txt
// data/dnscrypt/win10/update.txt
// data/dnscrypt/win7/extra.txt
// data/dnscrypt/win7/spy.txt
// data/dnscrypt/win7/update.txt
// data/dnscrypt/win81/extra.txt
// data/dnscrypt/win81/spy.txt
// data/dnscrypt/win81/update.txt
// data/firewall/win10/extra.txt
// data/firewall/win10/spy.txt
// data/firewall/win10/update.txt
// data/firewall/win7/extra.txt
// data/firewall/win7/spy.txt
// data/firewall/win7/update.txt
// data/firewall/win81/extra.txt
// data/firewall/win81/spy.txt
// data/firewall/win81/update.txt
// data/hosts/win10/extra.txt
// data/hosts/win10/spy.txt
// data/hosts/win10/update.txt
// data/hosts/win7/extra.txt
// data/hosts/win7/spy.txt
// data/hosts/win7/update.txt
// data/hosts/win81/extra.txt
// data/hosts/win81/spy.txt
// data/hosts/win81/update.txt
// data/ncsi/ncsi.txt
// data/openwrt/win10/extra/dnsmasq.conf
// data/openwrt/win10/extra/firewall.user
// data/openwrt/win10/spy/dnsmasq.conf
// data/openwrt/win10/spy/firewall.user
// data/openwrt/win10/update/dnsmasq.conf
// data/openwrt/win10/update/firewall.user
// data/openwrt/win7/extra/dnsmasq.conf
// data/openwrt/win7/extra/firewall.user
// data/openwrt/win7/spy/dnsmasq.conf
// data/openwrt/win7/spy/firewall.user
// data/openwrt/win7/update/dnsmasq.conf
// data/openwrt/win7/update/firewall.user
// data/openwrt/win81/extra/dnsmasq.conf
// data/openwrt/win81/extra/firewall.user
// data/openwrt/win81/spy/dnsmasq.conf
// data/openwrt/win81/spy/firewall.user
// data/openwrt/win81/update/dnsmasq.conf
// data/openwrt/win81/update/firewall.user
// data/p2p/win10/extra.txt
// data/p2p/win10/spy.txt
// data/p2p/win10/update.txt
// data/p2p/win7/extra.txt
// data/p2p/win7/spy.txt
// data/p2p/win7/update.txt
// data/p2p/win81/extra.txt
// data/p2p/win81/spy.txt
// data/p2p/win81/update.txt
// data/proxifier/win10/extra/domains.txt
// data/proxifier/win10/extra/ips.txt
// data/proxifier/win10/spy/domains.txt
// data/proxifier/win10/spy/ips.txt
// data/proxifier/win10/update/domains.txt
// data/proxifier/win10/update/ips.txt
// data/proxifier/win7/extra/domains.txt
// data/proxifier/win7/extra/ips.txt
// data/proxifier/win7/spy/domains.txt
// data/proxifier/win7/spy/ips.txt
// data/proxifier/win7/update/domains.txt
// data/proxifier/win7/update/ips.txt
// data/proxifier/win81/extra/domains.txt
// data/proxifier/win81/extra/ips.txt
// data/proxifier/win81/spy/domains.txt
// data/proxifier/win81/spy/ips.txt
// data/proxifier/win81/update/domains.txt
// data/proxifier/win81/update/ips.txt
// data/simplewall/win10/extra/blocklist.xml
// data/simplewall/win10/spy/blocklist.xml
// data/simplewall/win10/update/blocklist.xml
// data/simplewall/win7/extra/blocklist.xml
// data/simplewall/win7/spy/blocklist.xml
// data/simplewall/win7/update/blocklist.xml
// data/simplewall/win81/extra/blocklist.xml
// data/simplewall/win81/spy/blocklist.xml
// data/simplewall/win81/update/blocklist.xml
// app.conf
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x7d\x6f\xdb\xba\xf5\xfe\xbf\x9f\x82\x3f\x15\x06\xee\x0d\x7e\xa2\x6c\xa7\x71\x3b\xaf\x2f\xe8\x92\x6e\x0b\xd0\x97\x20\xee\x1a\x0c\xe3\x70\x41\x8b\xc7\x36\x6f\x24\x92\x97\x87\xb2\xec\x3b\xf4\xbb\x0f\xa4\x6c\x4b\xb2\xa5\x24\xbd\x18\xe0\xc0\xd1\x39\x0f\x9f\xf3\x9c\x17\x91\xf4\x7f\x9e\x11\x12\x15\x56\x62\x34\x25\xfe\x7f\x42\xa2\x8c\x3b\x40\xf7\x0d\x2c\x4a\xad\xa2\x29\x89\x56\xce\x19\x9c\x26\x89\xe5\x25\x5d\x4a\xb7\x2a\xe6\x05\x82\x4d\xb5\x72\xa0\x1c\x4d\x75\x9e\x94\xf2\x5e\x26\xa9\xe5\xbf\x6f\xe3\x9c\x6f\x92\x3b\xa9\x84\x2e\x71\x66\xb6\x7f\xc9\x74\x7a\x0f\x36\xa9\x38\xa3\xff\xaf\x22\xb8\x95\x05\xee\x52\xab\x4b\xd1\xe4\x2f\xcb\x92\x36\x5c\x54\xdb\x65\x82\xc0\x6d\xba\x7a\x6f\x64\xb2\x1e\x27\x03\x4c\x2c\x18\x6d\x5d\xf2\x6e\x80\x6f\x06\xb8\xe7\x2b\x57\xdc\x85\x0c\x02\x95\x67\x0a\x86\x7c\x2b\x0d\x17\xc2\x02\x62\x50\x29\x4d\xb2\x5f\x21\x14\xfe\x56\x80\xdd\x36\xc3\xef\x6d\x21\x6e\xb9\xd2\x12\x0f\x70\x69\xb8\x91\x0d\x7e\x69\x62\x6e\x64\x20\xfd\x15\xb5\x6a\xe0\xa4\x5a\xe8\x16\xd0\x1b\xa8\xd4\x5e\xbb\x87\xd6\x48\xb5\x68\x06\x97\x86\xaa\x45\x32\x40\x1a\x40\xcf\x08\xf9\xee\x81\x51\x26\xe7\x8d\xce\x94\xd2\x02\xae\xb8\xbd\x3f\x98\x42\xf3\xb2\x56\x16\x19\x9d\x4b\xe5\x2c\xdf\x06\x79\xa1\x29\x89\xd3\x3a\xc3\xe4\x6e\xbf\xfc\xa3\x74\x10\x8f\xe9\x98\x4e\xe8\xef\xd2\xec\x24\x11\x12\xa5\x2b\x48\xef\x17\x32\x03\x4f\x78\x08\xc6\x98\x0b\xdf\x14\x36\x10\x05\xe8\xf7\x5d\x12\xca\xa4\xdc\xfc\x31\x2d\x61\x69\x3c\xa4\xaf\x26\x81\xb6\x5b\xc2\xe5\x94\xb1\xdd\x2c\x31\x36\xdb\xa2\x83\xfc\x7c\xcc\xd8\x67\xbf\x96\xb1\xd2\x7f\x51\x91\x65\x6d\x51\xb8\xc5\x3c\xcc\xed\x1f\x50\x35\x0b\x6b\xe3\x73\x3a\x1a\x3e\x50\x99\x2a\x42\x50\x94\x6b\xd5\x28\xcb\xa1\x6d\x82\x3b\xfe\xd5\x64\x75\xe7\x84\xc2\xd4\x6e\x8d\x6b\xca\x5a\x01\x0f\xe3\x5f\x47\x59\xf3\xac\x08\x11\x06\xd8\xce\x49\x1b\x50\xa5\x6d\xad\x96\xcd\xc2\x37\xd8\x9e\x3f\x7f\x4e\x76\x70\x32\x40\xff\xf9\x29\x01\x97\x26\x0b\x69\xa1\xe4\x59\x46\xfd\xbb\xfb\x33\x53\x1e\xf7\x49\x5b\x20\x7e\x40\xa7\x64\x80\x4c\x31\xf5\x9c\x80\x5a\x68\x9b\x02\xb1\xba\x70\x60\xc9\xd5\xe7\x19\x53\xd2\x38\x3e\xcf\x00\x49\xec\x88\xe2\x8e\xc4\xd7\xe4\xe6\xf6\xc3\xed\x97\x7f\x7c\xbd\xfe\xfc\x37\x12\x1b\xe2\x52\x43\xe2\x58\xf8\x37\x93\x5c\x9c\x93\xf8\x57\x72\xfb\xe1\xea\xfa\xf6\xc3\xe5\x57\x12\xc7\x4e\xc7\xde\x81\xe4\xe2\xfc\x09\x54\x85\x78\x2a\x95\x57\x6b\x8b\x0c\x90\xa9\x43\x05\x9b\x35\xac\x43\x5d\x93\xbf\x7e\xb9\xbd\x7b\x7f\x7b\xe5\xe9\xae\x6e\xbf\xdc\x90\x58\x90\x7d\x89\x0f\x45\xf6\x5d\xd2\x39\x97\x0a\x7f\xac\xb0\x42\x61\xce\xf1\x37\x9a\x6a\xb5\xe8\xab\x6b\xa7\x40\x04\xbb\x06\xfb\xc6\xef\x0c\x07\x29\xad\xae\x9b\xb1\xe9\x9a\x17\x1f\xe1\x64\x87\x25\x66\x6c\x2a\x59\x8f\x49\xa8\x05\x9c\x90\x4c\x8f\xe7\xce\x58\xbd\x91\x0b\x09\xf6\x29\x93\xd7\x99\xe4\x00\xff\xfc\x83\x75\x7e\x94\xa6\xfd\xb6\xcb\xdc\x64\x61\xb0\xbb\x4a\xf5\xfa\xff\xe2\xb8\xa3\x56\x55\xfb\xe2\xf8\x2d\x53\x01\x31\xd3\x85\x4d\x61\xda\x36\x7e\xe4\xe8\xe2\x4f\x5a\xf8\xfc\x45\xed\x63\xea\xf5\xbb\x4d\x9e\x91\x75\x75\x3e\xbe\x61\xd1\x88\x0e\x59\xf4\xce\x2f\xb3\x5a\xbb\xb7\x9d\xa5\x66\xee\xb5\x74\x90\x13\xc5\x73\x78\xc3\xa2\x01\xfe\x12\x3e\x2c\x0a\x23\x1c\x2c\x2c\x22\x42\xda\x37\x2c\x1a\xb2\x88\x18\xab\x9d\x4e\x75\xb6\x7b\xac\x83\xf9\x27\x89\xbf\xcc\x7d\x26\x3e\x76\xf5\x08\xca\x8f\xba\xd8\x19\x92\xb7\xc7\xfb\xd1\x69\x1f\xa3\x42\xad\x79\x26\xc5\x47\xa9\xc0\x37\xe2\x5f\x7b\xc9\x77\x90\xa5\x3a\x07\xe2\x34\xb9\x39\xac\x3a\x24\x74\x63\xb5\xdf\x05\xc9\xa9\x05\xf9\x1a\x04\xe1\x58\x7b\x3e\xea\x25\x09\xae\x9d\xba\xda\xf3\xd5\xf2\xc5\x42\xa6\x24\xd3\xcb\x7e\x67\x58\x2a\x24\x1e\xb9\xbf\x81\x9d\x6b\x04\xa2\x0b\x67\x0a\x77\xba\xdc\x47\xbd\x92\x16\x52\xa7\xed\x96\x48\x24\x08\x8e\x38\xdd\x04\xa4\x3c\x23\x97\x9f\xbe\xcc\xc8\xa5\xaf\x62\xed\x79\x5f\x38\x9d\x73\x27\x53\xbf\xed\x91\x5c\x0b\x20\x02\x1c\xa4\x4e\xea\x46\x4f\x7f\xba\xbe\x59\x4f\x7e\xae\x9f\x31\x0c\x0f\x41\x3f\x5a\x8e\x28\xed\xc8\x42\x17\xaa\xa1\xe8\x52\x2b\x55\x91\x20\x11\x3a\x20\xb4\x95\x4b\xa9\xb8\x03\xb2\xb0\x3a\x27\x6e\x05\x84\x1b\x93\xc9\x94\x07\x58\xd5\xbe\x7f\x1f\xda\x77\x74\xa4\x45\xb0\x76\x9b\x1b\xee\x56\x27\x67\x24\x6e\x51\x71\x27\xd7\xc0\x58\x29\x15\xac\x1d\x63\x1f\xf5\x12\x19\xfb\x24\x53\xab\x51\x2f\x5c\xbc\xc3\xc6\xd5\xe1\x35\x78\xf1\xc5\x80\x0d\x51\x79\x46\x3d\x6f\x7d\xf7\x50\x29\xca\x3a\xa6\x85\x65\xf3\x0d\xbb\x87\x70\x77\x9a\xfd\x73\xf6\xf5\xc3\x27\xc6\x2e\x0b\x6b\x41\xb9\x4b\xad\x9c\xd5\xd9\x0c\x1c\x63\x33\xb0\x6b\x99\x02\x32\xf6\x39\xe3\xb3\x75\xca\xd8\x0d\xb7\x3c\x07\x07\x16\x19\xbb\x56\x0e\xac\x02\x57\x97\xa9\x84\xf9\x8d\xd5\x73\xf8\xbb\x46\x7f\xd0\x45\xef\x53\x9f\xc8\x5d\xd3\x7a\x82\xdd\x17\xa1\x8d\x0d\xd6\x13\xec\x65\x75\x5f\x3d\x85\xef\x1d\x9d\x4a\xbe\x4d\xba\xb5\x7c\x9b\x74\xab\xe9\xc2\xef\xec\x7d\x8a\xba\x96\xd4\xae\x7a\xd3\x54\xd8\x51\x9f\xab\xa6\xf5\x04\x7b\x92\xf3\xd5\x91\xa3\x93\xbd\x29\xe8\xaa\x6d\xef\x8b\xd0\xb5\xa4\x76\x1d\x9f\x29\x73\x68\xee\xfd\x51\xbe\x1f\xce\xf6\x81\x50\xc2\x3c\x44\x7d\x11\x6e\xa3\x65\x49\x73\x5c\x38\x3f\x94\xfe\xda\xd6\x3c\x25\x7c\x3d\x7d\x89\x03\x30\x00\xdc\xc6\x1d\x01\xf6\x62\x02\xe6\xf0\x36\x90\xcf\x97\xb3\xeb\x23\x64\x5d\x01\x69\xd6\x93\x47\x83\x4e\x9e\x10\x74\xf2\x70\x50\xa1\xb0\x4e\x54\x28\xec\x8d\x29\x14\xb6\xf2\x18\x9d\x8f\xe8\x68\xf8\x92\x8e\x2f\x2e\xfc\x5f\x17\xe7\xe4\x07\x38\x03\x76\x21\xce\x61\xfa\x62\x71\xc1\xa7\x17\xf3\x57\xa3\xe9\x74\x74\x7a\x7c\x97\x38\x7f\xa0\x53\xbd\xbf\x12\x7b\x5b\xf6\xd0\x0f\xc7\x9c\xa3\x03\x9b\xf8\x0b\x75\xe2\xe5\x27\x4f\xe9\xef\x09\x4d\x6f\x8b\x7f\x48\xec\xe4\x7f\x2d\x76\xf2\xa8\xd8\xd6\x68\x28\x1c\x51\x33\x9a\x50\xb1\xf5\xe7\x09\x6d\xee\x9e\x1d\xc3\x31\x1e\xbe\xa2\x2f\x5f\xd1\x97\x43\x3a\x9a\xf4\x4e\xc6\x93\x29\x27\x15\xe5\x70\x34\xbd\x18\x0e\xa7\x7f\x1a\x4e\xfd\x68\x4c\x8e\xee\x64\x87\xa3\xa3\x94\x59\xca\xad\x98\x15\xf3\xfa\xaa\x57\xdd\x30\xa2\x33\x3a\xce\x85\x6a\x44\x8a\xce\x28\x8f\x73\x04\xb1\x84\x23\xab\x50\xb0\x29\xf0\xc4\xb8\xc1\x46\x83\x82\x09\xcf\x68\x8e\x5c\x9c\x40\x83\x5d\x1d\xa1\xf3\x60\x85\xf4\x58\x83\x31\xb0\x89\xed\xa2\x63\x85\x13\xb9\x6b\x9b\x44\xda\xa9\x58\x40\x26\xd7\x60\xb7\x54\xa0\xa1\xb9\xa1\x87\x8d\xcd\xaf\xa6\x0a\xb9\x4b\x7b\x16\x1c\x83\x6b\xc8\x32\x9b\x0b\x85\xe3\x3e\x77\xa6\xab\x3b\x03\xf5\x44\x6d\xf2\x1c\x10\x41\x2d\xc1\x56\xbe\xd6\xb2\x03\x5b\x59\x4d\x5f\x61\x04\x77\xc7\xeb\x3b\x32\xec\xd8\x45\xa2\x33\x6a\xb9\xe8\x88\xe1\xad\x27\xc5\xb4\xbe\x4d\x27\x56\xdc\xdd\x15\xaa\x2e\xf8\x9f\xe7\xcb\x1e\x00\xea\x54\xf2\xac\xaf\x1a\x98\x73\xeb\x30\xb5\x00\xaa\x0f\xe2\x20\x83\x1c\x9c\xdd\x36\x63\xb5\x72\xac\x11\x8f\x52\x3c\xda\xe0\x1a\x5a\x58\xec\xe5\x93\x19\xf4\x66\xee\xaa\xeb\x70\xce\x15\xf7\xad\x6c\xb1\xef\xba\xd6\x43\xdb\xe5\xa5\xfc\x9e\xfb\xd3\xa0\x45\xb3\x96\xd6\x15\x3c\x03\x6e\xdd\xea\xc8\xa3\xab\x57\x45\x1c\x9b\xad\x83\xcd\x19\xf5\x1b\x1d\xf5\xe9\xed\xe7\xaf\xa7\x0a\x6d\x7c\xb7\xda\x0a\xf3\x20\xa4\x04\xee\x56\x60\x7b\xdd\xad\x51\x7e\xc0\xa5\xed\xf2\xd8\xd5\xe9\xe9\x6d\xd8\x66\xae\x37\xc7\xf3\xce\xad\xe5\xdb\xb3\xd8\x58\x2d\xa8\xd0\x9d\x3b\xc0\x1e\x5a\xa5\x1a\x9f\x3d\x50\xba\x67\xfe\xfa\xff\xfd\xd9\x7f\x03\x00\x00\xff\xff\xd3\xae\x49\x3d\x9e\x15\x00\x00")

func appSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_appSettingsJson,
		"app/settings.json",
	)
}

func appSettingsJson() (*asset, error) {
	bytes, err := appSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app/settings.json", size: 5534, mode: os.FileMode(438), modTime: time.Unix(1508888955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x5b\x72\xe4\x30\x08\xfc\xcf\x51\x52\x65\x3e\x72\x23\x82\xb0\x4d\x8d\x05\x5a\xc1\x8c\x67\xf6\xf4\x5b\xb2\xe7\x65\x65\xf3\xa9\x86\x6e\xd4\x3c\x3e\xe1\x2b\x27\x05\xe5\xf8\xf8\x84\xcc\xee\xac\x13\x57\x58\xe4\xc2\x40\x96\x1b\xe8\x9c\x26\x7e\x64\xf8\x18\x4a\x2e\xf7\x98\x67\xac\xe1\x54\x99\x15\xb2\x50\x35\xb7\x31\xee\xb1\x8b\x35\x2a\x69\xba\x53\x57\xc6\x98\xb9\xfe\xc8\xbb\x7e\xdb\xf5\x59\x0e\xd5\x57\xae\xde\x25\x61\x29\x0e\x7e\xba\x95\x3d\x89\x50\xd3\x8d\xea\xd9\x67\xb7\x84\x70\x12\x9d\x76\x3c\x29\x90\x69\xb0\x06\x94\x6a\x09\x28\x3b\x64\xd7\x67\xd0\x94\xd5\x62\xf7\x42\xb3\x09\x71\x57\xe8\x7f\x20\xa8\x63\xd0\xce\x59\xa4\x69\xaf\xea\xb0\x8a\x26\x5b\x7d\x67\x6d\x30\x99\x8e\x32\x41\x41\xf7\x62\x35\x36\x42\xe2\xb2\xd8\x0d\x3c\x30\x84\x00\x4f\x98\x51\x82\x69\x56\x5b\x6c\x12\xde\xe9\x29\x27\xc8\x1c\xe8\x5c\x2f\x42\xdc\x9b\x1f\x99\xd3\x37\xd2\xe9\x05\x0f\xb3\xcd\xf9\x18\x73\xc6\x4a\xf3\x6f\xcc\xf7\xcf\x4e\xaf\xd9\x4a\x9e\x06\x1f\xb2\xeb\xd0\x6c\xee\xbf\xfb\xcb\xfb\xbc\x44\x5d\x12\xd7\xd2\x5a\xbe\xd8\x39\x61\x29\x1b\xbe\x08\xb1\x7a\xeb\x78\x2e\x5d\xb9\x66\x49\x5f\xea\x19\x66\x8b\x8c\xb2\xec\x2f\x4e\x82\x95\x93\x54\xa6\xe8\x88\x87\xa5\xb2\x71\x14\xe2\x7b\xa7\x8f\x79\xa6\x0f\xdc\xc7\x2b\x64\xff\x28\x55\x88\x17\xf1\x78\x5b\x8e\x12\x02\x1e\x56\xfb\xd1\xfe\x39\x73\xbd\xbd\xd6\xa2\xf6\xe2\x95\x27\xf1\xe0\x0a\x94\x0a\xf5\x33\x78\xb4\xf7\xbe\x4b\x4d\x1f\x27\x7e\x79\xdd\x0a\x0e\x92\x71\x62\x07\x1f\x3a\x72\x0b\xb6\x1b\x1a\x13\x24\xbf\xfe\x6c\x9c\x9f\xcb\xb6\x31\x47\x34\x24\xf3\x61\x72\x71\xfa\x82\xb2\xc4\xf3\x17\x67\x79\xb3\xbd\x26\xea\x65\x1b\x84\x4b\x2f\xbb\x7a\x3b\x11\xd8\x4e\xaa\x8b\xac\xeb\x76\xdf\x64\xaa\x4c\x11\xec\x1b\xfe\x2f\x00\x00\xff\xff\x02\x0b\xff\x0a\x22\x04\x00\x00")

func dataDnscryptWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10ExtraTxt,
		"data/dnscrypt/win10/extra.txt",
	)
}

func dataDnscryptWin10ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/extra.txt", size: 1058, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9a\xdd\x92\xfa\x2e\x0f\xc7\xcf\xff\x97\xb2\x33\x32\x04\xda\x6a\x2f\x07\x29\xab\x9d\xad\xb4\x0f\x54\x5d\xef\xfe\x19\x5a\x5f\xaa\x65\xbf\xf9\xed\xd1\x9a\x0f\x81\x90\x84\x37\xcd\x97\x30\x9b\x53\x74\xcd\xc1\x09\xef\xc6\xff\xbe\x84\x69\xfc\x6f\x14\xb6\x3f\x4d\xff\xc7\x2f\x71\x8a\xa6\x89\x4f\x38\x09\xfc\x83\x9f\xa6\x8f\xce\xfa\x07\x1f\x9b\xd3\x78\x87\x8d\x7d\xef\xf8\xd0\xed\x1b\x1f\x95\x38\xb5\x36\xf4\xb1\xff\x7e\xb4\xeb\x7a\x6b\xc6\xb6\xf7\xa2\x6b\x2f\x8f\xb6\x6f\x8a\xc1\x34\x8b\x31\x43\xb2\xe6\xf5\x31\xba\x70\x69\xad\x8b\x22\xf6\xb6\x35\xdd\xaa\xf7\xd1\x75\xee\xe4\xc6\x70\x5b\x93\x60\xbe\xbf\x5b\x7b\x32\xde\x1c\x5c\xb8\x8f\x75\x69\xc3\x78\x36\x9d\x33\x61\x3c\x3e\x44\x7d\x18\xdd\xef\x97\x68\xcc\x68\x44\xea\xea\x61\xaa\xed\x4f\xc2\x47\x33\xda\x6c\xc3\x8f\xd1\x66\x98\x63\x6f\xfe\x37\x56\x3f\x27\x67\xec\xd8\x5e\xda\xf1\x26\xae\xad\x6f\xfa\xeb\x1c\x14\xd3\x78\xf7\x7b\x9e\xe3\xf1\x0a\xd5\xd2\x27\xa6\x89\xb4\x08\xda\xfd\xe3\x9d\xfd\x98\x8d\x6d\xfc\xc6\x47\x61\x9a\xd1\xd9\xa3\x68\xdc\x7f\x26\x04\x73\xfb\xda\x0c\xa1\x6f\x44\xd3\x8b\x26\x0e\xe2\x34\x7c\x18\xb9\x6f\xfd\x61\x1a\xe4\x5d\xda\x69\x2d\x69\x63\x04\x35\xe1\xb2\x94\xd8\x95\xe4\xb0\x90\x78\xd2\xb2\xd8\xb8\x0f\x49\xf5\xd6\xcf\x2c\x59\xb7\x79\xeb\x47\xed\x37\xb6\x0f\x52\x92\x30\x43\x2b\x86\xf4\x4f\x86\x2a\x48\x35\xa4\x45\x9e\x5e\x7d\x24\x71\xf5\xf1\x2d\x34\x7b\xaf\x07\x64\x8f\x8e\xf6\x28\x95\x94\x4a\x69\xb5\x5b\x6b\xc7\x39\x97\xfd\x61\x13\x6f\x77\xd1\x6d\xe5\xde\xdb\xca\xbd\xb3\x64\xe1\x28\xfb\x8c\xb6\x35\xf6\xe8\xa6\x94\x3b\x99\x30\xbe\x8d\x66\x9b\x48\x4a\x16\xa2\x4b\xc9\xdc\xf9\xeb\x94\x2a\x93\xb0\xd6\x2b\xa1\x92\x05\x6d\x45\x67\x6f\x9f\x52\x4d\x39\x69\x29\xb3\xd2\x6c\x0f\xdb\x72\x2d\x25\x55\xac\x0d\x2b\xd4\xba\x65\x51\xd6\x6b\x59\x5d\xac\x64\x75\x55\x7e\xf4\x77\xa4\xbf\x03\xf5\x84\xb9\xbc\xb1\xc7\xcf\x00\xdc\x25\x6e\x25\x39\x7c\x48\xd4\x4a\x4b\xbd\x69\xf5\xa7\xc1\x8c\xee\xd7\x1e\x8d\x3f\x38\x61\xbb\xfe\xdc\x98\x61\x98\xed\xed\xfd\xd8\xfa\xf3\xf9\x24\x9a\xd5\x1a\xb4\x7d\x18\x44\x1c\x57\xe2\x81\x24\xe1\x35\x6d\x07\xc5\x37\x29\xd8\x26\x69\x25\x0c\x56\x5c\xa4\x6d\xe6\x63\xa0\xd9\xeb\xab\x8f\x4a\x52\xfa\x5b\xe5\x79\xb3\x2f\x73\xb2\x68\x8f\x24\x89\xa4\x24\xa5\x18\xbe\x85\x7c\xa7\xb3\x63\x2e\x38\x1e\xbf\x26\xdc\x7f\xad\x18\xfd\xcc\xda\x7e\xe3\x1a\xf2\x34\x43\xcc\xb1\x7f\x48\xaa\x02\x73\xec\x1f\x92\x9a\xd1\x2f\x98\xf1\x0b\xac\xcf\xc4\x97\x48\x69\x86\x43\xff\x13\x61\xff\x13\xa9\x1a\x73\xcd\x8c\x5f\xe0\xf1\x95\xc4\xfd\x2b\x85\xfd\xaf\x18\xfb\x15\x13\x3f\xa5\x61\xfe\x92\xc6\xf9\x4d\x9a\xc9\x1f\xcd\xf8\x4f\x33\xfe\xd3\x4c\x7e\x69\x66\x7d\x14\x84\xc7\x2f\x18\xfb\x0b\x55\x31\x1c\xfb\xa7\xd0\x12\x73\x26\x3f\xca\xfc\x9e\xb8\xe0\x78\x7e\x25\xe3\xff\x12\xef\x6f\x54\x16\xcc\xf8\x05\x8e\x5f\x25\x71\x7c\x2a\x62\x38\x63\x7f\xc5\xe4\x77\xc5\xe4\x57\x55\xe0\xf8\x6c\x19\xff\x6f\x99\xfd\x69\xab\xb1\xfd\x5b\x26\xfe\x3b\xc2\xf6\xef\x14\xb6\x7f\xc7\xe4\x2f\x73\xbe\xd1\x8e\xd9\x1f\x76\xcc\xfe\x5d\x4b\xac\x5f\x13\xa3\xcf\xc4\xbf\x66\xfc\x5b\xe3\xfc\x55\x92\xe0\xfc\x95\xc4\xfb\x9f\x92\x78\xfd\x29\x89\xcf\x27\x25\xf1\xf9\xa4\xa4\x86\xf9\xa5\x24\xcc\xef\x74\xc0\xa2\xf5\x95\x38\xb2\x7f\x3a\xc0\x30\x87\xf9\x33\x6d\x90\x90\xa7\x57\x05\xe6\x28\x7f\x49\x2a\xc6\x3e\x05\xfd\x4b\x52\x41\xff\xa6\xeb\x11\xd6\xd7\x30\x7f\x48\x6a\x18\xff\xc4\x39\x7d\x1c\x3f\x0d\xf7\xbf\x74\x3d\xe3\x38\x63\x1f\x33\xff\x42\x62\x7d\x7c\xfe\x92\x2c\xe0\xf9\x9d\xae\x87\x38\x3e\x25\xbc\xff\x92\x2c\xe1\xf9\x4c\xb2\x64\xd6\x0f\x3e\x9f\x48\x56\x70\xff\x4f\x1c\xe7\x67\x05\xf7\x67\x92\x15\xbc\xff\x90\xdc\x4a\x1c\x9f\x2d\x33\xfe\x16\x9e\x7f\x24\x77\xc4\x71\x6c\xff\x0e\xde\x5f\x13\xc7\xfe\xdb\x31\xeb\x63\xc7\xac\x0f\x7c\xbe\x91\xac\x99\xfc\xac\x19\xfb\x6b\x66\x7d\xa3\xf3\x4b\xcb\x1d\xed\xc0\xfe\xa5\xe5\x2e\x3d\x8b\x21\xff\xe3\xcd\xfc\xe4\x1a\xec\xff\x89\x17\x60\x7f\x9d\x39\xb4\x5f\x55\x1c\x67\xec\xdb\x32\xfa\x5b\xfa\x3b\x3f\x12\xdf\x41\xfb\x6b\x49\x60\x7f\x4e\xbc\x60\x78\x09\xee\x5f\x33\xc7\xfa\xe8\xfe\x9b\x38\x67\x3f\xce\x8f\x3a\x8d\x80\x38\xe1\xfc\x49\x1c\xf9\xb7\x4e\x3b\x10\xc3\xe1\xfc\x48\x31\xfd\x6b\xc6\xbe\x02\xcf\x1f\xbe\x8f\x12\xaf\xc0\xfd\x2d\xf1\x2d\x8e\x1f\xed\x18\xfd\x9a\x99\x7f\x8d\xed\x53\x12\xec\xaf\x89\x33\xfe\x55\xe8\xfe\x96\x38\xfa\x7e\x61\xe2\xcc\xf8\x25\xd2\x27\x29\x09\xf9\x67\xfa\xfe\x0d\xcc\x9f\xa4\x44\xdf\x6f\x24\xae\xd1\xfa\x9b\x38\xc8\x0f\x92\xb2\x44\xf3\x9b\x38\x1e\x1f\xee\x5f\x24\x25\xdc\x9f\xa6\x2b\x3a\xc8\xaf\xe9\xfb\x1f\x10\xdf\xc4\x99\xfe\x99\xf9\x53\x81\xed\xa7\x02\xfb\x97\xe0\xfe\x37\xbd\xdf\xa1\x7f\x89\xf1\x1f\xa1\xfb\x8b\x66\xde\xdf\x7a\x7a\x5f\xc2\xfc\x84\xef\x4b\x9d\x9e\x17\x58\x5f\x11\xf6\xbf\x52\xe0\xfe\x3b\x73\xdc\xbf\xc6\xfe\x53\x05\x78\x1f\x25\x0e\xcf\xdf\xc4\x99\xfe\x77\x79\xff\x5f\x7d\xa4\x26\x03\xaa\x49\x51\xa5\x83\x35\x6b\xd8\x82\x67\x1d\xb7\xe4\xb9\x83\x65\xc1\xb3\x17\xc3\x17\xcf\x3b\x7e\xc9\x71\xff\xf9\x85\xb7\xe4\x39\xc7\x2e\x78\x36\x31\x5f\x5c\x67\x1d\xbb\xe4\xd8\xbe\xfc\xc5\x6d\xc1\xb9\xf1\xb3\x0b\xf7\xc5\x8b\x6c\x62\x2c\x39\xf6\x7f\xc9\xc4\x3f\xbf\xf1\x2e\x39\xd3\x3f\x63\x7f\x99\x5d\xd8\x4b\x8e\xe3\x57\x31\xfd\x57\x8c\x7e\xfe\x61\xb4\xe4\x38\x3e\xb5\xc4\xf3\xaf\x99\xfc\xc9\x7f\xb1\xb6\xe4\x38\x7f\x6a\xc6\xfe\xfc\xc5\xe5\xc9\xd3\xd1\xcb\x70\x68\x1f\x49\x6c\x1f\xe5\x37\xe6\x05\x67\xec\x23\xc6\xbe\xfc\xc1\xfc\xe2\xf9\x2f\xa6\x96\x1c\xdb\xc7\xac\x7f\xd2\x8c\x7f\x98\xf5\x4f\x9a\x1b\x1f\xaf\x0f\x62\xd6\x37\x95\x8c\xff\x4a\xc6\xfe\x0a\xe7\x37\x55\x4c\xff\x15\xde\x1f\xa9\xca\x8d\xdf\x9a\x83\xef\xe3\xd8\xda\x28\xe2\x79\x18\xfa\x30\x7e\xfc\xfc\xdc\xb4\xd1\xb2\xbf\x74\xa7\x46\xec\x6f\xdd\xa9\x11\xfb\x6b\xf7\x77\xe7\x7e\x9f\xf5\x15\xdf\x9f\x3f\xba\x1f\x9e\xe8\xe0\x7a\xdc\xd1\xc1\xf5\x17\x17\x70\x9b\xe3\xab\x70\xe7\xa8\x9e\xff\xb6\x9b\x7d\x57\x81\x42\x93\x76\xb3\xbf\xa1\x42\x94\x25\xcf\x95\x38\xb4\x1b\x58\x1e\xb1\xc0\x79\xed\xe8\x15\xd2\x7e\xe2\x9c\xf6\xcf\x85\x8d\xe5\xcf\x85\x8d\xe4\xcf\x85\x8d\x63\xb7\x27\x71\xbd\x5e\xc5\x29\x0a\xf3\x63\x1a\x3f\xd7\x4a\x75\x51\x5d\xdd\x5e\x04\xd7\x9c\x7a\xdf\x88\xa9\xb4\xe2\x5d\xef\xd4\xef\xdb\xce\x89\xa1\x1d\x9c\x30\xa1\xfd\xac\xe5\x5a\x54\x72\x9d\xa2\x1f\x5d\x1c\x57\x45\x3d\x73\xf9\x56\xff\xfd\xdd\x5a\x67\x86\x21\x3e\x6b\xc9\x66\x12\xce\x9d\xcb\xe3\xde\xbb\xe8\xc6\xb1\xf5\x87\xb8\xd9\x7b\x05\x4a\xd1\x96\x2d\xed\xed\x5f\x5b\x36\xfb\xf2\x1f\x5b\x1e\x7f\x50\x9f\x43\x70\xe2\xbb\xef\xc7\x21\xb4\x7e\x1c\x82\x6b\x5a\x3b\x3b\x67\x08\xee\xd2\xba\xeb\x33\x91\x83\x69\x5e\xb3\x5b\x16\xf9\x25\x9d\x90\x46\x30\xcf\xea\xbe\x77\x37\x47\x7b\x74\x27\xb3\x94\x2e\x82\x18\x9d\x3d\x27\x13\x3a\x13\x8f\xa3\xe9\x7e\x5a\x7f\x98\x95\x1e\xe6\x47\xe3\x9b\x7d\x9f\xad\xc5\x7b\xb6\xb9\xb6\x7e\x33\x0c\x8e\x6b\x83\x78\x96\xf9\xcf\xf2\xa1\xbb\xc4\xad\x24\x8b\xf2\xa1\x38\xdc\xbc\x1b\x3f\x2b\x27\x67\xa9\xe9\x3e\x77\xc4\x59\xee\xce\xa1\x1f\xdc\x1f\x1e\x8a\xd7\x97\xe3\xe3\xd8\x07\x67\xcd\x68\xba\xfe\x10\xdc\xe5\x51\x8c\x39\x89\xff\x77\x36\x5d\x3b\x7e\x96\x4e\xc6\x73\xb8\xb8\x9b\xb8\x9a\x31\xf6\xfe\x83\xbd\xca\x2d\xcd\x30\xb8\x5f\xb1\x4f\xde\x4f\x63\xfe\x55\x87\xf9\x92\x9f\xc3\x67\x98\xa7\xf5\x93\xad\x82\x1c\xe3\xb7\x7b\x14\x70\xc6\xa3\x19\xd2\x28\xd9\x75\x7e\x71\x21\xa6\xe9\x1c\x6f\xfb\xd0\x36\xd3\x8e\x73\x74\x61\x9e\xf9\x5c\x92\xb9\xf9\x02\xb9\x7c\x6f\x02\x32\xe6\xde\xe2\x8f\x5c\x78\xab\xfa\x64\x46\xc9\xe9\xdf\x7d\xfc\x0c\x56\xd6\xe7\xd7\xd6\x93\x14\xed\x70\xa9\x32\x60\x9b\x45\xff\x0f\x00\x00\xff\xff\xd4\xa3\xbf\xa6\xf6\x2b\x00\x00")

func dataDnscryptWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10SpyTxt,
		"data/dnscrypt/win10/spy.txt",
	)
}

func dataDnscryptWin10SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/spy.txt", size: 11254, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x03\x21\x0c\x05\xd0\xfd\x1c\x65\x16\xb9\x53\x30\x76\x10\xd4\x1f\x4c\x5a\xf1\xf6\xa5\x54\x4a\x47\x97\x79\xf9\xe4\xe7\x24\x89\x39\xbd\x62\x1b\x24\xa6\x54\x94\x4a\x0a\x0d\x86\x87\x53\x40\xa1\x6a\xec\x81\x6a\xf4\xe3\x2f\xb9\xa6\x8e\x93\x9e\x2a\xec\x71\xe3\x9e\xaa\xa0\xdb\xdc\x4e\xb3\x25\x26\xc9\x34\xf3\x08\xec\x9c\x71\xed\xd7\x05\xbd\x66\xb0\x2c\xfc\x9b\xee\x25\x9f\x5f\xf7\xda\xaf\x4c\x40\xbb\xde\x01\x00\x00\xff\xff\x39\xfa\x05\xb4\xf8\x00\x00\x00")

func dataDnscryptWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin10UpdateTxt,
		"data/dnscrypt/win10/update.txt",
	)
}

func dataDnscryptWin10UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win10/update.txt", size: 248, mode: os.FileMode(438), modTime: time.Unix(1518299017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x0e\x02\x21\x0c\x45\xf7\x1e\xc5\x45\xa3\xe3\x89\xb0\x74\x48\x0d\xb4\x84\x56\xb8\xbe\xc9\xb8\x98\x88\x33\x3b\xfe\xfb\xf4\xa5\xbd\x42\xb1\xd5\x05\x8d\x01\xb5\x5c\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xd5\xbf\x65\x65\x78\xb2\xa4\x2d\xa0\x2e\x07\x5f\xb0\xe5\x89\xc4\x12\xa1\x90\x07\xa3\xd6\x19\x69\x1e\x48\xbb\x31\x41\xe6\x4e\xdb\x33\x6b\x62\xd9\xe3\xcf\x8a\x6d\xb9\xd9\x78\xdd\x1f\xa5\x4d\x2a\xe7\x42\x30\x58\xa2\x0e\xdb\x40\x0f\x99\xe3\xd9\x31\x23\x62\x3d\x40\x21\xfb\x4c\x0d\x55\x1c\x42\xad\x7f\x8a\xb3\x06\x28\x26\xb2\x37\x3b\x81\x90\x7f\x02\x00\x00\xff\xff\x48\xe0\xd8\x7d\x63\x01\x00\x00")

func dataDnscryptWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7ExtraTxt,
		"data/dnscrypt/win7/extra.txt",
	)
}

func dataDnscryptWin7ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/extra.txt", size: 355, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6e\x83\x30\x0c\x86\xdf\x77\x94\x4a\xb5\x4a\x48\x99\x7a\x1c\x2f\x31\x28\x5a\x62\xa3\xc4\x6b\xca\xed\xa7\xb2\x4d\xa2\xc0\x24\x1e\xf3\xf9\xfb\x6d\xc5\x3e\x01\x9e\x53\x21\x3f\x10\x30\xe9\xdb\x09\x94\x22\x25\xd2\x3c\x41\x0a\x2e\x4b\x91\x5e\xc1\x49\x7a\x56\x32\xf6\x7d\x70\x09\x19\x07\xca\xbf\xfa\x5d\xb2\xd2\x03\x3c\x2a\xae\x02\xe8\x23\xd4\xc0\x5e\x6a\x99\xdf\xce\x97\xa6\xb1\x2d\x44\x61\x88\x91\xeb\xdc\xe0\x09\x4d\x77\xdb\x40\x73\xb1\xc6\x42\x74\xd3\x9a\xb6\xd7\x3d\xda\x35\x1b\xda\xb6\xb7\x2d\xb3\xdb\x9e\xf6\xf2\x0e\x7d\xc6\x05\x9b\x0c\x14\x52\x0d\x3c\x94\x9d\x7f\x01\x7e\xa2\xe7\x32\xab\xfe\xe3\x7a\x54\x1d\x48\x0e\xab\xf5\xf1\xb2\xb8\xbf\xd8\xb9\x06\xde\x5b\x74\x19\x27\x26\x35\xbb\x94\xbe\xb2\x8c\xb4\x28\x2d\xe6\x28\x65\xf2\x02\x61\xbc\x77\xab\xec\xcf\x51\xff\x9b\x57\x51\x8b\xf0\x2b\xfc\x0e\x00\x00\xff\xff\xed\x9f\x74\xd7\x47\x02\x00\x00")

func dataDnscryptWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7SpyTxt,
		"data/dnscrypt/win7/spy.txt",
	)
}

func dataDnscryptWin7SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/spy.txt", size: 583, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x82\xc4\x52\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x94\xc2\x79\xa8\x3a\xf2\x52\x4b\xb8\x30\xcd\x80\x88\x40\x05\xf2\x8b\xd2\x01\x01\x00\x00\xff\xff\xce\x69\x60\x84\x7f\x00\x00\x00")

func dataDnscryptWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin7UpdateTxt,
		"data/dnscrypt/win7/update.txt",
	)
}

func dataDnscryptWin7UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win7/update.txt", size: 127, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xd1\x6e\xc2\x30\x0c\x45\xdf\xf7\x29\x48\xb5\x34\xfe\x28\x24\xb7\xc1\x52\x9c\x74\xb6\x69\xe0\xef\x27\x18\x8c\x11\x60\x6f\xad\xcf\xd1\xf5\x8d\x37\x14\x96\x05\xc7\x49\x67\x12\xab\x14\x9b\x7c\x6c\x48\x6c\xf6\x1a\x8d\xaf\xbf\x06\x5d\x39\xc2\x7e\x54\xda\x71\xcd\x37\x22\x41\xdd\xa2\x02\x95\x84\xa3\x36\x6b\xb3\x5f\x99\xa3\x40\xe0\x7a\x7a\x26\x5c\xf0\x9c\xd5\x11\x7c\x0f\x1d\xec\x10\x9d\xd7\xe0\xdc\xea\xb4\x6e\xc9\x8a\x8d\x7c\x6c\x9f\x24\x91\xc0\xc3\x6f\xe9\x47\x3f\xdf\x57\x66\x2a\xbc\xe2\xf2\xc9\x92\xc9\x7c\x47\x36\xdd\x62\x4a\xcb\x5c\xef\xc2\xc3\x45\x2a\x8e\x3e\xfd\x3d\xca\xb8\xe4\xeb\x00\x3d\xd1\xa2\x2d\x51\x14\x23\xf5\x81\x9b\x37\x05\x52\xc6\x9c\x28\xd9\x91\x64\x19\x04\x67\x01\x75\xae\xa9\x75\xbb\x0c\xd6\x50\x38\xfd\x73\x86\x9e\xe2\x98\x71\x1e\x85\x32\xae\xee\x16\x5b\xf5\x57\xa5\xdf\x12\x3a\x37\xb5\x03\x3b\xa8\xc2\xaf\xde\xe7\xfb\x88\xed\x4b\xd4\xfb\xed\x41\x86\xa0\x71\x7f\x9e\x7e\x07\x00\x00\xff\xff\x75\x0a\xb7\x03\x7d\x02\x00\x00")

func dataDnscryptWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81ExtraTxt,
		"data/dnscrypt/win81/extra.txt",
	)
}

func dataDnscryptWin81ExtraTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/extra.txt", size: 637, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x5b\x6a\xec\x30\x0c\x06\xe0\xf7\xb3\x94\x81\x11\xb1\x72\x73\x96\x23\x12\x25\x98\xe3\x4b\xb0\x35\x93\x66\xf7\xa5\x17\x68\x33\x56\x5f\x3f\x09\xff\x12\xd6\x0d\xe8\x1e\x0a\x2f\x1b\x43\x64\xf9\x77\x03\x61\xcf\x81\x25\x9f\x10\xdc\x9c\x53\x49\xab\xc0\x9c\xc2\x47\x25\xd3\xba\xba\x39\x50\xa4\x8d\xf3\x77\xfb\x63\x5f\x48\xb8\xea\x7d\xa6\x2c\xfc\x06\x0b\x09\x55\xb5\xa3\xbc\xd0\x65\x82\x79\x29\x06\xd1\x82\x4f\x11\xbc\x8f\xc7\x0f\x76\x9d\x82\x43\xaf\xe0\xd8\x2a\x68\xb5\x4e\x3b\x56\x88\x4d\xd7\x74\xe0\xe7\xf3\x55\x7b\xd4\xd4\x2a\x6a\x10\xa7\xfa\x5d\x83\xfd\xa0\xe9\x58\x2f\x8b\x06\xad\xd1\x74\xaa\x37\x6b\x4d\x53\x4d\xd0\xb6\x53\x65\xd6\xd4\x39\xb6\xc5\xab\x15\x16\x71\x71\x2b\xf7\xc3\x45\xed\xf7\xca\x7e\x46\x16\x54\x95\xbc\xa8\xce\x8f\x9c\xf6\xdf\x27\x42\xff\x69\x89\xe5\x33\xef\xeb\x4e\xfe\x4a\x3b\x5c\xb4\xe0\xf6\xe7\x70\xf5\xf7\x00\x00\x00\xff\xff\x03\x05\x93\xb3\xb4\x02\x00\x00")

func dataDnscryptWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81SpyTxt,
		"data/dnscrypt/win81/spy.txt",
	)
}

func dataDnscryptWin81SpyTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/spy.txt", size: 692, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataDnscryptWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xe5\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\xca\x42\xc5\x8a\xd1\x94\xa5\xa5\x1a\xe9\x95\x17\xa2\x09\xc2\x79\xa8\x46\xe4\xa5\x96\x70\x61\x1a\x0a\x11\x81\x0a\xe4\x17\xa5\x03\x02\x00\x00\xff\xff\x1b\x44\xac\xc4\x90\x00\x00\x00")

func dataDnscryptWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataDnscryptWin81UpdateTxt,
		"data/dnscrypt/win81/update.txt",
	)
}

func dataDnscryptWin81UpdateTxt() (*asset, error) {
	bytes, err := dataDnscryptWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/dnscrypt/win81/update.txt", size: 144, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd3\xbd\x72\x1b\x3b\x0c\x05\xe0\x7e\x9f\x62\x67\xdc\xdc\x5b\xe8\x08\x07\x04\xf8\xe3\x32\x7d\xaa\x14\xa9\x15\x47\x8e\x35\xb1\x2d\x8f\xac\x8c\xed\x3c\x7d\x06\x5c\xef\x6a\xd5\xe1\x13\x08\x12\xe4\x42\x37\x37\x37\xe3\xfd\xe1\xb4\x7f\xdb\x3d\x3e\x8e\x6f\x87\x67\xca\xb8\x7f\x3f\x9f\x76\xe3\x7f\x94\xad\xe8\x56\x85\x75\x54\xbd\x35\xff\x7f\x88\xb5\x5f\x8f\xa7\xfd\x78\x78\xbe\x3f\xde\x8e\x0f\xe7\xf3\xcb\xeb\xed\x76\xfb\xeb\x70\x7e\xf8\xf3\x03\x77\xc7\xa7\xed\xdd\x69\xf7\xf7\x63\xf3\xb4\x7b\xdf\x7e\x3f\x3c\xff\x3c\xbe\xbd\x7e\x7b\xf9\xf8\xf2\x78\xbc\xfb\xbd\x3f\x0d\x03\x13\x4a\x85\x26\x87\x5a\xe9\x6a\xd0\xd4\x90\x5b\xa0\x0a\xa8\x70\x8b\x98\x52\x90\x40\xad\x33\x22\xbf\x40\x09\x15\x19\x34\xa1\x15\xb0\x54\xb0\xa4\xc1\x04\xa5\x40\xd5\x50\x57\x31\xb9\x20\x4e\xbd\xa4\x32\x64\x73\x89\xd5\x3d\x32\x35\xce\x2c\xf0\x5e\xd4\x04\x4c\x19\xeb\x58\x25\x40\x21\x2c\xc7\xc1\x5d\x34\xa8\x11\x34\x4e\xac\xa0\x24\x94\x8e\xe8\x34\x9a\xf6\x36\xb1\x80\xa6\x28\x79\xf0\x28\x10\x64\x47\xb5\x19\x3d\xdd\xca\x44\x22\xda\xd2\x36\xb8\x82\xd9\xc0\x46\xb8\x4f\xca\x20\x05\xd9\x16\x69\x5c\x64\x52\x43\x21\xe8\xd2\x15\x4f\x93\x09\xe3\x45\x09\xb5\xef\xa2\x29\x56\x7f\x96\x05\x72\xeb\x65\xd9\x60\x70\x83\x6c\xe6\x28\xde\x26\x3b\x62\x07\x89\xfb\xad\xd0\xd2\x82\x1a\x15\x4b\x3c\xd7\xf8\xa4\xf4\x09\x75\x85\xa5\x81\x62\x30\x81\x52\x90\xf4\x22\x22\xf9\x24\xeb\xc3\x50\x74\x51\x85\xda\x1a\x75\x05\xca\xb4\xa3\xd2\xa6\xcf\xc9\x4f\x3a\x68\xb9\x4f\x0a\x13\xa1\x9e\x90\x0c\x9a\x2e\xcc\x84\x6c\x56\x88\xae\x99\x0c\x2c\x02\x56\x47\x91\x81\x5e\xfa\x2d\xe2\xd7\x94\xaf\x59\xaf\x68\xab\xc5\x3e\x8d\x6e\xae\xc8\x09\xac\x28\x6d\x88\xef\x17\xb3\xde\xc7\xa1\x95\x41\xc5\x62\xfc\xd9\x0a\x64\xb3\x42\xf4\x10\x64\xbc\x64\x4c\x81\xd9\xa0\x52\x62\xe0\x22\xa9\x33\x62\x08\xb5\x2d\xf2\x18\x32\x5f\xd8\xa2\xa1\xb5\xf4\x2a\x97\xd2\x5a\x26\xb3\x34\xfe\x52\x53\x5d\xae\x7d\xb4\xd4\xed\x5f\x00\x00\x00\xff\xff\x22\x40\xd5\xf3\x21\x04\x00\x00")

func dataFirewallWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10ExtraTxt,
		"data/firewall/win10/extra.txt",
	)
}

func dataFirewallWin10ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/extra.txt", size: 1057, mode: os.FileMode(438), modTime: time.Unix(1518299142, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x96\xbb\x8e\x5c\x37\x0c\x86\xfb\x79\x8a\x01\xdc\x24\xc5\xfe\x2b\x52\xd4\xcd\x65\xfa\x54\x29\x52\x3b\x8e\x1d\x2f\x62\x7b\x8d\xb5\x03\xc7\x79\xfa\xe0\xa7\xae\xa7\x98\x01\x3f\x90\x92\x28\x8a\x97\xf3\xea\xd5\xab\xfb\xfb\xa7\x97\x77\xdf\xdf\x7c\xfc\x78\xff\xfe\xf4\x59\xc2\xfd\xeb\x97\x1f\xf7\x9f\x24\x3c\x06\x7d\xd4\x20\xf5\xae\xfa\xda\xd2\xcf\x37\x5a\xfe\xfa\xfc\xf2\xee\xfe\xf4\xf9\xfd\xf3\xeb\xfb\x87\x6f\xdf\xbe\x7c\x7d\xfd\xf8\xf8\xd7\xd3\xb7\x0f\xff\xfc\x81\xb7\xcf\x9f\x1e\xdf\xbe\xbc\xf9\xef\xc7\xc3\xa7\x37\xff\x3e\xfe\xfe\xf4\xf9\xcf\xe7\xef\x5f\x7f\xfb\xf2\xe3\x97\x8f\xcf\x6f\xff\x7e\xf7\x72\xbb\x49\x44\xae\xa8\x8a\x3a\xc5\x0a\xd1\x46\x28\x19\x2a\x15\x22\x65\x51\x83\x34\x39\x48\x25\x38\x55\x48\x29\x10\xb3\x45\xb4\x6c\x93\x6a\x40\x0a\x07\xb4\x0d\x06\xa9\x79\x51\x86\xa6\xb5\x47\x2d\x48\xee\x55\x15\x24\xa4\x38\xc5\x06\x35\x25\x48\x28\x48\xa8\xe1\x90\xeb\x94\xd7\x4e\x04\x53\x27\x8d\x68\x05\x59\x20\xb1\x0c\xd0\xd0\xd0\x3a\x34\x48\x80\xc8\x92\x1b\xcc\x0e\xc8\x0b\x24\xf3\x37\x49\x05\x1a\x7c\x07\x09\x0a\x83\xa6\x38\x41\x05\x36\x65\x49\x09\x62\xa1\x63\x84\x54\x85\x68\xbe\x59\x60\xcc\x55\x69\xac\x4e\x0d\x16\x20\xa9\x0c\x50\xc9\x28\xf1\x00\x3e\xce\x26\x4d\xb2\xa8\x22\xeb\x02\xc6\x7f\xed\xa1\x01\x96\x17\x08\x34\xae\x3d\x54\x79\xbb\x45\x11\xd2\x2a\xa9\x04\x5f\xa6\xd6\x29\x43\x20\x25\x4f\x59\x61\x5b\x94\x7e\x6c\x29\x50\xad\xb0\x72\x40\x3d\xa1\x2d\xb3\xc8\x43\xdd\xf1\xca\x50\x34\x98\x7b\x20\x7c\x60\x68\x4a\x13\x24\xa0\xd4\x05\x82\x16\x17\x18\x24\xad\x45\xaa\xe3\x58\xdf\xc1\x98\x2b\x0e\x06\x31\xbf\x7e\xc7\x04\xe1\x9b\xba\xec\xd9\x0a\xb5\xb0\x30\x09\x7a\x68\xf9\xa4\x54\x4a\xd5\x5b\xf2\xf0\xd0\xab\x70\xc8\x32\x65\xde\xbe\x1e\xb0\xad\x4a\x46\x5c\x66\xb5\x22\xda\x09\xe9\x84\xbc\x37\x08\x90\x72\xa1\xb6\xc9\x2e\x47\xd9\xd4\xc5\x0a\x31\x8f\xf4\x49\x17\x1d\x23\x95\x78\x27\x41\x54\xa4\xee\x16\xcb\x20\x41\xad\x9f\x9e\x3d\x16\x88\xf1\xa4\xd4\x36\x31\xcb\xd3\xc2\xe4\x81\x74\x2a\x9e\x43\x23\x54\x83\xc4\xca\xc6\x08\x19\xf7\x65\xa6\x1b\xa4\x8c\x95\x8d\x6d\x47\x46\x94\x48\x11\x71\xc9\x2c\xda\x09\xa2\x11\x56\x17\x55\x9a\x3a\x95\x9e\x40\xdd\xcd\x62\xcc\x83\x79\x21\x36\x10\x2b\xfe\xc0\x13\xf9\xc0\xa2\x0b\xf9\xdb\xb6\x8d\x5e\x1f\x18\xbd\xc6\x07\xf2\x12\xda\x8f\xe4\x79\xcc\xab\x32\x90\x79\xc8\x5b\xe4\x8d\x09\x1a\x06\x16\xe4\xc0\x0e\x44\xd2\x48\x57\xd9\xbc\x5a\xc7\xec\x7d\x29\x6e\x8a\xd0\xa0\xb7\x6c\x30\x64\x48\x08\x5d\xd4\x88\xf0\x30\x25\x16\x47\x4e\xe0\x8a\x0c\xad\x43\x96\x10\x68\xb3\xe4\x6d\xc5\x67\xce\x36\x97\xb0\x63\x87\xe2\x94\xa0\x0d\x1a\xeb\x80\xc8\x26\x37\x64\x33\xe6\xc8\x96\x6d\xcb\x12\xea\x09\x6d\x00\x83\xa2\x73\x79\xaf\xd5\x13\xf4\x84\x38\x21\xfa\x50\x18\x50\x32\x87\xc2\x70\xac\xdf\x78\xc9\xf3\x36\x09\x9a\x74\x6b\x78\x21\x6a\xd8\x8d\x9b\x3f\x36\x73\x49\x82\xc1\x93\xb5\xb0\x6d\x3a\xf1\xd0\x82\x9c\x37\xb1\x41\x2e\x32\x76\xba\x65\xca\x46\x95\x2e\xc4\x37\x99\x18\x0b\x53\xb0\x23\xef\x03\x69\x69\x91\x0f\xc1\x49\xca\x24\x91\xb1\x92\xdd\x53\x45\x26\xc4\xca\x37\x19\x90\xd8\x70\xfa\x26\x2a\x01\x86\xb1\x87\x43\x60\x5d\x4f\x52\x36\x18\x8b\x83\x0d\x91\xe5\x6b\x37\x11\xe9\x4d\x9d\x93\xe3\x24\xf7\x66\x23\x07\xd3\x05\xf7\xd2\x6c\x08\x0f\x07\x30\xae\x12\x85\x4b\x90\xdd\x85\x05\x12\xe2\x22\xf1\x65\x1b\xce\x65\x6c\x26\x5c\x67\x5e\xa5\x31\xf4\x30\x1e\xc8\x17\x18\xc8\x3c\x4d\x1b\x25\x64\xdf\x77\x53\xdf\x78\x32\xab\xfa\x82\x56\x2f\xd8\xf2\x81\xf5\x6a\x5c\xaf\xc6\x15\x45\xaf\xc6\xa7\xb5\xc8\xe9\x07\xc3\x73\xfa\xe1\xd3\xf1\x82\xe7\xd6\x1a\x2e\x5b\x6b\xb8\xb8\x55\x2a\xbf\x3a\x36\xb6\x1e\xe4\x81\xb5\xfa\xdc\x9d\xac\x31\xb1\x53\x31\x89\xf9\xed\x51\xa5\x9f\x5b\x7c\x6c\x4d\x65\x2a\x2c\x0a\xaf\x8f\x2d\xbb\xbf\x83\xf2\xa1\xc9\xa7\x86\xf3\x64\xa9\x08\xa7\x4e\x7b\xa9\x0c\x8a\xe1\xb0\x8c\xe1\xb4\xa4\x1f\x4b\x47\xb8\xe8\xf2\xa9\x3b\x4e\xcf\xe0\xff\x94\xd9\xc1\xf9\x9d\xd8\xa9\x89\x97\x42\x07\x66\x81\x54\xbb\x62\xba\x62\x5b\xc8\x4f\x02\xd9\x6b\x55\x70\x28\xd5\x3c\xd8\x83\xf8\x7d\xc0\x33\x73\xe5\x87\x21\xc7\x93\xc9\x24\x31\xba\xba\x89\x25\xb5\xa8\x28\xca\xb0\xec\x9d\x5e\x62\xa7\xe8\x2d\x38\xcb\xa6\xca\xde\x7f\x93\x26\x7e\x79\x0e\x08\x7e\xb3\x3a\xf2\x0b\xb4\xfa\x97\xe0\x62\xa9\x3e\x14\x3a\x37\x24\x43\xd2\x9b\xb4\xe4\xe3\x5c\x93\x87\xf9\x20\xc6\x92\xdd\xce\x72\xef\x7b\x3a\x89\xe9\x33\x95\x99\xb3\xae\x7f\x12\xab\xf4\x31\xc4\xa4\x0b\x0f\x27\x69\x4a\xff\x07\x00\x00\xff\xff\x15\xc7\xf5\xc0\x77\x0c\x00\x00")

func dataFirewallWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10SpyTxt,
		"data/firewall/win10/spy.txt",
	)
}

func dataFirewallWin10SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/spy.txt", size: 3191, mode: os.FileMode(438), modTime: time.Unix(1518299147, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xbd\x72\xdb\x30\x0c\x07\xf0\x9d\x4f\xa1\x3b\x2f\xed\x60\x88\xf8\x20\x09\x7a\xec\xde\xa9\x43\x67\xd7\x71\x1a\x5d\x1d\xcb\xa7\x28\xe7\xa6\x4f\xdf\x83\xd4\x44\x44\xb7\xff\xef\x08\xda\x04\x48\xed\x76\xbb\xee\x71\x98\xce\xf7\xe3\xe5\xd2\xdd\x87\x2b\xc6\xee\xf5\xf6\x70\x9c\xcf\xdd\x27\x8c\x7d\xa4\x9e\x22\x6a\x47\x74\x90\xf4\x39\x58\xf1\xd7\x71\x3a\x77\xc3\xf5\x71\x3c\x74\x4f\xf3\x7c\x7b\x39\xf4\xfd\xcf\x61\x7e\x7a\xfd\x01\xa7\xf1\xb9\x3f\x4d\xc7\x3f\x6f\xfb\xe7\xe3\xef\xfe\xfb\x70\x7d\x18\xef\x2f\xdf\x6e\x6f\x5f\x2e\xe3\xe9\xd7\x79\x0a\x01\x19\xb2\x82\x16\x90\xb2\x65\x2c\xc9\x50\x04\xb0\x54\x40\x5c\x96\x8a\x02\x71\x04\x64\x31\x61\x2c\x20\x90\x62\x93\x29\x90\x65\x06\xd4\x0a\x48\xd9\x31\x15\x4f\x0d\x12\xa1\x14\x20\xaa\x10\xf7\x5b\xa6\x94\x42\xa2\x25\x62\x41\xa0\x48\x21\x27\x48\x09\x90\x15\xe2\x7e\xcb\x56\xf8\x4f\x99\xb7\x95\xcc\xeb\x4a\x06\xc4\x0a\x28\xb2\xfc\xb5\xa3\x3a\x6a\x75\xac\xd6\x11\x02\x25\x06\xe6\xb5\x3f\x9b\x42\x84\x84\x80\x5a\x3c\xd5\xb1\xba\x62\x92\xec\x59\x3c\x9b\xbd\x0c\x54\x5b\x71\xf3\x43\xd6\x74\x03\xeb\xed\x9d\x88\xd6\xb2\x67\x76\xcc\xd1\x93\x36\xe6\xe4\xce\xb0\xba\x7a\x27\xfc\xcf\x1c\x30\x95\xf5\x02\x18\x28\xca\x3b\x49\x22\x68\x6d\x45\x14\x57\x66\xbb\x58\x64\x75\xaa\xad\xc4\x55\x0a\x3a\xb9\x7d\xf2\xb1\xaf\x66\x48\xd2\x42\x1b\x20\x71\xc0\x8a\x40\x4c\xa0\x36\x50\x27\x6d\x65\x03\x6a\x44\x1f\x42\xb6\x67\xd9\x6a\x99\xfc\x62\x81\x42\x80\xca\x9e\xd9\x53\x1d\x6b\x0c\x64\x1f\x89\x3d\x34\xb1\x33\x34\xca\xf8\x37\x00\x00\xff\xff\xa2\x21\x3c\x16\xf0\x03\x00\x00")

func dataFirewallWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin10UpdateTxt,
		"data/firewall/win10/update.txt",
	)
}

func dataFirewallWin10UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win10/update.txt", size: 1008, mode: os.FileMode(438), modTime: time.Unix(1518299151, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xb1\x4e\xc3\x30\x14\x85\xe1\xdd\x4f\x61\x29\x0b\x0c\x1c\xfb\xd8\xf7\xda\x4e\x46\x76\x26\x06\xe6\x10\x52\x1a\x91\x26\x55\x1a\x94\x96\xa7\x47\x41\x48\xb0\xfd\x9f\xf4\x57\x55\x65\x0f\xc3\xd2\x6f\xed\x38\xda\x6d\x98\xb2\xed\xaf\xeb\xd2\xda\xbb\x20\xce\xd3\x05\xcf\x62\x99\x1b\xa9\xef\xcd\xbe\x3e\xcd\x4b\x6f\x87\xe9\x30\x37\xf6\xb8\xae\xe7\x4b\xe3\xdc\xfb\xb0\x1e\x3f\x5f\xd1\xcd\x27\xd7\x2d\xed\xd7\xed\xe1\xd4\x5e\xdd\xcb\x30\xbd\xcd\xdb\xe5\xf9\x7c\x7b\x1c\xe7\xee\xa3\x5f\x8c\x61\x44\xf1\x60\x80\x8a\x11\x0f\xb2\x80\x3e\x22\x1b\x25\x28\x1e\x49\x51\xc4\x68\x00\x53\x02\x83\x47\xce\x3f\xca\x05\x4c\x84\xf0\x4f\x11\x45\x77\x85\xb8\xdf\xfb\x98\x04\x02\x15\x04\x8d\xff\x5a\x4c\x52\x68\x40\x5d\x10\x22\x7f\x41\x5f\x40\x15\x13\x7c\x86\x24\xb0\x16\x50\xbe\x03\x00\x00\xff\xff\x93\x73\x63\x74\x07\x01\x00\x00")

func dataFirewallWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7ExtraTxt,
		"data/firewall/win7/extra.txt",
	)
}

func dataFirewallWin7ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/extra.txt", size: 263, mode: os.FileMode(438), modTime: time.Unix(1516812602, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd1\x3f\x8f\xda\x40\x10\x05\xf0\x7e\x3f\x85\x25\x9a\xa4\xb8\xe7\x7d\xb3\x33\xfb\x87\x32\x7d\xaa\x14\xa9\x09\xe1\x72\x56\x38\x8c\x0c\x11\x21\x9f\x3e\xda\x05\x8c\x75\x85\xa5\xf9\xc9\x3b\x33\xda\x7d\xab\xd5\xaa\x7b\x1d\xa6\xdd\x65\xb3\xdf\x77\x97\xe1\x90\xba\xd3\xf1\xda\x7d\x12\xed\xc9\x5e\x3c\x53\xc7\xb0\xd6\xf0\xd9\xd5\x83\x5f\xc7\x69\xd7\x0d\x87\xd7\x71\xdd\xbd\x9d\xcf\xc7\xd3\xba\xef\x7f\x0d\xe7\xb7\x3f\x3f\xb0\x1d\xdf\xfb\xed\xb4\xf9\x77\x7d\x79\xdf\xfc\xed\xbf\x0f\x87\x9f\xe3\xe5\xf4\xed\x78\xfd\xb2\x1f\xb7\xbf\x77\x93\x73\x0c\x48\x19\xcc\x19\xd4\xd4\x54\x20\xa1\x20\x96\x8a\x4c\x18\x2c\x3c\xca\x02\x51\x71\xea\x91\x3c\x44\x08\xd1\xd2\x94\x20\x12\x3f\xca\x7c\x15\x99\x41\x1f\xc1\xe0\x9d\x11\x54\x22\x08\x8c\xce\x04\x0c\x75\x6b\x46\x2e\x4b\xd1\x6e\x8c\x0a\x51\x8f\xa5\x08\xf1\x36\xd3\x08\xd5\xa6\x94\x51\x9b\xef\x53\x53\xbb\x4b\x6d\x9e\x69\x84\x50\x66\xd6\x2f\xce\x2a\x01\x7c\x52\x24\x40\x42\x53\x4e\x88\x1e\xf4\xc9\x45\x85\x42\x02\xfc\xcb\xa3\x12\x33\x17\x0d\x66\x50\x05\x7d\x5e\xa2\xdc\x41\x06\x50\x96\x08\x77\x88\x09\x12\x17\x28\xcb\x3f\x2c\xde\xd1\x2b\xb4\x76\x24\xc4\xf8\x54\x81\xf0\x21\x91\xdc\xb2\x79\x4a\xbc\xcc\x0c\x09\xac\x21\x92\xb7\xa8\x4a\xdd\xbe\x90\xb4\x58\x15\x4c\x1e\xa1\xc5\xe9\xea\x32\x32\x41\x82\xd5\xf7\x61\x61\x1b\x23\x3e\x83\x12\xff\x07\x00\x00\xff\xff\x6a\xa6\x2a\x59\x92\x02\x00\x00")

func dataFirewallWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7SpyTxt,
		"data/firewall/win7/spy.txt",
	)
}

func dataFirewallWin7SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/spy.txt", size: 658, mode: os.FileMode(438), modTime: time.Unix(1511528584, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x3f\x8f\xda\x40\x10\x05\xf0\x7e\x3f\x85\x25\x9a\xa4\xe0\x79\x67\x66\x67\xff\x50\xa6\x4f\x95\x22\xb5\x03\x26\x58\x07\x18\x19\x23\x8e\xfb\xf4\x27\x1f\x27\xf0\x50\xfe\xf4\x56\xef\x49\xab\x59\x2c\x16\xd5\xb6\x1b\xda\x6b\xb3\xdf\x57\xd7\xee\x98\xaa\xcb\x69\xd3\x8c\x6d\xf5\x83\x43\x4d\x54\xb3\xa7\x54\x91\xac\x82\xfc\x74\xd3\xdb\xdf\xfd\xd0\x56\xdd\x71\xdb\xaf\xaa\xdd\x38\x9e\xce\xab\xba\xfe\xdf\x8d\xbb\xcb\x3f\xac\xfb\x43\xbd\x1e\x9a\x8f\xdb\xf2\xd0\xbc\xd7\x7f\xbb\xe3\xa6\xbf\x9e\xff\x9c\x6e\xbf\xf6\xfd\xfa\xad\x1d\x9c\x23\x01\xf9\x84\x00\xf5\x2e\x78\xa4\x04\xe6\x02\x15\xc7\x53\x20\xa0\x5c\x40\xac\x96\xd1\x50\x93\x65\x76\x51\xa1\x0a\x92\x0c\x22\x36\x0a\x73\x71\x9c\x2b\x3f\x14\x05\xcc\x64\xc4\x2e\x46\x10\x15\x50\x08\x5f\x8b\x86\xd9\x30\x17\xc3\xe2\x1d\x49\x00\x25\x0f\xa5\x57\x72\x88\x96\xc9\x32\x3f\x29\xe0\x32\x97\xcc\x8a\x32\xfc\x72\x06\x56\x7d\x64\x44\x8a\xc8\x4f\x46\x35\xb5\x77\x17\x6b\xa5\x17\x8b\x23\x4d\xd0\x88\x12\x41\x2c\x8e\x0a\x81\x85\x91\xa7\xb9\xb9\xa2\x37\xe2\x87\x48\xca\xbd\xc7\x38\x7c\x3b\x20\x31\x28\x8b\x65\xb4\xcc\x86\xc5\x3b\x9e\x0e\x67\xfa\xe9\x00\xcd\x9f\x01\x00\x00\xff\xff\x60\xb9\xd8\x6b\xb4\x02\x00\x00")

func dataFirewallWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin7UpdateTxt,
		"data/firewall/win7/update.txt",
	)
}

func dataFirewallWin7UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win7/update.txt", size: 692, mode: os.FileMode(438), modTime: time.Unix(1511528588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcf\xb1\x6e\xe3\x30\x10\x04\xd0\x9e\x5f\x21\xc0\xcd\x5d\xe1\xd1\x0e\xb9\x4b\x52\x2e\xaf\xbf\x2a\x45\x6a\xc5\x91\x63\x21\xb6\x65\xc8\x0a\x6c\xe7\xeb\x03\x06\x49\xa4\x74\xfb\xc0\x19\x02\xb3\x5a\xad\xaa\x5d\x3f\x76\xd7\xf6\x70\xa8\xae\xfd\x29\xb3\xea\x6e\xd3\xd8\x56\x7f\xbc\xd6\xc2\xda\x0b\x73\xc5\xb4\xd1\xe6\xaf\x2b\xd9\xff\xc3\xd8\x55\xfd\x69\x37\x6c\xaa\xfd\x34\x9d\x2f\x9b\xba\x7e\xe9\xa7\xfd\xdb\x13\xb6\xc3\xb1\xde\x8e\xed\xfb\x7d\x7d\x6c\x6f\xf5\x63\x7f\x7a\x1e\xae\x97\x87\xf3\xfd\xdf\x61\xd8\xbe\x76\xa3\x73\x0c\xc8\x02\x7a\x98\x3a\x15\x90\x19\x94\x80\x34\x23\x82\x41\x9c\x11\x54\x41\x34\x64\xfd\x06\x7d\x02\x9b\xe4\xcc\x83\x31\x82\x14\x44\xfd\x91\x17\xa4\xaf\xb7\x06\x89\xa0\xc9\xa7\x52\x06\x23\xa1\x9c\x15\x90\xad\xc8\x87\x92\x2e\xb5\xa8\x50\x98\xc2\xfb\xf9\xb4\xb0\xb8\xd5\x45\x43\xf9\x40\x32\x7c\xb3\x80\x2d\x41\x0b\x8e\x81\xa5\x8b\x48\xc8\x7a\x01\x6f\xe6\x68\x09\x66\x60\xd0\x32\x68\xa6\x81\x3e\xff\x62\x10\xe7\x45\x91\x9a\xb2\x18\x5e\x0a\x13\x34\x82\x4d\xe9\x7e\x04\x00\x00\xff\xff\x69\x67\x2b\x43\xb2\x01\x00\x00")

func dataFirewallWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81ExtraTxt,
		"data/firewall/win81/extra.txt",
	)
}

func dataFirewallWin81ExtraTxt() (*asset, error) {
	bytes, err := dataFirewallWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/extra.txt", size: 434, mode: os.FileMode(438), modTime: time.Unix(1516812612, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\xb1\x92\xda\x40\x0c\x06\xe0\xde\x4f\xe1\x19\x9a\xa4\xb8\xdf\xfb\x6b\xa5\xdd\x15\x65\xfa\x54\x29\x52\x13\xc2\xe5\x98\x70\xc0\x00\x19\x42\x9e\x3e\xb3\x7b\x06\x9b\x82\x19\x7d\x48\xd6\xca\x2b\x2f\x16\x8b\xfe\x75\x7b\xda\x5c\x57\xbb\x5d\x7f\xdd\xee\x0b\xfb\xf3\xf1\xd6\x7f\x12\x1d\x02\x07\x09\x2c\x3d\xf3\x52\xfd\x73\x57\x2b\xbf\x1e\x4e\x9b\x7e\xbb\x7f\x3d\x2c\xfb\xb7\xcb\xe5\x78\x5e\x0e\xc3\xaf\xed\xe5\xed\xcf\x0f\xac\x0f\xef\xc3\xfa\xb4\xfa\x77\x7b\x79\x5f\xfd\x1d\xbe\x6f\xf7\x3f\x0f\xd7\xf3\xb7\xe3\xed\xcb\xee\xb0\xfe\xbd\x39\x75\x1d\x23\x72\x81\xc4\x00\x46\x6d\x72\x48\x74\x24\xaf\x28\x84\xc1\xe2\x3d\x74\x88\x4a\x27\x11\x5e\xa0\x0e\x6a\x8b\xbd\xc5\xc2\x4e\x03\x72\x86\x48\x82\xa8\xcf\x65\xe1\xa1\x02\x97\xce\x04\x8c\x05\xd4\x82\x92\x9f\xe4\x73\xd1\xbc\x33\x82\x4a\x44\x81\xb1\xe5\x92\x42\x22\x21\xf6\x90\x06\x98\x4f\x22\x24\x4c\x49\x23\x54\x9b\x72\x6d\x9a\x6b\xf9\x83\x46\x08\xe5\xc1\xfa\x4b\x0f\x79\x04\x27\x8a\x44\x48\x6c\x2a\x35\xa1\x60\x1e\x99\x91\x02\x18\xda\x8b\x48\x8c\xa0\x7b\xbb\x80\xa4\xa8\xb3\x22\xbc\xdc\x23\x31\x1b\xff\xcd\xb0\xd0\x25\x83\x19\x54\xc1\x50\x46\x90\xb5\xf9\x1c\x32\x47\x1c\x21\x26\xd0\x39\x7c\x0e\x7a\x98\x49\x82\x74\x0c\x0a\xad\xcf\x67\xa4\x34\xc9\x21\xbc\x4b\x62\x06\xeb\xd6\x47\x4a\x69\x8b\x9f\xd4\xfa\x90\x10\x21\xc4\x21\x56\x3f\x97\x7a\x0d\x01\x31\x7c\x64\xe7\x8c\xcf\x7c\x2e\xae\xc7\xd6\xf3\x98\xda\x14\xa4\x8e\xce\x90\x68\x75\x0b\xb4\x0c\x4b\xa0\x2b\xb2\x3c\x29\x3e\x49\x3b\x3a\xdb\xf0\x12\x0a\x28\x69\xb4\xc3\x02\x58\xe6\xca\x79\x92\x80\x21\x4c\x54\x98\xfc\x0f\x00\x00\xff\xff\x0f\x1c\xa1\x0d\x73\x03\x00\x00")

func dataFirewallWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81SpyTxt,
		"data/firewall/win81/spy.txt",
	)
}

func dataFirewallWin81SpyTxt() (*asset, error) {
	bytes, err := dataFirewallWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/spy.txt", size: 883, mode: os.FileMode(438), modTime: time.Unix(1516812615, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFirewallWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xb1\x72\x1a\x4d\x0c\x07\xf0\x7e\x9f\xe2\x66\x68\xbe\xaf\x40\xb7\x7f\xad\x76\x57\x4b\x99\x3e\x55\x8a\xd4\x04\xe3\xf8\x26\x98\x63\x30\x1e\xe2\x3c\x7d\x46\x10\x60\xe5\x8e\xdf\x48\x42\x3a\x9d\x6e\xb1\x58\x0c\xcf\xd3\x71\x7b\x5e\xef\x76\xc3\x79\xda\x2b\x86\xf7\xc3\xd3\xfa\xb4\x1d\xfe\x63\x19\xc1\x23\x47\xd4\x21\xea\x4a\xca\xff\xc1\x92\xbf\xce\xc7\xed\x30\xed\x9f\xe7\xd5\xf0\x72\x3a\x1d\xde\x56\xe3\xf8\x73\x3a\xbd\xbc\xff\xa0\xcd\xfc\x3a\x6e\x8e\xeb\x3f\x1f\xcb\xd7\xf5\xef\xf1\xfb\xb4\x7f\x9a\xcf\x6f\xdf\x0e\x1f\x5f\x76\xf3\xe6\xd7\xf6\x18\x02\x12\x15\x25\xad\x84\x9a\x0d\x55\x08\xb5\x11\x50\x2f\x52\x82\x0a\x89\x18\x10\x2b\x09\xe5\x18\x24\x52\xad\xc4\xdc\x28\xa7\xc0\x16\x48\x04\x6d\x04\xce\x9e\xc5\x31\x57\x4f\x0d\x99\x09\x9a\x48\xac\x7b\xb9\x09\x50\x42\x85\xd1\x5a\xa0\x82\x38\x72\x28\x99\x72\x26\x24\xa5\xb8\x7c\xfc\xe6\x9c\x6f\x91\x92\x1e\x91\x92\xba\x08\x0b\x13\x67\x09\xa5\x10\xd0\x08\x22\x97\x59\x1c\xd5\x51\x9b\x63\x8b\x01\x09\xc4\x39\x11\x2c\x39\x05\x24\x5b\x53\xa4\x0c\x8a\xcb\x0e\xd6\xf4\xce\x44\xdc\x7a\xa5\xf8\x90\xf6\x75\xea\xea\x00\x9b\xda\xb3\x38\x96\xe8\xc9\x0f\x16\x7b\x5c\xfd\xe4\xe6\x9d\xf1\xc9\x29\x20\xd7\xeb\x46\x13\x71\x94\x1b\x59\x22\x69\xeb\x65\xaf\xb4\x23\x73\xbc\xb2\xd8\x41\x20\xa9\x53\xeb\x25\x2e\x53\xe0\xe4\xea\xe4\x5e\xd7\x0a\x65\xe9\xa1\x1d\xc0\xa9\x57\xae\x01\x0d\xc4\x89\x49\x6d\xdb\x4e\xda\xcb\xb6\xd7\x89\xef\x42\x6a\x04\xf5\xe6\xee\x9f\xae\x96\x7f\x16\xaa\x97\x7b\xf5\x2c\x9e\x1a\xd8\x3e\x1a\xbb\x25\xb1\x31\x3a\x15\xfc\x0d\x00\x00\xff\xff\x8c\x67\x49\x3e\xe7\x03\x00\x00")

func dataFirewallWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataFirewallWin81UpdateTxt,
		"data/firewall/win81/update.txt",
	)
}

func dataFirewallWin81UpdateTxt() (*asset, error) {
	bytes, err := dataFirewallWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/firewall/win81/update.txt", size: 999, mode: os.FileMode(438), modTime: time.Unix(1514101613, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xbd\x72\xf4\x36\x0c\xec\xfd\x14\x9a\x71\x93\x14\xc2\xfd\xd8\x71\x1c\x97\xe9\x33\x29\x52\xa4\xe6\x91\x90\x84\x39\x11\x60\x08\xc8\xba\xf3\xd3\x67\x78\x3e\xdb\x51\x4e\x9c\xcf\xa3\x8e\x0b\x70\x85\xe5\x2e\x79\x7f\x7f\xdf\x0c\xa2\xa6\xcd\x4c\xbc\xdb\x36\x78\xb2\xec\x9a\x9f\xf6\x8f\x9b\xed\x6e\xb3\xdf\xee\x9e\x9b\xdd\xaf\x2f\x8f\xbf\xfd\x7c\x57\x0a\xff\x90\x8c\x0d\x71\x27\x2f\xcd\x60\x96\xf4\x65\xb3\xe9\xc9\x86\xe9\x00\x5e\xe2\xc6\x67\xf7\x76\x6e\xa3\x3b\x6d\xfe\x26\x0e\x32\xeb\x5f\xe9\xfc\xfb\x28\xfe\x88\xf9\xee\x6e\x0b\x97\xaf\x71\xac\x33\x66\x85\x48\x3e\x8b\x4a\x67\xa5\xf5\x0b\x4d\x49\x41\x8f\xe7\x84\xcb\xe5\xac\xa0\xd1\x65\x53\x9f\x11\xb9\xd6\xfc\xf6\xf0\xb4\x7b\xde\x3d\xc1\xab\x40\x54\xf4\x1c\x80\xd1\xfe\x03\xff\xb2\xdb\x3f\x3c\x3c\x56\xe0\xc3\x28\x07\x98\xd1\xd9\x80\xb9\x42\xe0\x1d\x87\xb3\xcf\x93\x0e\x2a\xc1\xc1\x91\xb8\x5f\xe2\x81\xc1\x0b\x1b\xb2\x41\xca\x12\xc0\x47\x85\xa8\x7c\x53\x24\x8c\x2c\x86\x0b\x7e\x3f\x08\x79\xac\x31\xaf\x80\xc0\xea\xcc\x2f\xf7\x18\xa9\x70\xcf\xac\x30\xbf\x1f\xc1\x72\x97\x0b\xdc\x2a\xf4\xce\x70\x76\x67\x88\xa8\x8a\xdc\x63\x86\x91\x5e\x71\xa5\xd6\x0b\x77\xd4\x43\x72\xaa\x49\xb2\x2d\xc8\x02\xa6\x51\xce\xa0\xe6\x8c\x3c\xb8\xa3\x8b\x8e\x0c\xfd\xc0\x32\x4a\x4f\xb8\xa4\x0e\xf8\x5a\x06\x70\x93\x0d\x70\x3a\xc8\xe9\x86\x2f\xc4\x00\x11\xcd\x29\xe6\x52\x59\x33\x48\xe0\xa2\x68\x67\xec\x95\x16\x40\x87\x18\x0e\xce\x1f\xbf\xfa\xda\x41\x86\xb8\x5e\xa3\xe8\xb2\x1f\x2a\x14\x9f\x55\x6b\x12\xf6\xb7\x4a\x51\xec\x5b\x6d\xa3\x72\x5b\x0e\xe5\x5d\x87\x37\x5c\x9a\x8b\x58\x29\x60\x4e\xc5\xd7\xa3\x4c\xc1\xa5\xb4\xc0\x47\xf2\xc8\x5a\xfc\x14\x53\xe5\xb7\x8a\xa8\x7c\xcb\x1e\x61\x10\x8b\x8e\xc6\xe5\x2a\x06\x72\x19\x03\x65\xf4\x56\xd9\x70\x55\x46\xe9\x3a\xf2\x78\xf5\xd1\x7a\x9f\xf0\x07\xae\xdd\x09\xa2\x7e\x02\x29\x93\xc7\x91\xd4\x56\x12\x9c\x8c\x40\x4d\x72\xcd\xe0\xff\x4c\x98\xcf\x5f\xa1\xc9\x35\xf2\x8c\x3d\xa9\x61\x06\x1f\x92\xaf\x99\xe4\x5b\x06\xd7\x2d\xec\x63\xe0\xc5\x31\xe8\x9f\x2b\x6b\x57\xaf\xfc\x2f\xc6\x8a\x66\xc4\xbd\xb6\xaa\xe3\xba\xa3\xaf\xc1\xb8\xdd\xd0\x24\xbb\x1e\x57\xfe\xa8\xe8\xd3\x52\x74\x3d\x2a\x68\x5b\x99\xad\x14\x61\xe8\xb1\x0b\x10\xf4\x54\xf7\x8b\x4e\xe9\x12\xd9\x75\xd4\x68\xc4\xf6\x9a\xb5\x1f\xdc\x7a\x46\x11\x57\xb3\x60\xc7\x3d\xa4\xd1\x6e\xa4\x99\x68\xc5\x00\xd3\xb7\xae\xf0\x39\xf8\xda\x3c\x05\x72\x63\x6d\x9e\xcb\xe3\xd5\x5a\x99\x57\x8b\x3a\x0b\xc5\x67\x2d\xb7\x32\x5c\x1e\x97\x4a\xfb\x3c\x5f\xae\x15\x2f\xcc\xe8\xcd\x50\xd7\xf1\x8f\xbc\xfc\x1b\x00\x00\xff\xff\x0c\xea\x9c\x49\x36\x07\x00\x00")

func dataHostsWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10ExtraTxt,
		"data/hosts/win10/extra.txt",
	)
}

func dataHostsWin10ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/extra.txt", size: 1846, mode: os.FileMode(438), modTime: time.Unix(1516812620, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\xbd\x92\xe3\x2a\x16\xc7\xf3\x79\x8a\xae\x9a\x64\x37\x30\xcd\x01\x49\xb6\x26\xdc\x7c\xa3\x0d\x36\x46\x08\xdb\x2a\x4b\x48\x03\xd8\x6e\xef\xd3\x6f\x21\x7b\xba\xe5\xb6\x84\xff\xbe\x1f\xc9\x2d\x9f\x9f\x80\xc3\xf9\x44\x8d\xee\xcf\x9f\x3f\xdf\xf6\xbd\x0f\xfe\xed\xdc\x58\xe2\x6f\x7e\xb8\xbc\xfd\x43\x64\xef\x9c\xde\x05\xa7\xcd\x1b\xad\x7f\x65\xe5\x3f\x7f\x44\xec\xdf\xbd\x33\x6f\x8d\xdd\xf6\xbf\xde\xf6\x21\x0c\xfe\xd7\xfb\xfb\xae\x09\xfb\x63\xc5\x74\xdf\xbd\x6b\xa7\xfe\x77\x59\x75\xea\xe3\xfd\xbf\x8d\xad\xfb\xb3\xff\xcf\x70\xf9\x57\xdb\xeb\x83\x71\x3f\x7e\x70\x36\xfe\xfb\xa6\x56\x9c\x73\x62\x6a\xd5\x79\x53\xef\x0c\xb3\x26\x7c\x97\xd5\x7a\x51\x28\x12\x0f\xca\x84\x2c\x4b\xc8\xf2\x84\xac\x48\xc8\xd6\x09\xd9\x26\x21\x2b\x97\x65\xc4\x13\xb2\xc4\xa6\xd1\xe2\xbe\xcc\xfd\xc8\x54\xed\x89\x75\xde\x46\xab\xdd\xff\x2c\x58\xe7\x55\xed\x1f\x79\x31\xc3\x3b\x55\x3f\xfe\xaa\xe5\xcc\x6f\xa1\x39\x35\xe1\xc2\xce\x57\xb7\xb8\x17\xd6\xd6\x7c\x1c\xbf\xcd\x58\xdb\x8f\xef\x94\x7f\x1c\xf6\xaa\xc5\xc3\x72\x67\x95\x6b\xea\xc1\x33\x15\xea\x2e\xdc\xff\x7e\x50\x2b\x5d\xdb\x95\xf5\x4c\xd5\xc1\xe8\x3d\xab\xcd\x97\xd0\x39\x75\x21\x4e\xab\xc1\xf5\x35\xab\x7b\x56\xfb\x81\x75\x03\xeb\x1a\xed\x7a\xdf\x6f\xbf\x0d\x75\xa5\xc5\x4b\xb4\x7c\x89\xce\x5e\xa0\xc5\x4b\xeb\x16\x2f\xad\x5b\xbc\xb4\x6e\xf1\xd2\xba\xb3\x97\xd6\x9d\xbd\xb4\xee\xec\xa5\x75\x67\x2f\xae\x3b\x7f\x89\x2e\x5e\xa2\xd7\x2f\xd1\x1b\x8c\xae\xe6\x13\x41\xb5\x94\x08\xaa\xd9\x88\xaf\x1a\xbb\x1b\xc3\x73\x7e\x8e\x56\x4a\x4e\x2b\xc5\xa8\x76\xa7\x39\x89\x5e\x94\xec\x66\x24\x96\x24\xcf\x56\x66\x41\x52\xcc\xce\x73\x95\x2c\x3f\x33\x3b\x8f\xa8\x56\xba\x77\x63\xa5\x1a\x1a\x36\xc4\xff\x48\x50\x22\x49\xc9\xe1\x95\xb1\x24\x44\x65\x69\xea\x6c\x3d\xb1\xb3\xf5\xb3\x29\xb7\xb2\xd2\xeb\x3d\x17\x9c\x0b\x21\xc5\x66\x99\xbb\x2c\xda\xee\xb2\x68\xbb\xab\x64\x6e\xb7\x3d\xf3\xc6\x9d\x1a\xbb\x5b\xf9\xcb\xfd\x44\x7a\x26\x33\xeb\x07\x47\xd3\xa9\xee\x40\x2b\x16\x4c\x6b\x3a\x13\xdc\x65\xc1\x15\xb5\xd2\x7b\xc3\x6a\x15\x54\xa7\x5c\x98\xd5\x58\xd7\x76\x6e\x29\xb5\x27\xc1\x33\xd6\xf6\x96\xb5\xad\x3d\xdf\x4f\x1c\x85\xa5\x5c\x14\x0a\x9e\xd1\x9a\xb5\xfa\xb2\x24\x95\x94\x92\xe6\x3c\x29\x4d\x8e\xbc\xce\x97\xa5\x24\xb2\x65\x85\x44\xc1\x54\xe7\x4b\xd6\x79\xa3\xed\x77\x61\x26\x96\x87\xcd\xf2\x72\x59\x56\x66\x8b\xb2\xb2\xc8\x17\x16\xb3\xa7\xe7\xb1\xf3\x09\xa5\xc2\x50\xef\x97\x5c\xf6\x26\x99\x71\xd9\x9b\x64\x26\x41\x8c\x12\xb1\x38\x9a\x98\x1d\xad\xef\x06\x15\xcc\x87\xde\x2b\xbb\x33\x4c\xb7\xfd\xb1\x56\xc3\x70\xaf\xef\x1d\x43\x2c\x38\xb5\xdd\x36\xba\x53\x56\xed\x8c\xfb\x86\xda\xd0\xd8\xe3\xb1\x63\xf5\x62\xf6\xd5\xbd\x1b\x98\x0f\x29\xb1\xf9\x08\xac\xf3\x4d\x50\xf5\xd6\xb3\x5d\x5b\xd5\x36\xe6\xfe\x79\x7c\x80\x9b\x21\x3d\xc0\xfd\x87\x1e\xe0\x92\xaf\x63\x52\x1b\x34\x3b\xf1\x18\xa8\xd3\xcd\xa8\x2b\xa9\x7e\x1f\x67\x62\xb7\xae\xe4\xd9\x7a\xc1\x29\xfe\xb3\x98\xe9\xea\x2a\x4f\xc9\xbc\xde\x13\x27\x8a\x7d\xb6\x00\xb9\x35\xc4\x6d\x64\x72\x4d\x13\x0e\x5b\x5f\x49\xd8\xbc\xa5\x00\xc7\x4b\x54\x87\x3b\x4e\x42\x5c\xdc\x19\x8c\xc3\xf6\x99\xb8\xc8\x30\x0e\xdb\x67\xe2\x12\x1c\x2f\x03\xd7\x97\x61\xe3\x81\x7e\x45\x24\x24\xc8\x41\xf6\x25\xc2\xec\x4b\x24\x4a\x8c\x93\xe0\xfa\x32\x6c\x7d\x82\x63\xf3\x0a\x81\xd9\x57\x80\xfa\x0a\xd0\x5f\x84\x84\xe2\x8d\x24\x16\x97\x24\x41\x7f\x96\xa0\x3d\x24\x68\x0f\x09\xfa\xbd\x04\xe3\x3c\x23\x6c\x7d\x19\xa8\x6f\x26\x0a\x90\xc3\xf6\x39\x93\x1c\xe3\x40\x3f\xcd\xd3\xb5\x65\xc2\x61\xfb\x92\x83\xf6\xcd\xb1\xba\x40\x79\x06\xae\x2f\xc3\xfc\xa5\xe0\x98\x1f\x14\x04\x72\xa0\xbe\x05\x18\x97\x05\xe8\xf7\x45\x86\xf9\xc1\x1a\xb4\xef\x1a\xcc\xe3\x6b\x89\xe9\xbb\x06\xfd\x6f\x43\x98\xbe\x1b\x81\xe9\xbb\x01\xe3\x0d\xec\x4b\x68\x03\xe6\xc9\x0d\x58\x2f\x4b\x8e\x8d\x57\x12\x38\x1e\xe8\x7f\x25\x68\xb7\x12\x8b\x37\xc1\x09\xda\x3f\xc1\xb1\xfa\x21\x38\x96\x5f\x04\xc7\xfa\x08\xc1\xb1\x3e\x42\x70\x09\xf9\xbd\xe0\x50\x5c\xc6\xc6\x09\xc9\x1b\x91\x43\xf4\x1d\x1b\x0e\x8c\x83\xfc\x79\x2c\x34\x10\x27\x38\x36\xaf\xe0\x48\xbc\x11\x17\xa0\x1e\x02\xb2\x1b\x71\x01\xd9\x2d\xb6\xd9\xd8\x78\x12\xf2\x67\xe2\x12\xf2\xbf\xc8\xa1\xe3\x61\xfe\x22\xa1\xfa\x11\x8f\x01\x28\x07\xea\x01\xee\x5f\xc6\xb1\xf1\xb0\xfe\x8a\x78\x06\xf5\x6b\xf1\x98\x82\xf9\x41\x0e\x9d\xdf\x88\xe7\x50\x1f\x46\x3c\x07\xf3\x01\xd6\x47\x10\x2f\xa0\xfa\x1b\x39\x2c\x8e\x0a\xa8\x0e\x12\x2f\xa0\xfe\x99\xf8\x9a\x63\x7e\xb0\x06\xd7\xb7\x86\xfa\x17\xe2\x1b\x42\x39\x4c\xdf\x0d\x74\xde\x8a\x1c\x66\x8f\x0d\x18\xe7\x1b\x30\xce\xb1\xbe\x84\x78\x09\xc6\x51\x09\xea\x5b\x82\x79\x0d\xe9\x37\x24\xdf\xd0\x06\xc8\xf7\x92\x6f\x04\x07\xfa\xd3\xc8\x3d\x79\x07\xf6\xc9\x49\xa0\xfe\x46\x2e\x03\xea\xd6\x95\x83\xf4\x15\x05\xca\x81\x7a\xac\xc1\xf1\xd6\xf4\xdc\x4f\x23\xb7\x81\xf4\x2d\x39\x01\x75\x30\x72\x19\xc8\xe5\x40\x7f\x7f\xe5\xb0\xf1\x90\xf3\x5b\xe4\x50\x7d\x31\x3f\x2d\xe3\xcc\x08\x47\x98\x3f\x47\x0e\xb1\x5b\x19\x33\x34\xc8\x41\xfb\x42\x02\x9c\x57\x82\x7a\x64\xd8\xfe\x41\xef\x19\x22\x57\x00\xe7\x85\xc8\xad\x31\x7f\xa1\x0d\x38\x5e\x09\xee\x5f\x89\xe9\x21\x38\x50\xb7\x22\x07\xda\x4d\x20\xe7\x85\xc8\x21\xef\x1d\x47\x0e\x5c\x5f\x8e\x8c\x47\x9c\x13\xb2\xcf\xe3\xdf\x17\x80\xfd\x23\xce\x91\xf7\xa2\x91\x93\x48\x7e\x19\x39\xc0\x4f\x89\xf3\x1c\xd9\x97\x91\xc3\xd6\x07\xe5\x7b\xe2\x1c\xca\xe3\xe3\x51\x14\xf0\xfb\xf1\xfd\x33\xe0\x57\x91\x03\xe7\x05\xf7\x8f\x32\x4c\x5f\xca\x30\xbb\x11\x54\x3f\xc6\xf7\x75\x90\xdd\x08\xb4\x07\x21\xfd\xae\x04\xdf\xaf\xc9\xf1\xbd\x0f\x14\x47\xd0\x7b\x1f\x19\x8f\xdd\xd8\x78\x82\x30\xfb\x0a\x01\x9c\xdf\xae\x1c\x36\xaf\xc4\xec\x21\x32\xe0\x3d\x43\xe4\xa0\xfe\x2a\x72\xe0\xbc\x9b\xb4\x7d\xcf\xd6\x53\x9d\x00\x8a\x71\x20\x11\x1b\xa6\xa4\x02\x13\x2e\x69\x88\x29\x97\x2a\xf8\x13\x2e\x79\x40\xf9\xe2\xd2\x86\x9d\x72\xd8\xbc\xe9\xc4\x32\xe5\x52\x06\x9b\x70\xc9\x00\xfa\xe2\x64\xd2\x60\x53\x0e\xd3\x23\x7d\x50\x98\x70\xe8\xfa\x92\x89\xea\x8b\xcb\x92\x0e\x3a\xe5\x30\xfb\xe6\xa0\xff\xa5\x0b\xdb\x94\x03\xe7\x05\xf5\xcd\x93\x09\x6d\xca\x61\xfe\x52\x80\xf3\x16\xe0\x78\xe9\x17\x0c\x53\x0e\xf3\x83\x92\x63\xfb\x57\x82\xfe\x9c\xfe\x83\xc1\x94\xc3\xfc\xb9\x04\xf5\x4d\x37\xba\x9f\x5c\x6c\xad\x40\x0e\xd2\x83\x38\xa6\x07\xa5\x0b\xe0\x84\x03\xf5\x20\x50\x8f\x74\x03\xf6\xc5\xa5\x5f\xa0\x4f\x39\x4c\x0f\x30\xff\x91\x04\xf7\x19\xcc\x7f\x24\xd1\xf5\x61\x71\x4e\x60\x5e\xa3\x1c\xb4\x47\x0e\xea\x5b\x60\x71\x49\x05\x38\x6f\x81\xd5\x19\x2a\x52\xeb\x33\x27\x76\x6a\x5c\x38\xaa\xd6\x28\x17\xf6\xf7\x17\xc3\xb6\x4f\xef\x85\xd6\x8d\xd7\xf0\xc5\xb6\x08\xc3\x57\xdb\x22\x0c\x5f\x6e\xab\x1b\xb5\xb3\xbd\x0f\x8d\xf6\xcc\x1f\x87\xa1\x77\x61\x81\x34\x73\xf7\x65\x8d\xb6\x2c\xb9\x13\xe6\xc8\x4e\xbd\x0b\xe6\x63\xbc\x02\xbb\x30\xf4\xb6\x35\x1f\x0f\x17\x6f\xb7\x4b\xf7\x07\x77\x0f\xe8\xce\xf4\x98\xb6\x3b\xd3\x9f\x8c\xc3\xd8\xfd\xe3\x1d\xf5\xfd\xe3\xf7\x28\xcd\xaa\x6a\x0b\xe0\xa6\x75\xb3\xaa\x2e\xc8\x8d\xec\x29\x97\xba\x58\xda\xac\xa0\x4b\xaa\x13\x2c\x3d\x9a\xb7\x02\x19\xed\x13\x4b\x8e\x46\xd7\x3b\xd7\xda\x78\xe6\x7b\xdd\xa8\x76\x61\x8b\x9f\x81\xcc\x7a\x15\xf4\x9d\x3f\x35\x76\x6b\x9c\xb1\xda\xb0\xb6\xd7\x2a\x34\xbd\x65\x6d\x73\xba\xbf\x95\x7d\x38\xc1\x81\x75\x38\xc1\x61\x75\x38\xc1\x41\xd5\x56\xc4\xce\xe7\x33\xeb\x3c\x53\x07\x55\xdb\xfb\x0f\x1a\xc6\xf5\xba\xb9\x6f\x8b\x5a\x2f\xce\xa6\x62\xce\xd4\x5d\x6f\x6b\x36\xde\xa3\x9d\x9f\xa1\x63\x8f\x5f\x2b\x75\x7d\xd5\xb4\x86\x0d\xcd\x60\x98\x72\xcd\x52\xb0\xcd\x5c\x63\xef\xbc\x0d\xc6\x87\xc5\x9b\xf2\xd7\x6f\xa5\xfa\xed\xb6\xd1\x46\x0d\x83\xbf\x6e\xf9\x03\xe1\x8e\xad\x49\x63\x3d\x70\x61\x3e\xc1\xcc\xf8\x43\x6f\x8d\x37\x21\x34\x76\xe7\x57\x95\x15\x2c\x3e\xf5\xc7\x27\x9e\x3f\xa1\x2f\xaf\x3e\x51\x57\xf9\x8b\x4f\xec\x0f\xc8\x1c\x83\x33\x6c\xdb\xf7\x61\x70\x8d\x0d\x83\x33\x75\xa3\xef\xb7\x65\x70\xe6\xd4\x98\xf3\x83\xcf\x38\x55\x3f\xee\xf3\xdc\x17\x33\x71\x4c\x17\x57\xa2\x3e\x63\x6e\xde\x00\xce\xc4\x2a\xe0\xd9\xd9\x78\x06\x14\x32\xaf\xf7\xa6\x53\xd3\xc1\x66\x7c\xde\x1b\x7d\x74\x66\xc6\x69\x6f\x82\x6d\xab\xfc\x3e\xa8\xf6\xd0\xd8\xdd\x37\xf9\x6d\xad\xe8\x6a\xfe\x6c\xbb\x57\xb6\xae\xfa\x64\xd9\xf9\x64\xcf\x8d\x45\xb9\xd5\x30\x18\x84\xbd\x32\xe9\x9b\xed\xf7\xec\x02\x63\x97\x3e\x20\xb8\x49\x66\xae\xfc\xdf\x24\x33\x1f\x10\xf8\xe1\x62\x4d\x58\x5c\xcf\x28\x55\xed\x52\x07\x70\x95\x9b\xa3\xeb\x07\xf3\xc4\xdc\xbf\x3b\xc8\x58\xbf\xbb\xbf\xc3\xcc\x84\x91\xf7\xe7\xc7\x68\xf0\xa1\x77\x46\xab\xa0\xda\x7e\xe7\xcc\xe9\x4f\xdd\x18\x7f\xfe\x7d\x54\x6d\x13\x16\x27\x3f\xba\x93\xb9\xb0\xb3\x0a\xbe\xb7\x0b\x4c\xe0\xcc\xfb\x96\xa9\x03\xab\x2f\x56\x75\x8d\x66\xa1\x89\x79\x70\xb1\x25\xfa\x7a\xe0\x19\x68\x5a\xa3\xfb\xae\x53\xb6\x7e\xba\x4d\x00\x3b\xb3\x5d\x5f\xa4\x1a\x06\xf3\xc1\xaa\x18\x7e\xf3\xc0\xf2\xb4\x57\xf9\xd1\x2d\xe5\x93\xb1\xb4\x24\xbf\xc6\x0d\x7e\x6b\xfe\x7c\x74\xe2\xf7\x6a\x88\xab\x48\x16\xd8\x13\xf1\x5b\x5b\x39\x89\xdd\xa7\x39\x76\xf6\xa9\xf9\xf1\x8d\xf3\xd1\x45\xf6\x97\xca\x35\xf5\xd8\xea\xec\x8d\xbb\xf7\xaa\x31\x1b\x3f\x76\xc4\xb7\x09\xb0\x5a\x74\x83\xb1\x32\x74\x83\xb1\x0a\x74\x83\xb1\xe2\x73\x83\x81\x94\xf9\x17\x36\x1d\xdb\xf0\xc9\x19\x21\x9d\x34\xef\x4e\x13\xe0\xec\xa9\x99\x6f\xb1\xfd\x90\x34\x92\x31\x7f\x13\xc6\x5a\xf0\x2c\x42\x6e\xe8\xdf\xc3\x66\x34\x8b\x8d\x22\xa0\x1d\x56\x35\xc7\xff\x05\x03\x6b\x86\x53\x91\x00\xd6\x4f\x90\xb1\xe1\xfd\xd3\x5b\xfe\x3f\x00\x00\xff\xff\x0e\x0b\x90\xa7\xdf\x41\x00\x00")

func dataHostsWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10SpyTxt,
		"data/hosts/win10/spy.txt",
	)
}

func dataHostsWin10SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/spy.txt", size: 16863, mode: os.FileMode(438), modTime: time.Unix(1518300223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x72\xea\x30\x10\x85\x7b\x9e\x42\x33\x34\xf7\x16\xac\x25\xc1\x40\xa0\x4c\x9f\x2a\x45\x6a\xa1\x1f\xa3\x41\x96\x3c\x5e\x19\xc7\x79\xfa\x0c\x81\x10\x3c\x89\x2c\x33\x2a\xf7\xdb\xdd\xb3\xe7\x68\x3e\x9f\x93\x43\xc0\x88\xa4\xb3\x9e\x51\xd2\xd6\x4a\x44\x4d\xfe\xb1\x4d\xc1\x68\xc1\x29\xdb\x10\xca\x76\xcb\xf5\xff\xd9\x99\x7c\x09\x8d\x26\xd6\x9b\xb0\x23\x87\x18\x6b\xdc\x15\x45\x69\xe3\xa1\xdd\x83\x0c\x55\x21\x1b\xf1\xd1\x2f\x2a\xf1\x5e\xbc\x59\xaf\x42\x87\xaf\x75\xff\xec\x82\x3c\xea\x66\x36\xa3\xf0\xf5\x08\xa5\x94\x53\xbe\x60\xe0\xa0\xbb\x50\x97\x95\xe7\x09\x03\x48\x2e\x27\x40\x46\x65\x21\xb6\xda\x9a\x3c\xf4\xb4\x65\x79\xc8\xf0\xbc\x26\x4e\xd7\xf9\xeb\x38\x53\x34\x03\x89\x16\x54\xe8\xbc\x0b\x42\x8d\x53\xa7\xd5\x14\x50\x46\xa7\xc6\xd6\x29\x8b\xb5\x13\xbd\x14\x51\xb8\x50\x42\x55\x43\x65\x65\x13\x30\x98\x38\xe4\x1c\x28\xed\xec\x49\x37\xfd\x08\xf4\xad\x27\x53\x4e\xcb\xd1\xd5\x59\x2d\x26\x06\x18\xcd\xe1\xda\xf4\x18\x00\xe2\x28\x94\x47\xf0\x3a\xde\xb1\xcb\x9f\x93\x14\xd6\xbf\xce\x02\x8f\x22\xca\x74\x4f\xd2\x06\x53\x82\x42\xd8\xb3\x29\xf9\x98\x72\x62\x90\xb7\x55\x43\xe4\x5e\x1d\x3a\x1c\xb7\x27\x05\xfc\x65\x0f\x46\x11\xf1\x11\x3f\xaf\x0d\x2c\x1d\xdf\x6d\x64\x92\x88\xae\x85\x49\x3f\x6d\x9a\x67\xb9\xca\xb5\x10\x9a\xf2\x33\x00\x00\xff\xff\xde\x5a\x01\x20\x0f\x05\x00\x00")

func dataHostsWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin10UpdateTxt,
		"data/hosts/win10/update.txt",
	)
}

func dataHostsWin10UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win10/update.txt", size: 1295, mode: os.FileMode(438), modTime: time.Unix(1508198014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x32\x31\x10\x84\x7b\x9e\xc2\x12\xcd\xff\x17\xd9\x3b\x0e\x25\x48\x94\xe9\x53\xa5\x48\x6d\xec\xe5\xd8\xc4\xf6\x5a\xde\xe5\x0c\x79\xfa\x88\xa4\x88\x4e\x60\x22\x77\xf3\x8d\x67\x47\xb3\x5c\x2e\xcd\x81\x45\xc5\x54\x4a\x1b\x83\x27\x2d\xd6\xfc\x5b\x3d\x75\xfd\xa6\x1b\xfa\xd5\xc6\xf4\xeb\xed\xe3\xf0\x7f\x71\xf1\xbd\x70\x41\x43\x69\xcf\x5b\x73\x50\xcd\xb2\xed\xba\x91\xf4\x70\xdc\x81\xe3\xd8\xb9\x62\x3f\xcf\x0f\xd1\x9e\xba\x37\x4a\x9e\xab\xbc\xe6\xf3\x73\x60\xf7\x81\x65\xb1\xe8\xe1\xfb\x19\xeb\x94\x26\xab\xc4\x09\x24\x08\x44\x72\x85\x85\xf7\x7a\x49\xf8\x35\x65\x82\x1d\xa5\x71\x26\x3a\x1e\xee\x7c\x71\x25\x34\x88\x8f\x1e\x22\xaa\x15\x2c\x13\x39\x6c\x05\xf8\x24\x10\x65\xaf\xc9\x09\xcd\xc0\x78\x5d\x65\x84\x40\x13\xce\xa4\xc0\x23\xa5\x6b\xf9\x66\x62\x19\x7a\xa9\xef\xab\x75\x2c\x8d\x2e\x4a\x11\xa1\xfe\x8c\x38\x03\x93\x0d\xe4\xff\x5a\xaf\x7a\x97\xef\x20\x1b\xb4\x45\x6b\xbd\x3d\x41\x15\xc7\x49\xc1\xe6\xdc\xbc\xd9\x72\x00\xfa\x11\xe5\x48\x8a\x90\x50\xbf\x02\x00\x00\xff\xff\x21\x60\x66\xf5\x6d\x02\x00\x00")

func dataHostsWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7ExtraTxt,
		"data/hosts/win7/extra.txt",
	)
}

func dataHostsWin7ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/extra.txt", size: 621, mode: os.FileMode(438), modTime: time.Unix(1500169983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x3d\x93\x9b\x30\x10\x86\x7b\xff\x0a\xcd\xb8\x49\x0a\x2f\xe2\xe3\xcc\xd8\x65\xfa\x54\x29\x52\xef\x49\x0b\x68\x0e\x69\x89\xb4\x3e\x20\xbf\x3e\x43\x6e\x72\x09\x33\xe0\x9c\x87\x8e\xe7\x79\xdf\x95\x56\xc7\xe3\x51\x75\x9c\x24\xa9\xd1\x85\x5a\xa5\x61\x56\x9f\xf2\x3a\xd3\x97\xac\xd0\x79\xad\xf2\xea\x5a\x16\x9f\x0f\x8b\xf5\x95\x23\x29\x17\x1a\xbe\xaa\x4e\x64\x48\xd7\x2c\x6b\x9d\x74\xb7\x67\x30\xec\x33\x13\xf1\xe7\x7c\xf2\x38\x65\xdf\x5d\xb0\x3c\xa6\x6f\xc3\xfc\xa5\x67\xf3\x42\xf1\x70\xd0\xf0\xfb\x53\x78\xd2\x5a\x97\x80\x27\x9f\xc8\xb6\x04\x81\xe4\x2f\xb3\x3d\x8c\x6f\xd1\xa5\xf0\xfd\xbf\xb1\x29\xcf\xab\x12\x7a\x0e\xd0\xf7\x61\x5c\x85\x16\x58\x9c\x2f\xbb\xb0\xd0\x55\x51\x41\x6f\xe6\x3d\x5a\x3e\xdd\xa3\xe7\x7c\x97\x96\xe5\x65\x9f\x55\xfb\x33\x2b\x5d\x43\x13\x71\x83\xb1\x1f\x50\x68\x32\x1d\x86\x96\x72\x90\x88\x4d\xe3\x8c\xc7\x80\x2d\xc5\xb5\x3a\x17\x90\x48\xc4\x85\x36\x81\x45\x41\xf0\xce\x44\x4e\xdc\xc8\xb2\x3a\xc0\x17\xb4\x21\xad\x22\xf6\xf9\xe9\xd1\x08\xdd\xe0\x95\xa3\xd0\xb4\xe1\xbf\x4b\x2d\xf1\xa3\xbd\xed\x38\x6d\x3e\xf4\x9f\x9a\xd3\xe8\xc2\xbd\x91\x69\x98\x03\x49\x71\x97\xd2\x2d\xf2\x40\xff\x28\x1b\xe7\x48\x3f\x3c\x08\xf5\xe4\x49\xe2\xbc\xd3\xb6\x70\xc3\xde\x63\xb0\x1f\x70\x23\x59\x06\x37\xbc\x9e\x77\x8c\xb7\x75\xfe\xef\x7e\x23\x4a\xe2\xb0\x86\xbf\x02\x00\x00\xff\xff\x06\xd3\xf0\x71\xa6\x03\x00\x00")

func dataHostsWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7SpyTxt,
		"data/hosts/win7/spy.txt",
	)
}

func dataHostsWin7SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/spy.txt", size: 934, mode: os.FileMode(438), modTime: time.Unix(1505651580, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x3d\x4f\x84\x30\x1c\xc7\xf1\x9d\x57\xd1\x84\x45\x87\xeb\x93\xe4\x20\x8c\xee\x4e\x0e\xce\xa5\x0f\xd0\x08\xfd\x93\xb6\xa4\x9e\xaf\xde\x9c\x5c\x50\x93\x93\x12\x36\x7e\x1f\xbe\x7f\xca\xb2\x44\x03\x84\x18\x50\xb2\xae\x46\xcb\xac\x44\xd4\xe8\x81\x57\x84\x71\xc2\x29\xab\x11\x6d\xda\xea\xfc\x58\x5c\xe1\x0b\x78\x8d\xac\x33\xd0\xa2\x21\xc6\x39\xb4\x84\xf4\x36\x0e\x4b\x87\x25\x4c\x44\x7a\xf1\x79\x39\x4d\xe2\x83\xbc\x59\xa7\x20\x85\xd7\xf9\xf2\x3c\x82\x7c\xd7\xbe\x28\x28\xfe\x7e\x10\xa5\x54\x18\x71\x62\x78\xc4\x69\x55\xeb\xc9\x6b\xe1\x37\xea\x94\xc9\x23\x75\x56\x79\x64\x2a\x9a\x45\xac\xa9\xba\x7c\x89\x3f\x35\x79\x54\x69\x9d\x45\x9c\x8b\xfa\x00\x92\x2c\x83\xc4\x82\x15\x24\x37\x82\x50\x3b\x4a\xc6\x51\xed\x55\xb6\xc4\x64\xa5\x87\x00\x26\xde\x9f\x77\x0a\xe1\xc8\x7f\x18\xcd\xf1\xed\xf5\xfd\x4b\xa6\xc7\x2a\xe0\x8e\x1d\x89\x6d\x85\xbf\xc4\xe9\xb8\x91\xff\x3f\x5e\x97\xdb\x00\xbe\xff\x19\x52\xda\x39\xfe\x15\x00\x00\xff\xff\x6b\x72\xf9\x7d\x2c\x03\x00\x00")

func dataHostsWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin7UpdateTxt,
		"data/hosts/win7/update.txt",
	)
}

func dataHostsWin7UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win7/update.txt", size: 812, mode: os.FileMode(438), modTime: time.Unix(1514101619, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3f\x73\xdb\x30\x0c\xc5\x77\x7f\x0a\xdd\x79\x69\x07\x41\xb6\x7b\x6d\x7a\x1e\xbb\x77\xea\xd0\x99\x26\x21\x09\x17\x12\x54\x01\x58\x94\xfb\xe9\x7b\x4a\xff\x2a\x09\xd3\x1c\x37\xbe\xdf\x03\xf9\xde\x61\xbf\xdf\x37\x63\x56\xd3\xa6\x10\x7f\x3c\x36\xb8\x98\xb8\xe6\xcd\xf1\x43\x77\xb8\xeb\x4e\x87\xe3\x5d\x73\x78\x77\x7e\x7f\x7a\xbb\x5b\xc1\xcf\x59\xb0\x21\xee\xf3\xb9\x19\xcd\x26\x3d\x77\xdd\x40\x36\x5e\x2f\xe0\x73\xea\xbc\xb8\xef\xb7\x36\xb9\xa5\xfb\x4a\x1c\x72\xd1\x2f\xd3\xed\x53\xcc\xfe\x1e\x65\xb7\x3b\xc0\xc3\x69\x9c\x37\x9a\x9d\x51\xe6\x76\x3e\x81\x46\x85\x44\x5e\xb2\xe6\xde\xd6\x21\x7f\xb9\x69\xc2\xa5\x95\x1e\x92\xf2\x46\x08\x29\x40\x42\x73\x8a\x32\x93\xc7\x9a\x3f\xb0\x42\xd2\xde\xd8\x2b\x6d\x84\x9e\xd8\xb1\x47\xf8\xe3\x7f\x78\x09\x2e\xc4\xc3\x96\xcb\x39\x38\x0e\x41\x88\xef\xc1\x28\x62\x15\x94\xb6\x17\xa8\xfe\x77\x78\xea\x18\x20\xd2\x8c\x9b\x2b\x4a\x03\xa8\x5d\x40\xdb\xc7\xfe\x98\x07\xe2\xa7\x86\x67\xb3\x31\x2e\xd6\xfe\x1b\xac\xd6\xce\xb7\x2b\xca\x0d\x26\xc9\x01\x7c\x52\x10\xab\x70\xbf\x66\x41\x41\x67\x23\x4a\x8d\xb2\x2c\x88\x61\xc0\x3e\x40\xd0\x05\xd2\x54\x01\x8d\x12\x42\xf9\xb9\x1c\x1b\x61\x76\x91\xc2\x2b\xb6\xa2\xac\xa1\x04\x27\xd0\xe4\xc4\xd4\x0b\x22\xd7\xd0\x52\x9e\x5f\x80\xe2\x4c\x33\x83\x61\xc4\x84\x26\xb7\x9a\x3f\xf8\x5a\x8c\x55\x72\xb1\xd6\x59\x51\x9f\xd9\x5e\x6a\xbf\x4a\xc0\x5a\xa2\x5e\xc9\x10\x18\xed\x11\x7f\xfc\xff\xc8\xd3\x8b\x48\x29\xbf\xbb\x57\x74\xe2\xc7\x55\xfd\x11\x00\x00\xff\xff\xe0\x58\x94\x91\xff\x03\x00\x00")

func dataHostsWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81ExtraTxt,
		"data/hosts/win81/extra.txt",
	)
}

func dataHostsWin81ExtraTxt() (*asset, error) {
	bytes, err := dataHostsWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/extra.txt", size: 1023, mode: os.FileMode(438), modTime: time.Unix(1500170002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\xb1\xce\x9b\x30\x14\x05\xe0\x3d\x4f\x81\x94\xa5\x1d\x62\x6c\x43\x82\xc9\xd8\xbd\x53\x87\xce\xb7\xe6\x42\xac\x1f\xdb\xd4\xbe\xf9\x09\x7d\xfa\x8a\x56\xaa\x1a\xb5\xbe\x11\x1b\xdf\x01\x1f\x1d\x09\x8e\xc7\x63\x75\x8b\x99\x72\xb5\xba\x60\x54\x95\x97\xad\xfa\xa0\xdb\x5a\xaa\x5a\x4b\x65\x2a\xd5\x5d\xdb\xfe\xe3\x61\x8f\x7d\x8e\x09\x2b\x17\xc6\x78\xad\x6e\x44\x4b\xbe\xd6\xf5\xe4\xe8\x76\xff\x26\x6c\xf4\xb5\x4d\xf0\x63\x3b\x79\x78\xd4\x5f\x5d\x18\xe2\x9a\xbf\x2c\xdb\xa7\x39\xda\x37\x4c\x87\x83\x14\xbf\xae\x0a\x4e\x52\x4a\x25\xe0\xe4\x33\x0e\x13\x8a\x80\xf4\x6c\x9a\xb1\x86\xb1\x96\xb1\x33\x63\x17\xc6\x3a\xc6\x0c\x63\x7d\xd9\x94\x64\x8c\xd9\x45\x15\x77\xf9\xcf\x4d\x3b\x64\xa5\xb5\x11\x73\x0c\x62\x9e\xc3\xfa\x2f\xb6\x2d\x83\x97\x33\x83\x5d\xc3\xa0\xe1\x9e\x34\x5d\x11\xb5\x6c\x65\x2b\x66\xbb\x95\xf4\xac\x39\x35\x8c\x2a\xad\xfb\xf2\xb9\x4a\x9f\x2f\x9c\x76\xe5\x11\xb5\xd2\x46\x71\xda\x97\x97\x6a\x94\x2c\x36\x6e\x9a\xbe\x68\x46\x95\xfb\x98\x46\x17\x2c\xfa\x05\x08\x1f\xf6\x06\x61\x42\x25\x28\xc1\x38\x3a\xeb\x21\xc0\x84\xe9\x29\x8a\x77\xf1\x1e\x13\xe1\x43\x0c\x40\x20\xbc\xb3\x29\xe6\x38\xd2\xfe\x7d\xff\x09\x65\x24\x72\x61\xca\xa7\xd5\x05\x36\xb7\x6c\x01\x49\xb3\x0a\x33\xb1\x8e\xf7\x14\x17\xfc\x2b\x02\x6f\x30\x84\xfc\x54\x3a\x7f\xf7\x82\x70\x46\x8f\x94\xb6\xd2\xdb\x08\x28\x8f\xa8\xc5\x7d\x19\x80\xf0\x55\x6a\xcd\x85\xc4\x7e\x0e\x37\xe0\xee\x36\x7a\x0f\x61\x78\xd9\xe9\xf7\xd2\xaf\x56\xdc\x7f\xca\xc2\x2d\xef\x97\x67\xff\x19\x00\x00\xff\xff\x36\x06\xb8\x8e\xb6\x05\x00\x00")

func dataHostsWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81SpyTxt,
		"data/hosts/win81/spy.txt",
	)
}

func dataHostsWin81SpyTxt() (*asset, error) {
	bytes, err := dataHostsWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/spy.txt", size: 1462, mode: os.FileMode(438), modTime: time.Unix(1516812631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataHostsWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\xbd\x6e\xc2\x30\x10\xc0\xf1\x9d\xa7\xb0\xc4\xd2\x0e\x38\x3e\xc7\x81\x84\xb1\x7b\xa7\x0e\x9d\x1d\x7f\x84\xa8\x49\x4c\x63\xd3\x94\x3e\x7d\x95\x82\x90\x90\x68\xee\xc4\x86\x7f\xfc\x2f\xc4\xb7\x5e\xaf\xd9\x21\xc4\x14\xd9\xd4\x0e\x25\xb0\xd3\xd1\xea\xe4\xd8\x93\x54\x99\x80\x4c\x0a\x28\x19\xec\xf6\xaa\x7a\x5e\xcd\xf2\x35\x8c\x8e\xb5\x83\x0f\x7b\x76\x48\xe9\x18\xf7\x59\xd6\xb4\xe9\x70\xaa\xb9\x09\x7d\x66\x46\xfd\x73\xde\xf4\xfa\x3b\x7b\x6f\x07\x1b\xa6\xf8\x76\x3c\xbf\x74\xc1\x7c\xb8\x71\xb5\x12\xfc\xef\xc3\x84\x10\x42\xe5\x1b\xe0\x1d\x9f\x2e\xea\x32\x72\x2e\xdc\xa1\x2d\x10\x90\x97\x14\x54\xe1\x48\x69\x8b\xa3\xaa\x24\x94\x6a\x27\x70\x64\x84\xc1\x91\x55\x78\x09\x84\xd8\xe1\x08\x00\x1f\x07\x79\x45\x18\xb7\x33\x05\x8e\x2a\x5b\xe2\x48\xe7\xf8\xdd\x81\x2e\xf1\x55\x01\x63\x09\xff\xce\x0a\xfc\xee\xc0\x82\x27\x20\x45\x28\x39\x41\x78\x4f\xbe\xae\x51\x24\xa5\xdb\xe2\x28\xaf\x14\x8e\x8a\xda\xe1\x4b\x97\x7b\xec\x65\xea\x13\xb7\x61\x1a\xba\xa0\xed\xb2\xfa\x52\x14\x58\x37\x33\xd4\xdc\x76\x7c\x8a\xbc\x6f\xcd\x18\x62\xf0\xe9\x81\x71\xfd\xb2\x01\x4a\x08\x28\x25\x49\x29\x49\x4a\x29\xa7\x94\x72\x4a\x49\x51\x4a\x8a\x52\x2a\x28\xa5\x02\x2f\x99\xd4\xd9\xa5\x45\x21\x5c\xbe\x77\x92\x5f\xbf\x7e\x3c\x63\x06\xd3\xe7\xd2\xe1\x7f\x4f\xe7\x1b\xe2\x02\xde\x7e\x7e\x4f\x06\x97\x6e\x24\x76\x71\xf9\x31\x69\x93\xb0\x93\xeb\x41\x18\x9b\xdf\x00\x00\x00\xff\xff\xe3\x5f\x90\x92\x97\x07\x00\x00")

func dataHostsWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataHostsWin81UpdateTxt,
		"data/hosts/win81/update.txt",
	)
}

func dataHostsWin81UpdateTxt() (*asset, error) {
	bytes, err := dataHostsWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/hosts/win81/update.txt", size: 1943, mode: os.FileMode(438), modTime: time.Unix(1516812635, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNcsiNcsiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x0e\x2e\xa8\x74\xca\xc9\x4f\xce\x4e\x2d\x02\x04\x00\x00\xff\xff\x76\x30\x32\x0e\x11\x00\x00\x00")

func dataNcsiNcsiTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataNcsiNcsiTxt,
		"data/ncsi/ncsi.txt",
	)
}

func dataNcsiNcsiTxt() (*asset, error) {
	bytes, err := dataNcsiNcsiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/ncsi/ncsi.txt", size: 17, mode: os.FileMode(438), modTime: time.Unix(1518299054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xc1\x72\xdb\x3a\x0c\xbc\xe7\x2b\x3c\x93\xcb\x7b\x07\xc1\x71\xf2\x5e\xa6\x93\x99\x5e\x7a\xef\xf4\xd0\x43\xcf\x34\x09\x49\x18\x8b\x00\x43\x40\x96\x9d\xaf\xef\xd0\x71\xe3\x5a\x11\xdb\x1c\xc5\x5d\x82\xc0\x72\x97\xba\xbd\xbd\x5d\x49\x42\x9e\xb2\xad\x26\xe2\xcd\xdd\x0a\x0f\x96\xdd\xea\x9f\x35\x9a\x5f\x07\xd6\xe8\xf4\x19\xbc\x70\xfb\xef\x4d\xe1\x7e\x95\x8c\x2b\xe2\x56\x9e\x56\xbd\x59\xd2\xa7\xf5\xba\x23\xeb\xc7\x2d\x78\x89\x6b\x9f\xdd\xcb\xb1\x89\xee\xb0\xfe\x41\x1c\x64\xd2\xef\xe9\xf8\x65\x10\xbf\xc3\x7c\x73\xa3\x98\xf7\x98\x3f\xaf\x1d\xeb\x84\x59\x21\x92\xcf\xa2\xd2\xda\x69\xeb\x05\x4e\x49\x41\x77\xc7\x84\xb3\xf5\xac\xa0\xd1\x65\x53\x9f\x11\xb9\xba\xfd\xe5\xe1\x71\xf3\x69\xf3\x08\x7b\x81\xa8\xe8\x39\x00\xa3\xfd\x8e\xff\xbf\xb9\x7f\x78\xf8\xaf\x86\x6f\x07\xd9\xc2\x84\xce\x7a\xcc\xb5\x33\xbc\xe3\x70\xf4\x79\xd4\x5e\x25\x38\xd8\x11\x77\x33\x42\xe0\xa2\x99\x21\x1b\xa4\x2c\x01\x7c\x54\x88\xca\xef\x59\xc2\xc8\x62\x78\xdd\x83\xef\x85\x3c\x56\x4f\x5f\x40\x81\xd5\x99\x9f\x55\x19\x08\xd9\x1a\x85\xce\x19\x4e\xee\x08\x11\x55\x91\x3b\xcc\x30\xd0\x7e\xa6\xee\x2b\x19\x26\x56\x98\x5e\xaf\x6e\x09\x2f\x3e\xa0\x0e\x92\x53\x4d\x92\xed\xfa\xbc\x80\x69\x90\x23\xa8\x39\x23\x0f\x6e\xe7\xa2\x23\x43\xdf\xb3\x0c\xd2\x11\xce\x0a\x06\xdc\x97\x29\xdc\x68\x3d\x1c\xb6\x72\x78\xdf\x52\x88\x01\x22\x9a\x2b\xdf\xe4\xb1\x6a\x98\xc0\x45\xdb\xd6\xd8\x2b\x5d\x23\x2d\x62\xd8\x3a\xbf\xbb\xec\x6c\x7a\xe9\x63\x85\xa4\xe8\xb2\xef\x6b\xa7\xbc\xd1\x16\xe5\xe9\x16\x24\xa5\xd8\x35\xda\x44\xe5\xa6\x5c\xd0\xab\x1e\x2f\x38\xb3\x1b\xb1\x52\xc0\x9c\x8a\xdb\x07\x19\x83\x4b\xe9\x9a\x30\x90\x47\xd6\xe2\xb0\x98\x6a\xbd\x15\x7d\x79\xa1\x83\x08\xbd\x58\x74\x34\xcc\x96\x31\x90\xcb\x18\x28\xa3\xb7\x5a\xcd\x65\x45\xa5\x6d\xc9\xe3\xd9\x2c\x95\x9d\xc2\xbf\x08\xda\x1e\x20\xea\x05\x49\x99\x3c\x0e\xa4\xb6\x94\xef\x64\x04\x6a\x92\xab\xbe\x7f\x1e\x31\x1f\x2f\x71\xca\xd5\x06\x32\x76\xa4\x86\x19\x7c\x48\xbe\x6a\x9b\x8f\xe5\x42\xef\xe0\x3e\x06\xbe\xbe\x13\xfd\xb6\xb4\x78\xb6\xcf\x3c\xe5\x8a\x66\xc4\x9d\x36\xaa\x43\xc5\xe9\xe7\xc8\x2c\xd4\x34\xc9\xae\xc3\xa5\xbe\x8a\x52\x0d\x45\xd7\xa1\x82\x36\xb5\x19\x0b\x0b\x43\x87\x6d\x80\xa0\x87\x3f\x58\x48\xc7\x74\x4a\x74\x05\x36\x1a\xb0\x39\x07\xf1\x6f\xaf\xa3\x51\xc4\xe5\x94\xd8\xee\x1e\xd2\x60\xef\x35\x1a\x69\xc9\x11\xe3\xc7\x5e\xfc\x29\xf8\xea\x58\x05\x73\x43\x75\xac\xd3\x1f\xaf\xb1\x32\xb7\x16\x99\xae\xd5\x9f\xb4\xbc\xe1\x70\xfa\x21\xd5\x0a\x4c\xd3\xe9\xed\xf1\xc2\x8c\xde\x0c\xb5\x42\x78\x8b\xd2\xcf\x00\x00\x00\xff\xff\x5a\x69\x9e\xcc\x71\x07\x00\x00")

func dataOpenwrtWin10ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraDnsmasqConf,
		"data/openwrt/win10/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin10ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/dnsmasq.conf", size: 1905, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x96\x4b\x6f\x1a\x49\x14\x85\xf7\xfc\x8a\x92\xd8\xcc\x2c\xfa\x50\xf7\xd6\xb3\xbd\x9b\x19\x3c\x11\x8b\xd8\x16\x76\xe4\x35\x86\x76\x4c\x82\x69\xd4\x34\xc2\xce\xaf\x8f\xaa\xfd\x22\xab\x7b\xbd\xe6\xeb\xa3\xc3\x7d\x9d\x1a\x8f\xc7\xa6\xdd\x35\xdb\x63\xd7\x9b\xe3\x7a\x4b\xd6\x34\x4f\x7d\xb7\x30\x7f\x4d\x9a\x7e\x39\xb9\x5f\x77\xcd\x71\xb1\xd9\xe0\xb0\x6f\xba\xbf\x47\x05\xfe\xda\x76\x8d\x59\x6f\xef\xdb\x33\xf3\xd0\xf7\xbb\xfd\xd9\x64\xf2\x7d\xdd\x3f\x1c\xee\xb0\x6c\x1f\x27\xcb\x6e\xf1\xeb\xb9\x7a\x5c\x3c\x4d\x6e\xd7\xdb\x55\x7b\xdc\x5f\xef\x9e\xff\xdd\xb4\xcb\x9f\x4d\x37\x1a\x8d\x4d\xb3\xbd\x6f\xbb\x65\x63\xba\xf6\xd0\x37\x9d\x99\x5e\x5c\x8f\xd6\xbb\x7e\x71\xb7\x69\xf6\xa6\xea\xcd\x76\xd1\x9b\x6a\x66\xae\xe6\xe7\xf3\xcb\x6f\x37\xb3\x8b\x2f\xa6\xda\x99\x7e\xb9\x33\x55\xb5\xda\xb5\x5d\x6f\x82\x33\xd5\x0f\x33\x3f\x9f\xce\xe6\xe7\xff\xdd\x98\xaa\xea\xdb\xaa\xfc\xb0\x37\xc1\xc9\x4a\x87\x95\x52\x69\x34\x36\xdd\x61\xd3\xec\x4f\x24\x67\xe6\xff\xcb\xf9\xed\x3f\xf3\x69\xf9\x6c\x3a\xbf\xbc\x32\xd5\xca\x90\x43\xca\x60\x17\xc0\x3e\x69\xe0\x1a\xec\x6a\xc4\x5a\xc1\x66\x0b\x62\x04\xaf\x40\xc9\x26\x38\x10\x67\x25\x5b\xd4\xb5\x2c\x13\xd8\x5a\x09\x66\x87\x3a\x81\x52\x06\x25\x27\xc1\xde\x22\x25\x30\x7b\x88\x26\x3e\x50\x22\x2d\x5b\x9a\xa1\x16\x8e\xb0\x13\x16\x6b\xec\x2d\x72\x29\x70\x42\xd0\xd8\xa8\x2d\xc8\x45\x7c\x02\x65\xb1\xc2\xde\x82\x2c\xc1\xc7\x52\x65\x0d\x4c\x1e\xec\x09\xe4\x35\x36\x88\x32\xc8\x3a\x88\x43\x5c\xd8\x32\x12\x65\x3a\x82\x38\xc6\x03\x9d\x40\x9e\x91\xa2\x04\x87\x62\xd6\x22\x06\x64\xb1\x21\xaf\xec\x20\x5e\x8b\xa6\x07\x9a\xc0\x11\xcc\xa2\xe7\xc0\xa0\xe8\x41\x35\x21\x04\x15\x1c\x41\x64\x11\x65\xd3\xaf\x30\x97\xd9\x53\xc1\x35\x12\x81\x82\x38\x1c\x05\x2e\xbb\x17\x09\x72\xbb\xdf\x61\x87\xac\xf9\x83\xec\x8a\x15\x9d\xe5\xc2\xc6\x5a\x63\x39\x7a\x78\x04\xaf\x5a\xbf\x18\x50\x4c\x5b\xab\xb8\x02\x1f\x6c\x2d\x1e\xa2\x37\x36\xab\x5d\x84\x81\x66\x95\x72\x00\x07\x86\x17\x59\xb2\x1e\xde\x82\xc9\xc2\xb1\x1a\x26\x38\xb1\x79\x03\xec\x87\x24\x49\x3a\x65\x8f\x9c\x21\x97\xe2\x84\x95\x73\xe4\x9d\x25\xab\xaa\x05\x93\x7f\xb9\xcd\x62\xaf\x5f\xe8\x00\xf2\x51\x13\x52\xe4\x08\x1c\x1c\x9c\x07\x3b\x35\x1d\x49\x35\x1d\xe4\x3c\x28\x59\x50\x0e\x48\xb2\x78\x48\xc3\x30\x95\x8f\x9c\x78\x19\xff\xa0\xe5\x82\x9f\xd0\x5e\xef\x24\xa8\x1e\x10\x31\x23\x3a\x50\x46\x92\xdf\x30\x35\x0d\xaf\x9d\x21\x2b\xe4\x23\xcd\xd6\x97\xf7\x11\xd5\x49\x55\xef\x82\x53\xd9\xde\x72\xd8\xbd\x02\x4f\x25\x3b\x53\xd9\x49\x25\x5b\xe2\x56\x8e\x8b\x37\x38\x94\x40\x14\x37\xf2\x8d\xae\x4b\x6f\x3e\x01\xf3\x67\x94\x9d\xb8\x66\x27\xb0\x3c\x21\xaf\x30\x97\x37\x9e\xca\x73\xcc\x43\xce\x71\xf0\xbf\x03\x00\x00\xff\xff\x3b\x31\x8f\x1c\x5d\x0c\x00\x00")

func dataOpenwrtWin10ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10ExtraFirewallUser,
		"data/openwrt/win10/extra/firewall.user",
	)
}

func dataOpenwrtWin10ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/extra/firewall.user", size: 3165, mode: os.FileMode(438), modTime: time.Unix(1518299015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x9c\xcf\x73\xab\xba\x15\xc7\xf7\xef\xaf\xc8\xcc\xdd\xb4\x0b\x2b\x3a\x12\x60\xf3\x66\xba\xe9\xbe\xab\x2e\xba\x16\x42\xb6\x99\x80\x20\x92\x6c\xc7\xfd\xeb\x3b\xc2\xbe\x09\x71\x40\x7c\xdd\xf7\x56\x77\x7c\x3e\x48\xe7\xe8\xfc\x84\xc0\xfb\xf5\xeb\xd7\x4b\x3f\x18\x7b\x71\xe1\xe5\xd2\x58\xe2\x2f\x7e\xb8\xbe\xfc\xed\xd5\x04\xfd\x5a\x5b\xdf\x29\xff\xce\x74\x6f\xf7\x7f\xff\x23\x92\xff\xea\x9d\x79\x69\xec\xbe\xff\xf3\xe5\x18\xc2\xe0\xff\x7c\x7d\x3d\x34\xe1\x78\xaa\x98\xee\xbb\x57\xed\xd4\x7f\xaf\x9b\x4e\x7d\xbc\xfe\xa7\xb1\x75\x7f\xf1\xff\x1e\xae\xff\x6c\x7b\xfd\x66\xdc\x1f\x7f\x78\xe3\xce\xc6\xfd\xe3\x55\x6d\x38\xe7\xc4\xd4\xa6\xf3\xa6\x3e\x18\x66\x4d\x78\x7d\x14\xd6\x7a\x59\x2a\x52\x97\xca\x94\x30\x4b\x09\xf3\x94\xb0\x48\x09\xb7\x29\xe1\x2e\x25\x2c\x13\x42\xe2\x29\x61\xea\xfc\x68\xf9\x84\x66\x7f\x65\xaa\xf6\xc4\x3a\x6f\x47\x1f\x7e\xff\x5d\xb0\xce\xab\xda\xcf\x5c\x21\xe6\xae\x70\xaa\x9e\xf9\x59\xcb\xb9\x1f\x43\x73\x6e\xc2\x95\x5d\x6e\x91\xf2\x20\xad\xad\xf9\x38\x3d\x6e\x5b\xdb\x8f\x1f\x9c\x9f\x59\xfa\x66\xce\x4f\xb5\xe7\xcd\x6c\xea\xc1\x33\x15\xea\x2e\x3c\x08\xde\xd4\x46\xd7\x76\x63\x3d\x53\x75\x30\xfa\xc8\x6a\x33\x91\x3a\xa7\xae\xc4\x69\x33\xb8\xbe\x66\x75\xcf\x6a\x3f\xb0\x6e\x60\x5d\xa3\x5d\xef\xfb\xfd\xe3\x62\x37\x5c\x3c\x87\xcb\xe7\xf0\xec\x19\x5c\x3c\xa7\xbb\x78\x4e\x77\xf1\x9c\xee\xe2\x39\xdd\xb3\xe7\x74\xcf\x9e\xd3\x3d\x7b\x4e\xf7\xec\x59\xdd\xf3\xe7\xf0\xe2\x39\x7c\xfb\x1c\xbe\x03\xf1\x6a\xa1\x4a\x54\x8b\x55\xa2\x9a\xaf\x06\x55\x63\x0f\x63\xda\x2e\xec\xd3\x4a\xc9\x69\xa3\x18\xd5\xee\x3c\x2b\xd2\xcb\xa2\xc3\x9c\xc8\x92\xe4\xd9\xc6\x2c\x89\x8a\xf9\xbd\x6e\xa2\xc4\x55\xf3\x7b\x89\x6a\xa3\x7b\x37\xf6\xb7\xa1\x61\x43\xfc\x47\x0a\x13\x18\x26\x31\x2c\x5b\xc1\x2e\xd6\x13\xbb\x58\x3f\x5f\x73\x2b\x2b\x07\x48\x79\xe9\xf5\x91\x0b\xce\x85\x90\x62\x97\x58\xcf\xb3\xf8\xcf\xc6\x1e\x36\xfe\xfa\x28\xbb\x2e\x7b\xf9\xba\xec\xe5\x9b\x68\xce\x29\x3a\x39\x37\xe8\xb9\xfa\xae\x7f\xc6\xa6\x56\x2c\x98\xd6\x74\x26\xb8\xeb\x52\x80\x6a\xa5\x8f\x86\xd5\x2a\xa8\x4e\xb9\x30\x6f\xba\xae\xed\xec\x8e\xb5\x27\xc1\x33\xd6\xf6\x96\xb5\xad\xbd\x3c\x28\x19\xa5\xa5\x5c\x96\x0a\x9e\xd1\x96\xb5\xfa\xba\x28\x96\x94\x14\xe7\x3c\x2d\x4e\x2f\xbe\xcd\x13\x62\x12\x59\xc2\x2e\x51\x30\xd5\xf9\x92\x75\xde\x68\xfb\x43\x9a\x89\xc4\xca\x59\x5e\x26\x84\x65\xb6\x2c\x2c\x8b\x7c\x49\xa3\x23\x01\x81\xfe\x49\x25\x93\x54\x1f\x17\xc3\xf5\x2e\x9a\x0d\xd7\xe3\x62\xbd\x1a\x45\x62\x79\x41\x31\xbf\x60\xdf\x0d\x2a\x98\x0f\x7d\x54\xf6\x60\x98\x6e\xfb\x53\xad\x86\xe1\xc1\xee\x6f\x10\xb1\xe0\xd4\x7e\xdf\xe8\x4e\x59\x75\x30\xee\x91\xb5\xa1\xb1\xa7\x53\xc7\xea\xe5\x62\xad\x7b\x37\x30\x1f\x92\x72\xf3\x11\x58\xe7\x9b\xa0\xea\xbd\x67\x87\xb6\xaa\x6d\x6c\x17\x0b\xfc\x80\x4f\x54\x7a\xc0\x27\x18\x3d\xe0\x13\x83\x8e\x35\x72\xd0\xec\xcc\x63\x16\x7f\x3b\x93\xba\x92\xea\xfd\x34\x97\xd9\x75\x25\x2f\xd6\x0b\x4e\xf1\xbf\xe5\x92\x58\x57\x79\x52\xe8\xf5\x91\x38\x51\x1c\xe1\x05\x0a\x6e\x31\x70\x27\xd3\x7a\x4d\x40\x50\xc7\x92\xc0\xad\x4b\x81\xae\x98\x6a\x27\xdf\x40\x89\x81\xf1\x80\x40\x10\x3c\x70\xe2\x22\x03\x41\xf0\xc0\x89\x4b\x74\xc5\x0c\xd5\x31\x03\x57\x44\xc3\x8c\x48\x48\x14\xc4\x7c\x4d\x04\xfa\x9a\x48\x94\x20\x28\x51\x1d\x33\x50\x47\xc1\xc1\xad\x85\x00\x7d\x2d\x50\xab\x05\x1a\x3d\x42\x62\x59\x48\x12\x4c\x57\x92\x68\x84\x4b\xd4\x33\x12\xf5\x8c\x44\x53\x41\xa2\x05\x20\x23\x50\xc7\x0c\xb5\x3a\x13\x05\x0a\x82\x07\x9e\x49\x0e\x82\x68\xe0\xe6\x2b\x4d\x68\x02\x82\xc7\x93\xa3\xbe\xce\xc1\xf6\x41\x79\x86\xea\x98\x81\xd1\x53\x70\x30\x28\x0a\x42\x41\xd4\xea\x02\x4d\xd7\x02\x4d\x85\x22\x03\x83\x62\x8b\xfa\x7a\x8b\x16\xfb\xad\x04\xad\xde\xa2\xf1\xb8\x23\xd0\xea\x9d\x00\xad\xde\xa1\x59\x88\x8e\x33\xb4\x43\x0b\xe9\x0e\xed\xae\x25\x07\x57\x2c\x09\x5d\x11\x8d\xc7\x12\x75\x61\x09\x66\xa1\xe0\x84\x9d\xa3\xe0\x60\x9f\x11\x1c\xac\x3d\x82\x83\xc3\x87\xe0\xe0\xf0\x21\xb8\xc4\x52\x41\x70\x2c\x5d\xe3\xcc\x05\x95\x94\x08\x42\x56\x8f\x63\x0a\x08\x62\x11\x3e\x76\x24\x0c\x14\x1c\xdc\x5a\x70\x28\x0b\x89\x0b\xd4\x18\x81\xb9\x90\xb8\xc0\x5c\x18\xe7\x75\x70\x45\x89\x45\x38\x71\x89\xc5\x63\x04\xe1\x15\xc1\xe8\x91\x58\x9f\x89\xf7\x14\x30\x88\x1a\x83\x9e\x63\xc6\xc1\x15\xc1\xd9\x8c\x78\x86\x4d\x7b\xf1\xbe\x07\x0c\x8a\x1c\xbb\x2f\x24\x9e\x63\x43\x1c\xf1\x1c\xad\x14\xe0\xf0\x41\xbc\xc0\xfa\x75\x04\xc1\xe4\x2a\xb0\xa6\x49\xbc\xc0\xe6\x70\xe2\x5b\x0e\x06\xc5\x16\xd5\x71\x8b\xcd\x3d\xc4\x77\x04\x83\xa0\xd5\x3b\xec\x2e\x2e\x82\xa0\x67\x76\x68\x01\xd8\xa1\x05\x00\x1c\x67\x88\x97\x68\x72\x95\xa8\xd5\x25\x5a\xf6\xa0\x29\x45\xf2\x1d\xed\x90\xae\x20\xf9\x4e\x70\x64\xc6\x8d\xe0\xda\xd3\xb7\x4f\x50\x22\xfd\x3a\x82\x19\xd2\xe2\x6e\x20\x66\xb5\x28\x60\x10\x35\x66\x8b\xae\xb8\x25\x20\x70\x23\xb8\xc3\xac\x2e\x39\x21\x4d\x33\x82\x19\x0a\xe6\xc8\xbd\xc2\x0d\x04\x57\x84\xee\x0b\x23\x08\x5b\x0d\x06\x6e\x19\x37\x87\x40\x02\x23\x3c\x82\x90\x0b\xcb\x58\xc5\x51\x10\x3b\x1e\x12\xe8\xd6\x12\x35\x26\x03\xcf\x11\x7b\xa0\x11\xc1\x02\xb9\xfb\x88\xe0\x16\x8c\x1e\xda\xa1\x2b\x96\xe8\x39\x96\xa0\x31\x82\x23\x2d\x2e\x82\xa8\x0b\x05\x74\xf7\x11\x41\xe8\xd1\xe7\x08\xa2\x3a\xe6\xd0\x8a\xc4\x39\x41\x07\x3e\xfe\xed\x03\x39\x47\xe2\x1c\x7a\x3c\x1b\x41\x09\xd5\x9e\x11\x44\x02\x97\x38\xcf\xa1\xe3\x19\x41\x50\x47\xac\x2b\x10\xe7\x58\xb1\x1f\xef\x73\x91\x54\x18\x9f\x87\x23\x61\x16\x41\x74\x6b\xf4\x1c\x29\x03\xad\xa6\x0c\x74\x21\x61\x7d\x66\x7c\x5a\x88\xb9\x90\x50\xcf\x10\x34\x35\x4b\xf4\xd9\x9e\x1c\x1f\x35\x61\xc9\x85\x3d\x6a\x92\xf1\xce\x1e\x5c\x51\x10\xe8\x6b\x21\x90\xfb\xc2\x1b\x08\x6e\x2d\x41\xcf\x88\x0c\x79\xa0\x11\x41\x6c\x36\x8b\x20\xba\xf5\x6e\xc5\xd7\x17\xeb\xa9\x4e\x11\xc5\xb8\x94\x88\xb3\x56\xda\x8a\x09\x98\x76\xc9\x14\x4c\xce\x08\x13\x30\x7d\xc7\xf3\x05\xae\x38\x79\x0a\x82\x5b\xaf\x14\x9d\x29\x98\xf4\xdd\x04\x4c\x67\xd5\x17\x28\xd3\xbe\x9b\x82\xa0\x31\x2b\xb7\x1d\x13\x10\xd6\x31\x5d\xc6\xbe\xc0\x2c\x1d\xb1\x53\x10\xf4\x75\x8e\xc6\xe3\x4a\x13\x9c\x82\xe8\xd6\xa8\xd5\x79\xba\xde\x4d\x41\x30\x7a\x0a\x74\xeb\x02\x5d\x71\xe5\x49\xc6\x14\x04\x83\xa2\xe4\xe0\x39\x96\x68\x84\xaf\xfc\x2d\x63\x0a\x82\x11\x5e\xa2\x56\xaf\x8c\xcb\x9f\x60\x1c\xcb\x50\x10\x33\x86\x38\x68\x0c\xad\x74\xcb\x09\x88\x1a\x43\xa8\x31\x2b\xd3\xdb\x17\xb8\xf2\x54\x7f\x0a\x82\xc6\xa0\xf5\x91\x24\x7a\xe0\x68\x7d\x24\x09\xeb\x08\x16\x00\x42\xcb\x1e\xe5\xa8\x67\x72\xd4\xea\x02\x4c\x57\x2a\xd0\xad\x0b\xb0\x21\x51\x91\xd4\xd1\x9c\xd9\xb9\x71\xe1\xa4\x5a\xa3\x5c\x38\x3e\xbc\x0d\xb7\x5f\x7f\x59\xb6\x6e\xd4\xc1\xf6\x3e\x34\xda\x33\x7f\x1a\x86\xde\x85\x65\xd4\x6b\xfc\xed\xbf\x48\xe3\xef\xff\x45\x1a\x7f\x03\xd0\xcc\xbe\x2e\x6c\xb4\x65\xe9\x03\x31\x27\x76\xee\x5d\x30\x1f\xe3\xdb\xc1\x4b\xab\xef\x5b\xf3\xf1\xf3\xcd\xe3\xfd\xe2\x3b\x94\x87\x9f\xf0\xc1\xf4\xa0\x29\x07\xd3\x9f\x8d\x03\xe1\xe3\xcc\xeb\xfd\xc7\x99\xcf\x7c\x9a\x4d\xd5\x16\xc8\xab\xe2\xcd\xa6\xba\x42\xef\x94\x4f\xc1\xe4\xdb\xb6\xcd\x06\x7b\x77\x77\xc2\xad\xac\xe7\xad\x80\xd6\xfb\xe4\xd2\xeb\xd1\xed\x9d\x77\x6d\x3c\xf3\xbd\x6e\x54\xbb\x74\xd8\x6b\x24\xb3\x5e\x05\xfd\x3d\xc0\x1a\xbb\x37\xce\x58\x6d\x58\xdb\x6b\x15\x9a\xde\xb2\xb6\x39\x3f\xbc\xeb\xfe\x76\xc6\xb3\xe8\xed\x8c\xe7\xd0\xdb\x19\xcf\xa0\xb6\x22\x76\xb9\x5c\x58\xe7\x99\x7a\x53\xb5\x7d\xf8\x32\x64\x54\xda\xcd\x7e\xbb\xd5\x7a\x71\x31\x15\x73\xa6\xee\x7a\x5b\xb3\xf1\x05\xe3\x85\x4d\x3a\x36\xf3\x41\x58\xd7\x57\x4d\x6b\xd8\xd0\x0c\x86\x29\xd7\x2c\x66\xe1\xdc\x57\x02\x9d\xb7\xc1\xf8\xb0\xfc\xd5\xc2\xed\x9b\xb4\x7e\xbf\x6f\xb4\x51\xc3\xe0\x6f\xa7\xff\x13\x71\xa7\xd6\xac\x70\x3d\xf2\xa9\x41\x02\x9a\x0b\x8f\xde\x1a\x6f\x42\x68\xec\xc1\x6f\x2a\x2b\x58\xbc\xec\x77\x88\x00\x97\xe8\xeb\xd3\x97\xd4\x55\xfe\xec\x25\xc7\x37\x68\x97\xc1\x19\xb6\xef\xfb\x30\xb8\xc6\x86\xc1\x99\xba\xd1\x0f\x87\x33\x38\x73\x6e\xcc\xe5\x67\x08\x39\x55\xcf\x1c\xf8\xec\xb7\x48\x71\x5d\x17\xd5\x51\x9f\xb9\xb8\xe0\x0a\x67\x62\xef\xf2\xec\x62\x3c\x43\x1a\x9f\xd7\x47\xd3\xa9\xe9\x72\x73\x89\xe0\x8d\x3e\x39\x33\x17\xc7\x77\xc9\xbe\x55\xfe\x18\x54\xfb\xd6\xd8\xc3\x23\x70\x57\x18\xd6\xe8\xb7\x07\xbc\xb2\x75\xd5\xa7\x9b\xd4\x27\x7c\x69\xec\x66\x18\x0c\x0c\x43\xe0\x0d\x5a\xf9\x16\xe0\x3b\xbc\x04\xd9\xc5\xaf\x2f\xee\xa2\xb9\x8f\x25\xee\xa2\xb9\xaf\x2f\xfc\x70\xb5\x26\x2c\x2b\x35\x8a\x55\xbb\x38\xc5\xdc\x00\x73\x72\xfd\x60\xd6\x9c\xff\xde\x61\x8e\x7b\xef\xfe\x12\x34\x97\x5e\xde\x5f\x66\x72\xc4\x87\xde\x19\xad\x82\x6a\xfb\x83\x33\xe7\xdf\x3d\x66\xfc\xf9\xfd\xa4\xda\x26\x2c\xef\x7f\x72\x67\x73\x65\x17\x15\x7c\x6f\x97\xa0\xc0\x99\xf7\x2d\x53\x6f\xac\xbe\x5a\xd5\x35\x9a\x85\x26\x56\xca\xe5\x91\xea\xeb\x8a\x55\xd2\xb4\x46\xf7\x5d\xa7\x6c\xbd\x7e\x5a\x00\x3c\x77\x6a\x5f\xa8\x1a\x06\xf3\xc1\xaa\x98\x95\x0b\x44\x62\xe7\x1b\x70\x72\x8b\xc5\x66\xec\x42\xe9\x0f\xa4\x83\xdf\x9b\xdf\xdf\xef\xf8\xa3\x1a\xa2\x26\xe9\x9e\x7c\x26\x7e\x1f\x4f\x27\x79\xba\x5e\x88\x67\x2f\x5b\xd8\xc1\x38\x1f\xe3\xe5\x78\xad\x5c\x53\x8f\x63\xd2\xd1\xb8\x87\x18\x1b\x6b\xf6\xcc\x78\x7d\xdf\x03\xec\x5b\x77\x1a\x6c\x59\x77\x1a\xec\x56\x77\x1a\x6c\x54\x77\x1a\x29\xaa\xff\xcf\xe9\x83\x27\x3f\xb9\xed\x58\x29\xab\xdf\xee\x50\x50\x05\x92\x9b\xdf\x73\xfe\x67\x39\x49\x17\x83\xbb\x34\x36\x97\xd5\xac\xb9\xb3\x7f\x91\x9b\xb3\x2f\x0e\x9b\x88\x8d\x60\x93\x1d\xff\x07\x1a\xac\x19\xce\x45\x8a\xd8\xae\x31\xe3\xe8\xfc\x39\xa0\xfe\x2f\x00\x00\xff\xff\x21\x5b\x47\xfd\xa2\x43\x00\x00")

func dataOpenwrtWin10SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyDnsmasqConf,
		"data/openwrt/win10/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin10SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/dnsmasq.conf", size: 17314, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x9a\x4f\x73\x1b\x45\x10\xc5\xef\xfe\x14\x5b\xe5\x0b\x1c\xf4\x3c\xdd\xf3\x3f\x37\xc0\x81\xf2\x81\x24\xe5\x84\xca\xd9\xb1\x15\x62\x70\x2c\x95\x2c\x97\x09\x9f\x9e\xea\xd9\x5d\x49\xb9\x30\x6f\x0f\xe6\xc2\x2f\x53\xdd\x33\xaf\xff\xae\xce\xcf\xcf\x87\xcd\x76\xfd\xf8\xb2\xdb\x0f\x2f\xf7\x8f\xe2\x86\xa7\xed\xb7\xe1\x87\x8b\xf5\xfe\xf6\xe2\xf3\xfd\x6e\xfd\x72\xf3\xf0\x80\xe7\xa7\xf5\xee\xc7\x33\x43\x7f\xdf\xec\xd6\xc3\xfd\xe3\xe7\xcd\xab\xe1\xcb\x7e\xbf\x7d\x7a\x75\x71\xf1\xe7\xfd\xfe\xcb\xf3\x27\xdc\x6e\xbe\x5e\xdc\xee\x6e\xfe\xfd\xb6\xfa\x7a\xf3\xcf\xc5\xc7\xfb\xc7\xbb\xcd\xcb\xd3\xfb\xed\xb7\x9f\x1f\x36\xb7\x7f\xaf\x77\x67\x67\xe7\xc3\xfa\xf1\xf3\x66\x77\xbb\x1e\x76\x9b\xe7\xfd\x7a\x37\x5c\xbe\x79\x7f\x76\xbf\xdd\xdf\x7c\x7a\x58\x3f\x0d\xab\xfd\xf0\x78\xb3\x1f\x56\x57\xc3\xbb\xeb\xd7\xd7\x6f\xff\xf8\x70\xf5\xe6\xb7\x61\xb5\x1d\xf6\xb7\xdb\x61\xb5\xba\xdb\x6e\x76\xfb\x21\xfa\x61\xf5\xd7\x70\xfd\xfa\xf2\xea\xfa\xf5\x2f\x1f\x86\xd5\x6a\xbf\x59\xd9\xff\x78\x1a\xa2\xef\x9f\xf4\x7c\x47\x9e\x74\x76\x3e\xec\x9e\x1f\xd6\x4f\x27\x47\x5e\x0d\xbf\xbe\xbd\xfe\xf8\xd3\xf5\xa5\xfd\xb3\xcb\xeb\xb7\xef\x86\xd5\xdd\x20\x1e\xa9\xa0\x28\x0a\x49\x16\x88\x56\x82\xcd\x09\x2a\x05\x22\x99\x85\x2b\xa4\x0a\x0f\xab\x38\x06\x2e\x90\x9c\x21\x21\xb0\xb0\x99\x41\x39\x58\x20\xc5\x21\xb2\x56\x14\x87\x4a\xb3\x01\x52\x12\x0b\x27\x68\x64\xdd\x2b\x19\x91\x79\xea\x22\x88\xf8\x4e\x91\xff\x47\x56\x68\x50\x82\x15\x97\x11\x51\x98\x6b\x98\x50\xc6\x56\x43\xd9\x3b\x30\x36\x28\x03\xab\x47\xcd\x48\x02\xf1\x5d\x09\x8f\xac\xba\x8a\x4a\xb1\x15\xe2\x20\x5d\xb1\xcf\x68\x45\x5f\xbe\x47\x36\xb1\xac\x24\xfb\x23\x61\x15\xa8\x63\x9c\x13\xa7\x08\xd0\xbe\x76\x26\x56\x05\x8c\xc1\x86\x4a\x8c\x90\xd0\x55\x4f\xa3\x3d\xa4\x28\x44\xbb\xfe\x05\x67\x79\x4d\xd5\x2c\xe9\x6a\xd8\xe0\x8a\xe0\x20\xb1\x7b\x17\x23\xab\x92\x90\xbb\x77\x71\x64\x89\xec\x7a\x84\x35\x76\x35\x34\xc3\x05\x89\xf4\x6e\xcc\xc4\xac\x7b\xea\x10\xa8\x3b\x36\x56\xa0\x9e\x75\x4f\xd5\xd4\xcc\xc2\x1e\x52\xbb\xb9\x22\x38\x64\xd7\x4c\xd6\x40\xc1\x09\x02\xc9\x8c\x7b\x86\x6a\x5f\xc8\x07\x52\xa8\xd7\xc8\x19\xaa\x05\x81\x79\x8c\x89\x2d\x0b\xd8\xca\xda\xe0\xed\x2d\x18\xa9\x15\x0b\xbb\x8a\xc0\xbc\x9b\x58\xf1\x80\xc6\x48\xb2\xe2\x90\x99\x57\x6b\xac\xa0\x32\x41\xd7\xd8\x00\x89\xac\xc1\xaa\xdc\x6b\x34\xe7\x02\x51\x41\x1b\x1b\x20\xa1\xc5\x12\x45\x47\x08\x51\x10\x1a\xda\x3a\x1f\x68\x3f\x67\xce\x74\x14\x50\x09\xc8\xea\x81\x1d\x2d\xa5\xab\xa1\x68\xa4\xc0\x2b\xfa\xd9\x2a\xb6\xa0\x37\x59\x74\x2d\x3e\xa2\xec\xa9\x16\x76\x5d\x01\x1d\x59\xda\x84\x9c\xe0\x69\xcf\x0a\x7c\xf7\xe9\x4e\xd8\x6e\x70\x9c\xb0\xdd\x3c\x75\xf0\xcd\xa1\xdf\x96\x9f\xc2\x5d\x45\x1c\xe0\xb0\xe4\x8a\x03\x79\xb2\x2f\x90\xc0\xa4\xb6\x53\x78\xc9\xc9\x44\xfc\x1b\x6d\xcd\x60\x84\xf6\xeb\x5d\x83\x5b\xdc\xc1\x77\x33\xc0\x09\x4c\x9a\x61\xb0\xb5\x63\x94\x38\x8c\x8e\x4c\xc2\x68\x70\x6e\x85\x97\x08\xea\x23\x2c\xfd\x84\x78\xa0\x3d\x84\x93\xb4\xb5\x64\x01\x92\x39\xab\xab\x4d\xb0\xc2\x05\xa1\xc1\x1e\xdc\xab\x54\x14\x1b\x17\x48\x56\xd4\xa3\xdf\x57\xcc\x70\x31\x3b\x18\x38\x8f\x65\x95\x92\x46\x0e\x56\xa1\x48\x85\xda\x3c\x18\x32\x53\x1d\x66\xda\xaa\x43\xbf\x49\x9e\x69\xfb\xa3\x0d\xa9\x26\x24\x9e\xf6\xcc\xe8\x32\xd1\x26\x3b\xa5\xae\xda\xee\xd9\x8a\x71\xbf\x61\x6f\xb4\x35\x0e\xa6\x3b\xca\x90\x46\x47\xa8\xe3\xe8\x8c\xe4\x6c\x5a\x25\x60\xf5\x26\x0f\x9b\xc1\x19\x8d\xa8\x4f\x6d\x02\xee\x37\xe2\x33\xec\xa1\xae\xfb\xe8\x29\x20\x20\x41\x5c\x57\x4c\x8d\x54\x0f\x77\xa1\xdd\xe8\x4e\x11\x66\x45\x82\x76\xe3\x6a\x44\xc5\xb9\x05\x07\x5b\x46\xef\x8f\xcb\x93\x11\x52\x99\x09\xd8\xe0\x08\xad\x50\x4f\x99\x1c\xe1\x6d\x6c\xe7\xd0\x10\x88\x1e\xea\x88\x52\x9e\x35\x54\x1c\x69\x6c\x63\xbb\xca\x19\x59\x8b\xa6\x7e\x13\x35\xb2\x63\xd3\xbe\x80\xed\x0b\xf2\xc8\x76\xa3\x79\x62\x3d\xb3\xce\x9b\xd8\x9c\x88\x75\xde\x24\x86\x05\x62\x8f\xd0\xa8\x1c\x9d\x20\x36\xa9\x87\xcc\x54\x3e\x71\x01\xad\x67\xc8\xc4\x36\xa2\xc1\x76\x6f\x19\xa9\xbf\x85\x9c\xe1\x4a\x74\xe2\x33\x1c\x6c\x0c\x67\xed\xb0\x51\x95\x58\x45\x1e\x61\x22\x5d\xcd\xb4\xcf\x56\x8d\x29\xda\xc4\x04\xa9\xdd\xf6\x65\x86\xdb\xe6\x99\x84\xd5\xaa\x4e\x5f\xd3\x8d\x4e\xb0\x2a\xcc\x5d\x75\x82\x2f\x44\x86\x9b\xd8\x68\x73\x1d\xe5\x9f\x8a\x43\x00\xe7\x5e\x63\x1d\xd1\xbd\xcf\xb0\xda\xf0\x15\xa8\x07\xb7\x7b\xf3\xd6\x92\xf7\x5d\x14\x19\x17\x50\x15\xfd\x7e\xe7\x04\x66\xde\xf0\x48\x13\x6b\xcf\xef\x68\xda\xec\x14\xa8\xa4\x20\x5e\xcc\x06\x24\xe6\xba\x0f\xac\x38\x62\xd1\x3f\xc2\xb2\xcc\x0e\x1b\x80\x08\x43\x42\xeb\x72\xbd\xa3\x22\xf7\x84\x26\x12\xce\x44\x5b\xb1\xef\x97\xce\x99\x16\x97\x48\x37\x67\xde\xda\xe8\x25\x74\x7f\x4e\x38\xa5\x2b\xf1\x2d\x68\xa6\xcb\x22\x4b\xca\x22\x4b\x0a\x32\xfd\x3e\xcd\x92\x05\xa6\x88\x2c\xbb\xf2\xb6\xc5\x5d\x42\x2f\x70\x54\xdd\x12\x47\xd5\x2d\x79\xa0\x5c\x88\x8f\x44\x47\xba\x52\x91\x3c\xd1\xa5\x30\x9b\xed\x19\x57\x1f\x89\x01\xcd\xba\x00\x91\x84\x22\xd4\x7d\xe7\xb6\x47\x24\x8f\x8e\xd9\x3a\x1e\xb2\xe1\x99\x69\x32\x34\x47\x5a\x5c\x5d\x84\x2b\xd5\xc5\x4c\xb0\xe7\x66\x8d\x09\xb7\x3b\x59\x84\x2f\x70\x34\xc1\xfe\x4b\xa2\x39\x40\x89\xcf\xd6\x23\x5c\x85\x29\xf3\x23\x6b\x69\x53\x0a\x6b\xf1\x48\xb3\x46\x8f\x74\xbf\x53\x9b\x68\xf1\x50\xe2\xa7\x07\x13\xad\x42\xec\x0b\x0f\x70\x60\x42\x72\x82\x43\xa5\xee\x3a\x15\x24\x69\x1b\xaf\xd0\x57\xdf\x08\x4b\x48\x20\x9a\xb5\x19\xae\xc4\xca\x77\x86\xb3\x22\x73\x66\x8c\x9b\x8a\xfe\x80\xd5\x60\xdf\xa6\xf3\xc4\x9d\xec\xc7\x02\xd2\x5f\x9f\x4a\x95\x16\x2b\x12\xa9\x5f\x16\x34\x3a\x43\x5d\x61\x3e\x0e\x1f\x70\x29\xcc\xc6\x64\xc4\x2b\x62\x40\xec\xd7\x8f\x1a\xdb\x02\x5a\x23\x97\x17\x6c\x76\x0b\x69\x9c\xe2\xba\x87\x4f\xb0\xa5\x7a\xe2\x0b\x9b\xd1\xa9\x40\x12\xf5\x33\x0a\x95\x71\xdf\x64\xc5\xc9\x0c\xff\x2f\x00\x00\xff\xff\x17\xc8\x9b\xb8\x7f\x25\x00\x00")

func dataOpenwrtWin10SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10SpyFirewallUser,
		"data/openwrt/win10/spy/firewall.user",
	)
}

func dataOpenwrtWin10SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/spy/firewall.user", size: 9599, mode: os.FileMode(438), modTime: time.Unix(1518299015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\x4d\x53\xf2\x30\x10\x07\xf0\x3b\x9f\xa2\x33\x5c\x9e\xe7\xc0\x86\x14\xc6\x11\x66\xbc\x78\xf7\xe4\xc1\x73\xc8\x4b\xc9\x90\x26\x31\xbb\xa5\xd6\x4f\xef\x20\x08\xa2\xb6\x29\xe7\xfd\x6d\x77\xf3\xdf\x4e\xa7\xd3\x22\x44\xed\xdb\x44\x45\x6b\x3d\x9f\x17\x4d\x54\x82\x74\xf1\x8f\x69\x92\x4c\x79\xac\x05\xbe\x82\x0c\xde\xfc\x9f\x1c\xf0\x53\x48\xba\xb0\xde\x84\x75\xb1\x25\x8a\xb8\x66\xac\xb2\xb4\x6d\x36\x20\x43\xcd\x64\x12\xef\xdd\xac\x16\x6f\xec\xc5\x7a\x15\x5a\x7c\x8e\xdd\xa3\x0b\x72\xa7\xd3\x64\x82\x3a\xed\x75\x7a\x60\x7c\xb9\x32\x33\x0e\x0e\xda\xa3\x39\x4e\xfc\xec\xbf\x98\xfb\x15\xcf\x1a\x53\x2e\x72\xa6\x9c\x97\x79\x72\x97\x37\x5c\xcd\xb3\x46\xe6\xb7\x31\x2a\x47\x44\x03\x2a\xb4\xde\x05\xa1\x32\x6c\xbf\x1c\x25\x25\x39\x35\x38\x51\x59\x8c\x4e\x74\x52\x90\x70\xa1\x82\x3a\x42\x6d\x65\x0a\x18\x0c\xfd\x80\x0e\x94\x76\x76\xaf\x53\x37\xa4\xbe\x76\xca\xd5\x07\x56\xd2\xf5\x61\x65\xec\xfb\x84\xd1\x25\x9c\xda\x6e\x14\x20\x76\x42\x79\x04\xaf\xe9\x3b\x5e\x5c\x1e\xa6\x30\xfe\x7a\x1c\x78\x14\x24\x07\x9a\xfa\xd3\x30\x15\x28\x84\x0d\x1f\x75\x2a\x53\x8d\x3d\xea\x79\xda\xb5\xb9\xda\x10\x1d\x66\x52\xea\x13\x7f\xa6\x84\x24\x08\x8d\xe6\x03\x77\x39\x91\x1b\xa2\x3f\x77\xf4\x7f\x94\x5c\x03\xe3\xfe\xbc\x91\xd9\x65\x4b\xa7\x4a\x48\x15\xfb\x08\x00\x00\xff\xff\x7c\xbe\x53\x60\x1f\x05\x00\x00")

func dataOpenwrtWin10UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateDnsmasqConf,
		"data/openwrt/win10/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin10UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/dnsmasq.conf", size: 1311, mode: os.FileMode(438), modTime: time.Unix(1518299017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin10UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\x4d\x73\x9b\x3c\x10\x07\xf0\xbb\x3f\xc5\xce\xf8\xf2\x3c\x07\x16\x56\x2f\x08\x72\x6b\xeb\xb4\xe3\x43\xe3\x0c\x49\x27\x67\x82\xe5\x86\xd6\x01\x06\xc4\xb8\xe9\xa7\xef\xc8\xb8\x29\x3e\x69\x39\xfb\x67\xcd\xea\xaf\x5d\x89\xf5\x7a\x0d\x6d\x67\x9b\x53\xef\xe0\x54\x37\x94\xc0\xd8\xed\x4b\x67\xe1\xbf\xd8\xba\x2a\x3e\xd4\xbd\x3d\x95\xc7\x23\x8e\x83\xed\xff\x5f\x79\xfd\xb5\xed\x2d\xd4\xcd\xa1\xbd\x81\x17\xe7\xba\xe1\x26\x8e\xbf\xd7\xee\x65\x7c\xc6\xaa\x7d\x8d\xab\xbe\xfc\xfd\x16\xbd\x96\xbf\xe2\xa7\xba\xd9\xb7\xa7\xe1\xa1\x7b\xfb\x78\x6c\xab\x9f\xb6\x5f\xad\xd6\x60\x9b\x43\xdb\x57\x16\xfa\x76\x74\xb6\x87\xcd\xdd\xc3\xaa\xee\x5c\xf9\x7c\xb4\x03\x44\x0e\x9a\xd2\x41\xb4\x85\xfb\xe2\xb6\xd8\x7d\x7b\xdc\xde\x7d\x81\xa8\x03\x57\x75\x10\x45\xfb\xae\xed\x1d\x68\x09\xd1\x0f\x28\x6e\x37\xdb\xe2\xf6\xd3\x23\x44\x91\x6b\x23\xff\xc3\x00\x5a\x86\x57\x1a\xf7\xcc\x95\x56\x6b\xe8\xc7\xa3\x1d\x66\x4b\x6e\xe1\xf3\xae\x78\xfa\x50\x6c\xfc\xdf\x36\xc5\xee\x1e\xa2\x3d\x90\xc4\x34\xc3\xcc\xa0\x32\x6c\x4a\x46\x33\xac\x51\x48\x26\x47\x22\xce\xc2\x26\x43\x21\x13\x24\xa9\x18\x98\x12\x83\x0a\x75\xc2\xa7\x22\x44\x85\xa7\x12\x29\xcb\x91\x44\xba\x44\xeb\xe0\xf6\xae\x74\x16\xd2\x2a\x41\x63\x50\x88\x1c\x93\x58\x04\xd3\xd0\xe2\x4c\xc9\x10\x8a\x24\xb8\xcb\x54\xa3\xd6\x48\x32\x63\xad\x7d\xd1\xa9\xe4\xe9\x14\x89\x72\x24\xa5\x38\x99\x5c\xe9\x60\x26\x73\x9d\xe5\x4b\x74\xce\x68\x12\x42\xa1\x25\x4a\xc9\xea\x28\xdf\xd4\x09\x6a\x42\xca\x18\x7d\x3d\xd3\xc1\x4d\xce\x35\xa7\xec\x77\x2d\x54\xb0\x61\xaf\xf4\x92\xba\x85\xe2\xd7\x2d\x51\x04\xcf\x66\x86\x25\x7f\x8f\xbc\x7e\xfd\xcb\x89\x7c\xe3\x2e\xd2\xec\x00\xbd\x4e\xd9\x85\x9f\x75\x70\x2a\xdf\x75\xaa\x97\xe4\x3d\x71\x76\xe2\x67\xae\x69\x19\x97\x41\xae\xcd\x74\xa5\x48\x14\x49\xf8\x84\x26\x2d\x54\x82\xe1\x31\x9e\x61\x21\xc2\x91\x7b\x9d\xfa\xab\x93\x64\x38\xc2\x19\xe6\xd5\x31\x61\xb5\xa4\x0c\x15\xce\x7a\x86\x97\xd4\xcc\x38\xf4\x09\xe7\x29\x6a\xde\xa1\x4c\x96\x5b\x44\x9e\x22\x89\x70\x6f\xe4\x84\x42\x0a\xcc\xfc\xb8\x2f\xc1\xe1\x32\xfe\x61\xc6\x30\xce\x70\x78\x16\x2f\x98\x24\xef\xfd\x9d\xbc\x42\x23\x90\x32\xe6\x26\x2f\x3a\x7c\xe7\xcc\x35\x33\x93\x49\x87\x9f\x0f\xe1\xbf\x8b\xfc\x3b\xa9\x18\x71\xcf\x70\x4a\x7f\x02\x00\x00\xff\xff\x54\x86\xf0\xcf\x6f\x0b\x00\x00")

func dataOpenwrtWin10UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin10UpdateFirewallUser,
		"data/openwrt/win10/update/firewall.user",
	)
}

func dataOpenwrtWin10UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin10UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win10/update/firewall.user", size: 2927, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfe\x8a\x93\xba\xc0\x40\x02\x65\x40\xaa\xc4\xc2\xce\xc4\xc0\x9c\x3a\xbe\xab\x21\xb1\x43\xec\x5e\x5a\x7e\x3d\x2a\x0c\x70\xd2\x5d\x19\xfd\xbe\xe7\xa7\xa7\xb7\x5e\xaf\x3b\x29\xc8\xad\x5a\xd7\x88\x1f\x3a\x3c\x5a\x0d\xdd\x95\x47\x03\x1f\x59\x73\xd0\x0f\x07\xc2\xfd\xf5\xea\x6c\x7d\x96\x8a\x1d\x71\x2f\xdb\x6e\x6f\x56\x74\xeb\xfd\x40\xb6\x3f\xec\x1c\x48\xf6\x50\xc3\xe7\xe9\x26\x87\xa3\x7f\x25\x8e\xd2\xf4\xa5\x9c\x9e\x92\xc0\x3b\xd6\xd5\x4a\xb1\x8e\x58\x1f\x7d\x00\xa3\x31\x18\x09\x3b\x4d\xea\x32\x41\x15\x95\xde\xbe\x13\x7e\x5d\x85\xdc\x8e\x78\x98\xaa\x20\x9b\x4b\x4f\x50\xd3\x12\x8a\x39\xba\x8c\x16\xce\x37\x01\x2e\x46\x44\x56\x97\xb5\x37\x06\xa5\x29\x19\x66\xfa\x0c\x2e\xd1\x88\x53\x2d\xc9\x40\x3c\xa3\xcf\xa7\xd6\xcd\xad\xb6\xb7\xbb\xfb\x5c\x97\x1a\x19\x65\x74\xed\x67\xcf\x29\x19\x43\xa2\xf8\xef\x92\x2d\x42\xb9\xc4\x42\xb2\x45\xac\x20\x6c\x2e\x94\xb2\x9c\xbe\x64\x71\x18\x07\xd4\x03\x19\x3a\x46\xfb\xf3\xd0\xda\x74\xe0\xaf\x00\x00\x00\xff\xff\xfe\xad\xae\xa8\x82\x02\x00\x00")

func dataOpenwrtWin7ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraDnsmasqConf,
		"data/openwrt/win7/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin7ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/dnsmasq.conf", size: 642, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x31\x6f\xa3\x30\x14\xc0\xf1\x9d\x4f\xf1\x24\x96\xbb\xc1\x0f\x9e\xb1\x81\x64\xbb\x3b\x72\x15\x43\x93\x88\xa4\xca\x4c\xc0\x69\x68\x09\x46\xc6\x88\xa4\x9f\xbe\x42\x5d\xda\xc9\xcc\xfe\xf9\xaf\x67\x3f\xdf\xf7\x41\xf7\xaa\x9b\x8c\x85\xa9\xe9\x12\x50\x77\x6b\x4a\xf8\x15\x28\x5b\x05\x97\xc6\xa8\xa9\x6c\x5b\x1c\x07\x65\x7e\x7b\xb3\x7d\xd6\x46\x41\xd3\x5d\xf4\x1a\xae\xd6\xf6\xc3\x3a\x08\x5e\x1b\x7b\x1d\xcf\x58\xe9\x5b\x50\x99\xf2\xe3\xc1\x6e\xe5\x3d\x38\x35\x5d\xad\xa7\xe1\xd0\x3f\xfe\xb6\xba\x7a\x57\xc6\xf3\x7c\x50\xdd\x45\x9b\x4a\x81\xd1\xa3\x55\x06\xb2\xed\xc1\x6b\x7a\x5b\x9e\x5b\x35\x00\xb3\xd0\x95\x16\x58\x0e\xfb\x62\x53\xec\x5e\x8e\xf9\xf6\x09\x58\x0f\xb6\xea\x81\xb1\xba\xd7\xc6\x82\x8c\x80\xbd\x41\xb1\xc9\xf2\x62\xf3\xef\x08\x8c\x59\xcd\xe6\x83\x01\x64\xe4\x2e\x8d\xf5\xc2\x92\xe7\x83\x19\x5b\x35\x7c\x4b\xe6\xf0\x7f\x57\x9c\xfe\x14\xd9\x7c\x2d\x2b\x76\x7b\x60\x35\x50\x84\x69\x88\xc4\x51\x0a\x17\x15\x21\x12\xa5\x48\x61\x84\x89\xcb\x4a\x42\x12\x21\xc6\x12\x53\x67\x57\x72\xa4\x38\x46\xe2\x21\x26\xee\x30\x47\x4a\x52\xa4\x98\x50\xd0\x62\x1c\x61\x2a\x17\x60\x1e\xcd\xa3\x2c\x98\x22\x16\x28\x50\x0a\xe4\x3f\x76\xe6\xa0\xce\x8f\x88\x25\x4a\x8e\xab\x14\x79\xe4\x7c\xda\x97\xa5\x30\x45\x72\x87\x79\x98\xa0\x88\x91\x56\x02\x49\x7c\x06\x00\x00\xff\xff\x82\x1e\x39\xc5\x2e\x03\x00\x00")

func dataOpenwrtWin7ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7ExtraFirewallUser,
		"data/openwrt/win7/extra/firewall.user",
	)
}

func dataOpenwrtWin7ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/extra/firewall.user", size: 814, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x72\xdb\x30\x0c\x86\x77\x3f\x85\xee\xbc\xb4\x83\x41\x59\x52\x9c\x4b\xee\xba\x74\xef\xd4\xa1\x33\x42\x42\x32\x2f\x22\xc0\x90\xb0\x69\xf5\xe9\x7b\x6e\xae\x4d\x93\x93\xd4\x64\xfe\xbe\xff\x07\x09\x6c\xb7\xdb\x4a\x22\x71\x49\x5a\x15\xcf\xb7\x55\x8e\x53\xf5\xc9\x90\x5a\xe3\x38\x07\xcc\x4f\x60\x85\xfb\xcf\x9b\xab\xf8\x4d\x12\x55\x9e\x7b\xb9\xaf\x8e\xaa\x31\xdf\x1b\x33\x78\x3d\x9e\x1e\xc0\x4a\x30\x36\xe1\xcf\x69\x17\xf0\x62\x7e\x78\x76\x52\xf2\xf7\x38\x7d\x1d\xc5\x3e\x52\xda\x6c\x32\xa5\x33\xa5\x2f\x06\x77\x75\x5d\xb7\x80\xbb\x90\xc9\x0d\x04\x4c\x6a\x5e\xa0\x1b\xa1\x3c\x67\x7f\x37\xfe\x05\xd6\xe5\xfd\xbe\x6b\x61\x14\x86\x71\xe4\xf2\x3a\x76\xa5\xcd\xe1\x6e\x99\x36\x75\xd7\x74\x30\xda\x69\x11\xb7\x37\xab\xf8\xb0\x5f\xc6\x6d\x7b\xb7\x02\xbb\x95\xb9\x5d\x7d\x0b\x7d\xc2\x39\x28\x21\xa2\xd2\xc5\x1e\x91\x07\xda\x83\x26\xec\x7b\x6f\x03\x32\x0e\x94\xde\xb8\x53\x03\x99\x54\x3d\x0f\x19\x1c\x2a\x42\xf0\x36\x49\x96\x5e\xaf\x4b\x04\x7c\x44\xc7\xf9\x75\xc6\x3d\xdc\x7c\x38\x43\x27\x38\x4b\x52\xba\xcc\x04\x5e\xac\x81\xe4\xc3\xcd\x43\xb9\xcc\x9f\xfd\x4f\xd1\xae\x78\x5e\x9d\x9a\xe3\xc4\xa4\xcd\x3a\xa6\x53\x92\x48\xff\x38\x73\x6f\xc9\x4f\x01\x94\x46\x0a\xa4\x69\x5a\xea\xbb\x0a\x56\x42\x40\x76\xef\x91\x13\x39\x01\x1f\xcf\x87\x25\xe5\x79\xaf\xff\xfd\x65\x41\xcd\xc2\x6f\xe8\xaf\x00\x00\x00\xff\xff\x1c\x24\xda\xa2\xc1\x03\x00\x00")

func dataOpenwrtWin7SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyDnsmasqConf,
		"data/openwrt/win7/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin7SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/dnsmasq.conf", size: 961, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd4\x31\x6f\xdb\x3c\x10\x06\xe0\xdd\xbf\xe2\x00\x2f\xdf\x37\xe8\x15\xef\x48\x8a\x54\xb6\xb6\x4e\x0b\x0f\x4d\x02\x25\x45\x66\x47\x56\x1a\xb5\x8e\x24\x48\x34\xdc\xf4\xd7\x17\x4a\x9a\xc6\x5d\x4a\x7a\xf0\xe4\x47\x87\x97\xc7\xe3\x2d\x97\x4b\xea\x87\xa6\x3b\x8c\x81\x0e\x6d\xe7\x68\x1a\x9e\xe8\xbf\xbc\x09\x75\x7e\xdf\x8e\xcd\x61\xb3\xdb\x61\x3f\x35\xe3\xff\x8b\x59\x7e\xee\xc7\x86\xda\xee\xbe\x3f\xa3\x87\x10\x86\xe9\x2c\xcf\xbf\xb6\xe1\x61\x7f\x87\xba\x7f\xcc\xeb\x71\xf3\xf3\x29\x7b\xdc\xfc\xc8\x6f\xdb\x6e\xdb\x1f\xa6\xeb\xe1\xe9\xfd\xae\xaf\xbf\x37\xe3\x62\xb1\xa4\xa6\xbb\xef\xc7\xba\xa1\xb1\xdf\x87\x66\xa4\xd5\xc5\xf5\xa2\x1d\xc2\xe6\x6e\xd7\x4c\x94\x05\xea\x36\x81\xb2\x35\x5d\x55\xe7\xd5\xe5\x97\x9b\xf5\xc5\x27\xca\x06\x0a\xf5\x40\x59\xb6\x1d\xfa\x31\x90\xd5\x94\x7d\xa3\xea\x7c\xb5\xae\xce\x3f\xdc\x50\x96\x85\x3e\x9b\xff\x98\xc8\xea\x78\xa5\xfd\x36\xb1\xd2\x62\x49\xe3\x7e\xd7\x4c\x47\x25\xd7\xf4\xf1\xb2\xba\x7d\x57\xad\xe6\xcf\x56\xd5\xe5\x15\x65\x5b\x62\x0d\xe7\xc1\xde\x83\x8d\x4b\xc1\x25\x44\x97\x28\xca\x04\xeb\x19\x16\x7f\x9d\xea\x5f\xb2\x84\x18\x89\x59\xa3\xe0\x14\x44\x18\x62\xa2\x11\x66\xec\x20\x52\x9c\x88\xad\x4a\xc0\xcc\x1e\xac\x0a\xb0\x8e\x6a\xcb\x60\xc3\xd0\x02\xcb\x51\x2b\x60\x3d\x5f\x86\x87\x8f\x66\x3e\xc2\x6c\x93\x74\x61\x20\x46\xe1\x04\xcc\x10\x65\x53\xb5\x65\x18\x93\x82\x9d\xc7\x1c\x3c\xad\x1f\xee\x79\x38\xe7\xe0\xa9\xda\x32\x84\xa3\xc3\xf4\xaa\xe7\x5f\x91\x8a\x4b\x0d\x4e\xd6\x22\x1a\x12\x7d\x00\x33\xf6\x0e\x85\x02\xab\xe8\x1b\x2c\x0c\x0c\x44\x43\xe5\x12\xed\x74\x61\x61\x2d\x8c\x01\x2b\x7f\x82\x8d\x0e\xc7\x8b\x65\xd6\x88\x37\xf9\xc8\x46\x1b\xf1\x62\xc5\x0a\x5c\x74\x30\xde\x6c\x79\x42\x5d\x2e\xa3\x33\xc4\xca\xc0\xcc\x69\x1d\x8a\xe8\x3d\xff\xc1\x25\x24\x1a\xf9\x37\x16\xf1\x29\x5b\xf1\x0d\x8b\x8a\x76\xf9\x55\x6b\x07\x4e\xd8\xcd\xcc\x2f\x3b\xb4\x4c\xb8\x94\x23\x2c\x29\xcb\xdc\x80\x9d\x82\x7e\xde\xd2\x71\xed\xc0\xec\x20\xda\x26\x3c\x41\x2e\xf9\xf9\x84\xa2\x3c\x58\x8a\x5f\x01\x00\x00\xff\xff\x22\x54\x4f\x57\xf5\x07\x00\x00")

func dataOpenwrtWin7SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7SpyFirewallUser,
		"data/openwrt/win7/spy/firewall.user",
	)
}

func dataOpenwrtWin7SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/spy/firewall.user", size: 2037, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x4f\xc3\x30\x10\x05\xe0\x3d\xbf\xc2\x52\x16\x18\x6a\x93\x10\xd1\xaa\x12\x0b\x3b\x13\x03\xb3\xe3\x3b\xa7\x11\x89\x2f\xd8\x17\x4c\xf9\xf5\x08\x52\x05\x3a\xd4\xee\x9a\xf7\xf9\xdd\x4b\x59\x96\x82\x26\x74\xd1\xb3\x88\xbd\xdb\x8a\x79\x02\xcd\x28\x6e\x14\xb2\x51\xe0\xc2\xa8\xc3\xbb\x34\xe4\xec\x6d\xf1\x63\x9f\xc9\xa3\xe8\x9d\xa5\xbd\x38\x30\x4f\x61\xaf\x54\xd7\xf3\x61\x6e\xa5\xa1\x51\x19\xaf\xbf\x8e\x9b\x51\x7f\xaa\xd7\xde\x01\xc5\xf0\x32\x1d\x9f\x06\x32\x6f\xe8\x8b\x22\xa0\xff\x40\xff\xa8\xaa\x5d\xd3\x6e\x2a\x39\xc8\xb8\x98\xe5\xe2\xef\xfb\xd5\xd4\xb5\xde\xe6\x8d\xa9\xb2\xe6\x7e\x97\x23\x0d\x62\x8e\x68\xab\xb3\x64\x96\x40\xd1\x0d\xa4\x21\xc5\x5a\xb0\xb9\x26\xc3\x03\x24\x01\x3c\x40\xae\x63\x9d\x32\xf6\xc6\x53\x20\xcb\x17\xf2\x54\x47\xb8\xea\x8f\x6c\x73\x97\x5b\x63\xb1\x96\xa7\xef\x17\xf6\xd8\x4e\x42\x90\x6d\x75\xd5\xc5\xb5\xe3\xdc\x38\xe4\x3f\x93\x78\xbe\x44\xa7\x84\x7c\xf7\x2f\x89\x31\x35\xe0\x3b\x00\x00\xff\xff\xea\x1b\x9e\x78\x2b\x03\x00\x00")

func dataOpenwrtWin7UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateDnsmasqConf,
		"data/openwrt/win7/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin7UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/dnsmasq.conf", size: 811, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin7UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\x4d\x6f\x9b\x4c\x10\x07\xf0\xbb\x3f\xc5\x48\xbe\x3c\xcf\x61\x07\xcf\x2e\xcb\x4b\x6e\x6d\xed\x56\x3e\x34\x8e\x48\xaa\x9c\x09\xac\x1b\x5a\xc2\xa2\x65\x91\x9b\x7e\xfa\x8a\x24\x8d\x40\xaa\x34\xec\x99\x1f\x23\xcd\x7f\x66\x60\xbb\xdd\x82\xed\x4d\x77\x71\x1e\x2e\x4d\x97\xc2\xd8\xd7\xa5\x37\xf0\x5f\x64\x7c\x15\x9d\x1b\x67\x2e\x65\xdb\xe2\x38\x18\xf7\xff\x66\xc2\x5f\xad\x33\xd0\x74\x67\x7b\x05\x8f\xde\xf7\xc3\x55\x14\x7d\x6f\xfc\xe3\xf8\x80\x95\x7d\x8a\x2a\x57\xfe\x7e\x16\x4f\xe5\xaf\xe8\xbe\xe9\x6a\x7b\x19\x6e\xfb\xe7\x8f\xad\xad\x7e\x1a\xb7\xd9\x6c\xc1\x74\x67\xeb\x2a\x03\xce\x8e\xde\x38\xd8\x5f\xdf\x6e\x9a\xde\x97\x0f\xad\x19\x40\x78\xe8\x4a\x0f\xe2\x08\x37\xc5\xa1\x38\x7d\xbb\x3b\x5e\x7f\x01\xd1\x83\xaf\x7a\x10\xa2\xee\xad\xf3\xa0\x15\x88\x1f\x50\x1c\xf6\xc7\xe2\xf0\xe9\x0e\x84\xf0\x56\x4c\x0f\x06\xd0\x8a\xaf\x34\xd6\x2b\x2b\x6d\xb6\xe0\xc6\xd6\x0c\xb3\x92\x47\xf8\x7c\x2a\xee\x3f\x14\xfb\xe9\xb5\x7d\x71\xba\x01\x51\x03\x29\xa4\x5d\x8a\x31\xea\x1d\x47\xe5\x44\x15\x52\x96\x23\x49\x1d\xa4\x93\x10\xad\xd3\x20\x9d\x71\x3a\xde\x61\x9a\xa2\x94\x39\x2e\x12\xfe\xa7\x4d\x34\x6a\x8d\xa4\x32\x24\x92\x21\x38\x0e\xc0\x7c\x1c\x33\x9c\xad\xc5\x89\x42\x29\x29\x04\xf3\x0d\x26\x48\x94\x23\xc5\xf1\x9a\xa9\x2c\x34\x3b\x95\xb9\xce\xf2\x10\x9d\xb3\x9b\x4a\x2a\x46\x4a\x77\xa8\x29\x50\xcb\x98\x4d\x7b\xa1\xd9\x4c\x16\x9a\xcd\xe4\x5d\x2b\x94\x6c\x24\x33\xac\xd6\xf7\x98\xe1\x2e\x92\xec\xb2\xfe\xe5\x44\x1a\x13\x76\x4d\xde\x75\xa2\x43\xba\x7c\xe5\xab\xfb\x7c\xe1\x9a\x5d\xf0\x25\x67\x0f\x9e\x74\x8a\x3a\xc1\x3c\x41\x92\x3c\xce\x09\xa5\x92\x98\x4d\x41\x06\xe0\x84\x9f\xcf\x0c\xf3\x79\xbf\x61\x52\xf9\xaa\x16\x17\x9c\x9f\xfd\x0b\x8f\x31\x95\x48\xd9\xca\xe2\x6f\x9a\x3f\x9e\xb9\x5e\x99\xe0\xab\xe6\xcf\x58\x4e\xbf\xb1\xe9\x33\x11\xa3\xce\xfe\x04\x00\x00\xff\xff\xa2\x67\x2e\x8f\x14\x08\x00\x00")

func dataOpenwrtWin7UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin7UpdateFirewallUser,
		"data/openwrt/win7/update/firewall.user",
	)
}

func dataOpenwrtWin7UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin7UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win7/update/firewall.user", size: 2068, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x31\x8f\xdb\x30\x0c\x85\xf7\xfc\x0a\x03\x59\xda\xc1\x34\xee\xa6\xe2\x80\x2e\xdd\x3b\x75\xe8\xac\x48\xb4\x43\x9c\x45\xea\x48\xc6\x72\xfa\xeb\x0b\xa7\x87\xb6\xb9\x8b\x0e\x19\xed\xf7\xf1\x89\x7c\xa2\xf6\xfb\x7d\x27\x05\xb9\xaa\x77\x95\xf8\xcb\x43\x87\xab\x6b\xe8\x3e\x0d\xe8\x71\x48\x6c\x39\xd8\x0b\x44\xe1\xf1\xf3\x6e\x63\xbf\x8b\x62\x47\x3c\xca\x53\x77\x74\x2f\xf6\x34\x0c\x13\xf9\xf1\x74\x80\x28\x79\x88\x1a\x7e\x9d\xfb\x1c\xd6\xe1\x27\x71\x92\x6a\x3f\xca\xf9\xdb\x2c\xf1\x19\x75\xb7\x33\xd4\x05\xf5\xeb\x10\xa2\xd3\x12\x9c\x84\xfb\xe5\x11\x6c\x36\xc8\x14\x55\x4c\x46\xbf\x98\xfc\x03\x4b\xc1\xb5\xd7\x11\xb2\xf1\xb5\x92\x72\x82\x8c\x1e\xb6\x6f\x8a\xd8\x74\x48\x6c\x90\x6d\x74\x8e\x46\xd7\xca\x48\x1c\x38\x22\xfc\x75\xb8\x1c\x06\x07\xe2\xe9\x0d\x28\x92\x02\xa7\xa4\xc4\xcf\xe0\x34\x63\x9b\xd4\x7e\x54\x68\x37\x3d\xdd\xa8\x99\x60\xa6\x05\xaf\xff\x51\x9e\xc0\xfc\x00\xd6\xbf\xb3\x98\x65\x22\xbe\x51\x72\x7b\x46\xc6\xd5\xfb\xff\x07\x6c\xe6\xf4\x72\x42\x3d\x43\x51\x49\x10\xb3\x81\x7a\x0b\x7c\x75\x83\x8a\xc1\x8f\xa8\x4d\xcc\x45\x11\xd3\x84\x63\x82\x64\x2b\xe4\xd2\x22\x9d\x32\x42\xfd\xb3\x2c\xd7\xca\x12\x66\x4a\xf7\xac\x49\xdd\x46\x53\x2c\x60\x39\xa8\x5b\x54\x44\x6e\xb2\xc1\x4d\x18\x1c\x67\xcc\xe8\x7a\x6e\x72\x29\x36\x5b\xde\xb4\x30\x37\x23\xaa\x16\x85\xfd\xc3\xb8\x9b\x08\x6c\x99\xd9\x89\x1c\x81\xd1\xdf\x16\x3c\xdc\x61\xfa\xf8\x31\x53\x6b\xe3\x3d\x6c\xca\xeb\x35\x18\x06\x8d\xc7\x8b\xfc\x3b\x00\x00\xff\xff\x2f\x21\x93\x50\x1e\x04\x00\x00")

func dataOpenwrtWin81ExtraDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraDnsmasqConf,
		"data/openwrt/win81/extra/dnsmasq.conf",
	)
}

func dataOpenwrtWin81ExtraDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/dnsmasq.conf", size: 1054, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81ExtraFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd3\xbf\x6e\xdb\x30\x10\x06\xf0\x5d\x4f\x71\x80\x96\x76\xe0\x89\xc7\x7f\x92\xb2\xb5\xb5\x5b\x78\x68\x1c\x28\x29\x32\x2b\x32\xdd\xa8\x55\x44\x81\xa2\xe0\xa4\x4f\x5f\x10\xc8\xd0\x4e\xa4\x67\xfe\xf8\xe1\x3b\xe2\x58\x96\x25\xb8\xc5\xce\x17\x1f\xe0\x32\xce\x0d\x81\x7d\x0d\xbe\x87\x0f\x95\x0d\x43\x75\x1e\xbd\xbd\xf4\xd3\x84\xdb\x6a\xfd\xc7\x22\xe2\xef\xce\x5b\x18\xe7\xb3\xbb\x81\xe7\x10\x96\xf5\xa6\xaa\x7e\x8e\xe1\x79\x7b\xc2\xc1\xbd\x54\x83\xef\xff\xbc\xb1\x97\xfe\xb5\x7a\x1c\xe7\x93\xbb\xac\xf7\xcb\xdb\xe7\xc9\x0d\xbf\xad\x2f\x8a\x12\xec\x7c\x76\x7e\xb0\xe0\xdd\x16\xac\x87\xdd\xed\x7d\x31\x2e\xa1\x7f\x9a\xec\x0a\x2c\xc0\xdc\x07\x60\x07\xb8\xeb\xf6\xdd\xf1\xc7\xc3\xe1\xf6\x1b\xb0\x05\xc2\xb0\x00\x63\xa7\xc5\xf9\x00\x5a\x02\xfb\x05\xdd\x7e\x77\xe8\xf6\x5f\x1e\x80\xb1\xe0\x58\x3c\x58\x41\xcb\x74\xd2\x76\xca\x4c\x2a\x4a\xf0\xdb\x64\xd7\x7f\x22\x0f\xf0\xf5\xd8\x3d\x7e\xea\x76\xf1\xda\xae\x3b\xde\x01\x3b\x01\x49\x6c\x38\x92\x40\xad\x52\x54\x71\x24\x6a\x90\xb8\xc4\x3a\xdb\x1a\x24\xc9\x53\x5a\x13\x92\xe2\x68\x34\x36\xc9\x16\xef\x96\x44\x8d\xd4\x26\x7b\x68\x81\x64\x0c\x12\x71\x34\xe9\xe8\x77\x2c\x38\xd6\x79\xc9\x2d\xd6\x84\xa4\xd3\x03\x0a\xa4\xba\x41\x32\x84\x8a\xb2\xb1\xc4\x46\x67\x60\x21\x63\x95\x8c\xca\x46\xa1\x42\xad\x50\x88\x6c\xf9\xdf\x4e\x26\x68\xf2\x7d\x8d\xc6\x38\x1b\x6f\x50\xb4\xf9\x56\x5f\x61\x29\xdd\x97\x24\xc5\xb1\xd0\x10\xf2\x4a\x24\x3b\x93\xae\x51\x6b\x24\xa9\xe2\xda\x65\x6b\x8d\x24\x9a\x6b\x74\xfa\x93\x08\xae\xb0\x6e\xe3\xd2\xa3\xe0\x19\xba\x46\x65\x90\xda\xd8\xfb\x6f\x00\x00\x00\xff\xff\xc6\xfa\x05\xbd\x22\x05\x00\x00")

func dataOpenwrtWin81ExtraFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81ExtraFirewallUser,
		"data/openwrt/win81/extra/firewall.user",
	)
}

func dataOpenwrtWin81ExtraFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81ExtraFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/extra/firewall.user", size: 1314, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd4\x41\x8f\x9b\x30\x10\x05\xe0\x7b\x7e\x05\x52\x2e\xed\x21\x06\x1b\x92\x38\x2b\xf5\xd2\x7b\x4f\x3d\xf4\x3c\x35\x03\xb1\x16\x8f\xbd\xf6\x24\x84\xfe\xfa\x2a\xad\x54\x35\xab\x65\x72\xe5\x7b\xe0\xa7\x27\xe1\xed\x76\x5b\xc5\x84\x34\x67\xae\x66\x4f\x56\x57\x25\x2d\xd5\xa7\x1a\xd9\xd5\x3d\x95\x00\xe5\x4d\xb9\x48\xc3\xe7\xcd\x3d\xf9\x2d\x66\xac\x3c\x0d\xf1\xa5\x3a\x33\xa7\xf2\x52\xd7\xa3\xe7\xf3\xe5\xa7\x72\x31\xd4\x2e\xc3\xaf\x65\x17\xe0\x56\xff\xf0\xd4\xc7\xb9\x7c\x4f\xcb\xd7\x29\xba\x57\xcc\x9b\x4d\xc1\x7c\xc5\xfc\xa5\x86\x5d\xd3\x34\x5a\xc1\x2e\x14\xec\x47\x54\x84\x5c\x3f\xa2\x91\xb0\x95\xb0\x93\x70\x2f\xe1\x41\xc2\xa3\x84\x56\xc2\x93\x80\xba\x91\x50\x5a\x48\xaf\x2f\xf4\xd1\x53\xd7\x17\x6d\x8c\x55\x53\x24\x35\x4d\x34\x7f\xa0\x5d\x27\xe9\x61\x2f\xe9\xb1\x95\xd4\x8a\xef\xda\xe3\xba\x9a\xa6\x6b\x3a\x35\xb9\x65\x95\xf7\x46\x64\x2b\xb1\x36\xe6\x24\x9c\xad\xcd\xfe\x20\xf2\x51\xd8\xd3\x68\x63\xb5\xc8\x27\x61\xb3\x56\x37\xeb\xbd\xdb\xf6\xb4\x8e\x56\x0b\xa5\x6c\x6b\xd6\x30\x86\x04\x8c\x37\x77\x06\x1a\x51\x2b\xce\x30\x0c\xde\x05\x20\x18\x31\x3f\x66\xf1\xa2\xae\x31\x33\xde\x54\x0f\x0c\x2a\x78\x97\x63\x89\x03\xff\xf9\xff\xff\xa5\x0a\x32\x7b\x1a\xcb\x6e\xf6\x24\x07\xd3\x42\xc8\x46\x66\x98\x58\x0e\xe0\x25\xc7\x84\xff\x65\xe0\x15\x7a\x2a\x8f\xcd\xcb\x5b\x50\x8c\x13\x06\xe4\xbc\xac\x7e\x8f\x81\xcb\x80\x46\x5d\x52\x0f\x8c\x4f\x63\x73\x59\x8b\xdc\x8f\x12\x97\xbc\x07\x5c\x0c\x01\xa8\x7f\xde\xeb\xef\xe6\x4f\xe7\xbc\x5f\xe0\xca\xa7\xeb\xe1\x5d\xe0\x77\x00\x00\x00\xff\xff\x15\x0d\x8c\x86\xe5\x05\x00\x00")

func dataOpenwrtWin81SpyDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyDnsmasqConf,
		"data/openwrt/win81/spy/dnsmasq.conf",
	)
}

func dataOpenwrtWin81SpyDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/dnsmasq.conf", size: 1509, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81SpyFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd5\xb1\x6e\xdb\x30\x10\x06\xe0\xdd\x4f\x41\xc0\x4b\x3b\xe8\x17\xef\x48\x8a\x62\xb6\xb6\x4e\x0b\x0f\x4d\x02\x25\x45\x66\xc7\x56\x1a\xb7\x8e\x24\x48\x32\xdc\xf4\xe9\x0b\x3a\x81\xab\x2e\x3d\x7a\xf0\xe4\x4f\x87\xbb\x23\x79\x37\x9f\xcf\x55\xdb\xd5\xcd\xa1\x1f\xd5\x61\xdb\x94\xa4\x86\xee\x45\xbd\xcb\xeb\x71\x9d\x3f\x6e\xfb\xfa\xb0\xda\xed\xb0\x1f\xea\xfe\xfd\x2c\xd2\xaf\x6d\x5f\xab\x6d\xf3\xd8\x5e\xa8\xa7\x71\xec\x86\x8b\x3c\xff\xbe\x1d\x9f\xf6\x0f\x58\xb7\xcf\xf9\xba\x5f\xfd\x7e\xc9\x9e\x57\xbf\xf2\xfb\x6d\xb3\x69\x0f\xc3\x6d\xf7\xf2\x71\xd7\xae\x7f\xd6\xfd\x6c\x36\x57\x75\xf3\xd8\xf6\xeb\x5a\xf5\xed\x7e\xac\x7b\xb5\xb8\xba\x9d\x6d\xbb\x71\xf5\xb0\xab\x07\x95\x8d\xaa\x59\x8d\x2a\x5b\xaa\x9b\xea\xb2\xba\xfe\x76\xb7\xbc\xfa\xa2\xb2\x4e\x8d\xeb\x4e\x65\xd9\xa6\x6b\xfb\x51\x39\xa3\xb2\x1f\xaa\xba\x5c\x2c\xab\xcb\x4f\x77\x2a\xcb\xc6\x36\x8b\x7f\x0c\xca\x19\x39\xd2\x7e\x93\x18\x69\x36\x57\xfd\x7e\x57\x0f\x93\x90\x4b\xf5\xf9\xba\xba\xff\x50\x2d\xe2\x67\x8b\xea\xfa\x46\x65\x1b\x45\x06\xbe\x04\x1b\x0d\x32\x36\x05\x07\xb0\x09\x28\x42\x82\x2d\x09\x0e\xff\x54\xf5\x3f\x19\xc0\x96\x25\xcb\x06\xa1\x84\x0d\x20\x31\xd9\x48\xc3\x91\x32\x49\xd6\x6a\x78\x0f\xe6\x02\x6c\xc5\xca\x26\xd8\xe9\x54\x5c\x22\x88\xc5\x39\x02\x59\x82\x61\x38\x31\x63\xc7\x20\x53\x82\x6c\x89\xd2\x9f\x83\xc5\xf2\x26\x98\x5c\x92\x2e\x2c\xd8\x10\xd8\xa5\x62\xab\x91\x1e\xd9\x12\x58\x27\x87\x76\x04\x2b\x5e\x8d\x88\x7d\x2c\xd1\xc7\x5c\x52\xb5\x23\x30\xc9\x87\xf8\xa6\xe3\xaf\x48\xc5\xc1\x80\x92\x35\xb3\x01\x8b\xaf\x2a\xe2\x32\x86\xb5\x20\x9f\xa6\x3d\x0a\x0d\xd2\x29\xd7\x89\x8d\x01\x85\x90\xf2\x5c\x0a\x8b\x78\x3f\xa0\x73\x16\x0f\xe6\xd5\x7a\xc8\xef\xaa\x70\x70\x0e\xd6\x82\x74\x99\x66\x89\x62\x37\xce\xb0\xe2\x51\x4f\xac\xd8\xe0\x57\xcb\x8e\x61\xcf\xb0\xe1\x0c\x4b\x21\xb1\x69\x11\xb3\x16\xab\x23\x6d\x61\x63\x69\x1e\x85\x78\x35\x4f\x38\x40\x9e\xb6\x6f\x38\x0e\xc5\x84\xed\xf0\x17\xa7\x27\xcd\xc6\x83\x12\x76\x14\x11\x98\x09\x1c\xc0\x2e\x61\xfb\xc5\xa7\xa4\x61\x74\x52\x26\x53\x9d\xb0\x03\x27\xfa\xac\x4c\x12\xda\x1d\x9b\x41\xc5\xf1\x70\x48\xde\x9b\xaf\xdc\x83\x8d\x4b\x98\x60\xe4\x3c\x5c\x01\x0a\x16\x5e\xee\xc9\x04\xcb\x2d\x99\x60\x39\xe9\x40\xc7\x43\x67\x5d\x82\x58\xce\xfa\xc8\x03\x9c\x06\x89\xe3\x63\x82\xbd\x38\x1b\x4f\x98\x41\x5a\x7c\x90\x27\x6d\xe1\xf8\x4f\x00\x00\x00\xff\xff\x27\x5c\x3e\x44\xc6\x0a\x00\x00")

func dataOpenwrtWin81SpyFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81SpyFirewallUser,
		"data/openwrt/win81/spy/firewall.user",
	)
}

func dataOpenwrtWin81SpyFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81SpyFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/spy/firewall.user", size: 2758, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd4\xbf\x6e\xab\x30\x14\x06\xf0\x3d\x4f\x81\x94\xe5\xde\x21\x36\x06\x93\x40\xa4\x2e\xdd\x3b\x75\xe8\x6c\xfc\x87\xa0\x82\x4d\x6c\x27\x34\x7d\xfa\x2a\x4d\xd4\xa8\x52\x93\xcf\x2b\xe7\xc7\x67\x7c\x38\xf6\x72\xb9\xcc\xdc\xa4\xed\xec\x63\x36\xf7\xb6\x66\xd9\x61\x52\x22\xea\xec\x1f\xd5\x51\x52\x65\xc3\x28\xc2\x9e\x48\x67\xcd\xff\xc5\x19\xbf\x38\xaf\xb3\xde\x1a\xb7\xcd\x76\x31\x4e\x61\x4b\x69\xd7\xc7\xdd\xa1\x25\xd2\x8d\x54\x7a\xf1\x79\x5a\x8d\xe2\x83\xbe\xf5\x56\xb9\x39\xbc\x4e\xa7\xe7\xc1\xc9\x77\xed\x17\x8b\xa0\xfd\x51\xfb\x27\xca\xf2\x7c\xb3\x62\x64\x20\xf3\xc5\x5c\x56\xfc\x7e\xff\x66\x18\x93\xd0\x94\x4d\x0e\xcd\x46\x56\xd0\x34\xaa\x86\x46\x94\x05\x36\x75\x09\x8d\x54\x78\x5f\x2a\x6f\xb0\x61\x06\x1b\x8e\x73\x74\x8e\xfb\x63\xda\x16\x99\xa2\xd0\x6b\x68\xca\x86\x43\x53\xb5\x1a\x99\xd2\xc0\x16\x72\xf8\x23\xb8\x50\x88\xac\x19\x12\x4d\x0d\x1b\x2c\x0e\x44\xb9\xd9\x0e\x4e\x28\xc0\x8e\x3c\x49\xb6\x1a\x0e\x7d\xdb\x9d\xc3\x04\x51\x03\x99\x03\x19\x7b\xe9\x5d\x70\x26\xfe\x85\xf4\x08\x10\x4b\x8a\x62\x49\x59\x45\x52\x56\x91\x94\x55\x26\x65\x95\x49\x59\x3c\x29\x8b\x27\x65\x55\x49\x59\x55\x42\x96\xcc\xe1\x98\xcb\x38\xa8\x87\x40\x71\x38\x2c\x29\x33\x67\xe0\xdd\x67\xe0\x41\x30\xba\x20\xd7\xe7\x77\x36\x7c\x16\xf3\xfe\x61\xf5\x6e\xb3\x4c\x97\x7a\x7e\x7e\x02\x7e\x1b\xab\xe3\xcd\x84\x21\x80\x6f\x4d\x5c\x0c\x96\xae\x15\xe7\x3b\xfa\x15\x00\x00\xff\xff\xc2\xea\x89\xcb\x8b\x07\x00\x00")

func dataOpenwrtWin81UpdateDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateDnsmasqConf,
		"data/openwrt/win81/update/dnsmasq.conf",
	)
}

func dataOpenwrtWin81UpdateDnsmasqConf() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/dnsmasq.conf", size: 1931, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataOpenwrtWin81UpdateFirewallUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd6\xcf\x6e\xda\x40\x10\x06\xf0\x3b\x4f\x31\x12\x97\xf6\xe0\xb1\x67\xff\x78\xd7\xb9\xb5\x25\xad\x38\x34\x89\x9c\x54\x39\x13\x58\x1a\x5a\x82\x2d\x7b\x2d\x9a\x3e\x7d\xb5\x40\xd3\xb5\x54\x69\xd6\x67\x7e\x58\x1f\xfb\xcd\xac\x99\xcf\xe7\xd0\xb4\xee\x70\xec\x3c\x1c\x77\x07\x4b\x30\xb4\x9b\x95\x77\xf0\x2e\x77\x7e\x9d\x6f\x77\x9d\x3b\xae\xf6\x7b\x1c\x7a\xd7\xbd\x9f\x05\xfd\xb5\xe9\x1c\xec\x0e\xdb\xe6\x0a\x9e\xbd\x6f\xfb\xab\x3c\xff\xbe\xf3\xcf\xc3\x13\xae\x9b\x97\x7c\xdd\xad\x7e\xbf\x66\x2f\xab\x5f\xf9\xe3\xee\xb0\x69\x8e\xfd\x7d\xfb\xfa\x71\xdf\xac\x7f\xba\x6e\x36\x9b\x83\x3b\x6c\x9b\x6e\xed\xa0\x6b\x06\xef\x3a\x58\xdc\xdc\xcf\x76\xad\x5f\x3d\xed\x5d\x0f\x99\x87\xc3\xca\x43\xb6\x84\xbb\xfa\xba\xbe\xfd\xf6\xb0\xbc\xf9\x02\x59\x0b\x7e\xdd\x42\x96\x6d\xda\xa6\xf3\xa0\x25\x64\x3f\xa0\xbe\x5e\x2c\xeb\xeb\x4f\x0f\x90\x65\xbe\xc9\xc2\x07\x3d\x68\xc9\x3f\x69\xd8\x24\x3e\x69\x36\x87\x6e\xd8\xbb\x3e\x7a\xe4\x12\x3e\xdf\xd6\x8f\x1f\xea\x45\xf8\xda\xa2\xbe\xbd\x83\x6c\x03\x24\xb1\xb4\x68\x0d\x92\xd1\x09\xd6\x28\x24\x53\x21\x91\x49\xc1\x16\xc9\x2a\x54\x2a\xc1\x52\x61\x50\xa1\x2e\x38\x2a\x02\x95\x48\xb6\x42\x12\x6c\xe2\x91\x2e\xa7\x68\xcd\xfe\xc0\x91\xb6\x9c\x56\x05\x1a\x83\x42\x54\x38\xaa\xf9\xbf\x56\x0b\x24\x2b\x51\x85\x52\xd8\xd0\x17\x4c\x64\x91\x0c\x25\xe8\x90\x81\x0c\xa1\x28\x04\xa7\x4b\x8d\x5a\x23\x49\x8b\x45\x2e\xd8\x16\x2f\xba\x94\x13\xb4\x50\x02\x85\xe6\x71\x89\x44\x15\x92\x52\x29\xcd\x8c\x34\xdb\x4c\xac\x6d\x35\x45\x57\xec\xb4\x92\x24\x14\x5a\x22\x85\x24\x6c\xef\x24\xc3\x76\x15\xa8\x29\xe9\x04\xdf\xb8\x44\xc1\xe6\x8e\xb0\x4c\x88\x7d\xc1\x69\xc5\xff\xe5\x44\xa1\xd3\x49\x9a\x1d\xef\x58\x97\xc9\xc1\x4f\x9a\x1d\xef\x37\x5d\x86\x41\x64\x07\x65\xcc\x93\x4f\xfc\xc4\x35\xbb\x99\x63\xce\xcf\x8a\x36\xe7\xdd\x94\x28\x0a\xbe\xa1\xb3\x16\xaa\x40\x7e\xc4\x23\x9c\x70\x69\x46\x5a\x08\xbe\xa0\xa0\xcb\x70\x15\x92\xe4\x0f\x3c\xc2\x69\xa9\xcf\x58\x4d\x89\xa1\xf8\x66\x22\x3c\x25\x73\xc2\x88\x9c\x71\x55\x22\x7f\x05\x46\x36\x35\x44\x55\x22\x89\xb4\x49\x3a\x63\xfe\x6a\xa5\x8a\x50\x48\x81\xb6\x48\x78\x8f\xc5\x98\xcf\xfc\x0f\x27\xec\x79\x84\xf9\x35\xbf\x60\x92\x15\x92\x9d\xc4\x53\x16\x71\xc4\xf9\x1a\x4f\x5c\xa1\x39\xbd\xb6\x27\x69\x7e\x15\x63\xcd\x1e\xb8\x08\xff\xb8\xc2\xdb\x4c\x25\xb4\x13\xe1\x92\xfe\x04\x00\x00\xff\xff\xa3\x1f\xbf\x51\x72\x0b\x00\x00")

func dataOpenwrtWin81UpdateFirewallUserBytes() ([]byte, error) {
	return bindataRead(
		_dataOpenwrtWin81UpdateFirewallUser,
		"data/openwrt/win81/update/firewall.user",
	)
}

func dataOpenwrtWin81UpdateFirewallUser() (*asset, error) {
	bytes, err := dataOpenwrtWin81UpdateFirewallUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/openwrt/win81/update/firewall.user", size: 2930, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd6\x3f\x53\x33\x37\x10\xc7\xf1\x9e\x57\xe1\x19\xea\xfd\x59\xbb\x5a\xfd\xa3\x4c\x9f\x2a\x45\x6a\x42\x48\xf0\x24\x60\x8f\x71\x06\xc8\xab\x7f\x46\x77\xd8\xd6\x82\xa4\xa7\xd3\x17\x7f\x90\x35\x67\xdd\xe9\x6e\x6f\x6f\x37\xbf\xef\x5e\xfe\xdc\xbf\xbd\xfe\x76\xf8\xf8\xe5\xdf\xfd\xc3\x3f\x8f\xc7\xcd\x41\x0e\x9b\xb7\xdd\x0b\xbb\xcd\xe3\xfb\xe9\x78\x7f\x53\xd5\xaf\xfb\xe3\xe3\x66\xf7\xf2\xd7\xfe\x6e\xf3\x74\x3a\x1d\x5e\xef\xb6\xdb\xbf\x77\xa7\xa7\xff\xfe\xc0\xc3\xfe\x79\xfb\x70\xbc\xff\xff\x83\x9e\xef\xdf\xb7\xdf\x66\xbb\xb9\xf9\xf6\xa7\x3b\xf6\x48\x19\xe2\x03\x44\x13\x99\x1a\xe8\x02\xf1\x05\xb1\x50\x1b\x7d\x9b\x1d\x58\x10\x94\x9a\x71\x5f\xb2\x4b\xf0\x60\xc9\xd4\xc6\xd8\xd6\x09\x2f\x76\x89\xb1\x15\x86\x38\x47\xa6\x3a\x5a\x3c\x4a\x02\xa7\x0c\x4e\x9e\x4c\x75\xb4\x3a\xa4\x04\x11\x45\xa6\x66\x3c\x95\xcc\xd4\xc6\xc4\xd6\xeb\x7f\x9d\x77\xa9\x89\x8e\x70\x74\x1d\x4b\x08\x7d\x9b\xeb\x35\x4d\x08\xcb\x2a\x2e\xd1\xb7\xc5\x81\x7d\xc4\x42\xcf\xe3\xa9\x14\x47\x6d\xf4\x2d\x3b\x86\xc6\x7a\x55\xc9\xd4\x40\xb3\x42\x94\xc1\xba\x2c\xa3\xc9\x91\xcf\x60\xe7\x91\xa8\x8d\x81\xad\xdb\xa0\xee\x88\x50\xc8\xe6\xc8\x27\xb0\x0a\x52\x24\x53\x1d\x1d\xea\x12\x1d\x62\x40\x56\x6a\x63\x6c\x97\xf9\x4a\x22\x9b\x23\xcf\xa8\xbf\xb2\x14\x32\xd5\xd3\x02\x8e\x0a\x2e\x8c\x10\xc8\xd4\x48\x47\x30\x3b\x44\x25\x53\x13\x2d\x75\xdf\x91\xa9\x91\x2e\x48\x0c\x0e\x8e\x4c\x0d\x74\xbd\xf1\x22\x43\x99\x4c\xcd\xb4\x47\x0e\x64\xaa\xaf\xc5\xd7\xef\xff\x5c\xf6\x25\xc6\x36\x96\xf3\xaa\xaf\xd5\xd1\x51\xa1\x08\x0a\x47\xe7\x51\xff\x4e\x8c\x01\x75\x91\xae\xee\x51\x6a\x63\x6a\x8b\xa7\x36\x26\x36\xd7\x15\x5c\xc6\xe3\x35\x84\xf5\xf3\x75\xde\x73\x0c\xad\x04\x81\x9e\xed\x1a\xbd\x27\xae\x53\xa8\x83\xb0\x83\x17\x32\x35\xd3\x0c\x1f\xc8\xd4\x48\xeb\x72\x8e\xa4\xcf\xb9\xcf\x35\xd1\x19\xa2\xd4\xc6\xdc\xe6\xd6\x76\xcf\x94\xcb\xc7\xec\x3c\x99\x1a\x68\x61\x5d\x1f\xcd\x4c\x36\x87\x3e\x80\x35\xae\x67\x96\xed\xee\x19\xc7\x90\xe0\xe1\x15\xe2\xeb\x21\xd7\xe6\xc4\x47\xc6\x55\x47\x1e\xec\x13\xf6\x0a\x4e\x0e\x9c\x03\x52\xf5\x6d\xf6\x7c\x48\xcb\x5e\xaa\xce\x47\xb2\xf9\x33\x9f\xad\xef\x5e\xfd\x06\xa8\x23\x9b\x33\x1f\xd6\x77\x0b\x93\x3d\x1f\x33\xa2\x07\x67\xa4\x42\x6d\xf4\x6c\xe1\xe5\xe5\x67\x39\x37\x4a\xa2\x2f\xdd\x7b\xc3\x70\x5a\xdf\x98\xb8\x24\x38\x6a\xa2\x7f\xed\x2b\xe0\x7a\x17\xd7\x47\xbc\x2a\x7d\xe9\xee\x7f\xa4\x7a\xa0\xd6\x09\x85\xda\x18\xdb\x7a\x06\x4b\x21\x53\x13\x1d\xea\x11\x19\xc8\xe6\xc4\x97\xfa\xc3\x90\xa9\xb9\x96\x40\xa6\xe6\xda\x7b\x32\x35\xd7\xea\xc8\xd4\x58\x4b\x7d\xfb\xbb\xac\x7b\xad\x81\x8e\x79\x39\xf9\x24\xac\xfc\x9a\x3f\x02\x00\x00\xff\xff\xd2\x6c\x57\x51\xd0\x0b\x00\x00")

func dataP2pWin10ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10ExtraTxt,
		"data/p2p/win10/extra.txt",
	)
}

func dataP2pWin10ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin10ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/extra.txt", size: 3024, mode: os.FileMode(438), modTime: time.Unix(1518299015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x9a\xbb\x72\x1d\xc9\x0d\x40\x73\x7d\x05\xab\x14\x03\x6c\xa0\xdf\x0a\x9d\x3b\x72\xe0\x78\x2d\xaf\xbd\x2c\x7b\x45\x96\x24\xd7\x5a\xfe\x7a\x17\x7a\xe6\xce\x00\xd4\x00\x13\x50\xd5\x47\x73\x6e\x5f\x74\x0f\xfa\x49\x7e\xfc\xf8\xf1\xe9\xaf\x2f\x5f\xfe\xfe\xfa\xc7\xb7\xbf\xbc\xfd\xf8\xd3\xbf\x5f\x3f\xff\xeb\xd7\xaf\x4f\x6f\xfc\xf6\xf4\xc7\xcb\x17\x4a\x4f\xdf\xde\x7e\x7c\x10\xe7\xcf\xaf\x5f\x7f\x7d\x7a\xf9\xf2\x8f\xd7\x4f\x4f\xbf\x7d\xff\xfe\xf6\xed\xd3\xf3\xf3\x3f\x5f\xbe\xff\xf6\x9f\xbf\xe1\xe7\xd7\xdf\x9f\x3f\x7f\xfd\xe5\x7f\x3f\xe0\xf7\x5f\xfe\xfb\xfc\x53\x5d\x1f\x3e\xfc\xf4\x5f\x9f\x28\x63\x1b\x38\x18\x07\x9c\x45\xdf\x1b\x48\x3c\x41\xc3\xb5\xdb\x1b\x32\x0d\x24\xea\x60\x28\xb0\x27\xd2\x24\x30\x14\xda\x4c\x09\x0c\x39\xf6\x40\xea\x1d\xa9\x14\x30\x14\xd8\xf2\xdd\x13\x0c\xf9\xf6\x48\x58\x13\x68\x08\xdd\xa9\xdd\x19\xb9\x05\x69\x34\x30\x14\xd8\x0d\xb9\x1e\x2d\xdc\x28\xb0\x3b\xd6\x01\x1a\xae\xdd\x41\x58\xb1\x66\x38\x8b\xbe\x37\x91\x0b\x83\x86\x6b\x97\x52\xc7\x8a\x63\x75\xc3\xa3\x1c\x9a\x43\x99\x4e\x9c\xf2\xf4\xe8\x80\x03\x7c\xb7\xb0\x96\x37\xba\xb0\x39\xe3\xec\xd8\x08\x29\x77\xd0\xe0\xba\x9c\x26\xce\x87\xbb\x81\xe3\x4e\xa4\x84\x44\xa0\xca\x81\x39\xb1\x14\xd0\x10\xba\x4d\xbb\x2d\x70\xa9\xc9\x0f\x18\xf2\x6d\x26\xe4\xd4\xc1\xd0\xb5\x4d\x89\xb1\x20\xd7\x0c\x1a\x7c\x97\x09\x0b\xa8\xb2\x6f\x52\xad\x48\x25\x81\x45\xcf\xcf\x48\x83\x91\xb8\x81\xc5\x0b\xbf\x24\x99\xd2\x98\x25\x00\x06\x43\x8e\x3d\xb1\x24\xa4\xda\x41\x83\xeb\x32\x35\xec\x19\x34\x84\xae\x4c\xb3\x86\x42\x9b\x2b\x81\xa1\xc0\x1e\xd8\x18\x34\x04\xae\xcc\x7d\x1d\x0c\xf9\x36\x27\x2c\x0d\x34\x04\x2e\x21\xe7\xa3\x85\x1b\x05\x36\x4b\x2a\x83\xa1\xc0\xce\x48\x73\x80\xa1\x6b\xbb\xa7\x15\x28\x97\x65\x9f\xe4\xd8\x0d\x09\xa9\xaf\x26\x3e\xca\xbe\xc9\x58\xe0\x2c\x46\x1e\x6d\xef\xe3\x00\xc7\xed\xc8\x3c\xb0\xac\xd7\x71\x40\xe8\x0e\xed\x8e\xd8\x9d\x0c\x1a\x7c\x37\x4b\xef\x13\x18\xba\xb6\x87\x8c\xb7\x89\x65\xbd\xb8\x03\xae\x5d\x92\x85\x03\xb9\x56\xd0\xe0\xbb\x94\xb0\x0f\xd0\x10\xb8\x84\x33\x83\x86\xc0\x2d\x48\x75\x82\x21\xdf\x66\xde\xdf\xc7\x01\x41\xeb\x8a\xac\xa4\x1a\x3c\xb7\x20\x95\x35\x82\xc0\xa2\xe7\x57\x24\x59\x1e\x54\xd9\x33\xd7\xc6\x07\xb9\xec\x35\x1f\x18\xf8\x95\x90\x27\x18\x72\x6c\xa6\x55\x1d\x8d\x95\x49\x0a\x2f\xfc\x2a\x0f\x09\x33\x63\x25\xd0\x70\xe5\xae\xe1\x2e\x09\x91\x40\x95\x43\x93\x94\x19\xd4\x29\xe3\x6d\x80\x86\xd0\x3d\x03\x58\xe0\xbb\xbd\x61\x3e\x42\x58\x10\x44\x3b\x30\x17\xd0\x10\xbb\x55\xbb\x57\x23\x44\x3d\x6e\xda\xbd\x9a\xab\x8e\xe6\x24\xa4\x0e\x86\x6e\xec\x69\xec\xab\x9c\x38\x9e\x17\xd3\xc9\xe5\xa6\x97\x8b\xa9\xbb\xf8\x75\xe7\x81\x54\xd6\x24\x67\xe8\xc6\x9e\xc6\xbe\xa9\x5b\xa6\x02\x8b\x8e\x2f\xdb\xc2\x8a\x5c\xb6\x0e\x3f\xc8\xb3\xd7\xa0\xc3\x9c\xc1\x50\x6c\xef\xa1\x1c\x14\xd9\xb2\x35\xab\x60\x31\xf0\xeb\x9a\x3f\x0c\x79\x76\x5f\xcb\xef\x60\x30\x14\xdb\x54\x3a\x58\x8c\xfc\x8c\xb4\xe7\xf8\x89\x9e\x3f\x50\x12\xa4\xef\xb1\x3f\xc8\xb3\xa7\x9c\x6d\x69\x1f\x98\x07\x05\x76\xc6\x0c\xaa\x1c\x98\x72\x88\x00\x0d\xbe\x4b\x9c\xb1\x0c\x30\x14\xd8\x43\xbe\x1b\x0c\x39\x76\xdf\x16\xd9\x2d\x4d\x1e\xe0\xb9\x45\x96\xab\x47\xbe\x1e\xe4\xd9\x92\xfe\x7d\xad\x1b\x16\x03\x5f\x56\x0a\x62\xb0\x18\xf8\xf2\xd3\xc0\x50\x60\x4f\x49\xa3\x53\xdf\x30\xf2\xf3\x3a\xe8\x58\xf4\x7d\x49\x3b\xce\x60\xc8\xb1\xa5\x97\x65\x89\xee\x9b\x7e\xa2\xe7\xcb\x96\x42\x12\x6f\x8b\xe6\xc4\xc8\xaf\xc8\x49\xf9\x0b\x3d\xbf\x63\x4b\x72\xac\x05\x43\xd7\x36\x67\xc9\x11\x39\xac\xaf\xac\x51\xe8\xf9\x6d\x9d\x96\xf3\xae\x3f\x28\xb0\x33\x72\x62\x30\x74\x61\xb7\x82\x05\x1b\x52\x4a\x70\x16\x3d\x8f\x33\xee\x9a\xbc\x98\xcb\x5d\x62\xab\x28\x5f\xd9\x90\x07\xa8\xb2\x6b\x52\x4a\x52\xe7\x51\x8e\x6a\x95\xe9\xbd\x15\xd0\xe0\x47\x40\x73\x9d\x99\x0d\x39\x76\x45\x9e\xc8\x79\x0b\xf8\x01\xae\x9b\xe5\x74\x0f\xaa\xec\x9a\xa5\xc8\x26\x4b\x95\x43\xb3\x28\xd3\x6b\xd7\x7a\x4a\x69\x80\x86\xd8\x9d\xda\xbd\xca\x97\xed\xb1\x0c\x1f\x7e\x34\x6b\x03\xd7\xdd\x76\xf3\xa0\x21\x76\x59\xbb\x97\x59\x78\x3e\xce\xda\xbd\x1a\xcb\xfb\xe3\xbc\x6e\xff\x34\xf8\x6e\x6f\x38\x0f\x77\x81\x9f\x09\x5b\x8e\x1f\x65\x3f\x1f\x2b\x72\xe5\xd3\x95\x2c\xbb\x76\x1b\x92\x1c\xe0\x4b\x5f\x4b\xa0\xc5\xab\x9b\xb2\x54\x70\x6d\x1c\x3a\xf6\x0c\x86\x3c\x5b\x7a\xaa\x63\x6b\x60\x28\xb2\xa7\xec\xd4\x0d\x05\x76\x91\xe3\x79\x06\x8b\xbe\x2f\xe7\xd8\x7a\xe8\x1b\xc5\xb6\x4c\x54\x16\x03\x3f\x77\x59\x91\xc1\xa2\xe7\x4b\x1e\x21\xcd\x0a\x86\x02\x7b\xdd\x52\x83\x21\xdf\x66\x59\x70\x88\xc1\xa2\xe7\x37\x94\xa5\x78\xef\xf6\x1d\x7c\x37\x0f\x99\xeb\x34\xf8\x6e\x95\x53\x5f\x05\x43\x8e\xcd\x94\xb0\xe0\xde\xc4\x07\x44\x6e\x92\x7d\xbe\xa1\xc0\x66\x39\x9e\x95\x0c\xef\xd8\xfd\x44\xc1\x2c\xdb\xf5\x02\x16\xaf\x7c\xa2\xed\xb6\x6a\x62\x49\x60\x28\xb6\xd7\xeb\x34\x18\xfb\x2c\xa9\x6b\xf0\xce\x2f\xd6\x8f\xa2\x6f\x05\xcf\xe0\xd7\x96\xff\xf2\x3d\x65\x92\xef\xc5\xb6\xba\x5e\x41\xe8\x52\xca\x60\x28\xb0\x69\xc5\x71\x42\x1c\x87\x9c\x91\xce\x40\x16\x5d\xda\x65\xed\x7e\x73\xda\xc6\xb3\xc1\x1b\x5f\x26\x23\x83\x81\x2f\x6b\x7f\x3d\xfd\x0d\x03\x9f\x52\x5b\x8d\x3d\xc9\x6b\xed\xc3\x90\x1d\x36\x58\xbc\xf1\xcb\x00\x8b\x37\xfe\x6c\x60\x31\xf4\x87\x8d\x67\xdc\xc5\x33\x6c\x3c\xe3\x2e\x9e\x81\x9d\xc1\xe2\x5d\x3c\xef\x03\x8a\x23\x22\xd2\x6f\x40\xd2\x3f\x7e\x03\xeb\x2e\x18\x2c\xde\xf8\xba\xc5\x0b\x6f\x7c\xdd\xe2\x85\x37\xbe\x7e\x63\x0b\x23\xbf\x0f\x9c\x1d\x2c\x86\xfe\xdc\x46\xba\xc6\xc8\x1f\x63\xdd\x9c\xbf\xe3\xe0\x13\x9c\xab\x1c\xf2\x2c\x5e\xfa\x7d\xfd\x36\x6a\xd0\xf6\x02\x14\xb9\x76\x3f\x6b\xd7\x78\xe5\xd7\x2e\x5b\xa5\xb5\x6b\x3a\xcb\x4e\x2e\xec\xcf\x9b\x72\xdd\x91\xbb\x3d\xa7\x34\x4f\x59\x20\xb6\x79\xdb\x03\x69\x0a\xec\x9c\x54\xdd\xd9\x3b\xa7\xec\x82\xf4\xc0\x61\x0b\xdc\xd8\x4d\xdb\x61\x2b\x1b\xca\xbf\xa0\xca\xbe\xd9\x65\x5e\x4f\x60\xc8\xb7\x27\xad\x5d\x81\x02\xdf\x95\x49\x94\x46\x01\x8b\x77\x7e\xb5\x7e\x10\xf9\x26\x4c\xeb\x5f\xee\xf1\x76\x81\x32\x32\x1d\xd1\xef\x18\xf8\x4c\xa8\xaa\x5f\x14\xd9\x65\x0d\x4f\x4d\x81\x5d\xa6\xee\xf6\x1d\xaf\xfc\x36\xb0\xd1\xba\x39\x2b\x04\x86\x7c\x9b\x8a\xa4\x07\x18\x8a\x6c\xd9\xf0\x80\xa1\xc0\xee\x8c\xfd\x88\x64\x23\xcf\xde\x6e\x38\x28\x83\x21\xcf\xce\xeb\x68\xdf\xf6\xba\x1f\x14\xd9\x03\x39\x67\xb0\x78\xe5\x4f\x5a\x23\x86\xea\xf6\x87\x0d\x06\x5d\xbf\x23\xa7\xb1\x7e\x39\xfd\x8e\xa3\x4f\xd0\x58\xb7\x2f\xef\xd8\xfd\xc4\xc4\x5a\xb0\x32\x18\xba\xb4\xeb\xba\xe5\xe6\xba\xa6\x0c\x45\xd7\xb3\x80\x1c\x04\x4b\xdb\x8e\x84\x0c\x86\x7c\x5b\xe6\x7d\xae\x15\x2c\x3a\x7e\x1b\x48\x6d\xfb\x9b\x0e\x8b\x57\x3e\x6d\xf7\x56\xb2\x64\x25\xd0\xc4\xb5\xfe\x3f\x00\x00\xff\xff\x66\x10\x5c\xed\x56\x25\x00\x00")

func dataP2pWin10SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10SpyTxt,
		"data/p2p/win10/spy.txt",
	)
}

func dataP2pWin10SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin10SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/spy.txt", size: 9558, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin10UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x96\x3d\x93\x1a\x3d\x0c\x80\x7b\x7e\xc5\xce\x50\x4b\x58\xf2\x37\xe5\xdb\xbf\x55\x8a\xd4\x84\x23\x39\x26\x39\x60\x38\x6e\x2e\x97\x5f\x9f\x31\x0b\x59\x8b\xd3\xda\x9d\x9f\xd5\x63\x8f\x56\x23\x6b\x77\xb9\x5c\x0e\x5f\xf7\x87\xa7\xe3\xfb\xeb\x97\xd3\xc7\x7f\xbf\x8e\xdb\x9f\xbb\xf3\x70\xe2\xd3\xf0\xbe\x3f\x90\x19\xde\x4e\x4f\x9b\xcb\x6e\x51\xb4\xff\x8f\xe7\xdd\xb0\x3f\x7c\x3f\xae\x87\xe7\xcb\xe5\xf4\xba\x5e\xad\x7e\xec\x2f\xcf\x6f\xdf\x70\x7b\x7c\x59\x6d\xcf\x9b\x3f\x1f\xf0\xb2\xf9\xbd\xfa\x74\xdc\x62\xf1\xe9\xd1\x9a\x2c\x86\x84\x29\xa2\x8b\x50\xad\x5b\x26\x45\x0f\x35\xe8\x6e\x74\x48\x31\x23\xd1\xf5\xdc\x89\x66\xec\x84\x6c\x0d\x92\x75\x20\x48\xb7\xc9\x44\x74\xe8\x0d\x54\xeb\xa6\xc9\x95\xc9\x8a\xc9\x25\x6a\x91\x52\x46\xe2\x00\x12\x3b\xbe\x8f\x20\xb1\xe7\x27\xe9\x27\xc5\x77\x06\x63\x44\xe6\x8c\x06\xa6\x35\x7b\xad\xd6\x9e\xaf\x41\x8a\x84\x6c\x18\x24\x2a\x7e\xf0\xe8\x3d\x92\x4d\x68\x60\x5a\xeb\x67\xdf\xe2\xc1\x4e\x6e\xb0\x73\x6e\x40\xa2\x8c\xe4\xdc\xb5\x26\x12\x7b\x7e\x92\xbe\x56\x93\x5a\x48\x19\x24\x76\xfc\x6c\x40\xa2\xda\x2d\x84\xec\x2d\x5a\x3b\x76\x56\x45\xaa\x5d\x3a\xda\xa0\x27\xa4\x54\x5a\xbc\xc6\x9e\x9f\xa4\xaf\xbd\x6d\x2d\x64\x03\x12\xdb\x3e\xbb\x00\x12\x7b\x7e\x94\x7e\x27\x7f\x76\x49\xfa\xcd\xfc\x2d\x72\x06\x41\x6d\xdb\x1a\x10\xd4\xb2\x4b\x0b\x57\xa0\xf7\xe5\x5d\x20\x2a\x0d\x0c\x12\x7b\x7e\x90\x7e\xab\x92\x45\x08\x06\x24\xf6\x7c\x96\xbe\x76\x5f\xff\x09\xc1\x8b\xd2\xdf\xb8\xbb\x23\x3f\xec\x68\xd5\xff\x6a\x78\x82\x07\xee\xee\xb0\x0f\x3b\xac\xb6\xc3\xc7\x71\xd8\x58\x64\xe3\x40\xe2\xbc\xcf\xce\x60\xca\x20\xa8\x6d\x33\x1b\x90\x38\xe7\x87\x32\x59\xc9\x26\x10\xd4\xb1\xb3\xb0\x67\x73\x19\xe3\xce\x80\xa0\x8e\x4d\xc2\x56\xeb\x5e\xc5\x45\xde\x7a\x27\x54\x71\x91\xb7\xde\x05\x63\x3c\x07\xf4\x0e\x6a\x68\xbb\xa9\x76\x1b\x59\xe4\x80\xc4\x16\x04\x69\x76\x26\x64\xcb\x98\xca\x00\x00\x41\x1d\x3b\x09\x5b\xcd\x64\x8a\x97\xab\x5a\x53\xc7\x66\x61\xab\xf7\xf4\x16\x27\x5b\xbe\xda\x35\xcd\xcc\xa5\xab\xe1\x30\x32\x52\xba\xbf\xe8\x1d\x7b\x7e\x90\xbe\x3a\x97\x6a\x21\x49\x7f\xbe\x36\xa3\x90\x0d\x48\xd4\xfe\x69\xca\xef\x54\xf9\xa8\xba\x52\x79\x41\x6d\x3b\x10\x08\xfa\x1b\x00\x00\xff\xff\x4e\x1e\xb3\x6b\xfb\x0a\x00\x00")

func dataP2pWin10UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin10UpdateTxt,
		"data/p2p/win10/update.txt",
	)
}

func dataP2pWin10UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin10UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win10/update.txt", size: 2811, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\xbf\x6e\x83\x30\x10\xc7\xf1\x9d\xa7\xb0\xc4\x7c\x3f\x7c\xf6\xf9\x4f\x18\xbb\x77\xea\xd0\x99\x52\xda\xa0\x36\x80\x08\x55\x92\x3e\x7d\x85\x54\x45\x46\x71\xb2\xdd\xd7\xfa\xe8\x6c\xb9\x2c\x4b\xf5\xda\x0f\xef\xe3\xe9\xf8\x32\x5d\x9e\xbe\xc7\xf6\xab\x9b\xd5\x64\x26\x75\xea\x87\xa0\xba\xf3\x32\x37\xc5\x8a\x9e\xc7\xb9\x53\xfd\xf0\x31\xd6\x6a\xbf\x2c\xd3\xb1\xae\xaa\xcf\x7e\xd9\xff\xbc\xa1\x1d\x0f\x55\x3b\x37\xbf\x17\x3a\x34\xe7\xea\x66\x59\x51\xdc\x1c\xd5\x6c\x11\x35\xd8\xc0\x09\x25\x73\x46\x8a\x06\x73\x04\x6b\x8b\x40\x69\x64\xac\x63\xb0\x68\x78\x87\x28\x94\x46\xce\x1a\xb0\xf7\x60\xa3\x11\x02\x6d\xea\x8e\x0e\x11\xec\x19\xc2\xb4\xa9\x47\xda\x22\x3a\xda\x54\x5e\x1b\xbb\xde\xff\xff\x90\x6b\x64\xac\x17\x08\x9c\xc0\x38\x4b\xc9\xfc\x50\x4a\x22\x73\x3f\xe1\x1d\x9c\xc1\x2e\xc2\x58\xa6\x34\xee\x5a\xd6\x11\xbc\xee\x4d\x2b\xa3\x8d\x0e\x10\x0f\xde\x09\x58\x68\x53\x7f\x01\x00\x00\xff\xff\xc6\x12\x6e\x4c\x77\x02\x00\x00")

func dataP2pWin7ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7ExtraTxt,
		"data/p2p/win7/extra.txt",
	)
}

func dataP2pWin7ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin7ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/extra.txt", size: 631, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd4\xcf\x8e\x52\x31\x14\xc7\xf1\x3d\x4f\x71\x13\xd6\xe7\x47\xcf\xe9\x7f\x96\xee\x5d\xb9\x70\x3d\xe2\xe8\x10\x1d\xee\x0d\x60\x46\x7c\x7a\x53\x50\xec\x91\xb6\x0b\x92\xfb\xa5\x9f\x90\xd2\xc2\x59\xaf\xd7\xd3\xc7\xfd\xe1\xf3\xfc\x76\xfa\xb0\x5c\xde\x7d\x9f\x77\xdf\x9e\x8f\xd3\x22\xcb\xf4\xb6\x3f\xc4\xe9\xb4\x5c\x56\x85\xbc\x9f\x8f\xcf\xd3\xfe\xf0\x65\xde\x4e\x2f\xe7\xf3\x72\xda\x6e\x36\x5f\xf7\xe7\x97\x1f\x9f\xb0\x9b\x5f\x37\xbb\xe3\xd3\xaf\x0b\xbd\x3e\xfd\xdc\x3c\x7c\xd4\x6a\xf5\xf0\xd6\x96\x2d\x62\x02\xa7\x04\x76\x91\x54\x75\x74\x86\xd8\x8c\x90\xa9\x8e\xb6\x4d\x0c\x0f\x6f\xe9\xdf\x63\xdf\x65\x88\x13\xaa\xa3\x61\x9d\x41\x34\x10\x61\x88\xcb\xa4\xaa\xa3\x23\x44\xc2\x5d\xdf\x6b\xac\xbd\x21\x55\x6d\xcd\x9c\xc0\x26\x80\xed\x95\x57\xd9\xf0\x9e\xc1\x8e\x61\x05\x9e\xa9\x8e\x96\x15\xb0\x2d\x57\x90\x90\x32\xa9\x1a\x6b\xf6\x8a\xb3\xef\xf9\xe0\x20\xce\xe0\x0f\xbf\xd7\x48\x33\xc4\x78\xd2\x39\xf0\x9e\xe1\x1c\xa9\xea\xe8\x98\x50\xf6\x5b\x8e\xa5\xae\xbe\x66\x17\xcb\x7e\x49\xe7\xc0\x7b\x86\xb0\x90\xce\x81\x2f\xaf\x40\xaa\x06\x3a\x5b\x70\xc5\x6f\xd9\xf7\x22\x16\x62\x49\x55\x47\xa7\x88\x60\xc0\x26\x92\xaa\x86\x0e\x0e\x0e\x62\x61\xe8\xef\x93\xf8\xd6\xed\x04\x0f\xef\xe1\x1c\xd8\x24\xaa\x63\x6c\x73\x6d\x5b\xbf\x92\xdb\x32\xb3\x05\x0b\xd5\x31\xb6\xb6\xb6\xad\x53\xb8\x2d\x8b\x17\x44\xa6\x3a\x86\x36\x5b\xaa\x63\x68\x39\x1b\x52\xd5\x9a\x50\xc6\xc1\x95\x1d\x46\x84\x40\xaa\x46\x3a\x43\x98\x54\xf5\xb5\x48\xba\x0e\xca\xba\xc6\x5a\x8c\x90\xce\x81\xb7\x11\x5c\x26\xb6\xca\x96\x67\xbe\xcd\xd3\x5c\x2e\x47\xd5\x58\x8b\x57\x5c\x3a\x93\xde\x81\xa3\x81\xbd\x0e\x6d\xd2\xd9\xf4\x11\xcc\x11\x62\x7d\xf9\x43\xea\x6c\xf9\xcc\xd7\xef\x26\x26\x81\x25\xd0\x7f\xfd\x3b\x00\x00\xff\xff\x80\x3f\x8c\xbe\x5f\x07\x00\x00")

func dataP2pWin7SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7SpyTxt,
		"data/p2p/win7/spy.txt",
	)
}

func dataP2pWin7SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin7SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/spy.txt", size: 1887, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin7UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xbf\x6e\xdb\x30\x10\xc7\xf1\xdd\x4f\x21\xc0\xf3\x9d\x79\xc7\xff\x1e\xbb\x77\xea\xd0\xd9\x75\xdc\x46\x68\x63\x09\x8e\x82\x34\x7d\xfa\x42\x76\x5c\xe8\xa7\xb0\xe4\x96\x6f\xf4\x39\x1b\xa4\x2c\x6a\xbb\xdd\x76\x5f\xfb\xf3\xc3\xf0\xfa\xfc\x65\x7c\xfb\xf4\x6b\x38\xfe\x3c\x5d\xba\x51\xc7\xee\xb5\x3f\xc7\xee\x65\x7c\x38\x4c\xa7\xcd\xac\x3e\x0f\x97\x53\xd7\x9f\xbf\x0f\xfb\xee\x71\x9a\xc6\xe7\xfd\x6e\xf7\xa3\x9f\x1e\x5f\xbe\xf1\x71\x78\xda\x1d\x2f\x87\x3f\x6f\xf4\x74\xf8\xbd\xfb\xf0\x69\x9b\xcd\x87\x7f\xed\xc5\xb2\x98\xc8\x8e\xbd\xa1\xc5\xdf\x05\xa9\xf3\x55\xcb\x92\x32\x8b\x7a\xc2\x6c\xf9\x80\x3e\x34\xbc\x8f\x84\xd9\xf2\x09\x7d\x2a\x78\x67\x38\x46\x56\xcd\xec\x2d\x2d\xa3\x60\x83\x67\xef\x59\x6c\x62\x11\x25\xa8\x86\x76\xa0\x5d\x5d\x6b\x20\xa8\xba\x4e\xa0\x53\x45\x07\xcb\xaa\x42\x50\x0d\xad\xa0\x8b\xab\x0c\x2c\x92\x59\x9c\xbb\xde\x1f\xcc\x96\x4f\xe8\x4b\xf7\x67\x09\x52\x26\xcc\x86\xcf\x86\x30\x8b\xbf\x74\xc7\x12\x0d\x7b\xb9\x7a\xcc\xba\x57\x17\x08\xb3\xe5\x23\xfa\xd2\xfe\x00\x48\xe8\x4b\xfb\xf3\x0f\x58\xd6\x4c\x50\x75\x6d\x0d\x41\xd5\x74\xe2\x05\x4e\xac\xbe\xf4\x64\xdf\x81\x88\xe7\xa0\x84\x59\xf3\xc1\xc3\x52\xdf\xbb\x39\x91\x57\x13\xb5\xf5\x5e\x85\x17\x5a\x75\x73\xc2\xae\x26\x4a\xa7\x82\xf8\xc8\x3e\x70\x0e\x2c\x6a\x09\xaa\xa4\xb3\xb0\x5a\xe5\x34\xef\x24\x41\xd5\x75\x30\x04\xd5\xd0\x0a\xba\xb8\xff\xef\xd7\xc5\xe6\xdb\x4a\xb1\x9b\x13\x6e\x35\x51\x3a\xd5\x6e\xc2\x71\x54\x96\x74\xff\x8a\x7b\xb6\x7c\x40\x5f\x7c\xba\x96\x20\xa1\xff\xff\x7e\xde\x40\x36\x84\x59\x7a\x9b\xcc\x2f\xbe\xf9\x08\x71\xf3\xdd\x82\xfa\x1b\x00\x00\xff\xff\x7b\x64\xbe\xb5\x9a\x07\x00\x00")

func dataP2pWin7UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin7UpdateTxt,
		"data/p2p/win7/update.txt",
	)
}

func dataP2pWin7UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin7UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win7/update.txt", size: 1946, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81ExtraTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd2\x31\x6f\xf2\x30\x10\xc6\xf1\x9d\x4f\x11\x89\xf9\x9e\xf8\x6c\x9f\xed\x30\xbe\xfb\x3b\x75\xe8\x4c\x29\x2d\x51\x0b\x89\x42\x2a\xa0\x9f\xbe\xb2\x54\xb5\xb6\x70\xdc\xcd\x7f\xf4\x13\x39\x5b\xb7\x5e\xaf\x9b\xc7\xfe\xf4\x3c\x5c\xce\x0f\xe3\xed\xdf\xfb\xb0\x7b\xdb\x4f\xcd\xa8\xc7\xe6\xd2\x9f\x02\x37\xfb\xeb\x3c\x6d\x57\x51\xfd\x1f\xa6\x7d\xd3\x9f\x5e\x86\x4d\x73\x98\xe7\xf1\xbc\x69\xdb\xd7\x7e\x3e\x7c\x3c\x61\x37\x1c\xdb\xdd\xb4\xfd\xbc\xd1\x71\x7b\x6d\xef\xfe\x6d\xb5\xba\xfb\x69\xc3\x06\x41\x81\x35\xc4\x52\x72\x2e\x48\xab\xc0\x1c\xc0\xca\xc0\x53\x1a\x35\xeb\xc0\x46\x51\x9e\x05\x2f\x0c\xb6\x0a\x4e\x10\x2c\xa5\xb1\x6c\x59\x7b\x70\xe7\x29\xcf\x92\xd7\x60\xe7\xc0\xac\xe0\x2c\x65\x55\xd1\x5a\xc1\x7b\xca\x6a\x49\x77\xf0\x0c\x16\x45\x59\x2d\x68\x1f\xc0\x8e\x61\x99\xb2\xaa\x69\x83\x20\x94\x55\x59\x6b\x13\xbf\xff\x3d\xf6\x4f\x14\xac\xb3\xb0\x10\x0b\xad\xe9\xf7\x58\x73\x62\x28\x39\x57\xa5\x4d\x64\xe9\x7d\x9d\x20\x5e\x45\x05\xe8\x8e\xd2\xa8\x5a\x49\xad\xd4\x2d\xc7\x69\xd3\x2a\x6e\x3d\xc7\x9b\xc0\x31\x14\x25\xa1\xa5\xf4\xb6\x2c\x1e\x22\x60\x63\xe3\xaa\x51\x9e\x35\x2f\x60\x1d\x28\xcf\x3f\xbc\x51\x94\x67\xc1\x6b\x65\xe1\xbb\xb8\xee\xd0\x4a\x51\x9e\x45\xef\x61\x1d\xb8\x8b\x03\x53\x56\x5f\x01\x00\x00\xff\xff\x88\xb8\xeb\x25\x76\x04\x00\x00")

func dataP2pWin81ExtraTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81ExtraTxt,
		"data/p2p/win81/extra.txt",
	)
}

func dataP2pWin81ExtraTxt() (*asset, error) {
	bytes, err := dataP2pWin81ExtraTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/extra.txt", size: 1142, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81SpyTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd5\xc1\x72\xd3\x30\x10\xc6\xf1\x7b\x9f\xc2\x33\x3d\xef\x17\xed\x6a\x65\x49\x3d\x72\xe7\xc4\x81\x73\x29\x85\x66\xa0\x4d\x26\x09\x53\xc2\xd3\x33\x8a\x49\xa3\xa5\x92\x72\xe8\x8c\xff\xd5\x2f\x8e\x6c\xc7\xd2\xed\xed\xed\xf4\x79\xfd\xf2\x75\xf3\xba\xff\xb4\x3d\x7e\xf8\xb9\x79\xf8\xf1\xb8\x9b\xb6\xb2\x9d\x5e\xd7\x2f\x89\xa7\xfd\xf6\x78\x53\xcc\xc7\xcd\xee\x71\x5a\xbf\x7c\xdb\xdc\x4d\x4f\x87\xc3\x76\x7f\xb7\x5a\x7d\x5f\x1f\x9e\x7e\x7d\xc1\xc3\xe6\x79\xf5\xb0\xbb\xff\x73\xa4\xe7\xfb\xdf\xab\x77\xe7\xba\xb9\x79\xf7\xaf\x3b\xf6\x88\x09\xe2\x1d\xd8\x2b\x99\xea\xe8\x0c\xf1\x19\x73\xa6\x3a\xda\x36\x31\x02\x82\xa7\xcb\x61\xdf\x65\x88\x0a\xd5\xd1\xb0\xe2\x91\x13\x34\x83\x95\xaa\xe3\x8e\xcc\xa7\x51\x61\xaa\xa3\x61\xd5\x21\x46\x88\xcc\x10\xcd\x64\x6a\xac\x83\x23\x53\x03\x9d\x90\x85\xea\x68\xd8\xc0\x60\x65\x78\x41\x60\xaa\xa3\x65\x05\xec\x13\x58\x13\x52\x24\x53\x57\x74\x36\xba\x75\x85\xd5\x38\x07\xc3\x39\xf4\xfc\xac\x10\xcf\x90\x40\xa6\x06\x5a\x1d\xfe\x9d\xfc\xad\x46\x9a\x21\xee\x72\xf2\x25\x07\x3e\x30\x54\xc9\x54\x47\xc7\x72\x69\xb1\xcc\x80\x6c\x0e\x7c\x60\x08\x0b\xd9\x1c\xf8\xf2\x37\x93\xa9\x81\xce\x1e\x5c\xf1\x25\xfb\x5e\xc4\x43\x3c\x99\xea\xe8\x54\x4e\xa5\xe0\xb8\xf0\x4b\xf6\x7c\xc4\xec\xc0\x6e\xf9\x85\xbd\x55\x5b\x8b\xf7\xe0\x9c\x4f\x2f\x91\xcd\x86\x9f\x15\xe5\x37\x02\x47\xe7\x23\x09\xad\xe7\xb9\x8c\x46\x84\x33\x2c\x87\x2d\x17\x10\x02\x54\xc1\x2e\x51\x1d\x5d\xcb\x5c\xae\x9e\xea\x18\x5b\xa9\x6d\xeb\x69\x57\xc3\xbe\xb6\xad\xbb\xbb\x0c\x4b\x10\xe8\xd9\x2e\x31\xb4\xb9\xb6\x79\x6c\x39\x3b\x32\x35\xd4\xe2\x84\x4c\xb5\x56\x6a\xa7\xd0\x72\x3d\x11\xf3\x4c\xa6\x46\x3a\x43\x98\x4c\xf5\x75\x59\x1b\xcb\x86\x51\xd7\x58\x97\x89\xdb\x1c\x78\x1f\xc1\x65\xe7\x32\xd9\xf2\xcc\x10\x61\x48\x86\x04\x25\x9b\xcd\x3d\xac\xbc\x45\x0e\xde\x2d\xf3\x31\x79\xcd\x7b\xeb\xdb\x7b\x64\x05\xd4\xfa\x6b\xf3\x29\x37\xdf\x64\xd3\xc7\xb2\xc6\x9c\x1e\x0f\x73\xf9\x02\xd3\xdd\x4f\x44\x88\x0f\x65\x69\xb3\xd9\xf2\x21\x22\xcc\xe0\xac\x88\x42\xa6\xae\x68\x6f\x74\xf3\xee\x54\xe3\x6a\x74\x73\xe6\x99\x4f\x4f\x5e\x5c\x02\xcb\x4c\xff\x75\xf7\x13\x19\xc1\x81\x13\x99\x1a\xeb\x18\xc9\xd4\x48\x0b\xd8\x39\xb2\x39\xf2\x8a\x20\x64\xea\x6f\x00\x00\x00\xff\xff\xdf\x31\x35\xb6\x40\x0a\x00\x00")

func dataP2pWin81SpyTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81SpyTxt,
		"data/p2p/win81/spy.txt",
	)
}

func dataP2pWin81SpyTxt() (*asset, error) {
	bytes, err := dataP2pWin81SpyTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/spy.txt", size: 2624, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataP2pWin81UpdateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x96\x3d\x73\x1a\x4d\x0c\x80\x7b\x7e\xc5\xcd\x50\x4b\xac\xb4\x5f\x5a\xca\xb7\x7f\xab\x14\xa9\x09\x26\x31\x93\x18\x18\x8c\xc7\x71\x7e\x7d\x66\x81\xc0\x0a\xeb\x6e\xbb\x7b\xac\x47\x46\xac\xb4\x3a\xe6\xf3\xf9\xf0\x75\xbb\x7b\xda\xbf\xbf\x7e\x39\x7c\xfc\xf7\x6b\xbf\xfe\xb9\x39\x0e\x07\x3e\x0c\xef\xdb\x9d\xd0\xf0\x76\x78\x5a\x9d\x36\xb3\xaa\xfd\xbf\x3f\x6e\x86\xed\xee\xfb\x7e\x39\x3c\x9f\x4e\x87\xd7\xe5\x62\xf1\x63\x7b\x7a\x7e\xfb\x86\xeb\xfd\xcb\x62\x7d\x5c\xfd\xf9\x80\x97\xd5\xef\xc5\xa7\x7f\x37\x9b\x7d\xfa\xd3\x92\x3c\x26\x41\xc9\x48\x39\x42\x0b\xb6\x9b\x03\x52\x2e\x48\x94\x41\xd1\x88\x2d\x48\x12\x30\x04\x68\xc1\x76\xc9\x65\x0c\x18\x1d\x34\xcf\x86\xc9\x35\xea\x91\xa4\x20\x71\x04\x8d\x3d\x3f\x69\x3f\x75\xfc\x98\x41\x63\xcf\x17\xed\x8b\xe1\x07\x87\x39\x23\x73\xc1\xe8\xa1\x05\xc3\x8d\x8c\x24\x1e\x43\xed\x47\x02\x45\xe3\x36\x91\x20\x65\x02\x8d\xb6\x5f\x3f\x99\x32\x21\x3b\x06\x8d\x86\x9f\x22\xc6\x88\xe4\x05\x1d\xdc\x9f\x39\x5a\xa7\x7e\x8d\x27\x7f\x77\x93\x9f\x74\x39\x30\x72\x0c\xa0\xc8\xb2\x13\x12\x15\xa4\x10\xce\xfd\xd1\xd8\xf3\x45\xfb\x56\x7f\x5a\x41\x0a\x68\xec\xf8\xc5\x81\x46\x73\xd2\x09\x39\x7a\xa4\x5a\x80\x07\x8d\xa6\x5f\xef\x98\xc3\x48\x58\xaf\xc6\x0d\xec\xb3\xbc\x09\x1e\xb9\x80\xa2\x69\xdb\x3b\x50\x34\x65\x4b\x5b\xc9\xd8\x04\xfc\x13\x88\x6a\x43\x41\x63\xcf\x4f\xda\xb7\xa6\xbd\x15\x92\x03\x8d\x3d\x9f\xb5\x6f\x4d\xfb\x4d\x48\x75\x1a\x05\x1e\xb8\x9b\x51\x1e\x32\xa6\xce\xff\x6c\x44\x82\x07\xee\x66\xf8\x87\x0c\x73\x7e\x62\xbe\x5c\x55\x8f\xec\x02\x68\x1c\xf7\x39\x38\x94\x02\x8a\xa6\xed\xba\x5d\x35\x4e\xfb\xcc\x0e\x34\x8e\xf9\xa9\x2e\x49\xf2\x02\x8a\x3a\x76\x51\xf6\x68\xed\x97\x78\x70\xa0\xa8\x63\x93\xb2\xcd\x3e\x35\x71\x55\xb7\x3d\x39\x4d\x5c\xd5\x6d\x4f\xcd\x25\x5e\x12\xc6\x00\x2d\x4c\xbb\xd2\xba\x13\x55\x94\x84\xc4\x1e\x14\x4d\xdb\x31\x83\x22\xcb\x2e\x84\xec\x19\xa5\xae\x17\x50\xd4\xb1\x45\xd9\x66\xdd\xf7\x78\x5d\x04\x2d\x75\x6c\x56\xb6\xb9\x05\xae\x71\xf2\x05\x49\xee\xfe\x95\x3b\x19\xdc\x7c\xd7\x2b\x77\x33\xc2\x43\x86\xd9\xd5\xb3\x11\x30\x9f\x5f\xf1\xa0\xb1\xe7\x27\xed\x9b\xb7\xb4\x15\x44\xfb\x56\x07\xb8\xfe\x5c\xab\x2f\xbe\x50\xfb\xa5\x68\xda\x4e\x04\x8a\xfe\x06\x00\x00\xff\xff\xfd\xdb\xb1\xd8\x05\x0b\x00\x00")

func dataP2pWin81UpdateTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataP2pWin81UpdateTxt,
		"data/p2p/win81/update.txt",
	)
}

func dataP2pWin81UpdateTxt() (*asset, error) {
	bytes, err := dataP2pWin81UpdateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/p2p/win81/update.txt", size: 2821, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xc1\x96\xab\x4a\x08\xdc\xcf\xa7\xcc\x39\xb2\x98\xed\x7c\x0d\x43\xa3\x72\x62\x43\xbf\x86\xc4\xe4\x7d\xfd\x3d\x6d\xf4\xc6\xe8\xdc\xa5\x14\x45\x35\x14\xf8\x09\x5f\x39\x29\x28\xc7\xf7\xc7\x27\x64\x76\x67\x1d\xb8\xc2\x24\x37\x06\xb2\xbc\x44\x9d\xd3\xc0\x7f\x73\xbc\x0f\x25\x97\x0d\xf5\x8c\x35\x9c\x2a\xb3\x42\x16\xaa\xe6\xd6\xc7\x06\xde\xac\xb1\x49\xd3\xc6\x9e\x19\x63\xe4\x7a\xce\xbc\xff\xd8\xfd\x25\x8a\xea\x33\x57\x3f\xa6\x61\x29\x0e\x7e\x79\x94\x35\x8d\x50\xd3\x83\xea\xd5\x47\xb7\x84\x70\x11\x1d\x56\x20\x29\x90\x69\xb0\x06\x94\x6a\x09\x28\x3b\x64\xd7\x17\x6a\xca\x6a\xb1\x76\x45\xa3\x09\xf1\x51\xed\xb7\x28\xa8\x63\xd0\xca\x9a\xa4\xd5\x9f\xd5\x61\x16\x4d\x36\xfb\xca\x5b\xe2\x64\xda\xcb\x00\x05\xdd\x8b\xd5\x78\x52\x12\x97\xc9\x1e\xe0\x81\x21\x04\x78\xc1\x8c\x12\x4c\xa3\xda\x64\x83\xf0\x5a\x20\xe5\x04\x99\x03\x9d\xeb\x4d\x88\x4f\x63\xe8\x99\xd3\x0f\xd2\xe5\x15\xef\x46\x1b\xf3\x01\x74\xc6\x4a\xe3\x3f\xb9\x6f\x4f\x1e\x76\x86\x4b\x1e\x3a\xef\xb2\x6b\xd7\xfa\x7d\xbe\xf1\x7f\x5e\x1d\x14\x75\x49\x5c\x4b\x73\x60\xb2\x6b\xc2\x52\x9e\xc0\x24\xc4\xea\xcd\x80\x5c\x8e\x9a\xad\x37\xdd\x29\x64\x18\x2d\x32\xca\xb4\x7e\x72\x12\xac\x9c\xa4\x32\xc5\x91\xfb\xbe\x6e\xd6\xf7\x42\xbc\x0e\xfe\x90\x69\xba\x01\xde\xdf\x21\xfb\xf7\x47\xa9\x42\x3c\x89\xc7\x7e\x67\x4a\x08\x78\x58\x3d\xd9\xfd\xdf\x95\xeb\xe3\xb5\x2d\xf5\x24\x50\x79\x10\x0f\xae\x40\xa9\xd0\xc9\x94\x6d\xdc\xdb\x92\x35\x0d\x1c\x78\xd7\xf6\xa2\xda\x49\xc6\x81\x1d\xbc\x3b\xf2\x1b\xda\x0e\xad\x4f\x90\xfc\xfe\xcb\x18\xfd\x5a\x96\x4d\x3a\x84\x43\x32\xbf\xbb\x19\x97\x2f\x28\x53\xbc\xde\x72\x95\xfd\x04\xe6\x44\xa7\xda\x2d\x86\xd3\xa9\xf6\xec\xed\x8a\x60\xb9\xbb\x23\x34\xcf\xcb\xbf\x80\x4c\x95\x29\x82\xfd\x09\xfc\x09\x00\x00\xff\xff\xa4\xcc\xe3\x8b\x52\x04\x00\x00")

func dataProxifierWin10ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraDomainsTxt,
		"data/proxifier/win10/extra/domains.txt",
	)
}

func dataProxifierWin10ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/domains.txt", size: 1106, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\xc9\xb1\xc4\x20\x0c\x04\xd0\xbb\x73\x99\x2e\xb5\x56\x28\xe7\x9f\xd7\x2f\xe1\xfd\xdf\x78\x03\xc2\x82\x69\x68\xa8\x01\xb5\x80\x7a\xed\x5b\x73\x42\x6d\x22\xe7\xd2\x10\x50\x11\xbe\x40\x29\x18\xa8\xe3\x56\xaf\x78\xa4\x84\x8a\xec\x9b\x1a\x66\x81\x35\xc0\xb2\x7d\x73\x41\x15\x54\x1d\xe3\x0d\xf2\x51\x7f\xfe\x35\x99\x90\xdf\x33\xd6\x88\x35\x35\xfa\xdb\x85\x38\xea\xa6\x80\x96\xf8\x40\x65\x89\x42\x78\x76\x03\x07\xe9\x50\x27\xe8\x3c\x3d\x40\x31\xd4\xa1\xee\xba\x0f\x10\xf3\x74\x81\xae\xa8\xdc\xb7\xe8\x22\x41\x06\x86\xdf\x5a\x0b\x66\x9d\x26\xba\x43\x9d\xfb\x16\x0a\xa6\x83\x93\xe8\x86\x17\x13\xa4\x20\xfd\xa1\xf6\xb1\x4e\x4e\x14\xc1\x90\x83\x7d\x5d\x49\x74\x93\x37\x0d\xe3\xd8\x4a\xad\x0b\xae\xd2\x56\xce\xa3\x34\x1d\x8e\x70\xc8\xef\x1a\xad\xfb\xca\x40\xef\x22\xb2\xee\xf9\xd1\xb4\x47\xa3\x8b\xee\xf1\x5d\x16\x07\xed\x92\x86\xc2\x6d\xdf\x28\x0e\x17\x28\x05\xa6\x2f\x12\x16\x27\x7d\x05\xa6\xf4\xe1\x80\xfa\x47\xe3\x2d\xca\xb9\xaf\xd2\x8f\xbf\x9b\x97\x03\xf4\x3c\xf2\x44\x23\x34\x0c\xe6\x50\x7b\x39\x09\xf9\xbd\xb0\x4e\x40\x73\xb0\x04\x1c\x81\xea\xc5\x51\xeb\x48\xfd\xb3\xe5\x3f\x8f\xaf\xfd\xbd\x3e\xce\xa4\xe7\x40\x1a\x38\x50\xfd\x24\x26\xd7\xf3\x58\x89\xe9\x10\xa8\x78\x3f\x19\xce\x82\xfc\x5e\x58\xbd\xb4\xd9\xd7\xdb\x31\x71\xef\x1f\xaa\x93\xd9\xd3\x7a\xab\xe3\xda\x01\xba\x18\x1d\xc6\x78\x3c\xbb\xb3\x0f\xf5\x3b\x6b\xf6\x61\x9f\xe2\xa4\xf6\x53\x3c\x6b\x73\xac\x04\x6a\xf8\xfe\x17\x00\x00\xff\xff\x54\x5a\xa0\x42\xf6\x03\x00\x00")

func dataProxifierWin10ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10ExtraIpsTxt,
		"data/proxifier/win10/extra/ips.txt",
	)
}

func dataProxifierWin10ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/extra/ips.txt", size: 1014, mode: os.FileMode(438), modTime: time.Unix(1518299015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x5a\xed\x72\x82\x3a\x13\xfe\x7f\x2e\xa5\x33\x66\xb2\x09\xa0\xcc\xb9\x9a\x18\x52\x65\x8a\x81\x37\x41\xad\x77\xff\x4e\xd0\x2a\x4a\xd8\xe7\xf4\x57\xdd\x7d\xb2\xdf\xd9\x04\xd8\x2f\x61\x36\xa7\xe8\x9a\x83\x13\xde\x8d\xff\xfe\xf3\x25\x4c\xe3\x7f\xa3\xb0\xfd\xe9\xfe\x23\x7e\x89\x53\x34\x4d\x7c\xb1\x27\x8a\x7f\x22\x4e\xd3\x6f\x67\xfd\x13\x31\x36\xa7\xf1\x8f\xdd\xd8\x0f\xf1\x87\x6e\xdf\xf8\xa8\xc4\xa9\xb5\xa1\x8f\xfd\xf7\x13\xd9\xf5\xd6\x8c\x6d\xef\x45\xd7\x5e\x9e\xe8\xf7\xb5\xc1\x34\x73\xd5\x21\x99\x35\xfb\x1d\x5d\xb8\xb4\xd6\x45\x11\x7b\xdb\x9a\x6e\xa9\x62\x74\x9d\x3b\xb9\x31\xdc\x32\xac\x60\xbe\xbf\x5b\x7b\x32\xde\x1c\x5c\xf8\x53\x78\x69\xc3\x78\x36\x9d\x33\x61\x3c\x3e\x69\x7d\x18\xdd\xef\x97\x68\xcc\x68\x44\x92\xf6\x67\xb2\xed\x4f\xc2\x47\x33\xda\x3c\xf2\x53\xe3\x9d\x9b\x65\xbe\xa7\xc4\x58\xfd\xf2\xd2\xd8\xb1\xbd\xb4\xe3\x4d\x5c\x5b\xdf\xf4\xd7\x47\xa2\x4c\xe3\xdd\xef\xf9\x91\xa3\x59\x02\xdf\x02\x64\x9a\x48\xf3\x5c\x3e\x7e\xff\x71\x7f\xcc\xc6\x36\x7e\xe3\xa3\x30\xcd\xe8\xec\x51\x34\xee\xdf\x7f\x4c\x08\xe6\xf6\xb5\x19\x42\xdf\x88\xa6\x17\x4d\x1c\xc4\x69\xf8\x34\x77\xdf\xfa\xc3\xa4\xe9\x83\xdc\x69\x2d\x69\x63\x04\x35\xe1\xf2\x46\xb2\x4b\xd2\x61\x4e\xf2\xa4\x65\xb1\x71\x9f\xa4\xea\x5d\xd6\x9d\x94\x41\xbd\xcb\x52\xfb\x8d\xed\x83\x94\x24\xcc\xd0\x8a\x21\xfd\x93\x63\x2b\x9e\xad\x79\x76\xb1\xc2\xbe\xfa\x48\xe2\xea\xe3\x7b\xba\xf6\x5e\x0f\xac\x51\x3a\xda\xa3\x54\x52\x2a\xa5\xd5\x2e\xb3\x3e\xde\x6b\xdd\x1f\x36\xf1\xf6\x47\xbb\x2d\xa3\x7d\x5b\x46\xfb\x4e\x9a\x07\xcd\xbe\x6a\xc0\x1a\x7b\x74\x53\x45\x9e\x4c\x18\xdf\x75\xda\x26\x92\x92\x85\xe8\x52\xb9\x77\xfe\x7a\xaf\xa1\x89\x5a\xeb\x25\x55\xc9\x82\xb6\xa2\xb3\xb7\x05\x59\x53\x96\x5c\xca\x3c\x39\x2f\x64\x5b\x66\xc8\xa4\x8a\x8c\x7d\x85\xca\x60\x8b\xb2\xce\x10\xeb\x62\x49\xac\xab\xf2\x53\xe6\x91\x98\xe4\x3d\xb9\xd9\x82\xb2\xc7\x45\x4a\x1e\x24\xb7\x24\x1d\x3e\x49\x6a\xb9\x50\xbd\x2f\xec\x4f\x83\x19\xdd\xaf\x3d\x1a\x7f\x70\xc2\x76\xfd\xb9\x31\xc3\xf0\xb0\xbb\xf7\x63\xeb\xcf\xe7\x93\x68\x96\x9b\xd5\xf6\x61\x10\x71\x5c\xd2\x07\x92\x04\xf6\xbf\x1d\xd4\x7f\xc0\x14\x18\x93\xf6\xca\x60\xc5\x45\xda\xe6\x71\x9a\x34\x7b\x7d\xf5\x51\x49\x4a\x7f\xcb\x8d\xd0\xec\xcb\x2c\x31\xda\x23\x49\x22\x29\x49\x29\x04\xd8\xf2\x80\x9d\xce\xeb\x9d\x01\x80\x0d\x35\x01\x15\xb5\x42\x12\x72\x4d\xe0\x0d\xa0\x79\x40\x72\x14\x00\x40\xa0\x48\xaa\x02\x00\x40\xa0\x48\x6a\x24\xa1\x40\x36\x14\x40\x02\x4a\x37\x91\xd2\x08\xc0\xe7\x82\x08\xe4\x82\x48\xd5\x00\xa0\x91\x0d\x05\xb0\x41\x49\xa0\x42\x29\x90\x0b\x85\xbc\x50\x28\x9b\x4a\xf3\x55\x4d\x1a\x94\x3d\x69\x54\x51\x1a\x45\x52\xa3\x48\x6a\x54\x72\x1a\x6d\x9c\x82\x80\x0d\x05\xf2\xa2\x50\x15\x02\x80\x40\x15\x5a\x02\x00\x2a\x98\x72\xa5\x79\xce\x00\xc0\xcd\x12\xe5\xa2\x04\x6d\x90\xca\x02\xd9\x50\x80\x6c\x56\x12\x24\xab\x22\x04\x40\x5e\x54\xa8\xec\x2b\x54\x72\x55\x01\x92\xb5\x45\xb9\xd8\xa2\x26\xb6\xd5\xc0\x8b\x2d\xaa\x87\x1d\x01\x2f\x76\x0a\x78\xb1\x43\x55\x8d\x8e\x45\xda\xa1\x06\xb2\x43\xdd\xbe\x96\x40\x42\x4d\x48\x02\xaa\x87\x1a\x85\xba\x06\x55\xad\x24\xf1\x71\x50\x12\xf4\x49\x25\xc1\xde\x54\x12\x1c\x6a\x4a\x82\x43\x4d\x49\xcd\x97\x9c\x92\x7c\xd9\xa7\xb3\x99\xdd\x7a\x09\xc0\x7a\x31\x1d\x7b\x00\xc0\x57\xd4\xd4\x49\x79\x40\x7a\x7e\x01\x00\xb6\xaa\x49\x2a\x64\xa4\xe2\x43\x4d\x52\xf1\xa1\x4e\xf7\x2c\x20\x41\xf3\x15\x45\x52\xf3\xf5\x90\x00\x50\x02\xc8\xa6\xe6\xfb\x64\xba\xeb\x41\x00\x32\x12\xc5\xa1\x90\x40\x02\x38\xbb\x49\x16\xfc\xe9\x9f\xee\x9b\x20\x59\x25\x7f\xaf\x26\x59\xf2\x87\x3b\xc9\x12\xed\x2c\x70\xa8\x91\xac\xf8\xf3\x22\x01\x40\xd1\x56\x7c\x33\x27\x59\xf1\xf7\x28\x92\x5b\x09\x92\xb5\x45\x36\x6c\xf9\x73\x93\xe4\x8e\x20\x00\x78\xb1\xe3\x6f\xc5\x09\x00\x22\xb9\x43\x1b\x67\x87\x36\x0e\x38\x16\x49\xd6\xa8\x68\x6b\xe4\x45\x8d\xb6\x3f\x7b\xea\x69\xb9\xa3\x1d\xd7\xe5\xb4\xdc\xa5\xe7\x71\x1e\xb0\xf6\xb4\xfe\x04\x68\xee\xbc\x48\x80\x82\x6b\xc5\x77\x00\xef\x85\xaa\x20\x00\x19\xb9\x45\x12\xb6\xc4\x14\x4c\x02\xec\x78\x2f\x6a\x49\x5c\x33\x4f\x80\x02\x01\x4a\xee\x2e\x77\x07\x00\x09\xec\xbd\x3a\x01\xa0\x17\xa0\x60\xea\xa4\x84\x05\x10\xa8\xa8\x04\x60\x43\x5d\xa7\x2e\x85\x00\xbc\x9b\xa4\x90\x0a\x8d\x8c\x2c\x40\x1c\xf8\x07\xb1\x04\xa8\xb8\xdb\x60\x02\x6c\x41\x36\x69\x87\x24\xd4\x28\x0e\x35\x30\x52\x49\xae\x15\x27\x00\x0a\xb5\x62\x6f\x83\x09\xc0\xbe\xe2\x98\x00\xc8\x86\x92\x95\x40\x52\x12\x1b\xa8\xe9\xdd\x20\x17\x07\x92\x92\x7d\xcd\x92\x00\x9a\xdd\x9b\x13\x80\x2b\x18\x92\xb2\x64\xdd\x9c\x00\xc0\x06\xbe\xcb\x91\x94\x7c\x13\x9b\xee\xff\x5c\xc9\x4d\xef\xa3\xb8\x74\x27\x00\x52\x81\xe2\x40\x05\xf0\x82\x0a\x10\x6a\xe2\xfb\xe4\xf4\xf6\x80\x0f\x35\xa1\x48\x12\x7b\x0b\xd2\xe8\xd9\x5f\x4f\x8f\xb4\x7c\xd1\xf2\x8f\xb4\x3a\x3d\xc1\x00\x09\x8a\x40\x2e\x94\xe2\xee\xd5\x77\x00\x50\xa1\x41\x24\x55\xc1\x3d\x88\x25\x00\x7f\x76\x27\x00\x52\xb1\x5b\xc9\xc5\xd5\x47\x6a\x72\x9c\x6a\x5a\xaa\xd2\x99\x9c\xb7\x6e\x06\xc8\x87\x70\x0e\xc8\x9e\x45\x33\x40\xfe\xa6\xf9\x02\xac\x24\x61\x0e\x00\x2a\x56\x36\xe5\x1c\x90\x8d\xf1\x0c\x90\xaf\xd6\x17\x40\xe7\x63\x3c\x07\x00\x23\x57\xae\x81\x33\x00\xb4\x21\xbf\xad\x5f\x80\x22\x5f\x29\x73\x00\xc8\x45\x89\xea\x61\xa5\x49\xcf\x01\x48\x05\xf2\xa2\xcc\xef\xfb\x39\x00\x64\xb3\x42\x2a\x2a\x24\x61\xe5\x09\x6c\x0e\x00\xc9\xaa\x25\x88\x43\x8d\x2a\x6a\xe5\x9d\xdf\x1c\x00\x2a\xaa\x46\x5e\xac\x5c\x7f\x9e\x80\x74\x6c\x23\x00\x6f\x24\x49\x60\x24\xad\x74\xf1\x19\x00\x19\x49\xc8\xc8\x95\x53\xfd\x05\x58\x79\x5b\x36\x07\x00\x23\x51\x7f\x20\x8d\x02\x85\xfa\x03\x69\x68\x03\xd8\x38\x84\xb6\x3f\x95\x28\x92\x25\xf2\xa2\x02\x65\x4f\x15\x52\x51\x81\x46\x4a\x55\xd6\x86\xd6\x1c\x7c\x1f\xc7\xd6\x46\x11\xcf\xc3\xd0\x87\xf1\xf3\x9b\x7b\xd3\x46\x8b\xbf\xf0\x27\x14\xfe\xc6\x9f\x50\xf8\x2b\xff\x77\xe7\x7e\x5f\x23\x27\xdf\x8b\x89\x83\xc3\x8b\x79\x70\x3d\x10\x76\x70\xfd\xc5\x05\x00\x3a\xce\xc6\x9c\x8e\xea\xf5\x7f\xbb\xd9\x77\x15\x37\x88\xd3\x6e\xf6\x37\x76\x52\x67\x0e\xc8\xce\x7b\xb4\x1b\x7e\x5a\x64\xc6\x5f\x59\x1f\xbd\x62\xd7\x3f\xf9\xd9\xf5\x3f\x17\x9c\xdc\x9f\x0b\x4e\xed\xcf\x05\x27\xb6\xdb\x93\xb8\x5e\xaf\xe2\x14\x85\xf9\x31\x8d\x7f\x8c\x99\x75\x51\x5d\xdd\x5e\x04\xd7\x9c\x7a\xdf\x88\x69\xd0\xe4\x63\xe5\xa9\xdf\xb7\x9d\x13\x43\x3b\x38\x61\x42\xbb\x98\x87\x9b\x4f\xc3\x9d\xa2\x1f\x5d\x1c\x97\x03\x50\xf7\x09\xb8\xfe\xfb\xbb\xb5\xce\x0c\x43\x7c\x0e\xe5\x3d\x58\xe1\xdc\xb9\x15\x7e\xef\x5d\x74\xe3\xd8\xfa\x43\xdc\xec\xbd\xe2\xa6\xfa\xe6\x50\x7b\xfb\xcf\xd0\x66\x5f\xfe\x57\xe8\xf1\x87\x95\x3a\x04\x27\xbe\xfb\x7e\x1c\x42\xeb\xc7\x21\xb8\xa6\xb5\x8f\x28\x0d\xc1\x5d\x5a\x77\x7d\xd5\x77\x30\xcd\xcc\xc9\xb7\xe1\xc9\xb4\x2e\x24\x35\xe6\x39\x34\xf9\x11\xf3\x68\x8f\xee\x64\xe6\xe4\x79\x52\xa3\xb3\xe7\x64\x48\x67\xe2\x71\x34\xdd\x4f\xeb\x0f\x8f\x65\x7f\x6e\x44\xe3\x9b\x7d\x9f\x9f\x6f\x7c\x82\xae\xad\xdf\x0c\x83\x83\x20\x16\x90\x67\xfa\xc5\xa0\xd5\x83\xe4\x96\xa4\xf9\xa0\x55\x1c\x6e\xde\x8d\x8b\xf9\xd4\x3b\xd9\x74\x8b\x06\x7a\x67\xb8\x73\xe8\x07\xb7\x16\xac\x78\x9d\xe5\x21\x8e\x7d\x70\xd6\x8c\xa6\xeb\x0f\xc1\x5d\xfe\xa6\x5e\x27\xf2\xff\xce\xa6\x6b\xc7\xc5\x78\x6a\x3c\x87\x8b\xbb\x89\xab\x19\x63\xef\x3f\x99\xaf\xa1\x56\x33\x0c\xee\x57\xec\x53\x2e\x26\xbd\xab\xe3\xae\x2f\xc6\x39\x2c\x12\x3f\xed\xae\xfc\x98\xe9\x18\xbf\xdd\xdf\xa4\x6c\x3c\x9a\x21\x69\xca\xf7\x82\x8b\x0b\x31\x79\x75\xbc\xed\x43\xdb\x4c\x9d\xe9\xe8\xc2\x23\x02\xf7\xc9\xd7\xcd\x17\x57\xe6\x0f\x0c\x57\x45\x0f\xc8\x5a\x79\xbc\xcd\xd7\x22\x45\x59\x09\x8f\x78\xbf\x52\x97\x4f\xc0\xb5\xf5\x24\x45\x3b\x5c\xaa\x1c\x67\x9b\xe7\xfd\x3f\x00\x00\xff\xff\x72\x45\x5e\xa7\x78\x2d\x00\x00")

func dataProxifierWin10SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyDomainsTxt,
		"data/proxifier/win10/spy/domains.txt",
	)
}

func dataProxifierWin10SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/domains.txt", size: 11640, mode: os.FileMode(438), modTime: time.Unix(1518299017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x96\x4b\xae\x83\x21\x08\x85\xe7\xdd\xcb\x3d\x11\x44\xc5\x74\xff\xfb\xba\x39\xf8\xee\xa0\x8d\xdf\x0f\x22\x22\x82\x92\x51\x1d\xae\xf0\xef\x67\x8e\x1d\xa2\x3d\xa8\x55\xa8\x38\x44\xda\xc1\x0e\xe9\x72\xa3\x4a\x1a\xe8\x90\xd6\x20\x66\x07\xa9\xdc\x37\x7a\x42\x49\x37\xf5\x8b\x0c\xe2\xf5\x60\x85\x96\x63\xc8\x1b\xca\x70\xd0\x05\x05\x25\xef\x71\x87\x9a\x06\x49\x6a\x28\xf0\x74\x83\x6f\x38\xf6\x48\xa6\x03\x35\xa3\x37\x54\x81\xe4\xb6\x48\x53\x47\x9f\xd4\x21\x09\x22\x07\x3a\xcc\x6e\xaa\x87\xa4\xf2\xb7\x51\x05\x9a\x86\x19\x49\x0a\x83\xd2\xeb\x49\x2a\xb0\x0d\x52\x0a\xc4\xd2\xe4\x0c\x71\x85\x68\xfd\x7e\x2c\xf1\x3c\x54\xa9\xaf\x03\x3b\x2c\x41\x4a\x5b\xa4\x52\xd1\xf2\x4d\x71\x76\x07\xb5\xc8\x41\x47\xd5\x43\x3c\x9c\x63\x48\x13\xac\x1e\x12\x68\x3e\x86\x54\xb9\xdb\x83\x19\xd2\x3d\xb0\xa5\x98\xaa\x36\xb1\x42\x20\xad\x6e\x50\x6e\x74\x8f\x65\xae\xdf\x1a\x54\x1d\xd6\x6e\xf2\x87\xfa\xd1\xcc\x5c\x7d\x6c\xc3\x19\x9e\x0e\x1b\xbe\x08\x93\x00\x5a\xca\x26\x49\x68\x7e\x48\xd0\xf3\x21\x83\x94\x33\x51\x75\xad\x1f\x66\x2c\xb2\x2a\xc8\x20\x16\x11\x99\x5c\x20\x71\xec\x01\x91\xe1\x50\x4b\x87\x8b\x60\x06\x9d\xa7\x4e\xb1\xb8\x7e\x3f\x85\x63\x41\x56\xf0\x0c\x4a\x84\x90\xee\xa6\x1b\x8e\x84\xe1\xf1\x9b\x2e\xc5\x56\x91\x2f\x1b\x8e\x6c\x0f\x95\x87\xea\x65\x25\x81\x97\xf7\xc6\x7e\xa1\xbd\x4b\xda\x96\x66\x87\xd8\x38\x92\x1b\x5f\x69\x44\x93\xcc\x0b\x54\xa0\x36\x17\xae\x11\x1f\xe4\xfc\xe0\x56\x26\xf2\x72\x94\xc3\x65\x04\x38\xb0\x45\xba\x45\x00\x0f\x8a\xb5\x8b\x33\x64\x6d\x99\x17\xc4\x20\x6d\xcd\xee\xac\x65\xb2\x82\x45\xcc\xc8\x07\x78\xf5\x37\x89\x66\x98\x1f\x74\x6a\x0f\x6c\x23\xd5\xa6\xcb\xcd\x98\x2d\x7b\x7f\xac\x48\xd6\x46\x0e\x2c\x66\x0e\x88\x1e\xe6\xef\x52\xef\xdc\xc2\xcd\x79\x14\x8b\xc9\xdc\x92\xce\xa5\xb9\x2e\x53\xb0\x2d\x66\xda\x72\x4f\xf5\xe2\x02\x4d\x8b\x1b\x6a\x62\x55\x0b\xd4\x4c\xb7\x59\x15\xfb\xe4\x1a\xd5\x2e\x5f\x98\xa1\x49\xbf\x9f\x6a\x30\x54\x48\x4a\x73\xac\x19\xe9\x6f\x8d\xe2\x56\xd5\x02\x4e\xaa\x50\x5f\x20\x29\x51\x6b\x8f\x2f\x3d\xe6\x01\x0b\xe2\x9c\xc5\xde\x40\xaf\x88\x05\xda\xa1\xd9\x17\x65\x96\xcf\x05\x66\x71\x43\x0e\xd8\x05\x92\xfc\xa1\xbe\x88\x71\xd2\x6d\x63\x5c\xf7\x87\xf4\xa1\xbc\x29\x8f\x36\x34\xa9\xd5\x68\x43\xd3\xc9\x11\x82\x3d\xde\x9b\x2b\xd0\xa2\x47\xc4\xed\x85\x88\x35\xbf\x47\x36\x44\xce\x49\x32\x44\x6e\xb7\xa8\xca\x81\x5c\xbb\xa1\xd6\x0b\x7b\xdc\xfb\x85\xc6\x12\x7a\xb4\x59\xfc\xca\x8b\x71\x5c\x8b\x73\x63\xb6\x4e\xe6\xe6\x20\xbd\x1c\x8c\x2e\xbc\x51\x99\x49\xb2\x66\xb3\x38\xab\xc8\xa6\xec\x71\x5e\x93\x0a\xeb\xd7\xb4\xa4\x92\x60\x58\x86\x82\x52\x54\x83\x85\xca\x02\x65\x79\x7d\x30\x64\x16\x00\x1a\x13\x19\xed\x83\xad\xea\xc1\xe1\xd7\xe1\x68\x88\x0f\x5f\xd3\xab\x21\xfd\x5d\x10\xe1\x96\x2c\x9c\x85\x3a\x5c\xd9\x24\x29\x1f\x94\x98\x79\xe0\x99\xc9\xb2\x14\x53\x2d\xee\x78\x4e\x33\xb6\x17\xc7\xd1\x4c\x66\x52\x97\x8b\x25\xd5\x30\x7e\x68\x5a\x5f\x1f\x58\x15\x5e\x36\x7f\xb9\xd7\x9b\xfd\x47\xdf\x7f\xf4\x1d\x4d\x7f\xf4\x9f\x09\x22\xb7\x3f\x0c\xd7\xe3\x4f\x74\xe6\x97\x1f\xfb\x9a\x5e\xfb\x9a\x5e\xff\x9a\xc7\x53\xe8\x70\x9f\x91\x9f\xec\x3e\x3a\xff\xfa\xa0\xb9\x44\xd9\x63\xc6\xf3\x41\xe4\x32\xd7\x6f\xd1\x29\xb7\xb8\x34\x5e\xa3\xb8\x51\x67\x3c\x5c\x9f\x58\x2f\x51\x7d\x44\x6c\x55\x5b\x46\x78\x84\x3a\xef\xd6\xc4\x9c\x2e\xdd\x9c\x1e\x5d\x7a\xb3\x85\x84\x57\x58\x6f\xe1\xed\x42\x05\xff\x37\xb0\x39\xc4\xb3\x76\x60\x97\x71\x6d\x06\x31\x45\xc4\xed\x87\xcb\x0f\xf7\xc3\x7c\x98\xc8\x35\x5f\x05\xb7\x58\x6d\x1c\xc0\x44\x3e\x53\x62\xed\xea\x7c\xc5\xb2\x13\x9a\x6c\x14\xa3\xdb\x17\xf6\x78\x0c\x2c\x6c\x8a\xb6\x94\x47\x1f\x61\x91\x0c\xcc\x51\xda\xab\x5c\xe8\x6c\x2d\xdf\x8f\x74\x89\x70\xb0\x05\xc5\x5b\x3b\x98\xaf\x66\x1f\x8f\xd6\xfd\x41\x7c\x74\x9d\xf1\xa1\xa3\x18\x0a\x73\xad\x97\x78\x40\x68\x89\xe8\x5f\x14\x11\x66\xe9\xb4\x3a\x8a\xa8\x6e\x64\x7e\x6d\x71\x65\x6b\x9d\xef\x79\x95\xd1\xee\x98\x99\xe9\xef\x26\xaa\xff\x07\x00\x00\xff\xff\x40\xff\x6e\x86\xdd\x0c\x00\x00")

func dataProxifierWin10SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10SpyIpsTxt,
		"data/proxifier/win10/spy/ips.txt",
	)
}

func dataProxifierWin10SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/spy/ips.txt", size: 3293, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x1e\xc5\x45\x2e\x30\xa7\x09\x4d\x1d\x0a\x6d\x7e\x68\xa2\x65\x6e\x2f\xea\x28\x5a\x67\x99\xf7\x1f\xbc\x9c\x49\x72\x2d\xb7\xdc\x37\x12\x37\x6a\x46\xad\xa4\x0e\xc7\x25\x28\xa1\x91\x3a\x47\x22\xcd\xb1\x9c\xbe\xd4\x59\x7b\x8c\x57\x13\x8e\xfc\xcf\x47\x51\xc1\xf0\x7d\x7e\x43\x9f\x45\x29\x6e\x95\xb7\xc4\xc1\x15\xeb\x41\x41\x30\xb4\x82\x65\xe6\x9f\xf3\x37\xf4\x7c\xf9\xa0\xfd\x42\x3b\x41\x5f\x97\x7b\x00\x00\x00\xff\xff\x33\xc4\x53\x0e\x02\x01\x00\x00")

func dataProxifierWin10UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateDomainsTxt,
		"data/proxifier/win10/update/domains.txt",
	)
}

func dataProxifierWin10UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/domains.txt", size: 258, mode: os.FileMode(438), modTime: time.Unix(1518299017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin10UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x4b\xae\xe5\x20\x0c\x04\xd0\x79\xf6\xf2\x4a\x94\x3f\xd8\x28\xfb\xdf\x57\x0b\x92\xbe\xc1\xcc\x38\x06\x22\x53\x10\x2a\x7a\x22\x03\x16\xf7\xf5\x03\xc3\x97\xc2\xc0\x18\x20\x9f\xc9\x48\x88\x36\x50\x6d\x91\x2d\x60\xf0\xb6\x43\xee\x4b\x26\x14\xcc\x01\x4a\xaf\xf6\x38\x9c\xf7\x65\x0d\x11\x10\x19\x68\x7f\xdf\x58\xdc\xef\xcb\x65\x8d\x19\x84\x34\xb9\xaf\xee\x70\x07\x35\xd1\xfe\xbe\xf1\x5a\xfa\xb2\xeb\x37\xd5\xf5\x9d\xea\x20\x07\x68\xf6\x34\x50\x9c\xd5\x39\xaa\xc7\x3a\x1d\x21\xae\x50\x7d\x0f\x3b\x53\x69\x70\x82\x19\x87\xb3\x7a\xd4\xf5\x62\xfd\x70\x1c\xde\xf7\x2b\x64\x14\xea\xfe\xb5\x99\xc1\x86\x75\xd2\xff\x26\x67\x02\x87\x7b\x75\x6f\x87\x65\x73\xf7\xda\xcb\x53\x18\x47\xc1\x79\x16\xf4\xbe\xe8\xf1\x5c\x8c\x42\x9a\xfd\x2c\xd6\x30\xc3\xdd\x28\xd2\x5e\xf7\x79\xeb\xd4\xac\x1c\x85\x56\x17\x1b\x2b\xeb\x5e\xfb\xf6\x8e\x0e\xb7\xa2\xdc\x45\x99\x3d\x0f\x42\x54\x90\x33\xe6\xca\x2c\x5c\xa1\x6d\x94\x8f\xd4\xf9\x80\x77\x3d\x57\xb2\x0a\x86\x10\x30\xf5\x70\x3f\x9c\xd5\xf3\xf5\xc8\xfc\xaf\xe6\x83\xb4\xd5\xcb\xc6\xce\xfb\x5f\x00\x00\x00\xff\xff\x72\xf1\xfd\xb3\xbe\x03\x00\x00")

func dataProxifierWin10UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin10UpdateIpsTxt,
		"data/proxifier/win10/update/ips.txt",
	)
}

func dataProxifierWin10UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin10UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win10/update/ips.txt", size: 958, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3b\xb2\xc3\x20\x0c\x45\xfb\xb7\x94\x57\x68\x12\xa7\xf4\x6a\x88\x90\x19\x65\x40\x62\x90\x02\xdb\x4f\xe1\x14\x8e\x3f\x1d\xf7\x5c\x74\x46\xfa\x87\x62\x8b\x0b\x1a\x03\x6a\x99\xff\x02\x3a\xf7\xe0\xac\x02\x96\x0d\x0a\x63\x53\xd3\xc5\xbf\x6d\x65\x78\xb2\xa4\x35\xa1\x4e\x67\x9f\xb0\xe5\x3d\x8a\x25\x42\x21\x0f\x46\xad\x33\xd2\x61\x24\x6d\xac\x09\x32\x77\x5a\xdf\x59\x13\xcb\x26\xff\xee\xda\xa6\x9b\x8d\xd7\xfd\x51\xda\xde\xe7\x5c\x08\x06\x4b\xd4\x61\x2b\xe9\x21\x73\xbc\xbc\x6b\x44\xac\x67\x2c\x64\x3f\x60\x43\x15\x87\x50\xeb\xd1\x72\x55\x01\xc5\x44\xf6\x66\x27\x10\xf2\xf9\x13\x00\x00\xff\xff\x0f\x64\x5d\xd5\x74\x01\x00\x00")

func dataProxifierWin7ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraDomainsTxt,
		"data/proxifier/win7/extra/domains.txt",
	)
}

func dataProxifierWin7ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/domains.txt", size: 372, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\xcb\x09\xc4\x30\x10\x04\xd1\xbb\x82\x29\xa6\xe7\xa7\x31\xca\x3f\xaf\xc5\x5e\x0c\x3e\x3e\xba\x4b\xc1\x18\x72\x2a\xcf\x4a\x43\x1a\x64\xc1\x3e\xab\x84\xd2\xe8\x62\xf2\xac\x72\xd4\x8d\xdc\xd8\xfb\xcf\x3d\xa8\x45\xea\xc3\x60\xea\xa1\xc7\x1d\x3c\xdf\x4e\x92\x4a\xbc\xe2\x8b\x3c\xab\x8b\x72\xae\xc1\x43\xaf\x64\x83\xee\xd1\x6d\x93\x8d\xae\x44\x79\x7e\x01\x00\x00\xff\xff\x06\x04\x9a\xf9\xa9\x00\x00\x00")

func dataProxifierWin7ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7ExtraIpsTxt,
		"data/proxifier/win7/extra/ips.txt",
	)
}

func dataProxifierWin7ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/extra/ips.txt", size: 169, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\xd1\x6a\xeb\x30\x0c\x06\xe0\xfb\xf3\x28\x85\x8a\xc6\x71\x73\x28\x7b\x1a\xcd\x56\x82\x99\x2d\x05\x5b\xab\x9b\xb7\x1f\x5b\x28\x64\x89\x07\xbd\xfd\xa4\x5f\xc2\xf2\x09\xf0\x9c\x0a\xf9\x89\x80\x49\xdf\xfe\x9d\x40\x29\x52\x22\xcd\x0b\xa4\xe0\xb2\x14\x19\x15\x9c\xa4\x9f\x52\xc6\x71\x0c\x2e\x21\xe3\x44\xf9\x19\xb8\x4b\x56\x7a\x80\x47\xc5\x7d\x04\x7d\x84\x1a\xd8\x4b\x2d\x2b\x38\x5f\xba\xce\xf6\x10\x85\x21\x46\xae\xeb\x8c\x6f\x35\xc3\xed\xa8\xe6\x62\x8d\x85\xe8\x96\x03\xf7\xd7\x26\x0f\xdd\x91\xfb\xfe\xd6\x40\xdb\x98\x6b\x2f\xff\x61\xcc\xb8\xc5\xc5\x40\x21\xd5\xc0\x53\x69\xbc\x10\xf0\x03\x3d\x97\xb5\xd7\xbf\x5f\x5f\xee\x9d\x48\x5e\xef\xad\x8f\xdf\x47\x7c\x06\xcf\x35\x70\xf3\xec\x65\x5e\x98\xd4\xb4\x99\x3e\xb3\xcc\xb4\xa9\x6d\x77\x29\x65\xf2\x02\x61\xbe\x0f\xfb\xf4\xfa\xcd\x7f\xee\xac\xa8\x45\x78\xa7\x5f\x01\x00\x00\xff\xff\x04\xe2\xdb\x08\x5e\x02\x00\x00")

func dataProxifierWin7SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyDomainsTxt,
		"data/proxifier/win7/spy/domains.txt",
	)
}

func dataProxifierWin7SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/domains.txt", size: 606, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\x51\x0e\xa6\x20\x0c\x04\xe0\x77\xee\xb2\x93\xce\xb4\xa5\x10\xee\x7f\xaf\x0d\xb8\xfe\x6a\xf6\xc1\xa4\x5f\x8c\x53\x61\xe8\xa8\x01\x8e\x01\x46\xad\xb6\x39\x21\x9f\xe8\xf3\x68\x10\x89\xf4\xdf\x3c\xa1\xd0\x6a\x61\x28\x83\x44\x28\xe6\xc5\x82\xd4\xff\x63\xda\x21\x39\x40\xeb\xa0\xdb\x6a\x49\x30\x08\x17\x92\xab\xa5\x40\xdf\xeb\x07\xc6\xfc\x90\xf9\xcf\x3d\xa0\x30\x7c\x48\xc8\xf2\x71\x12\x11\x17\x6b\x60\x07\xdc\xd9\x75\x8e\xb6\x03\x1e\x27\x21\xea\xf1\x7e\xfa\xc3\xe9\xe0\xcb\x92\x43\x7e\x71\x14\xba\x81\x56\xab\xf5\x40\x40\x0e\xfb\x73\x4f\xca\x5c\xad\x27\x32\x11\x01\xda\xf8\x68\xde\x22\x1d\x7b\xfb\x4b\x7e\x4b\x29\x14\xdf\x9a\x9f\x77\x9c\xb6\x1a\x2d\x10\xfb\xab\x42\xef\x2f\x4e\x88\x3f\x4a\xe3\x2a\xee\xa1\x4c\x8f\xbd\xc0\x53\x32\x79\x15\x39\xcf\x6f\xbc\xa8\xab\xf7\x00\xcb\xe0\xa7\xee\xed\x02\x59\x90\xe7\xb9\x33\x4e\x9e\x2c\xd9\x00\xd5\xd7\xdf\x00\x00\x00\xff\xff\xfa\xf1\x3b\x42\x51\x02\x00\x00")

func dataProxifierWin7SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7SpyIpsTxt,
		"data/proxifier/win7/spy/ips.txt",
	)
}

func dataProxifierWin7SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/spy/ips.txt", size: 593, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\x83\x05\x53\xf2\xcb\xf3\x72\xf2\x13\x53\xd0\x15\xc3\xb9\xa8\x7a\xf2\x52\x4b\xac\xb9\xb0\x18\x03\x11\x82\x8a\xe4\x17\xa5\x5b\x03\x02\x00\x00\xff\xff\x49\x80\x29\x87\x85\x00\x00\x00")

func dataProxifierWin7UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateDomainsTxt,
		"data/proxifier/win7/update/domains.txt",
	)
}

func dataProxifierWin7UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/domains.txt", size: 133, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin7UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd2\x5d\x6a\x45\x21\x0c\x04\xe0\xf7\xb3\x97\x0e\x4e\xfe\x4c\x70\xff\xfb\x2a\x72\x5b\x8e\xf1\x3e\x7e\x23\x8c\x41\x43\x05\xc7\x84\xc1\xc7\x7a\x64\x43\xc1\x2c\x50\xfc\x72\x74\xfb\xbc\x9c\xeb\xb1\x81\x39\x21\x52\x70\x5d\x4f\x38\xdc\x41\x4d\x90\xd2\x69\x8d\xbb\xfa\x60\xbe\x0c\x85\x08\x3b\x77\x55\x80\x2c\xd0\xec\x33\x47\x73\x76\x67\x75\xd7\x58\x0f\xd5\xc0\x39\xe0\xfc\xb2\x58\x5c\x9e\x97\xf3\xb0\x42\xaa\x51\xcf\xb6\xc4\xf8\x39\x20\xee\xef\x21\xe9\x08\x39\x1c\xde\xbb\x3f\x41\x5d\x81\xf3\x0e\x74\x3d\xf4\x09\x0f\x54\x80\xb2\x59\x84\xa8\x20\xf7\xad\x8d\x31\x3a\xe5\x25\xb5\xfe\xca\x5a\x60\xff\x81\x61\x0a\x98\x7a\x39\x2e\x67\xf7\x7e\x5c\xd9\xeb\xb5\x3f\xc0\xf6\x38\xbf\x01\x00\x00\xff\xff\xe4\x8b\xba\xa8\x70\x02\x00\x00")

func dataProxifierWin7UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin7UpdateIpsTxt,
		"data/proxifier/win7/update/ips.txt",
	)
}

func dataProxifierWin7UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin7UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win7/update/ips.txt", size: 624, mode: os.FileMode(438), modTime: time.Unix(1518299013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xe1\x6e\xc2\x30\x0c\x84\xff\xef\x51\x90\x6a\x69\xfc\xdd\xd3\x84\xe4\x1a\x2c\xc5\x49\x67\x9b\x06\xde\x7e\x62\xa8\x88\xb5\x1d\xff\x5a\xdf\x97\xf3\xf9\x0e\x14\xa6\x09\xd7\x41\x47\x12\xab\x14\x9b\x7c\x7d\x1c\x48\x6c\xf4\x1a\x8d\x97\x7f\x83\xce\x1c\x61\x0f\x98\x4e\x5c\xf3\x53\x92\xa0\x6e\x51\x81\x4a\xc2\x51\x9b\xb5\xd1\x17\xd1\x51\x20\x70\xbd\xed\x48\x5c\xb0\x63\xd7\x11\xfc\x0c\x5d\xf3\x21\x3a\xcf\xc1\xb9\xd5\x61\x3e\x92\x15\xdb\x00\x9b\x2b\x92\x24\x12\x78\x78\x66\x5f\xbd\xc8\x2f\x7b\x33\x15\x9e\xf1\xf8\x66\xc9\x64\x7e\x22\x1b\x9e\x56\xa5\x65\xae\x2f\xc8\xdf\x7a\x2a\xae\x3e\xbc\x36\xb4\x59\xf5\x7d\x81\xde\x68\xd2\x96\x28\x8a\x91\xfa\x1a\x30\x6f\x0a\xa4\x8c\x31\x51\xb2\x2b\xc9\xb4\x26\x9c\x05\xd4\xb9\xa6\xd6\xed\x31\x99\x43\xe1\xf4\xae\x92\x9e\xe2\xc6\xe6\x3e\x0b\x65\xb3\xbf\x5b\x6c\xd5\x77\xb3\xff\x2b\xd1\x3d\xaf\x5d\xd8\x41\x15\xbe\x80\x9f\x6f\x4c\x8e\xfb\x5a\xef\xcb\x61\x86\xa0\xf1\xfc\x3b\xfe\x09\x00\x00\xff\xff\x9b\x10\x35\x3e\x98\x02\x00\x00")

func dataProxifierWin81ExtraDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraDomainsTxt,
		"data/proxifier/win81/extra/domains.txt",
	)
}

func dataProxifierWin81ExtraDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/domains.txt", size: 664, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81ExtraIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd0\x4d\x6a\x46\x21\x0c\x46\xe1\xf9\xdd\x4b\x0f\x79\x63\x7e\x14\xf7\xbf\xaf\xe2\x2d\x6d\xfd\x66\x3e\xc8\x09\x24\x1a\x4c\x43\x4e\xc6\x7e\xc2\x90\x26\xb2\x41\x5f\x2a\x34\x6c\x3f\x29\x14\x46\x25\x33\xfe\x24\x6f\xb4\x7a\x3f\xe9\xa8\x0a\xc9\xa8\xf8\xa7\x1b\xfd\xfb\xbb\x68\xa1\xb4\x1f\xf6\x44\x25\x42\x17\x07\x33\x5f\xfa\x38\xc1\x9b\x56\x10\x64\xe0\x7e\xbd\x73\xdc\x88\xfd\x54\x72\xa6\xd8\xc4\xd7\xad\xfc\x90\x4e\xa7\xa1\x33\x80\x12\xf6\x75\xc1\x33\xf7\xa3\x6c\x32\xd1\x88\xb3\xde\xe5\x44\x3e\x3f\x7d\x8e\xe2\x16\xf4\x3a\x27\xc0\xed\x75\x13\x85\xd6\xe9\xf7\x77\x00\x00\x00\xff\xff\x1a\xa5\x89\xc9\x5e\x01\x00\x00")

func dataProxifierWin81ExtraIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81ExtraIpsTxt,
		"data/proxifier/win81/extra/ips.txt",
	)
}

func dataProxifierWin81ExtraIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81ExtraIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/extra/ips.txt", size: 350, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd2\x5b\x6a\xec\x30\x0c\x06\xe0\xf7\xb3\x94\x81\x11\xb1\x72\x73\x38\xab\x11\x89\x12\x4c\x7d\x09\xb6\x66\xd2\xec\xbe\xd0\xa1\x30\x8d\xd5\xd7\xef\x57\x22\x09\xeb\x06\x74\x0f\x85\x97\x8d\x21\xb2\xfc\xff\x77\x03\x61\xcf\x81\x25\x9f\x10\xdc\x9c\x53\x49\xab\xc0\x9c\xc2\x77\x94\x69\x5d\xdd\x1c\x28\xd2\xc6\xf9\xe7\x83\xc7\xbe\x90\x70\x5d\xfd\x4c\x59\xf8\x13\x16\x12\xaa\xc3\xa3\x5c\xed\xf7\x1c\xf3\x52\x0c\xa2\x05\x9f\x22\x78\x1f\x8f\x37\xed\x3a\x4d\x87\x5e\xd3\xb1\xd5\xd4\xaa\xb5\x76\xac\x15\x9b\xae\xe9\xc0\xcf\x67\xc5\x3d\xaa\x6c\x35\x36\x88\x93\xf2\x6f\x83\xfd\xa0\xf2\xa8\xec\x8d\x06\xad\x51\x79\x52\x76\x6c\x4d\x53\xcf\xd1\xb6\x53\x8d\xd6\x28\xcd\x6c\x8b\x17\x2c\x2c\xe2\xe2\x56\xee\x87\x8b\xea\x93\x96\xfd\x8c\x2c\xa8\x33\x79\xd1\x03\x7e\xe4\xb4\xbf\xdf\x0e\x7d\xd0\x12\xcb\xab\xe7\xeb\x80\xfe\xec\x78\xb8\x68\xc1\xed\xcf\xe1\x12\x7c\x05\x00\x00\xff\xff\x2e\x08\xec\x37\xd3\x02\x00\x00")

func dataProxifierWin81SpyDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyDomainsTxt,
		"data/proxifier/win81/spy/domains.txt",
	)
}

func dataProxifierWin81SpyDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/domains.txt", size: 723, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81SpyIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd2\x5d\xce\xf7\x2a\x08\x04\xf0\xfb\xee\xe5\x4c\x98\x01\x54\xd2\xfd\xef\xeb\x44\xfb\xef\x5b\x7d\x2e\x9a\xf8\xf3\x93\x02\x74\xf4\x01\xb9\x81\x1e\xf7\x35\x59\x90\x17\x5a\x2d\x0d\x22\x91\xfe\x6f\x5c\x50\xe8\xbe\xe4\xa8\x81\x28\x30\x1e\xd4\x82\x78\x5f\x61\xe8\x1d\x52\x83\xa2\x0e\xa6\x7d\x1c\x28\xdd\x57\x12\x0c\xc2\x85\xe4\x7d\xa5\x40\x1f\x60\x0c\x8c\x7e\xb2\x0e\x32\x7f\x6e\x01\x39\xa1\xfc\x18\x86\x7d\x35\x08\xd9\xb6\x9c\x44\xc4\xc3\x3e\x2f\xeb\xf3\xc4\xe7\x24\x44\x7d\x9e\x5f\xfb\x58\x0e\x6e\x96\x1c\xf2\x87\x63\x2e\x05\xd8\x5f\x77\x34\x03\xed\xf9\x11\xb9\x83\x55\x4f\x4a\x5a\x60\xc6\x0d\xfb\xef\x1d\x29\xf3\x9d\xee\x98\x69\x6a\x89\x4c\x44\x80\x36\x5e\x91\xf3\x89\x43\x3a\xe4\xaf\x94\x42\x1c\xaa\x43\x2c\xdb\x29\xd3\x7d\xd1\x02\x31\x2f\xe9\x68\x6d\x63\x61\x16\xf5\xc7\x59\xb7\xd5\x0c\x1f\xf7\xc3\xf2\x0e\xae\xc6\x21\x21\x11\x2a\x28\x57\x5b\xcd\xcc\x18\xdc\x7e\xfb\x77\xfb\x1f\xff\xd9\xbf\x9e\x9f\x17\xb3\xad\x70\xc8\x78\x27\x3a\xe4\xb9\x0a\xc4\xec\xc8\x06\x56\xa0\xeb\xa4\x9f\x9c\x87\x8b\x2b\x54\xd9\x00\xd5\xde\x89\x42\x1a\x38\x0e\xf6\xbe\x51\xa0\xd9\xe6\x40\xea\xfe\x3f\x00\x00\xff\xff\xbd\x57\xe7\x96\x41\x03\x00\x00")

func dataProxifierWin81SpyIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81SpyIpsTxt,
		"data/proxifier/win81/spy/ips.txt",
	)
}

func dataProxifierWin81SpyIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81SpyIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/spy/ips.txt", size: 833, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateDomainsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2d\x48\x49\x2c\x49\xd5\xcb\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\x4b\xce\xcf\xb5\xe6\xd2\xd2\x2b\xcf\xcc\x4b\xc9\x2f\x2f\x86\x4a\xc3\x04\x8b\xd1\x15\xa6\xa5\x1a\xe9\x95\x17\xa2\x8b\xc2\xb9\xa8\xa6\xe4\xa5\x96\x58\x73\x61\x31\x18\x22\x04\x15\xc9\x2f\x4a\xb7\x06\x04\x00\x00\xff\xff\x46\x45\x72\x47\x97\x00\x00\x00")

func dataProxifierWin81UpdateDomainsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateDomainsTxt,
		"data/proxifier/win81/update/domains.txt",
	)
}

func dataProxifierWin81UpdateDomainsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateDomainsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/domains.txt", size: 151, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataProxifierWin81UpdateIpsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xd3\x4b\xd2\xec\x20\x08\x05\xe0\x79\xf6\xd2\xa7\x3c\x3c\x14\xcb\xfd\xef\xeb\x16\xf6\xfd\x3b\xe2\x2c\x1f\x4a\x82\x48\xa8\xe8\x81\x18\xe0\xf0\xf5\x50\x31\x0c\x1c\x13\xe4\xf8\x32\xc0\x30\x98\x6d\xb1\x0d\x18\xbc\xad\x47\x12\x0a\xc6\x04\xc5\x2f\xf7\x6a\x1f\x97\x63\x3d\xd6\x30\x06\x44\x26\x5c\xd7\xe3\x02\x86\xc2\xb2\x8c\xfe\x23\x19\xe0\xe0\x76\xee\xe4\x20\xa4\xc9\x7a\xba\xc3\x1d\xd4\x40\xfb\xbc\xcf\xe2\xfe\x5b\xea\xfa\x2e\x75\x3d\x97\xc4\x04\xe2\xb6\x9e\xde\x41\x4e\xd0\xec\x5b\x61\x71\x54\xc7\xac\x9e\x2d\xdb\x41\x88\x2b\x98\xfb\x35\x9d\x9d\x6b\x70\xa2\x7d\x0e\xec\x6f\xff\xac\x90\x59\xa8\xed\x60\x9c\xa9\x51\x53\xc9\xac\xff\x72\xaf\xee\xed\xb2\x1c\xee\x79\xf8\xb8\x03\xf3\x0a\x38\xef\x40\x9e\xcd\xc7\xb7\xcb\x0a\x69\xf6\xb3\x58\x43\xb6\xe6\xe0\xbe\xfc\xc3\x22\xed\xbf\x7b\x5e\x38\x35\x2a\x67\xa1\xd5\xcd\xc6\xca\x9a\x6b\x6f\xee\xec\x70\x2b\x8a\x53\x14\x2d\xcc\xeb\xe6\x24\x44\x05\xd1\xf6\x04\x9e\x8c\xc2\xdd\xd3\x83\xf2\x92\x3a\xc1\xb8\x02\x72\xbe\xee\x1b\xb0\xbf\x80\x61\xec\xd1\xbe\xdc\x2f\xc7\x7a\x24\xff\xb4\x9c\x38\xdb\xf5\x1c\xec\x5c\xff\x02\x00\x00\xff\xff\xb8\xcd\x79\x25\xb5\x03\x00\x00")

func dataProxifierWin81UpdateIpsTxtBytes() ([]byte, error) {
	return bindataRead(
		_dataProxifierWin81UpdateIpsTxt,
		"data/proxifier/win81/update/ips.txt",
	)
}

func dataProxifierWin81UpdateIpsTxt() (*asset, error) {
	bytes, err := dataProxifierWin81UpdateIpsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/proxifier/win81/update/ips.txt", size: 949, mode: os.FileMode(438), modTime: time.Unix(1518299014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x99\xbd\x72\xe3\x36\x10\x80\xeb\xf8\x29\x18\xb6\x09\x57\xbb\x8b\x3f\x52\x23\xf9\x66\x52\xa4\x4a\x2a\x17\x29\x3d\xb2\xc4\xe4\x38\x91\x44\x0f\x45\xe7\x7c\x79\xfa\x0c\x28\x89\x04\x40\x9d\x53\xdc\xac\x3a\xe2\x33\xe8\x6f\x01\x88\x4b\x60\xb9\xfa\xb1\x28\xb2\x3f\x9a\xe3\xae\xfd\x72\x7a\x7a\xfd\xfa\xcb\xbe\xdd\xfe\x5d\x77\xd9\x97\xe6\x48\x98\xd5\xef\x7d\xb7\xc9\x8a\xe2\xf1\x61\xe8\xf6\xd4\xbe\x75\xdb\x7a\x99\x7d\xee\xfb\xd7\xd3\x72\xb1\xf8\xab\xe9\x3f\xbf\xbd\xc0\xb6\x3d\x2c\xb6\xdd\xe6\xdf\xaf\xc5\x61\xf3\xbe\x98\xff\xaf\xf1\xfe\xdf\x36\xa7\xbe\xf8\xbd\xdd\x35\x7f\x36\xf5\x6e\x99\x3d\x6d\xfa\x9f\x33\xc2\xec\xd7\xfa\x25\x63\xa4\x32\x63\x5e\x6a\xb5\x64\x97\xfd\x84\x84\x38\xdc\xf7\xb0\xfa\xf4\x7e\xd8\x67\xff\xd4\xdd\xa9\x69\x8f\xeb\x9c\x00\xf3\x4f\x8f\x0f\xab\xae\x6d\xfb\xc7\x87\x1f\x56\x4d\x5f\x1f\xb2\xe3\xe6\x50\xaf\xf3\x21\xe4\xe7\x21\xe4\x67\x52\xe0\x4a\x60\x65\x80\xb5\xcb\xb3\xee\x6d\x5f\xaf\xf3\x04\xee\x9a\x6e\x9d\x63\x9e\xbd\x76\x6d\xdf\x6e\xdb\xfd\xd0\x18\x45\x98\x67\xcd\xe9\xf9\xc5\x0f\x61\x9d\xd3\xd0\xa8\x8f\x9b\x97\x7d\xbd\x1b\x9a\x8b\xff\x91\x57\xc0\xaa\x02\x5b\x85\xee\x89\x49\xaa\x4b\x04\x62\x30\x3a\x30\x4f\x48\x52\x4c\xe8\x40\x01\x71\x19\x98\x03\x26\xad\xf6\xe3\x4c\xd5\x17\x26\xad\x66\x02\x46\x4c\xdc\x57\x28\x26\x67\x05\x95\x03\x72\x25\x90\x53\x57\x79\x02\xc5\xe4\x1a\xc1\x39\x60\xd6\x30\xce\x79\x84\xee\x20\x26\x9a\x9b\x3d\x13\x57\xfb\xfc\x31\x1b\xf5\x05\x8a\xcb\x2d\x60\x31\x5d\xb3\x31\x69\x20\x37\x3a\x48\x06\x55\xfa\xc7\xdb\x81\x09\x17\x23\x60\x92\xea\x0a\x81\x94\x85\xd0\x3c\xa1\x3b\x88\x19\xe7\x66\x96\x7c\xe2\x35\x02\x21\x81\xb6\xfe\x01\x0f\xdc\x21\x14\x95\x93\x06\xd6\x04\xa4\xc3\x39\x8f\xa8\xac\xbe\x04\x42\x05\x2e\x92\x8f\x4c\x54\xed\xb3\xb9\x4f\xec\xa6\x0a\xe5\x21\x95\xd5\x3b\x20\xcd\xe0\x6c\x64\x9f\xa0\x98\xdc\xf8\x75\x45\xb0\x06\xca\x71\x47\x11\x33\x69\xf5\x30\xcc\xca\x25\xf2\x91\xca\xea\x09\x7c\x0e\xe5\x2a\xb2\x4f\x50\x4e\xce\x40\x56\x03\x55\x04\x53\x86\x4f\xa0\xac\xdc\x02\x11\x82\xd5\x91\x7c\x82\xe2\x72\xf6\xaf\xb0\x54\x7e\x81\xb2\xf2\x0a\x1c\x01\x19\x8c\xe4\x13\x14\x95\xfb\x7d\x9b\x25\x98\xf2\x6b\x02\xe5\xe5\x0a\x4a\x33\x93\x9f\xa1\xa4\x9c\x95\x9f\xe5\x78\xc9\x03\x26\xad\xb6\x55\xb2\xe2\x21\x14\x93\x5b\x0d\x1a\x8c\x06\x2c\xae\x57\xc1\x7e\xee\x1b\x7f\x94\x0b\xc6\x80\x5f\x6f\xc4\x60\x63\x1d\xb3\x3b\xa8\x2b\x35\x57\x57\x92\xe7\x98\xab\xa6\xf4\xf3\x3c\x5e\x87\xcb\xf0\xed\x0e\xa2\x41\x99\xb3\x27\x9a\x8f\x89\x09\xab\xd9\x30\xe8\x44\x7d\x65\x72\x87\x69\xd4\xa0\x11\x98\x10\x14\x8f\x87\xe9\x18\xca\xcb\x09\x94\x99\xc9\xcf\x50\x56\xae\x87\x32\x8d\x8b\x47\x3e\x41\x71\x79\x09\xac\x53\xf7\x99\xdd\x43\x5d\xde\x50\x8b\x56\x6e\x46\x0d\xa1\x9a\xbb\x07\x28\x2a\x67\xd2\xe7\x33\x3a\x85\xf6\x90\x0a\xeb\x0d\x90\xb6\x51\xdd\x2a\xc5\x82\x65\x33\x02\x36\x0a\x94\x06\x56\x41\xdd\x2c\xa6\xe2\x7a\x4b\x80\x45\xd0\x08\xb2\xfe\x87\x5d\x04\x03\xd3\x40\x0e\x81\x4a\x03\x2e\x98\x97\x98\xca\xe9\x8d\x1b\xde\x31\xde\xa7\xc6\x93\x66\x4a\xef\xa3\x2f\x6f\xea\x45\x33\x42\x20\xd2\x78\x4b\xaf\xef\x32\xf9\x26\x2a\xa1\x27\x54\x4e\x6f\x4b\xb0\x0a\xa8\x04\x37\x7d\xb3\x88\x98\x9c\xba\xa2\xe1\xc3\xc8\x50\x49\x99\x0e\xfa\x33\x2c\x57\x48\x47\x0d\xae\xf2\x12\xc0\x22\x68\x04\xf9\xe0\xc3\x2e\xa2\x81\x91\xdf\x71\x6a\x02\xd6\x3a\x0c\x26\xc2\x82\x01\x38\xd0\x16\xfc\x38\x79\xb2\x87\x4c\x5a\x4d\x48\x30\x95\x5f\x12\x28\x2e\x37\x0a\x28\xfc\x11\xc4\x54\x5c\x5f\xf9\xa4\x93\xda\x2f\xf0\x1e\x72\x9e\x0d\xfd\x02\xef\x21\x57\xea\x86\x5c\x49\x6e\xcb\x02\xcf\xf4\x02\x48\xa0\xb4\x9c\x59\x41\x95\xae\xf9\x15\x8a\xca\x6d\x39\xd4\xd8\xd8\x44\xf6\x90\x7e\xaf\x7e\xb5\x18\xbe\xda\xff\x17\x00\x00\xff\xff\xc8\xdf\xd2\xc9\x72\x20\x00\x00")

func dataSimplewallWin10ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10ExtraBlocklistXml,
		"data/simplewall/win10/extra/blocklist.xml",
	)
}

func dataSimplewallWin10ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/extra/blocklist.xml", size: 8306, mode: os.FileMode(438), modTime: time.Unix(1518299015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x9d\xcf\x53\x1c\xbb\x11\xc7\xcf\xf1\x5f\xb1\xe1\x9a\xd0\xa8\x5b\xbf\x29\xf0\xab\xca\x21\xa7\xe4\xe4\x43\x8e\x2e\x0c\x9b\x3c\x2a\xc0\x52\x80\xf3\xec\xfc\xf5\x29\xcd\xce\x8f\x56\xcf\x40\x0e\xaf\xbe\x7b\xc0\xb5\xf3\xb1\xf0\xa7\x47\xd2\x48\x3d\x33\xd2\xfa\xea\x8f\xe7\xe7\xbb\x7f\xdc\x3f\xdd\x1d\x7e\x7b\xfd\xf2\xfc\xf3\x2f\x0f\x87\xdb\x7f\xef\x5f\x76\xbf\xdd\x3f\xb1\xdb\xbd\x3e\xff\xdc\x9d\x9f\x7f\xfe\x34\x14\xfa\x72\xf8\xfe\x72\xbb\xbf\xdc\xfd\xfa\xf6\xf6\xfc\x7a\x79\x71\xf1\xaf\xfb\xb7\x5f\xbf\x7f\xa3\xdb\xc3\xe3\xc5\xed\xcb\xcd\x7f\x7f\x9e\x3f\xde\xfc\xb8\x58\xff\x4b\xf3\xef\xff\xed\xe6\xf5\xed\xfc\xef\x87\xbb\xfb\x7f\xde\xef\xef\x2e\x77\x5f\x6e\xde\xfe\xbc\x63\xb7\xfb\xeb\xfe\xdb\x4e\x1c\x97\x9d\xc8\x65\xf0\x97\x92\x77\x7f\x72\xec\xdc\xf0\x7b\x9f\xae\x7e\xf9\xf1\xf8\xb0\xfb\xcf\xfe\xe5\xf5\xfe\xf0\x74\x7d\xc6\xe4\xce\x7e\xf9\xfc\xe9\xea\xe5\x70\x78\xfb\xfc\xe9\x0f\x57\xf7\x6f\xfb\xc7\xdd\xd3\xcd\xe3\xfe\xfa\x6c\x08\xf8\xeb\xeb\xf3\xcf\xaf\xec\x29\x15\x2a\x42\xe5\x6c\xf7\xf2\xfd\x61\x7f\x7d\xa6\xc9\xdd\xfd\xcb\xf5\x99\x3b\xdb\x3d\xbf\x1c\xde\x0e\xb7\x87\x87\xe1\x60\x16\xb8\xb3\xdd\xfd\xeb\xd7\x6f\x2d\xf4\xeb\x33\x1e\x0e\xf6\x4f\x37\xdf\x1e\xf6\x77\xc3\xe1\xc5\xff\x93\x16\x62\xa9\x46\x3b\x32\x9c\x38\x27\x12\x2e\xc4\x9c\x95\x59\x43\xb0\xba\x12\x57\xb6\xea\x11\xc2\xd5\xc2\x6e\xad\x1e\x20\x50\x5d\x88\x73\x26\x0e\x41\xab\x15\x04\xab\x5b\xdd\x56\xab\x1e\x21\x56\x5d\x1c\x45\x67\xcc\x23\x83\x8b\xeb\x86\xb8\xe2\xc5\x81\xb8\x24\x6b\x1e\x21\x58\x9d\x48\xa2\xed\x62\x13\x04\xab\x33\xc5\x62\xcd\x47\x86\x13\x17\xa6\x48\xd1\x2b\xed\x4c\xb0\xd2\x4a\x12\xc4\x68\x47\x86\x13\xb3\xcb\x14\xa9\xe8\x4e\xbd\x20\xb8\xb6\xac\xb5\xd0\xb6\x6d\x0e\xdb\x9d\x15\xc3\x8a\x83\x6c\x98\x27\x08\x52\x8b\xa7\x9a\x29\x31\xb1\x9f\xa7\xe5\x9e\x41\xc5\xe2\x2a\x55\x23\x9e\x18\x50\x5c\x89\x1d\x31\x6b\xef\x8c\xc0\xda\x4a\xcb\x74\xdc\x33\xb8\x38\x6d\x88\x13\x5c\xcc\xa9\xfd\x18\xf3\x04\xb1\x6a\x61\x12\x97\x8d\x7a\x82\x38\x35\x3b\xa1\x40\xb2\x4c\x11\x3d\xc3\x8a\x85\x29\x18\xef\x11\x61\xb5\x1c\x23\x71\x70\xc6\x3c\x53\xa4\xdc\x13\x17\x21\x96\xd4\xc9\x15\x05\xc9\x83\x6b\xf7\x4d\x22\xad\x82\xe7\x69\xd9\x40\xa0\xba\x52\x70\xc4\x31\x6b\xf3\xc2\xa0\x62\xe1\x44\xd9\xf7\xe2\x89\xc1\xc5\xea\xce\xd5\x40\xb8\x5a\x22\xaf\xd5\x03\x04\xab\x0b\x25\xb1\xe6\x23\x03\x8b\xdb\xdd\x5a\xb6\xe6\x11\x62\xd5\xe2\x28\x24\x63\x1e\x19\x58\xcc\x24\xde\x76\xb1\x09\x82\xd5\xd2\xe6\x64\xab\x1e\x21\x58\xed\x89\x6b\xb1\xea\x11\xe2\xd4\xd9\x0d\xad\x2a\x41\xab\x35\x04\xaa\x13\x31\x71\xd6\x7d\x6c\x41\x58\xad\x2c\x53\xb4\x26\x68\x29\x77\x83\x88\x62\x40\x71\x26\x91\x42\x41\x8f\x21\x8a\xc1\xc5\x65\x43\x5c\x4e\x21\xae\xb2\x16\x57\x78\x55\xfb\x36\x56\xb0\x31\x4f\x10\xa7\x2e\x2d\xd9\xaa\x14\xf4\xd0\xa5\x18\x4e\xcc\xec\xa9\x90\xc4\xa8\xc4\x8a\x61\xc5\xec\x28\x17\x23\x1e\x19\x58\xcc\x54\xbd\x15\x1f\x19\x58\x1c\x88\x63\xb5\xe6\x11\x62\xd5\x22\xfd\x20\xa2\x18\xb8\x7b\x05\xf5\xac\xaf\x67\x48\x71\x20\x0e\x43\xc6\xd3\xa9\x15\x45\xca\x23\xb1\x7a\x4a\xd1\x21\xa4\x76\x78\x2b\x41\x12\xfa\x73\x56\x14\x2c\x8f\x4c\x52\xad\x7b\x84\x40\xb5\xf0\x70\x86\x5c\xf4\x94\xd1\x51\x90\x3c\x36\x05\x93\x17\x5a\xee\x6b\x7a\x86\x12\x0f\x29\x6d\x1b\xa5\xe7\xa6\xee\x10\x5c\xcb\x6b\x2d\xfc\x6c\x5b\xb2\x55\x8c\x77\x64\x70\xf1\xaa\x9e\x47\x86\x15\xe7\x44\xde\xd6\xf4\xc8\xc0\x2d\x5c\xc8\x07\xdb\xc4\x47\x86\x17\xc7\x0d\x31\x2e\x17\x51\x92\xb4\x21\xc6\xdd\xca\xcc\x1d\xc9\xd1\xf2\x42\xdf\xc0\x13\xa8\xeb\x96\x1a\x37\x5e\xcf\x96\xb0\x75\x31\x87\x93\x5c\xcd\x61\xeb\xac\x03\xfa\xac\x7d\x21\x0e\xfa\x86\xca\xc0\x13\xa8\xeb\x96\xfa\x24\x67\xad\xb2\x5e\x4b\x81\xf2\xc4\xc4\x91\x24\x74\x17\xb6\x82\x48\xf5\x90\x71\x91\xf7\x9d\x7a\x81\x78\x75\x5f\xe3\x0a\xa2\xd5\x4c\xe2\xe2\xca\x3d\x52\xb0\x3c\xea\xbc\xdb\x40\xa4\x3a\x0f\x8f\x19\x97\x04\xd4\x40\xbc\x9a\x43\xde\x70\x33\xf0\xf6\x6e\xd6\x78\xe2\x7e\xce\xd6\x14\x29\x2f\xd4\x46\xed\xdc\xb7\xf7\x02\x91\xea\x4a\xa5\x0d\x63\x5d\x72\xa6\x20\x58\xed\xc9\x5b\xf1\x80\xc0\xda\x4c\x41\xac\xf7\xc8\xb0\x62\x16\x4f\xa1\x18\xf3\x04\xc1\xea\xd2\xea\xd6\xaa\x47\x08\x54\xe7\xe3\xf3\xbf\x6e\x08\x5f\x18\x52\x1c\x48\xc4\x4e\x99\x0a\x22\xd5\x2d\x29\xc8\xfa\xf1\x85\xa5\x60\x79\x64\xfd\x22\xda\x52\xb0\xbc\xfd\x24\xeb\x1e\x21\x58\x5d\xdb\x44\xb1\x72\x4f\x14\x2d\xf7\x7a\x75\x8b\xa5\x58\x79\x9b\xa5\xc4\x1b\xf7\x04\x81\xea\x76\x19\x73\x9b\xa5\x3a\xb7\xa6\x48\x79\x20\x1e\x72\xf0\xae\xd2\x35\x45\xcb\x23\x89\x5b\xcb\x47\x8a\x94\x67\x4a\x8e\xd8\x75\x99\x92\x82\x38\xb5\xf8\x36\x70\x57\x92\xa0\x47\xf4\x8e\x22\xe5\x69\x58\x04\xe9\x7b\xf7\x02\xc1\x6a\x4f\xe2\xc4\xaa\x47\x08\x52\xa7\x40\x81\x12\xb1\x9b\xa7\x12\x4d\x90\x52\xf1\xe4\xce\xa7\x4f\xea\xbd\xda\x3b\x7f\x89\x0a\x25\x52\xab\xe8\x44\x32\xa7\x4d\x1d\x82\x6a\xd9\xb9\x76\x9a\xf3\x67\x5d\x0b\xef\x17\xc0\x86\x94\x58\x2d\xde\xec\x19\xb6\x09\xb8\xea\x15\x94\x06\x02\xd5\x91\xa4\x92\xf8\xae\xf9\x17\x06\x15\xfb\x4a\xcb\x5e\x9d\x0e\x41\xb5\x21\xa8\xb7\x30\x1d\x82\x6b\xc3\x5a\x8b\xed\x58\x83\x83\x5d\x59\x79\x07\x86\x17\xd7\x0d\x31\x6e\x22\x39\x4a\x5a\x7a\x24\xa6\x5f\x4d\x0c\x2a\x3e\xae\x0e\xe8\xc5\x13\xc3\x8b\x65\x43\x0c\x9c\x38\x17\x89\xdf\x10\xe3\x32\xd3\x51\xe2\xf5\xbe\xb3\x9e\x61\xc5\x39\xa9\x7d\x67\x3d\xc3\x8e\xd2\xc7\x9c\x60\xfe\x6c\x26\xcb\x77\x0a\x60\x43\x8a\xb2\x18\xdb\x74\xb5\x0a\x69\xab\x00\x2a\xa4\x44\xcc\x75\x78\x04\xa0\x1e\xb7\x59\x8a\xda\x56\xe4\x02\x0d\x0f\xae\xb3\x5a\xad\x6d\x20\x52\xdd\xae\xb8\x4c\x29\x75\xea\x05\xa2\xd5\x55\xbd\xe7\x37\x10\xac\x0e\xae\xf5\x75\xeb\x9e\x28\x56\x2e\x52\xf4\xe6\xc4\x1e\xe2\xd5\xea\x5e\xc9\x52\xb0\xdc\x67\xe2\x54\xad\x7c\xa2\x48\x79\x9b\x5d\x88\x6b\xec\xdc\x0b\x04\xab\x87\xfd\xdc\x56\x3d\x42\xac\x5a\x38\x10\xb3\x18\xf7\x4c\x91\xf2\x44\x4c\xc2\xfd\xe5\x3d\x33\xac\xd8\x17\x75\x2f\xd6\x33\xac\x38\x3a\x62\x89\xc6\x3c\x41\xa0\x5a\xd8\x51\xa0\xbe\x8f\x2d\x0c\x2d\x76\x6a\xc9\x81\x81\x60\xb5\xb0\x90\x04\x6f\xe5\x33\x86\xea\x03\xf9\x48\x12\x42\x6f\x5f\x28\x4a\xce\x7c\xdc\xec\x52\x69\x79\x8f\x61\x20\x5e\xad\x07\x34\x43\xf1\x72\xb5\x6f\xd3\xd2\x53\xc8\xc3\xa6\x1c\xdf\xe2\x29\x90\x3b\x57\x07\x2a\x6d\xfe\xb0\x08\x2a\x2c\xcf\xad\xce\x29\xe9\xcb\xbf\x63\x70\x31\x3b\xbf\x36\x0f\x10\xac\xe6\xa1\x9e\x97\x03\xdd\x14\x1f\x15\x01\x87\x15\x1c\xf9\x55\x5b\x8c\x10\xa6\x0e\xc3\x8b\x63\xef\xba\xc4\xd2\xd0\x13\xc8\xd5\x9d\x84\xa1\x60\x79\x14\xe2\xb8\x92\x4f\x14\x2c\x67\x97\x86\x6e\xb6\x1c\x75\x5d\xf1\xc3\x42\xf0\xd0\x32\x49\x58\xc7\x72\xa4\x27\x90\x87\xb2\x25\x07\x2e\xe9\xd0\x9a\x9a\xb6\xe4\x15\xf9\x55\x3f\x93\xa6\x6c\x56\x7b\x39\x4d\xb5\x97\xcd\x6a\x2f\xa7\xa9\xf6\x42\x79\x35\x04\x4d\xf4\x14\xd5\xfe\x4e\xbd\x9f\xa2\xe2\x99\xf5\x25\xde\x32\x80\x8d\x71\x60\xbb\x10\x3a\xb4\x61\xa3\xf0\x2a\x96\x91\x9e\x40\xbe\xd1\x21\x47\x7a\x02\xf9\x46\x87\x1c\xe9\x09\xe4\x1b\x83\xd0\x48\xd1\xf2\x5c\xd4\x97\x06\x59\x0a\x97\xd7\x2e\x25\xed\x29\x5a\x5e\x8a\xde\x2b\xbf\xc2\x60\xbd\xf8\xa8\x56\x79\x59\x0a\x93\xe7\xe1\xfb\x82\x0a\x77\x17\x7a\x07\xa1\xea\xbc\x3a\xef\x9e\xa2\xe4\x31\x53\x1c\x5e\xb8\xbb\xf3\xe5\xb3\x1e\x78\xdf\x2f\x00\x0e\x29\x29\x63\xda\x0a\x69\xa3\x00\x36\x24\x76\x75\x51\xb6\x83\x75\x50\xdb\x45\xc0\x61\x49\xf7\x12\xa2\x87\x60\xb5\x77\xea\x74\xbd\xdb\xaa\x91\xcd\x22\xd8\xb0\xda\x45\x33\x3b\xdb\xc1\x3a\xac\xed\x22\xe8\xb0\x92\x76\x6e\x75\xea\xed\x22\xc8\xb0\x12\xb5\x3f\xbb\x30\x26\x84\xd5\xe6\x40\xa2\xbe\x3f\xb5\x87\x58\x75\x65\xfd\xa4\xb9\x63\x58\x71\xbb\x71\xe5\x12\x8c\x7a\xa6\xa7\x90\xdb\xa6\x9e\xe9\x29\xe4\x75\x53\x0e\x7c\x73\x36\x6a\xd8\x93\xb0\x6d\xf1\x99\x82\xe5\xc2\xb4\x3e\xf1\x11\xa2\xd5\x41\xa7\x91\x3d\x04\xab\x43\xdd\xb8\xbc\x67\x8a\x92\xa7\x42\x89\x87\xdd\x4d\x61\x99\x11\x7b\x88\x55\x73\x68\x63\xb6\x51\x4f\x10\xad\xae\x6a\x97\xb4\x81\x60\x75\x16\xca\xb6\xc2\x27\x88\x54\x1f\x17\xa7\x2f\xeb\xb0\x0c\x44\xaa\xfd\xb0\x2e\x37\xf5\x67\xbd\x40\xb4\xba\x90\x78\xbf\x72\x8f\x14\x25\xaf\x3c\x24\x25\x1c\xbb\x2f\x6b\x36\x14\x2a\xcf\x24\xae\xe8\xef\xe1\x5c\x61\xb4\x9e\x8b\xde\x26\xb0\xc2\x50\x7d\xa5\x18\x28\x4a\x2f\x9f\x21\x4c\x1d\x87\xdd\xe8\x12\x87\x94\x59\x1d\xe9\xfc\xf5\xe3\x42\xa0\xd0\xc4\x65\x0a\xe9\xb8\xd4\x6c\xae\x15\x03\xb1\x6a\xf6\xdd\xab\x33\x4b\x81\xf2\x54\x88\x53\xf7\x35\xe2\x96\xa2\xe4\x7c\xdc\x92\xc3\xb9\xdd\xeb\xea\x23\x5d\x11\x1f\x17\xfa\xbd\xa1\x5d\x5d\x0c\xff\xed\xc9\xff\x02\x00\x00\xff\xff\xed\x11\x7a\xbd\xb1\x65\x00\x00")

func dataSimplewallWin10SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10SpyBlocklistXml,
		"data/simplewall/win10/spy/blocklist.xml",
	)
}

func dataSimplewallWin10SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/spy/blocklist.xml", size: 26033, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin10UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xcd\x6e\xdb\x38\x10\x07\xf0\xf3\xfa\x29\xb8\xba\xee\x6a\xcc\x19\x52\x14\x65\xd8\x09\xb0\x87\x3d\xb5\xa7\x1c\x7a\x0c\xfc\xa1\x36\x42\x6d\xcb\x90\xe5\x26\xe9\xd3\x17\x92\x63\x89\x92\x08\xa3\x87\x0e\x6f\xd6\x1f\x74\x7f\x53\xf1\xdb\x59\xfe\x1d\xc7\xe2\x4b\x71\xdc\x95\xaf\xe7\xa7\xd3\xfb\x7f\xfb\x72\xfb\x3d\xaf\xc4\x6b\x71\x44\x29\x2e\xa7\xdd\xba\xce\x45\x1c\x3f\xcc\xda\x76\x4f\xe5\xa5\xda\xe6\x0b\xf1\x52\xd7\xa7\xf3\x62\x3e\xff\x56\xd4\x2f\x97\x0d\x6c\xcb\xc3\x7c\x5b\xad\x7f\xbe\xc7\x87\xf5\xdb\x7c\xfa\x8f\x75\xdf\xff\xb4\x3e\xd7\xf1\xe7\x72\x57\x7c\x2d\xf2\xdd\x42\x3c\xad\xeb\x7f\x05\x4a\xf1\x7f\xbe\x11\x24\xd1\x0a\xa2\x85\x56\x0b\x4a\xc5\x3f\x12\xa5\x6c\xbf\x37\x5b\x3e\xbe\x1d\xf6\xe2\x47\x5e\x9d\x8b\xf2\xb8\x8a\x10\x64\xf4\xf8\x30\x5b\x56\x65\x59\x3f\xcc\xfe\x5a\x16\x75\x7e\x10\xc7\xf5\x21\x5f\x45\x6d\xcd\xcf\xd7\x9a\x9f\x51\x81\xb1\x60\x53\xd0\x69\x24\xaa\xcb\x3e\x5f\x45\x83\x68\x57\x54\xab\x48\x46\xe2\x54\x95\x75\xb9\x2d\xf7\xed\x43\xa7\xc8\x48\x14\xe7\xe7\x4d\x53\xff\x2a\xc2\xf6\x21\x3f\xae\x37\xfb\x7c\xd7\x3e\xce\x7f\x4b\xc6\x34\x99\xd0\x6d\xc6\x6a\xa7\x1a\x30\xcd\x00\xd1\xfd\x7f\xbb\x21\xaf\x6e\x81\x94\x04\x54\xda\xd5\x9d\x90\x55\x47\x99\x82\x86\x44\x3a\x76\x1f\x85\x90\x69\x2a\x13\xa7\x4c\x0d\xa3\x00\x6d\x06\x48\xe6\x86\x8f\xd3\x30\x7e\x92\xfa\xfc\x84\x75\xc4\x0d\x24\xeb\xf5\x2d\xa7\xaf\x25\xa4\x29\x10\x65\x20\xe3\xfe\x33\x25\xdd\xc4\xbf\xd3\x80\xaf\xaa\x84\x5a\x05\x53\x04\x92\xdd\x90\x1c\xa7\x7c\xbe\x49\x20\x49\x00\x95\x05\x19\xf7\x9f\x9d\xb7\x72\xa7\x01\x7b\x55\x46\xf5\xa8\x51\x9e\xaa\x7c\x0d\x18\xab\x32\x80\x98\x01\x6a\xed\xce\xa0\x71\x1a\xc8\xb7\x5e\x9f\x75\x06\xb9\x92\xcd\x7c\x7e\x93\x86\xf1\x33\xe9\xf3\x33\xe6\xbd\x03\x81\x12\x05\x4a\x0d\xf6\xad\x41\xc8\xa9\x37\x07\x03\x09\x09\x02\x5a\xe7\xc0\x30\x4c\x03\xf9\xd6\xeb\xb3\x8e\x3e\x57\xca\xa4\xcf\xe7\xee\xfd\x4e\x22\x6d\x3c\x7e\x9b\x06\xf2\x7d\xfd\x4f\xdc\x67\x65\x47\xf2\xf5\x7f\x9b\x06\xf0\x15\x50\x36\xe1\xaf\x61\x10\x5d\x4d\x07\xdf\x35\x0c\xa0\x37\xbb\xb0\xf3\xe0\xec\x88\x77\x9b\xf0\x57\x86\xd8\xec\xc2\xe3\x62\x6e\x69\x20\x7f\x32\x2b\x6f\x69\x18\xdf\x4c\x06\xc6\x2d\x0d\xe4\x93\xd7\x67\x3d\x3f\x76\x92\x49\x7c\xcb\x42\x17\x87\xaa\x60\xb2\x32\x74\x71\xa0\x0a\x12\xf4\x56\xd0\xc4\xa1\x2a\x50\xfe\x0a\x14\x6b\x05\x49\x7a\xbd\x1b\x28\x20\xd9\xff\xa0\x30\x4a\xd9\x7d\xd2\x12\xfa\xa3\xe9\x28\x0c\xa2\x13\x49\x0f\xdf\xa6\xcc\xbe\x69\xae\xac\xa8\xec\x80\xef\xc3\x30\x7a\xe6\xd3\xf9\xdf\xfd\x15\xd2\xd2\xa3\xeb\x50\x6f\x5e\xa3\x4f\xe7\x9d\xf7\x0e\xe4\xeb\x77\xe6\x95\xd7\x81\x7c\xfd\xce\xbc\xea\x5e\xa1\xcc\x40\xa2\x47\xf8\x47\x16\xc4\x1e\xbf\xf6\x8f\x2c\x84\x8d\xa4\xa6\x78\x1b\x32\xea\x19\x02\x29\x02\xdb\x9c\x7a\x3b\x7d\x18\x86\xd1\xad\x4f\xe7\x7d\xf3\x3d\xe4\x1c\xf5\x86\x61\x18\x9d\x7c\x3a\xef\x39\xef\x03\x42\x95\x35\xf7\x0b\xe7\xc9\xbd\x83\xdc\x6f\xc4\x5d\x9d\x86\x94\x00\xed\x68\x58\xf6\x69\x20\xdf\x78\x7d\xde\x5b\x88\x2b\x59\xaf\x1f\x60\x66\x5c\xa5\x4c\xfa\x7c\xde\xdf\x66\x48\xa6\xa0\x0d\x20\x6a\x67\x5d\x18\x85\x41\x74\x83\x1e\xdd\xfc\x81\x33\xc0\x72\xde\xfe\x15\xf5\x57\x00\x00\x00\xff\xff\xb6\x1f\xd9\x77\x03\x1e\x00\x00")

func dataSimplewallWin10UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin10UpdateBlocklistXml,
		"data/simplewall/win10/update/blocklist.xml",
	)
}

func dataSimplewallWin10UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin10UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win10/update/blocklist.xml", size: 7683, mode: os.FileMode(438), modTime: time.Unix(1518299016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd4\x41\x6f\x9b\x30\x14\xc0\xf1\xf3\xf2\x29\xde\x7c\xdd\x78\xf8\x19\x1b\x5c\x04\xa9\xb4\xe3\xb4\x9d\x7a\xe8\x31\x22\xe0\xad\xd6\x00\x47\xc6\x59\xd3\x7d\xfa\x29\x4c\x45\xd0\x68\xa7\xca\x47\xff\x15\xe7\xe7\x67\x59\x54\x1f\x93\x04\x1e\xed\xd8\xb9\xe7\xe9\xe1\xf4\xf2\xa5\x77\xed\x2f\xe3\xe1\xd9\x8e\x05\x98\x4b\xf0\x0d\x24\xc9\x7e\x37\xff\xea\xc1\x9d\x7d\x6b\x4a\x78\x0a\xe1\x34\x95\x69\xfa\xd3\x86\xa7\xf3\x11\x5b\x37\xa4\xad\x6f\xfe\xbc\x24\x43\x73\x49\x6f\xff\x6a\xd9\xff\xad\x99\x42\xf2\xdd\x75\xf6\x87\x35\x5d\x09\x8f\xa6\xfb\x0c\x42\xc2\xd7\x66\x04\xc1\x49\x03\x15\xa5\x12\x65\x96\xc3\x27\x4e\x9c\xcf\xfb\x76\xd5\xfd\x65\xe8\xe1\xb7\xf1\x93\x75\x63\xcd\x08\x39\xbb\xdf\xef\x2a\xef\x5c\xd8\xef\x3e\x54\x36\x98\x01\xc6\x66\x30\x35\xbb\x9e\xf8\x30\x9f\xf8\x40\x19\x6a\x8e\x24\x50\x49\x06\xfe\xdc\x9b\x9a\x6d\x52\x67\x7d\xcd\x38\x83\x93\x77\xc1\xb5\xae\x9f\x17\x8b\xc1\x19\xd8\xe9\x70\xbc\x9e\xbe\x66\x34\x2f\xcc\xd8\x1c\x7b\xd3\xcd\xcb\xf4\xff\xae\xe4\x48\xa4\x91\x78\x86\xc5\x2b\xbc\x6d\xb1\x64\x45\x48\x92\x63\xae\x50\x2f\x23\x6f\x5b\x34\x59\x20\xe5\x39\x92\xe0\x58\x2c\x43\xbf\x89\x31\xed\x42\x23\xe5\x84\x92\xd6\xf6\x2a\x46\xb7\x33\xd4\xea\xc6\xfe\x17\x23\xda\x22\xbb\x5e\xf1\xf6\xca\x57\x2d\x96\x9c\x4b\x94\xa8\x24\x0a\x95\xbd\xc2\x9b\x14\xdf\x95\xb7\x6e\xc4\xd7\x9d\x2b\x54\x02\xef\x34\x8a\x6c\x79\x60\xdb\x16\x57\x26\xae\x91\x56\x33\x6f\x63\x2c\x5b\xf0\x02\x65\x8e\x74\x27\x91\x16\xfb\x4d\x7c\xaf\x5d\xa5\xf3\x37\xfc\x6f\x00\x00\x00\xff\xff\xc6\xc2\x50\x62\x7f\x06\x00\x00")

func dataSimplewallWin7ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7ExtraBlocklistXml,
		"data/simplewall/win7/extra/blocklist.xml",
	)
}

func dataSimplewallWin7ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/extra/blocklist.xml", size: 1663, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xc1\x8e\xda\x3c\x10\xc0\xf1\xf3\xc7\x53\xf8\xcb\xb5\xcd\xe0\x19\xdb\x71\x8c\x60\x57\xea\xa1\xa7\xb6\x97\x3d\xf4\xb8\x62\x21\xed\x46\x05\x8c\x92\xb0\xbb\xf4\xe9\xab\x04\x08\x8e\x49\x7b\xa9\xa6\x07\x24\xf2\x87\xf0\x33\x38\x58\x98\xf9\xff\x69\x2a\xbe\x96\xbb\xb5\x7f\xad\x1f\xf6\xc7\x0f\x1b\xbf\xfa\x51\x54\xe2\xb5\xdc\x59\x51\xef\x8f\x22\x4d\xef\x26\xdd\x73\x1e\xfc\xa1\x5a\x15\x33\xf1\xdc\x34\xfb\x7a\x36\x9d\x7e\x2f\x9b\xe7\xc3\x13\xac\xfc\x76\xba\xaa\x96\x3f\x8f\xe9\x76\xf9\x36\xbd\x7d\xa1\xfe\xfc\x4f\xcb\xba\x49\x3f\xfb\x75\xf9\xad\x2c\xd6\x33\xf1\xb1\x2a\xdf\x0b\xd2\xe2\x8b\x7f\x11\x24\xd1\x0a\xd4\x33\xa9\x67\x88\xe2\x9d\x44\x29\xbb\xf3\x26\xf3\xfb\xb7\xed\x46\xbc\x14\x55\x5d\xfa\xdd\x22\x41\x90\xc9\xfd\xdd\x64\x5e\x79\xdf\xdc\x4d\xfe\x9b\x97\x4d\xb1\x15\xbb\xe5\xb6\x58\x24\xed\x78\x1f\xeb\xfd\xf1\x11\x15\xd8\x1c\x30\xcf\x01\xb5\x4d\x44\x75\xd8\x14\x8b\x24\x8a\xeb\xb2\x5a\x24\x32\x11\xfb\xca\x37\x7e\xe5\x37\xdd\x41\xaf\xc8\x44\x94\xf5\xe3\x53\x3b\xfe\x45\x82\xdd\x41\xb1\x5b\x3e\x6d\x8a\x75\x77\x38\xfd\x93\xec\x80\x94\x83\xcc\x85\xf0\xb5\xb1\xb9\x39\x82\x01\xa3\x02\xb5\x2f\xac\xa6\x03\xd2\x14\xa9\xe7\xc6\xe3\x6a\x09\x56\x02\x11\x02\xe9\xfe\x43\x8e\x22\x9f\x6c\x81\x28\x8b\xe5\x20\xb2\xcb\x46\x8e\xc8\x6d\x64\x93\x11\x73\x40\x99\x01\xaa\x90\x1e\x54\x1e\xdb\x20\xa0\x46\x50\x04\x06\x2f\xf2\xb0\x31\xb9\x04\xa8\xda\x75\x22\x87\xbc\x9f\xe7\x28\xb2\xcb\x68\xc6\xe8\xae\xf2\xd9\x99\x06\xd2\x12\x86\x74\x10\x99\x65\x04\x92\xe6\x86\x3e\x57\x5e\xdb\x20\x68\x1d\xd3\xe7\xc8\x27\xdb\x1c\xda\x89\x0d\x2e\xef\x61\x64\x95\x51\xdb\x76\x62\x23\xba\xaf\xbc\xb6\x41\x20\xa4\xd8\xbe\x54\x5e\xbb\xbd\x65\x31\x7d\x8e\xbc\xb2\x53\x80\xb7\xf4\xa5\xb2\xda\x44\x0a\x48\x45\xf4\x25\xf2\xc9\xb9\x85\x4c\x02\x4a\x1b\xca\x41\xe4\x91\x33\x0d\x1a\x48\x81\x4c\x2f\xf7\xc8\xf4\x0b\xcb\x6f\x1e\x64\x1a\x89\x01\x63\x40\x6b\x40\x99\xf7\x03\x18\x34\x76\xd7\x8d\xb8\x6c\x6b\xf9\xc9\x40\x54\x70\xfd\x76\x0f\x1b\xbb\xab\x46\x5c\xb6\x6b\xfc\x64\x90\x21\xb0\x38\x74\x2f\x8d\xdb\x75\xea\xd6\x75\xff\xe0\xfd\xa2\x93\xb7\x70\x17\x99\xf6\x1b\x52\x83\x6e\xa7\xd2\x42\xd6\x2f\xa1\x51\x64\x96\x1d\x10\xde\xc8\xa7\xc8\x2a\x13\xe5\xe1\xd6\x6e\x18\xd9\x65\x92\x34\x42\x77\x95\xd7\x56\x16\x30\xd8\x47\x47\x95\xc9\x46\x3c\x6d\x23\x5d\xb0\x90\x44\x91\x5d\x26\x33\x46\x13\xe7\x5e\x5e\x03\x5a\x09\xaa\xdb\x43\x5f\x77\xf3\xc3\xca\x65\x5b\x40\xb4\x40\xca\x04\x3f\xcb\xe2\xca\x64\x3b\xec\x2e\x28\x92\x39\x20\x5d\xf1\x38\xff\xad\x3e\x9f\x76\xff\x57\xfd\x0a\x00\x00\xff\xff\x49\x03\xfa\xd1\x69\x13\x00\x00")

func dataSimplewallWin7SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7SpyBlocklistXml,
		"data/simplewall/win7/spy/blocklist.xml",
	)
}

func dataSimplewallWin7SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/spy/blocklist.xml", size: 4969, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin7UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd8\xcb\x8e\xd3\x30\x14\x06\xe0\x35\x7d\x0a\x93\x2d\xe4\xc4\xc7\xf1\xb5\x6a\x67\x24\x16\xac\x80\xcd\x2c\x58\x8e\xd2\x26\x30\x11\x6d\x5d\xa5\xe9\x5c\x78\x7a\x94\x94\xa4\x89\x6b\xb1\x41\xf6\xd2\xbf\x92\xf9\x7e\x8d\x8e\x5d\xb7\xab\xf7\x69\x4a\xbe\xd7\x87\xd2\xbe\x9c\x1e\x8e\x6f\x9f\x76\x76\xfb\xab\x6a\xc8\x4b\x7d\x50\xe4\x7c\x2c\x8b\xb6\x22\x69\x7a\xb7\xe8\x1f\x7b\xb0\xe7\x66\x5b\x2d\xc9\x53\xdb\x1e\x4f\xcb\x2c\xfb\x59\xb7\x4f\xe7\x0d\x6c\xed\x3e\xdb\x36\xc5\xef\xb7\x74\x5f\xbc\x66\xb7\x7f\x6b\x7c\xff\x4b\x71\x6a\xd3\xaf\xb6\xac\x7f\xd4\x55\xb9\x24\x9f\x9b\xfa\x23\x61\x9c\x7c\xb3\xcf\x84\x51\x54\x04\xf9\x92\xf2\x25\x22\xf9\x40\x91\xd2\xfe\xbd\xc5\xea\xfe\x75\xbf\x23\xcf\x55\x73\xaa\xed\x61\x9d\x20\xd0\xe4\xfe\x6e\xb1\x6a\xac\x6d\xef\x16\xef\x56\x75\x5b\xed\xc9\xa1\xd8\x57\xeb\xa4\xab\xfc\x78\xa9\xfc\x88\x39\x20\x55\xc0\x41\xd0\x84\x34\xe7\x5d\xb5\x4e\x66\x51\x59\x37\xeb\x84\x26\xe4\xd8\xd8\xd6\x6e\xed\xae\x5f\x8c\x08\x4d\x48\x7d\x7a\xdc\x74\xf5\xd7\x09\xf6\x8b\xea\x50\x6c\x76\x55\xd9\x2f\xb3\x7f\xc0\xac\x53\x72\x40\x6d\x00\x99\x18\x6c\x37\x8d\xc3\x4b\x2f\x2f\x23\xf1\x42\xf9\xf8\x2e\x8d\xc3\x6b\x2f\xaf\x03\xf2\x9c\x82\x52\xc0\x98\x01\x91\x0f\xf8\x3c\x0b\x46\x4b\x01\x42\x00\xe6\x1a\x10\xd9\x60\x3b\x61\x14\x9c\xfb\x70\x1e\x07\xbf\x0e\xbc\x13\xc6\xc0\xb5\x0f\xd7\x11\x70\x99\x03\x63\xe8\xe0\x43\x18\x05\x77\x07\x6e\x08\xc3\xe1\x12\x10\x0d\x20\xe7\xd3\x63\xc6\x4d\xe3\xf0\xda\xcb\x87\x3c\x66\xa6\x90\x36\x3e\xbe\x4b\xa3\xf0\x86\xfa\x78\x13\xf2\x03\x16\x73\x0e\xa8\x28\x08\x9c\xf2\x6e\x1a\x83\x67\x5c\x7a\xf8\x3e\x8d\xc3\x2b\x2f\x1f\x72\xf2\x67\x90\xf6\xf2\x21\x27\x7f\x84\x72\x60\xe6\x46\xbf\x84\x31\xf0\xfc\x76\xee\x2e\x61\x78\x5c\x03\x4d\x27\x0b\x26\xc4\x4d\x15\xdf\x23\xc1\x8b\x21\x0a\x90\xcc\xed\x32\xa4\xe1\x79\x29\x7c\x13\x39\xc6\x91\x0a\xdc\x0c\xe5\x18\xc7\x29\x20\xd0\x5b\x40\x84\xbc\x09\xcc\xa5\xdc\x5f\x20\xe4\xdd\x17\x85\x02\x21\xc1\x48\x40\x76\xe5\xe7\x61\x38\xdc\x20\xb0\x9c\x81\xee\xf6\xda\x88\xcf\xc3\x18\xb8\xa4\x1e\x5c\x06\x3d\x92\x26\x0e\xf3\xe1\x41\xf7\xfd\x5f\x07\x73\x33\x1b\x3a\x37\x8e\x54\x80\xfb\x0b\x84\xfc\xde\x73\x91\x38\x28\x06\xa8\x9d\x7f\xc0\x35\x8d\xc3\x4b\x2f\x1f\xf4\x1e\x34\x85\xb4\x97\x0f\xbf\xf1\x2e\x90\xa1\x3e\x3e\xe8\x25\x94\x51\x05\xbc\xbb\x70\xf3\xc9\xa1\xe3\x84\xff\x8b\xaf\xb2\xfe\x27\xb6\x3f\x01\x00\x00\xff\xff\xc9\x3f\x0d\xb6\x1f\x14\x00\x00")

func dataSimplewallWin7UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin7UpdateBlocklistXml,
		"data/simplewall/win7/update/blocklist.xml",
	)
}

func dataSimplewallWin7UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin7UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win7/update/blocklist.xml", size: 5151, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81ExtraBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd6\xcf\x6f\x9b\x30\x14\xc0\xf1\xf3\xf2\x57\x78\x5c\x37\x1e\x7e\xfe\x09\x08\x52\x69\xc7\x69\x3b\xf5\xd0\x63\x44\xc0\x5b\xd1\x00\x47\x40\xd6\x74\x7f\xfd\x04\x4b\x09\x84\x29\x97\xca\x39\xfa\x2b\xe8\xe7\x81\xa9\xe2\xe4\xa3\xef\x93\xa7\xb2\x29\xec\x4b\xf7\x78\x78\xfd\x52\xd9\xfc\x97\x69\xc9\x4b\xd9\x84\x48\xcc\xa9\x6f\x33\xe2\xfb\xdb\xcd\x78\xd9\xa3\x3d\xb6\xb9\x89\xc9\x73\xdf\x1f\xba\x38\x08\x7e\x96\xfd\xf3\x71\x0f\xb9\xad\x83\xbc\xcd\xfe\xbc\xfa\x75\x76\x0a\xd6\x7f\x6b\xba\xff\x5b\xd6\xf5\xfe\x77\x5b\x94\x3f\x4a\x53\xc4\xe4\xc9\x14\x9f\x09\x13\xe4\x6b\xd6\x10\x46\x31\x24\xa8\x63\xc9\x62\xae\xc8\x27\x8a\x94\x8e\xf7\x6d\x92\x87\x53\x5d\x91\xdf\xa6\xed\x4a\xdb\xa4\x1e\x02\xf5\x1e\xb6\x9b\xa4\xb5\xb6\xdf\x6e\x3e\x24\x65\x6f\x6a\xd2\x64\xb5\x49\xbd\x71\xe4\xdd\x38\xf2\x0e\x39\x84\x14\x90\x81\x14\x1e\x69\x8f\x95\x49\xbd\x45\x2a\xca\x36\xf5\xa8\x47\x0e\xad\xed\x6d\x6e\xab\x71\x31\x21\xd4\x23\x65\xb7\xdb\x0f\xe3\xa7\x1e\x8e\x0b\xd3\x64\xfb\xca\x14\xe3\x32\xb8\x01\x0b\x0a\x88\x21\x20\xe5\xa0\xdf\xe4\x65\x73\x4f\x2b\x40\x4e\x57\xf8\xb9\x3a\xe3\x25\x02\x0a\x0a\x4a\x42\x38\xbd\xf3\x65\x73\x4d\x23\xd3\x80\x91\xbe\xc2\xa7\xea\x8e\x67\x80\x4a\x01\x22\x05\x75\x79\xf4\x65\x74\x8e\x33\x0a\x5a\x5f\xe3\xe7\xe8\x16\x8f\x40\x23\xa0\xa4\x0b\xfc\x12\x9d\xe2\x3a\x04\x54\x08\x02\xe7\xf8\x2c\xba\xc7\x39\x84\x72\x85\xff\x8b\x2e\x71\xc6\x87\xb7\xbc\xdc\xf2\x59\x73\x46\x2b\x01\x02\xa4\x00\xc6\xde\xe0\x79\x71\xcf\x4a\xbe\x72\x87\x74\x07\x58\xac\x61\x97\xff\xd7\x4a\xc2\xf0\x39\xd1\x10\x58\x34\xc9\x8b\x76\x07\x5a\xfe\x87\x96\xf7\xa1\x71\xb6\xd3\xcb\xe8\x0c\x47\x8e\xc3\xd7\x04\x0a\x81\xfa\xb3\x05\x93\xf2\x72\x88\xb8\x71\x89\xbb\xc1\xa4\x06\x29\x01\xb9\x18\x7e\xd1\xa6\x59\xae\xaa\x7b\x5e\x02\xb2\x70\xc5\x9f\xeb\x5d\x78\xbe\x7e\x7a\xe9\xf8\x5c\xc3\xa8\x00\x1d\x0d\x47\x08\x60\x74\xe2\xaf\xab\x43\x5e\x83\x50\x80\xd1\xb0\xcb\x17\x7d\x11\xdf\x8b\x27\xc1\x78\x9c\xfe\x1b\x00\x00\xff\xff\x28\xd0\x7d\x70\x0b\x0c\x00\x00")

func dataSimplewallWin81ExtraBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81ExtraBlocklistXml,
		"data/simplewall/win81/extra/blocklist.xml",
	)
}

func dataSimplewallWin81ExtraBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81ExtraBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/extra/blocklist.xml", size: 3083, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81SpyBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\xc1\x72\xea\x36\x14\xc6\xf1\x75\x79\x0a\xd5\xdb\x96\x0f\x9d\x23\xc9\xb2\x18\xc8\x9d\xe9\xb2\xd3\xae\xee\xe2\x2e\x33\x04\xdc\xc6\x53\xc0\x8c\x21\x4d\xe8\xd3\x77\xec\x80\x91\x85\xdb\xcd\x9d\xc3\x22\x33\xe1\x9f\x90\x1f\xb6\x85\xb0\x94\xc5\x8f\xd3\xa9\xfa\x56\xed\x37\xf5\xfb\xf1\xeb\xe1\xfc\xcb\xb6\x5e\xff\x55\x36\xea\xbd\xda\x17\xa4\x8e\x87\xb3\x9a\x4e\x9f\x26\xdd\x2f\x7d\xad\xdf\x9a\x75\x39\x57\xaf\xa7\xd3\xe1\x38\x9f\xcd\xfe\xac\x4e\xaf\x6f\x2f\x58\xd7\xbb\xd9\xba\x59\xfd\x73\x9e\xee\x56\x1f\xb3\xfb\xbf\xd4\x3f\xff\xb7\xd5\xf1\x34\xfd\xbd\xde\x54\x7f\x54\xe5\x66\xae\xbe\x95\x9b\x9f\x15\x5b\xf5\xeb\x6a\xaf\x58\x53\xa1\xc8\xcf\x1d\xcf\x4d\xae\x7e\xd2\xa4\x75\xf7\xbc\xc9\xe2\xcb\xc7\x6e\xab\xfe\x2e\x9b\x63\x55\xef\x97\x19\x41\x67\x5f\x9e\x26\x8b\xa6\xae\x4f\x4f\x93\x1f\x16\xd5\xa9\xdc\xa9\xfd\x6a\x57\x2e\xb3\xee\x05\x3f\x1f\x0f\xe7\x67\x32\xf0\x05\xd8\x68\x90\xb1\x99\x6a\xde\xb6\xe5\x32\x4b\xe2\xa6\x6a\x96\x99\xce\xd4\xa1\xa9\x4f\xf5\xba\xde\x76\x0f\x7a\x46\x67\xaa\x3a\x3e\xbf\xb4\x07\xb0\xcc\xa8\x7b\x50\xee\x57\x2f\xdb\x72\xd3\x3d\x9c\xfd\x2f\x1d\xc0\x26\x20\x0f\xb1\x7c\x6b\x72\x70\x41\x70\x70\x26\x62\xfb\x22\x8b\x06\xb0\xe5\x84\xbd\x34\x21\x98\x0d\x42\x01\x1b\x40\xfd\xf5\x1d\x24\x41\x36\x74\x06\x53\xec\xde\x9a\x10\x6c\x35\xbc\x07\x73\x0e\xb6\xfd\xb8\x4a\xa2\x3c\xed\xf4\x08\xdd\x46\x61\xba\x40\xe0\x54\xfe\x6c\x42\xb0\x23\x90\x25\x18\x86\xeb\xaf\xf3\xb0\x49\xc1\x0c\x32\x05\xc8\x16\x28\x7c\x2f\x0f\xe3\x03\xe8\x30\x46\xcb\x0d\xb1\x48\x21\x37\x66\x77\x55\x10\xcf\x2d\xd8\x10\xd8\xc5\x76\x14\x85\x69\xab\x31\x3c\xec\x28\x4a\xd3\x04\xd6\x77\x87\x7d\xad\xc2\xb8\x23\x58\x9b\xda\x97\x28\x48\xfb\x76\x50\xf9\xf6\x0c\xc7\x76\x5c\x85\x71\x47\x60\xe2\x14\xbf\x56\x61\xbc\xfd\xca\x53\xfb\x12\x85\xe9\x60\x40\xf7\xf6\xb5\xca\xe2\xcc\x06\x6c\x12\xfb\x1a\x05\xe9\xa2\x3d\x3a\x0b\xf2\x03\x3b\xae\x92\xb8\x47\xae\x41\x7a\xf0\x51\x12\x45\x39\x9a\x8d\x01\x85\x10\xdf\xae\xa4\x55\x08\xcf\x2d\xda\x89\x1b\x7a\x7a\xfd\x8e\x5d\x3f\xc1\xfd\xc7\x0f\x45\x5f\x8a\xc7\xed\xbe\x29\x2e\x52\xa8\x83\x73\xb0\x16\xa4\x8b\x9e\x1d\x34\x51\x98\xa8\x1d\xda\x43\xf8\xda\xe4\x61\x1e\x81\xe5\xa6\xd4\x08\x31\x23\xb0\xdc\x7b\xfb\x13\x61\xc7\xb0\x09\x7c\x6d\xe2\x70\x18\x81\xc3\x23\x60\x0a\xfa\x5e\xee\xa2\x38\xcd\x9a\xef\xe9\x2e\x4a\xad\xaf\xb5\x85\x6d\x47\x92\x47\xde\x7f\x6e\x26\x51\x9a\x0e\xb8\xad\x75\x93\x28\x4b\xb7\x6b\xbc\x68\x37\x63\x18\xe5\xe9\xe8\x62\xa7\x55\x18\x37\x1e\x14\xed\x1e\x25\x55\x0a\x27\x02\x33\x81\x03\xd8\xdd\x36\xcd\x92\x2a\xb6\x8f\xd4\xde\x0b\x69\x18\x3d\x38\xed\x49\x7d\x04\x6e\x46\x71\xc9\x1d\xb4\x88\xb1\xa3\xf8\x63\x4e\x7b\xf4\x26\x4f\xaa\x18\xee\xdb\xfb\xfe\x6e\x32\x21\x8a\x0e\x3d\xc9\xa2\xbc\x07\x1b\x17\xad\x87\xd2\x2a\x85\x3b\x0f\x97\x83\x82\x85\xbf\x0d\xf7\x61\x7c\x00\x6d\xc6\x68\xc1\xb1\x1e\x29\x76\x8c\x16\xbc\xda\x81\xba\x19\x94\x75\x01\xe2\xdb\xe5\x4e\xb3\x28\x1f\xe0\x34\xa8\x18\xe2\x7d\x94\xa7\xbd\x1f\xa1\xbd\xdc\x32\xb0\x57\x18\xa4\xf5\x9d\x7d\xa9\xd2\xb8\x85\xe3\x3b\xfb\x33\x7e\x2f\xbd\x98\x75\xff\x86\xfa\x37\x00\x00\xff\xff\xc9\x7f\xae\xec\x41\x1b\x00\x00")

func dataSimplewallWin81SpyBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81SpyBlocklistXml,
		"data/simplewall/win81/spy/blocklist.xml",
	)
}

func dataSimplewallWin81SpyBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81SpyBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/spy/blocklist.xml", size: 6977, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSimplewallWin81UpdateBlocklistXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd9\x4d\x6f\xda\x4c\x10\x07\xf0\xf3\xc3\xa7\xd8\xc7\xd7\xd6\xc3\xce\xbe\x1b\x41\x22\x55\x3d\xb6\xa7\x1c\x7a\x8c\x08\xb8\x8d\x55\xc0\xc8\x98\x26\xe9\xa7\xaf\x6c\xc0\x5e\xdb\xab\xf4\xd2\xd9\x5b\xfd\xd7\xd2\xdf\x64\xd7\x19\x8f\xc9\xf2\xff\x34\x65\xdf\x8a\xc3\xb6\x7c\x39\x3d\x1c\xdf\x3e\xed\xca\xcd\xcf\xbc\x62\x2f\xc5\xc1\x21\x3b\x1f\xb7\xeb\x3a\x67\x69\x7a\x37\x6b\xd7\x3d\x94\xe7\x6a\x93\x2f\xd8\x73\x5d\x1f\x4f\x8b\xf9\xfc\x47\x51\x3f\x9f\x9f\x60\x53\xee\xe7\x9b\x6a\xfd\xfb\x2d\xdd\xaf\x5f\xe7\xd3\xff\xac\xfb\xfc\x97\xf5\xa9\x4e\xbf\x96\xdb\xe2\x7b\x91\x6f\x17\xec\xe1\x7c\xf8\xc8\x84\x62\x9f\xf3\x0d\x13\x1c\x2d\xe3\x6e\xa1\xcd\x42\x3b\xf6\x81\x23\xe7\xed\xe7\x66\xcb\xfb\xd7\xfd\x8e\xfd\xca\xab\x53\x51\x1e\x56\x09\x02\x4f\xee\xef\x66\xcb\xaa\x2c\xeb\xbb\xd9\x7f\xcb\xa2\xce\xf7\xec\xb0\xde\xe7\xab\xa4\xad\xf9\xf1\x52\xf3\x23\x4a\x30\x0e\x9c\x05\xb4\x3a\x61\xd5\x79\x97\xaf\x92\x61\xb6\x2d\xaa\x55\xc2\x13\x76\xac\xca\xba\xdc\x94\xbb\xf6\xa2\x73\x78\xc2\x8a\xd3\xe3\x53\xf3\x13\xac\x12\x6c\x2f\xf2\xc3\xfa\x69\x97\x6f\xdb\xcb\xf9\x5f\x6c\xab\x00\x6d\x06\x88\xd6\xc3\xfd\x90\x56\x77\x80\x4e\x81\x52\x3e\xde\x67\xa4\x36\x72\x0b\x0a\x34\xf7\xe8\x3e\xa2\x93\x45\xc3\x48\x40\x97\x01\x8a\xee\xc4\xc7\x69\x24\xdf\x04\x7d\x13\xcb\xd7\x36\xe4\x6b\xd2\xbb\x6e\x20\xb9\xa0\xef\x28\x7d\xc5\xc1\x5a\x10\x22\x03\x2d\x6f\xfa\x30\xa3\xb3\xb5\x00\x74\x12\x54\xd3\x58\xba\xa3\x1f\x85\xe4\x3a\xa2\x03\xb4\x38\xe2\xbb\x94\xd4\x6f\xb6\x18\x2d\x82\xe0\xc2\xf3\x07\x29\x9d\x6f\x34\x68\x0d\x28\x1d\xf0\xb4\xff\xb7\xd0\x5d\x13\x78\x67\x01\x79\x55\x46\xf6\xa8\x91\x81\xaa\x42\x0b\xa8\xab\x12\x4a\x80\xd0\x6a\x58\x49\x17\x12\xea\x06\x10\x33\x40\xa5\xfc\x1e\x35\x4e\x23\xf9\x2e\xe8\x93\xf6\x28\x5f\x72\x59\xc8\x6f\xd2\x38\x7e\xc6\x43\x7e\x46\xfa\x8c\x46\x89\x20\xb4\x04\x6c\x76\x5a\xf6\x03\xc2\x30\xa5\xf4\x9b\x01\x8c\x83\x46\xe0\xa9\x77\xe1\xfd\x56\xbe\xbb\x24\x42\x65\x12\x44\x36\xa9\xe5\x12\x46\xd1\x25\x0f\xe8\x92\xf8\xae\xb8\x42\xce\xdf\x72\x17\x3c\x95\xd0\x12\xfa\xca\x10\x9b\x0e\x39\x2e\xe6\x96\x46\xf2\x4d\xd0\x27\x9d\x2c\x7c\xc9\x4c\x6e\x8c\x5b\x1a\xc9\x17\x41\x9f\x74\xb2\xe8\x24\xd3\x3c\x1e\xdd\xa4\x80\x5b\x1c\xab\x82\x49\x67\xe8\xe2\x48\x15\x68\x0c\x56\xa0\x49\xe7\xcb\x21\x25\xc3\x15\xd0\x3e\x37\xb4\xbd\x4c\x8d\x12\x04\xef\xdf\xa9\x47\x29\xb9\x2f\x14\x87\x7e\x6c\x18\x85\x51\x74\xef\xcd\x76\x9c\x46\xf1\x85\xe0\x01\xbf\x4d\x89\x7d\xd3\xbc\x49\xa2\x74\x03\xbe\x0f\xe3\xe8\x59\x48\xa7\x3f\xfb\x0b\xa4\x78\x40\x57\xb1\x76\x5e\x61\x48\xa7\xed\x3b\x1e\x14\x3a\x77\xe2\xce\xef\x41\xa1\x73\x27\xee\xfa\x17\x28\x33\xa0\xd5\x08\xbf\x66\x51\xec\xf1\xb6\x5f\xb3\x18\x36\x0a\x39\xc5\xdb\x30\x8a\xde\xbf\x1e\x8f\x42\x42\x3d\x43\x10\x52\x80\xe3\xde\x57\x68\xa3\x30\x8e\xee\x42\x3a\xed\xb9\xf7\x90\x37\xe8\x0e\xc3\x38\xba\x08\xe9\xb4\x53\xee\x15\x42\x99\x01\xba\x89\xdf\xc5\x71\x2a\x10\xd3\x7b\xaf\x8b\x63\x55\xa0\xc2\x15\xd0\x76\xbd\x96\x52\x60\xdb\xef\x6d\x87\x05\xf4\x69\x24\xdf\x04\x7d\xda\x29\xcf\x97\x5c\xd0\x27\xed\x00\x82\x5b\x50\x06\x10\x95\xd7\x7f\x46\x61\x14\xdd\x60\x40\x37\xff\x60\xd2\x59\xce\xdb\xbf\x99\xfe\x09\x00\x00\xff\xff\xaa\xd4\xf1\xf1\xf1\x1d\x00\x00")

func dataSimplewallWin81UpdateBlocklistXmlBytes() ([]byte, error) {
	return bindataRead(
		_dataSimplewallWin81UpdateBlocklistXml,
		"data/simplewall/win81/update/blocklist.xml",
	)
}

func dataSimplewallWin81UpdateBlocklistXml() (*asset, error) {
	bytes, err := dataSimplewallWin81UpdateBlocklistXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/simplewall/win81/update/blocklist.xml", size: 7665, mode: os.FileMode(438), modTime: time.Unix(1518299065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xf9\x14\x83\x60\x2f\xa1\x91\x6a\x37\xee\x76\x7d\x6d\x2f\x85\xed\x36\x10\x96\x1c\x4a\x0f\x8a\x2c\x3b\xa2\xb6\x46\x48\x72\x1e\x2c\xf9\xee\x8b\x94\xf8\x05\x39\x14\x63\x98\xf9\x69\xe6\x3f\x0f\xe9\xdf\x0c\x80\xec\xa5\x75\x0a\x35\xc9\x81\x2c\x69\x72\x4f\x97\xe4\x2e\xe0\x42\x6e\xdb\x8a\xe4\x50\xf2\xda\xc9\x48\x8c\xc5\xa3\x2a\x95\xb4\x24\x87\x90\x09\x40\x6a\xac\x56\xdc\xef\x42\xee\x73\xce\xfe\x3a\x69\x1d\xfb\x68\x9d\xb4\x9a\x37\xf2\x93\xbd\xa0\x68\x1b\xa9\xbd\x63\xab\x2e\x97\xfd\xc6\x8a\xfa\xa3\x27\x33\x80\x73\x94\x75\x27\xd7\xc4\xf2\x57\x4d\xb9\xf7\xc7\x91\xe8\xe6\xf5\xcf\xcb\xfb\x66\xcd\xdc\xc9\x79\xd9\x3c\xa4\xec\xa0\xb4\xdc\xfb\xa0\xe3\xd8\x9b\x12\x16\x1d\x96\x7e\xb1\x51\xba\xc0\x83\x5b\xac\xa3\xda\x8f\xe5\xbb\x91\x96\x7b\x85\x9a\xd7\x34\x28\x0e\xf5\x0e\xca\x4a\xb7\xe3\xf6\x6b\x28\x69\x04\x37\xfa\x9b\x93\x6c\xba\x74\x26\xb8\xa1\x97\xcc\xb8\x31\x00\x22\xb8\xf1\xad\x95\xbd\x30\x00\x51\xda\x4b\x5b\x72\x11\x60\x72\xd7\xd1\x52\xd5\x3e\xee\x91\x68\xf4\xc0\xad\x01\xae\x0b\x30\x68\x3d\x04\x90\x3d\x44\x3f\x98\x4a\x34\x66\xe2\x3c\xf6\xde\xd6\x22\x2f\x04\x77\x71\x97\x00\xe7\x7e\x42\x79\x14\x75\x5b\x0c\x6d\x10\x65\x1c\xc9\xe1\xa3\xab\x7e\x4f\xe3\x47\xfa\x76\x92\xf4\x67\x44\xc9\x08\xfd\x4a\x69\xf2\xf8\x14\xf0\x62\xb0\xd3\x2c\x1b\x42\x9e\x68\xfc\xa6\x60\x79\x7d\x3f\x11\xa4\x59\x46\x47\xff\xa5\xcf\xcf\xeb\xb2\x76\xe8\xfc\xa4\xad\xb7\xd3\x33\x36\xa6\x0d\x8b\xe9\x15\x6a\x14\xbc\x0e\x91\x37\x10\x8d\x56\x81\x0d\x57\x7a\x38\x9e\x5f\xf0\x00\x4e\xd8\xda\xd7\xf5\x8a\x0a\x6c\xc6\x51\x37\x71\xff\x36\x28\xda\x6a\x1c\x3d\x3d\x98\xcc\x81\xb6\x9a\x8c\x31\x0f\xb7\xbd\x45\xfc\x9a\x5f\xe3\xc2\xbd\xcc\xce\xb3\xff\x01\x00\x00\xff\xff\x4f\x38\x8e\x97\x6d\x03\x00\x00")

func appConfBytes() ([]byte, error) {
	return bindataRead(
		_appConf,
		"app.conf",
	)
}

func appConf() (*asset, error) {
	bytes, err := appConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.conf", size: 877, mode: os.FileMode(438), modTime: time.Unix(1518298931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app/settings.json": appSettingsJson,
	"data/dnscrypt/win10/extra.txt": dataDnscryptWin10ExtraTxt,
	"data/dnscrypt/win10/spy.txt": dataDnscryptWin10SpyTxt,
	"data/dnscrypt/win10/update.txt": dataDnscryptWin10UpdateTxt,
	"data/dnscrypt/win7/extra.txt": dataDnscryptWin7ExtraTxt,
	"data/dnscrypt/win7/spy.txt": dataDnscryptWin7SpyTxt,
	"data/dnscrypt/win7/update.txt": dataDnscryptWin7UpdateTxt,
	"data/dnscrypt/win81/extra.txt": dataDnscryptWin81ExtraTxt,
	"data/dnscrypt/win81/spy.txt": dataDnscryptWin81SpyTxt,
	"data/dnscrypt/win81/update.txt": dataDnscryptWin81UpdateTxt,
	"data/firewall/win10/extra.txt": dataFirewallWin10ExtraTxt,
	"data/firewall/win10/spy.txt": dataFirewallWin10SpyTxt,
	"data/firewall/win10/update.txt": dataFirewallWin10UpdateTxt,
	"data/firewall/win7/extra.txt": dataFirewallWin7ExtraTxt,
	"data/firewall/win7/spy.txt": dataFirewallWin7SpyTxt,
	"data/firewall/win7/update.txt": dataFirewallWin7UpdateTxt,
	"data/firewall/win81/extra.txt": dataFirewallWin81ExtraTxt,
	"data/firewall/win81/spy.txt": dataFirewallWin81SpyTxt,
	"data/firewall/win81/update.txt": dataFirewallWin81UpdateTxt,
	"data/hosts/win10/extra.txt": dataHostsWin10ExtraTxt,
	"data/hosts/win10/spy.txt": dataHostsWin10SpyTxt,
	"data/hosts/win10/update.txt": dataHostsWin10UpdateTxt,
	"data/hosts/win7/extra.txt": dataHostsWin7ExtraTxt,
	"data/hosts/win7/spy.txt": dataHostsWin7SpyTxt,
	"data/hosts/win7/update.txt": dataHostsWin7UpdateTxt,
	"data/hosts/win81/extra.txt": dataHostsWin81ExtraTxt,
	"data/hosts/win81/spy.txt": dataHostsWin81SpyTxt,
	"data/hosts/win81/update.txt": dataHostsWin81UpdateTxt,
	"data/ncsi/ncsi.txt": dataNcsiNcsiTxt,
	"data/openwrt/win10/extra/dnsmasq.conf": dataOpenwrtWin10ExtraDnsmasqConf,
	"data/openwrt/win10/extra/firewall.user": dataOpenwrtWin10ExtraFirewallUser,
	"data/openwrt/win10/spy/dnsmasq.conf": dataOpenwrtWin10SpyDnsmasqConf,
	"data/openwrt/win10/spy/firewall.user": dataOpenwrtWin10SpyFirewallUser,
	"data/openwrt/win10/update/dnsmasq.conf": dataOpenwrtWin10UpdateDnsmasqConf,
	"data/openwrt/win10/update/firewall.user": dataOpenwrtWin10UpdateFirewallUser,
	"data/openwrt/win7/extra/dnsmasq.conf": dataOpenwrtWin7ExtraDnsmasqConf,
	"data/openwrt/win7/extra/firewall.user": dataOpenwrtWin7ExtraFirewallUser,
	"data/openwrt/win7/spy/dnsmasq.conf": dataOpenwrtWin7SpyDnsmasqConf,
	"data/openwrt/win7/spy/firewall.user": dataOpenwrtWin7SpyFirewallUser,
	"data/openwrt/win7/update/dnsmasq.conf": dataOpenwrtWin7UpdateDnsmasqConf,
	"data/openwrt/win7/update/firewall.user": dataOpenwrtWin7UpdateFirewallUser,
	"data/openwrt/win81/extra/dnsmasq.conf": dataOpenwrtWin81ExtraDnsmasqConf,
	"data/openwrt/win81/extra/firewall.user": dataOpenwrtWin81ExtraFirewallUser,
	"data/openwrt/win81/spy/dnsmasq.conf": dataOpenwrtWin81SpyDnsmasqConf,
	"data/openwrt/win81/spy/firewall.user": dataOpenwrtWin81SpyFirewallUser,
	"data/openwrt/win81/update/dnsmasq.conf": dataOpenwrtWin81UpdateDnsmasqConf,
	"data/openwrt/win81/update/firewall.user": dataOpenwrtWin81UpdateFirewallUser,
	"data/p2p/win10/extra.txt": dataP2pWin10ExtraTxt,
	"data/p2p/win10/spy.txt": dataP2pWin10SpyTxt,
	"data/p2p/win10/update.txt": dataP2pWin10UpdateTxt,
	"data/p2p/win7/extra.txt": dataP2pWin7ExtraTxt,
	"data/p2p/win7/spy.txt": dataP2pWin7SpyTxt,
	"data/p2p/win7/update.txt": dataP2pWin7UpdateTxt,
	"data/p2p/win81/extra.txt": dataP2pWin81ExtraTxt,
	"data/p2p/win81/spy.txt": dataP2pWin81SpyTxt,
	"data/p2p/win81/update.txt": dataP2pWin81UpdateTxt,
	"data/proxifier/win10/extra/domains.txt": dataProxifierWin10ExtraDomainsTxt,
	"data/proxifier/win10/extra/ips.txt": dataProxifierWin10ExtraIpsTxt,
	"data/proxifier/win10/spy/domains.txt": dataProxifierWin10SpyDomainsTxt,
	"data/proxifier/win10/spy/ips.txt": dataProxifierWin10SpyIpsTxt,
	"data/proxifier/win10/update/domains.txt": dataProxifierWin10UpdateDomainsTxt,
	"data/proxifier/win10/update/ips.txt": dataProxifierWin10UpdateIpsTxt,
	"data/proxifier/win7/extra/domains.txt": dataProxifierWin7ExtraDomainsTxt,
	"data/proxifier/win7/extra/ips.txt": dataProxifierWin7ExtraIpsTxt,
	"data/proxifier/win7/spy/domains.txt": dataProxifierWin7SpyDomainsTxt,
	"data/proxifier/win7/spy/ips.txt": dataProxifierWin7SpyIpsTxt,
	"data/proxifier/win7/update/domains.txt": dataProxifierWin7UpdateDomainsTxt,
	"data/proxifier/win7/update/ips.txt": dataProxifierWin7UpdateIpsTxt,
	"data/proxifier/win81/extra/domains.txt": dataProxifierWin81ExtraDomainsTxt,
	"data/proxifier/win81/extra/ips.txt": dataProxifierWin81ExtraIpsTxt,
	"data/proxifier/win81/spy/domains.txt": dataProxifierWin81SpyDomainsTxt,
	"data/proxifier/win81/spy/ips.txt": dataProxifierWin81SpyIpsTxt,
	"data/proxifier/win81/update/domains.txt": dataProxifierWin81UpdateDomainsTxt,
	"data/proxifier/win81/update/ips.txt": dataProxifierWin81UpdateIpsTxt,
	"data/simplewall/win10/extra/blocklist.xml": dataSimplewallWin10ExtraBlocklistXml,
	"data/simplewall/win10/spy/blocklist.xml": dataSimplewallWin10SpyBlocklistXml,
	"data/simplewall/win10/update/blocklist.xml": dataSimplewallWin10UpdateBlocklistXml,
	"data/simplewall/win7/extra/blocklist.xml": dataSimplewallWin7ExtraBlocklistXml,
	"data/simplewall/win7/spy/blocklist.xml": dataSimplewallWin7SpyBlocklistXml,
	"data/simplewall/win7/update/blocklist.xml": dataSimplewallWin7UpdateBlocklistXml,
	"data/simplewall/win81/extra/blocklist.xml": dataSimplewallWin81ExtraBlocklistXml,
	"data/simplewall/win81/spy/blocklist.xml": dataSimplewallWin81SpyBlocklistXml,
	"data/simplewall/win81/update/blocklist.xml": dataSimplewallWin81UpdateBlocklistXml,
	"app.conf": appConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app": &bintree{nil, map[string]*bintree{
		"settings.json": &bintree{appSettingsJson, map[string]*bintree{}},
	}},
	"app.conf": &bintree{appConf, map[string]*bintree{}},
	"data": &bintree{nil, map[string]*bintree{
		"dnscrypt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataDnscryptWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataDnscryptWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataDnscryptWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"firewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataFirewallWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataFirewallWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataFirewallWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"hosts": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataHostsWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataHostsWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataHostsWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"ncsi": &bintree{nil, map[string]*bintree{
			"ncsi.txt": &bintree{dataNcsiNcsiTxt, map[string]*bintree{}},
		}},
		"openwrt": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin10UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin10UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin7UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin7UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81ExtraDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81ExtraFirewallUser, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81SpyDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81SpyFirewallUser, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"dnsmasq.conf": &bintree{dataOpenwrtWin81UpdateDnsmasqConf, map[string]*bintree{}},
					"firewall.user": &bintree{dataOpenwrtWin81UpdateFirewallUser, map[string]*bintree{}},
				}},
			}},
		}},
		"p2p": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin10ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin10SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin10UpdateTxt, map[string]*bintree{}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin7ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin7SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin7UpdateTxt, map[string]*bintree{}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra.txt": &bintree{dataP2pWin81ExtraTxt, map[string]*bintree{}},
				"spy.txt": &bintree{dataP2pWin81SpyTxt, map[string]*bintree{}},
				"update.txt": &bintree{dataP2pWin81UpdateTxt, map[string]*bintree{}},
			}},
		}},
		"proxifier": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin10UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin10UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin7UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin7UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81ExtraDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81ExtraIpsTxt, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81SpyDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81SpyIpsTxt, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"domains.txt": &bintree{dataProxifierWin81UpdateDomainsTxt, map[string]*bintree{}},
					"ips.txt": &bintree{dataProxifierWin81UpdateIpsTxt, map[string]*bintree{}},
				}},
			}},
		}},
		"simplewall": &bintree{nil, map[string]*bintree{
			"win10": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin10UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win7": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin7UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
			"win81": &bintree{nil, map[string]*bintree{
				"extra": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81ExtraBlocklistXml, map[string]*bintree{}},
				}},
				"spy": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81SpyBlocklistXml, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"blocklist.xml": &bintree{dataSimplewallWin81UpdateBlocklistXml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

